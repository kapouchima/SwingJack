;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/15/2014 1:35:51 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF036EFC2  	GOTO        28036
_interrupt:
;FirmV_0_7_0.c,210 :: 		void interrupt()
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C004  	MOVFF       R4, 23
0x0014	0xF016C008  	MOVFF       R8, 22
0x0018	0xF015C00C  	MOVFF       R12, 21
;FirmV_0_7_0.c,212 :: 		if(TMR0IF_bit)
0x001C	0xA4F2      	BTFSS       TMR0IF_bit, 2 
0x001E	0xD030      	BRA         L_interrupt0
;FirmV_0_7_0.c,214 :: 		msCounter=msCounter+1;
0x0020	0x0100      	MOVLB       0
0x0022	0x2BC6      	INCF        _msCounter, 1, 1
;FirmV_0_7_0.c,215 :: 		LCDBackLight=1;
0x0024	0x8681      	BSF         PORTB, 3 
;FirmV_0_7_0.c,216 :: 		Flag20ms=1;
0x0026	0x0E01      	MOVLW       1
0x0028	0x6FC2      	MOVWF       _Flag20ms, 1
;FirmV_0_7_0.c,217 :: 		if(ms20A==255)
0x002A	0x0101      	MOVLB       1
0x002C	0x5118      	MOVF        _ms20A, 0, 1
0x002E	0x0AFF      	XORLW       255
0x0030	0xE103      	BNZ         L_interrupt1
;FirmV_0_7_0.c,218 :: 		{ms20A=0;RemotePulse1=0;}
0x0032	0x6B18      	CLRF        _ms20A, 1
0x0034	0x6B17      	CLRF        _RemotePulse1, 1
0x0036	0xD001      	BRA         L_interrupt2
L_interrupt1:
;FirmV_0_7_0.c,220 :: 		ms20A=ms20A+1;
0x0038	0x2B18      	INCF        _ms20A, 1, 1
L_interrupt2:
;FirmV_0_7_0.c,222 :: 		if(ms20B==255)
0x003A	0x515D      	MOVF        _ms20B, 0, 1
0x003C	0x0AFF      	XORLW       255
0x003E	0xE104      	BNZ         L_interrupt3
;FirmV_0_7_0.c,223 :: 		{ms20B=0;RemotePulse2=0;}
0x0040	0x6B5D      	CLRF        _ms20B, 1
0x0042	0x0100      	MOVLB       0
0x0044	0x6BEC      	CLRF        _RemotePulse2, 1
0x0046	0xD002      	BRA         L_interrupt4
L_interrupt3:
;FirmV_0_7_0.c,225 :: 		ms20B=ms20B+1;
0x0048	0x0101      	MOVLB       1
0x004A	0x2B5D      	INCF        _ms20B, 1, 1
L_interrupt4:
;FirmV_0_7_0.c,227 :: 		if(msCounter>=25)
0x004C	0x0E19      	MOVLW       25
0x004E	0x0100      	MOVLB       0
0x0050	0x5DC6      	SUBWF       _msCounter, 0, 1
0x0052	0xE311      	BNC         L_interrupt5
;FirmV_0_7_0.c,229 :: 		msCounter=0;
0x0054	0x6BC6      	CLRF        _msCounter, 1
;FirmV_0_7_0.c,230 :: 		ms500=ms500+1;
0x0056	0x0E01      	MOVLW       1
0x0058	0x27EE      	ADDWF       _ms500, 1, 1
0x005A	0x0E00      	MOVLW       0
0x005C	0x23EF      	ADDWFC      _ms500+1, 1, 1
0x005E	0x23F0      	ADDWFC      _ms500+2, 1, 1
0x0060	0x23F1      	ADDWFC      _ms500+3, 1, 1
;FirmV_0_7_0.c,231 :: 		LCDFlashFlag=!LCDFlashFlag;
0x0062	0x0101      	MOVLB       1
0x0064	0x5319      	MOVF        _LCDFlashFlag, 1, 1
0x0066	0x0E01      	MOVLW       1
0x0068	0xA4D8      	BTFSS       STATUS, 2 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6F19      	MOVWF       _LCDFlashFlag, 1
;FirmV_0_7_0.c,232 :: 		LCDBackLight=0;
0x006E	0x9681      	BCF         PORTB, 3 
;FirmV_0_7_0.c,233 :: 		Flag500ms=1;
0x0070	0x0E01      	MOVLW       1
0x0072	0x0100      	MOVLB       0
0x0074	0x6FC7      	MOVWF       _Flag500ms, 1
;FirmV_0_7_0.c,234 :: 		}
L_interrupt5:
;FirmV_0_7_0.c,235 :: 		tmr0h=0xF3;
0x0076	0x0EF3      	MOVLW       243
0x0078	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,236 :: 		tmr0l=0xCA;
0x007A	0x0ECA      	MOVLW       202
0x007C	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,237 :: 		TMR0IF_bit=0;
0x007E	0x94F2      	BCF         TMR0IF_bit, 2 
;FirmV_0_7_0.c,238 :: 		}
L_interrupt0:
;FirmV_0_7_0.c,241 :: 		if(INT1F_bit)
0x0080	0xA0F0      	BTFSS       INT1F_bit, 0 
0x0082	0xD019      	BRA         L_interrupt6
;FirmV_0_7_0.c,243 :: 		if(RemotePulse1==0)
0x0084	0x0101      	MOVLB       1
0x0086	0x5117      	MOVF        _RemotePulse1, 0, 1
0x0088	0x0A00      	XORLW       0
0x008A	0xE103      	BNZ         L_interrupt7
;FirmV_0_7_0.c,244 :: 		{ RemotePulse1=RemotePulse1+1;ms20A=0;}
0x008C	0x2B17      	INCF        _RemotePulse1, 1, 1
0x008E	0x6B18      	CLRF        _ms20A, 1
0x0090	0xD001      	BRA         L_interrupt8
L_interrupt7:
;FirmV_0_7_0.c,246 :: 		{ RemotePulse1=RemotePulse1+1;}
0x0092	0x2B17      	INCF        _RemotePulse1, 1, 1
L_interrupt8:
;FirmV_0_7_0.c,247 :: 		if(RemotePulse1>=5)
0x0094	0x0E05      	MOVLW       5
0x0096	0x5D17      	SUBWF       _RemotePulse1, 0, 1
0x0098	0xE30D      	BNC         L_interrupt9
;FirmV_0_7_0.c,248 :: 		if((ms20A>=19)&&(ms20A<=21))
0x009A	0x0E13      	MOVLW       19
0x009C	0x5D18      	SUBWF       _ms20A, 0, 1
0x009E	0xE309      	BNC         L_interrupt12
0x00A0	0x5118      	MOVF        _ms20A, 0, 1
0x00A2	0x0815      	SUBLW       21
0x00A4	0xE306      	BNC         L_interrupt12
L__interrupt625:
;FirmV_0_7_0.c,249 :: 		{RemoteAFlag=1;RemotePulse1=0;}
0x00A6	0x0E01      	MOVLW       1
0x00A8	0x0100      	MOVLB       0
0x00AA	0x6FC9      	MOVWF       _RemoteAFlag, 1
0x00AC	0x0101      	MOVLB       1
0x00AE	0x6B17      	CLRF        _RemotePulse1, 1
0x00B0	0xD001      	BRA         L_interrupt13
L_interrupt12:
;FirmV_0_7_0.c,251 :: 		RemotePulse1=0;
0x00B2	0x6B17      	CLRF        _RemotePulse1, 1
L_interrupt13:
L_interrupt9:
;FirmV_0_7_0.c,252 :: 		INT1IF_bit=0;
0x00B4	0x90F0      	BCF         INT1IF_bit, 0 
;FirmV_0_7_0.c,253 :: 		}
L_interrupt6:
;FirmV_0_7_0.c,257 :: 		if(INT2IF_bit)
0x00B6	0xA2F0      	BTFSS       INT2IF_bit, 1 
0x00B8	0xD01D      	BRA         L_interrupt14
;FirmV_0_7_0.c,259 :: 		if(RemotePulse2==0)
0x00BA	0x0100      	MOVLB       0
0x00BC	0x51EC      	MOVF        _RemotePulse2, 0, 1
0x00BE	0x0A00      	XORLW       0
0x00C0	0xE104      	BNZ         L_interrupt15
;FirmV_0_7_0.c,260 :: 		{ RemotePulse2=RemotePulse2+1;ms20B=0;}
0x00C2	0x2BEC      	INCF        _RemotePulse2, 1, 1
0x00C4	0x0101      	MOVLB       1
0x00C6	0x6B5D      	CLRF        _ms20B, 1
0x00C8	0xD002      	BRA         L_interrupt16
L_interrupt15:
;FirmV_0_7_0.c,262 :: 		{ RemotePulse2=RemotePulse2+1;}
0x00CA	0x0100      	MOVLB       0
0x00CC	0x2BEC      	INCF        _RemotePulse2, 1, 1
L_interrupt16:
0x00CE	0x0100      	MOVLB       0
;FirmV_0_7_0.c,263 :: 		if(RemotePulse2>=5)
0x00D0	0x0E05      	MOVLW       5
0x00D2	0x5DEC      	SUBWF       _RemotePulse2, 0, 1
0x00D4	0xE30E      	BNC         L_interrupt17
;FirmV_0_7_0.c,264 :: 		if((ms20B>=19)&&(ms20B<=21))
0x00D6	0x0E13      	MOVLW       19
0x00D8	0x0101      	MOVLB       1
0x00DA	0x5D5D      	SUBWF       _ms20B, 0, 1
0x00DC	0xE308      	BNC         L_interrupt20
0x00DE	0x515D      	MOVF        _ms20B, 0, 1
0x00E0	0x0815      	SUBLW       21
0x00E2	0xE305      	BNC         L_interrupt20
L__interrupt624:
;FirmV_0_7_0.c,265 :: 		{RemoteBFlag=1;RemotePulse2=0;}
0x00E4	0x0E01      	MOVLW       1
0x00E6	0x0100      	MOVLB       0
0x00E8	0x6FC4      	MOVWF       _RemoteBFlag, 1
0x00EA	0x6BEC      	CLRF        _RemotePulse2, 1
0x00EC	0xD002      	BRA         L_interrupt21
L_interrupt20:
0x00EE	0x0100      	MOVLB       0
;FirmV_0_7_0.c,267 :: 		RemotePulse2=0;
0x00F0	0x6BEC      	CLRF        _RemotePulse2, 1
L_interrupt21:
L_interrupt17:
;FirmV_0_7_0.c,268 :: 		INT2IF_bit=0;
0x00F2	0x92F0      	BCF         INT2IF_bit, 1 
;FirmV_0_7_0.c,269 :: 		}
L_interrupt14:
;FirmV_0_7_0.c,274 :: 		if(INT0F_bit==1)
0x00F4	0xA2F2      	BTFSS       INT0F_bit, 1 
0x00F6	0xD02F      	BRA         L_interrupt22
;FirmV_0_7_0.c,276 :: 		ZCCounter=ZCCounter+1;
0x00F8	0x0100      	MOVLB       0
0x00FA	0x2BC1      	INCF        _ZCCounter, 1, 1
;FirmV_0_7_0.c,277 :: 		if(ZCCounter==255)
0x00FC	0x51C1      	MOVF        _ZCCounter, 0, 1
0x00FE	0x0AFF      	XORLW       255
0x0100	0xE101      	BNZ         L_interrupt23
;FirmV_0_7_0.c,278 :: 		ZCCounter=0;
0x0102	0x6BC1      	CLRF        _ZCCounter, 1
L_interrupt23:
;FirmV_0_7_0.c,279 :: 		if(ZCCounter%3==1)
0x0104	0x0E03      	MOVLW       3
0x0106	0x6E04      	MOVWF       R4 
0x0108	0xF000C0C1  	MOVFF       _ZCCounter, R0
0x010C	0xD866      	RCALL       _Div_8x8_U
0x010E	0xF000C008  	MOVFF       R8, R0
0x0112	0x5000      	MOVF        R0, 0 
0x0114	0x0A01      	XORLW       1
0x0116	0xE10E      	BNZ         L_interrupt24
;FirmV_0_7_0.c,281 :: 		if(Motor1Start)
0x0118	0x5395      	MOVF        _Motor1Start, 1, 1
0x011A	0xE005      	BZ          L_interrupt25
;FirmV_0_7_0.c,282 :: 		if(Motor1FullSpeed)
0x011C	0x5396      	MOVF        _Motor1FullSpeed, 1, 1
0x011E	0xE002      	BZ          L_interrupt26
;FirmV_0_7_0.c,283 :: 		Motor1=1;
0x0120	0x8282      	BSF         PORTC, 1 
0x0122	0xD001      	BRA         L_interrupt27
L_interrupt26:
;FirmV_0_7_0.c,285 :: 		Motor1=0;
0x0124	0x9282      	BCF         PORTC, 1 
L_interrupt27:
L_interrupt25:
;FirmV_0_7_0.c,287 :: 		if(Motor2Start)
0x0126	0x5270      	MOVF        _Motor2Start, 1 
0x0128	0xE005      	BZ          L_interrupt28
;FirmV_0_7_0.c,288 :: 		if(Motor2FullSpeed)
0x012A	0x53BD      	MOVF        _Motor2FullSpeed, 1, 1
0x012C	0xE002      	BZ          L_interrupt29
;FirmV_0_7_0.c,289 :: 		Motor2=1;
0x012E	0x8082      	BSF         PORTC, 0 
0x0130	0xD001      	BRA         L_interrupt30
L_interrupt29:
;FirmV_0_7_0.c,291 :: 		Motor2=0;
0x0132	0x9082      	BCF         PORTC, 0 
L_interrupt30:
L_interrupt28:
;FirmV_0_7_0.c,292 :: 		}
L_interrupt24:
;FirmV_0_7_0.c,293 :: 		if(ZCCounter%3==0)
0x0134	0x0E03      	MOVLW       3
0x0136	0x6E04      	MOVWF       R4 
0x0138	0xF000C0C1  	MOVFF       _ZCCounter, R0
0x013C	0xD84E      	RCALL       _Div_8x8_U
0x013E	0xF000C008  	MOVFF       R8, R0
0x0142	0x5000      	MOVF        R0, 0 
0x0144	0x0A00      	XORLW       0
0x0146	0xE106      	BNZ         L_interrupt31
;FirmV_0_7_0.c,295 :: 		if(Motor1Start)
0x0148	0x5395      	MOVF        _Motor1Start, 1, 1
0x014A	0xE001      	BZ          L_interrupt32
;FirmV_0_7_0.c,296 :: 		Motor1=1;
0x014C	0x8282      	BSF         PORTC, 1 
L_interrupt32:
;FirmV_0_7_0.c,298 :: 		if(Motor2Start)
0x014E	0x5270      	MOVF        _Motor2Start, 1 
0x0150	0xE001      	BZ          L_interrupt33
;FirmV_0_7_0.c,299 :: 		Motor2=1;
0x0152	0x8082      	BSF         PORTC, 0 
L_interrupt33:
;FirmV_0_7_0.c,300 :: 		}
L_interrupt31:
;FirmV_0_7_0.c,301 :: 		INT0F_bit=0;
0x0154	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,302 :: 		}
L_interrupt22:
;FirmV_0_7_0.c,303 :: 		}
L__interrupt717:
0x0156	0xF000C019  	MOVFF       25, R0
0x015A	0xF001C018  	MOVFF       24, R1
0x015E	0xF004C017  	MOVFF       23, R4
0x0162	0xF008C016  	MOVFF       22, R8
0x0166	0xF00CC015  	MOVFF       21, R12
0x016A	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x016C	0xB2AC      	BTFSC       TXSTA, 1 
0x016E	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0170	0x0000      	NOP
0x0172	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0174	0xFFADC50B  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0178	0x0012      	RETURN      0
; end of _UART1_Write
_SPI1_Write:
;__Lib_SPI_c345.c,76 :: 		
;__Lib_SPI_c345.c,79 :: 		
0x017A	0xFFC9C50B  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,80 :: 		
L_SPI1_Write8:
0x017E	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0180	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,81 :: 		
0x0182	0x0000      	NOP
0x0184	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,82 :: 		
0x0186	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x018A	0x0012      	RETURN      0
; end of _SPI1_Write
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x018C	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x018E	0x6E02      	MOVWF       R2, higher_addr(_CC2D_Loop1)
;__Lib_System.c,96 :: 		
0x0190	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x0192	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x0194	0x6AFF      	CLRF        TOSU, higher_addr(_CC2D_Loop1)
;__Lib_System.c,99 :: 		
0x0196	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x0198	0x6EFE      	MOVWF       TOSH, higher_addr(_CC2D_Loop1)
;__Lib_System.c,101 :: 		
0x019A	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x019C	0x6EFD      	MOVWF       TOSL, higher_addr(_CC2D_Loop1)
;__Lib_System.c,103 :: 		
0x019E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x01A0	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x01A2	0x0012      	RETURN      0
; end of _____DoIFC
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x01A4	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,110 :: 		
0x01A6	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,111 :: 		
0x01A8	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x01AA	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,113 :: 		
0x01AC	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x01AE	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x01B0	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x01B2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x01B4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x01B6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x01B8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x01BA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x01BC	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x01BE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x01C0	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x01C2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x01C4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x01C6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x01C8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x01CA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x01CC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x01CE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x01D0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x01D2	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x01D4	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x01D6	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x01D8	0x0012      	RETURN      0
; end of _Div_16x16_U
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x01DA	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,85 :: 		
0x01DC	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x01DE	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,87 :: 		
0x01E0	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x01E2	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x01E4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x01E6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x01E8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x01EA	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x01EC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x01EE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x01F0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x01F2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x01F4	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x01F6	0x0012      	RETURN      0
; end of _Div_8x8_U
_memcpy:
;__Lib_CString.c,44 :: 		
;__Lib_CString.c,48 :: 		
0x01F8	0xF004C506  	MOVFF       FARG_memcpy_s1, R4
0x01FC	0xF005C507  	MOVFF       FARG_memcpy_s1+1, R5
;__Lib_CString.c,49 :: 		
0x0200	0xF002C504  	MOVFF       FARG_memcpy_d1, R2
0x0204	0xF003C505  	MOVFF       FARG_memcpy_d1+1, R3
;__Lib_CString.c,50 :: 		
L_memcpy7:
0x0208	0xF000C508  	MOVFF       FARG_memcpy_n, R0
0x020C	0xF001C509  	MOVFF       FARG_memcpy_n+1, R1
0x0210	0x0E01      	MOVLW       1
0x0212	0x0105      	MOVLB       5
0x0214	0x5F08      	SUBWF       FARG_memcpy_n, 1, 1
0x0216	0x0E00      	MOVLW       0
0x0218	0x5B09      	SUBWFB      FARG_memcpy_n+1, 1, 1
0x021A	0x5000      	MOVF        R0, 0 
0x021C	0x1001      	IORWF       R1, 0 
0x021E	0xE00F      	BZ          L_memcpy8
;__Lib_CString.c,51 :: 		
0x0220	0xFFE9C004  	MOVFF       R4, FSR0L
0x0224	0xFFEAC005  	MOVFF       R5, FSR0H
0x0228	0xFFE1C002  	MOVFF       R2, FSR1L
0x022C	0xFFE2C003  	MOVFF       R3, FSR1H
0x0230	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0234	0x4A02      	INFSNZ      R2, 1 
0x0236	0x2A03      	INCF        R3, 1 
0x0238	0x4A04      	INFSNZ      R4, 1 
0x023A	0x2A05      	INCF        R5, 1 
0x023C	0xD7E5      	BRA         L_memcpy7
L_memcpy8:
;__Lib_CString.c,53 :: 		
0x023E	0xF000C504  	MOVFF       FARG_memcpy_d1, R0
0x0242	0xF001C505  	MOVFF       FARG_memcpy_d1+1, R1
;__Lib_CString.c,54 :: 		
L_end_memcpy:
0x0246	0x0012      	RETURN      0
; end of _memcpy
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x0248	0x0105      	MOVLB       5
0x024A	0x6B07      	CLRF        ByteToStr_DigitPos_L0, 1
L_ByteToStr0:
0x024C	0x0E03      	MOVLW       3
0x024E	0x5D07      	SUBWF       ByteToStr_DigitPos_L0, 0, 1
0x0250	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x0252	0x5107      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x0254	0x2505      	ADDWF       FARG_ByteToStr_output, 0, 1
0x0256	0x6EE1      	MOVWF       FSR1L 
0x0258	0x0E00      	MOVLW       0
0x025A	0x2106      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x025C	0x6EE2      	MOVWF       FSR1H 
0x025E	0x0E20      	MOVLW       32
0x0260	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x0262	0x2B07      	INCF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,70 :: 		
0x0264	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x0266	0x5107      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x0268	0x2505      	ADDWF       FARG_ByteToStr_output, 0, 1
0x026A	0x6EE1      	MOVWF       FSR1L 
0x026C	0x0E00      	MOVLW       0
0x026E	0x2106      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0270	0x6EE2      	MOVWF       FSR1H 
0x0272	0x6AE6      	CLRF        POSTINC1 
0x0274	0x0707      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x0276	0x5107      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x0278	0x2505      	ADDWF       FARG_ByteToStr_output, 0, 1
0x027A	0x6F08      	MOVWF       FLOC__ByteToStr, 1
0x027C	0x0E00      	MOVLW       0
0x027E	0x2106      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0280	0x6F09      	MOVWF       FLOC__ByteToStr+1, 1
0x0282	0x0E0A      	MOVLW       10
0x0284	0x6E04      	MOVWF       R4 
0x0286	0xF000C504  	MOVFF       FARG_ByteToStr_input, R0
0x028A	0xDFA7      	RCALL       _Div_8x8_U
0x028C	0xF000C008  	MOVFF       R8, R0
0x0290	0x0E30      	MOVLW       48
0x0292	0x2600      	ADDWF       R0, 1 
0x0294	0xFFE1C508  	MOVFF       FLOC__ByteToStr, FSR1L
0x0298	0xFFE2C509  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x029C	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x02A0	0x0E0A      	MOVLW       10
0x02A2	0x6E04      	MOVWF       R4 
0x02A4	0xF000C504  	MOVFF       FARG_ByteToStr_input, R0
0x02A8	0xDF98      	RCALL       _Div_8x8_U
0x02AA	0xF504C000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x02AE	0x5000      	MOVF        R0, 0 
0x02B0	0x0A00      	XORLW       0
0x02B2	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x02B4	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x02B6	0x0707      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,80 :: 		
0x02B8	0xD7DE      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x02BA	0x0012      	RETURN      0
; end of _ByteToStr
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x02BC	0x0E03      	MOVLW       3
0x02BE	0x6E0D      	MOVWF       R13, 0
L_Delay_1us0:
0x02C0	0x2E0D      	DECFSZ      R13, 1, 0
0x02C2	0xD7FE      	BRA         L_Delay_1us0
;__Lib_Delays.c,9 :: 		}
0x02C4	0x0012      	RETURN      0
; end of _Delay_1us
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x02C6	0x0105      	MOVLB       5
0x02C8	0x6B08      	CLRF        WordToStr_len_L0, 1
L_WordToStr6:
0x02CA	0x0E05      	MOVLW       5
0x02CC	0x5D08      	SUBWF       WordToStr_len_L0, 0, 1
0x02CE	0xE20A      	BC          L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x02D0	0x5108      	MOVF        WordToStr_len_L0, 0, 1
0x02D2	0x2506      	ADDWF       FARG_WordToStr_output, 0, 1
0x02D4	0x6EE1      	MOVWF       FSR1L 
0x02D6	0x0E00      	MOVLW       0
0x02D8	0x2107      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x02DA	0x6EE2      	MOVWF       FSR1H 
0x02DC	0x0E20      	MOVLW       32
0x02DE	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x02E0	0x2B08      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,90 :: 		
0x02E2	0xD7F3      	BRA         L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x02E4	0x5108      	MOVF        WordToStr_len_L0, 0, 1
0x02E6	0x2506      	ADDWF       FARG_WordToStr_output, 0, 1
0x02E8	0x6EE1      	MOVWF       FSR1L 
0x02EA	0x0E00      	MOVLW       0
0x02EC	0x2107      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x02EE	0x6EE2      	MOVWF       FSR1H 
0x02F0	0x6AE6      	CLRF        POSTINC1 
0x02F2	0x0708      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x02F4	0x5108      	MOVF        WordToStr_len_L0, 0, 1
0x02F6	0x2506      	ADDWF       FARG_WordToStr_output, 0, 1
0x02F8	0x6F09      	MOVWF       FLOC__WordToStr, 1
0x02FA	0x0E00      	MOVLW       0
0x02FC	0x2107      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x02FE	0x6F0A      	MOVWF       FLOC__WordToStr+1, 1
0x0300	0x0E0A      	MOVLW       10
0x0302	0x6E04      	MOVWF       R4 
0x0304	0x0E00      	MOVLW       0
0x0306	0x6E05      	MOVWF       R5 
0x0308	0xF000C504  	MOVFF       FARG_WordToStr_input, R0
0x030C	0xF001C505  	MOVFF       FARG_WordToStr_input+1, R1
0x0310	0xDF49      	RCALL       _Div_16x16_U
0x0312	0xF000C008  	MOVFF       R8, R0
0x0316	0xF001C009  	MOVFF       R9, R1
0x031A	0x0E30      	MOVLW       48
0x031C	0x2600      	ADDWF       R0, 1 
0x031E	0xFFE1C509  	MOVFF       FLOC__WordToStr, FSR1L
0x0322	0xFFE2C50A  	MOVFF       FLOC__WordToStr+1, FSR1H
0x0326	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,95 :: 		
0x032A	0x0E0A      	MOVLW       10
0x032C	0x6E04      	MOVWF       R4 
0x032E	0x0E00      	MOVLW       0
0x0330	0x6E05      	MOVWF       R5 
0x0332	0xF000C504  	MOVFF       FARG_WordToStr_input, R0
0x0336	0xF001C505  	MOVFF       FARG_WordToStr_input+1, R1
0x033A	0xDF34      	RCALL       _Div_16x16_U
0x033C	0xF504C000  	MOVFF       R0, FARG_WordToStr_input
0x0340	0xF505C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x0344	0x0E00      	MOVLW       0
0x0346	0x1801      	XORWF       R1, 0 
0x0348	0xE102      	BNZ         L__WordToStr109
0x034A	0x0E00      	MOVLW       0
0x034C	0x1800      	XORWF       R0, 0 
L__WordToStr109:
0x034E	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x0350	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x0352	0x0708      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,99 :: 		
0x0354	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x0356	0x0012      	RETURN      0
; end of _WordToStr
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x0358	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1174 :: 		
0x035A	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1175 :: 		
0x035C	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1176 :: 		
0x035E	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1178 :: 		
0x0360	0x6A0E      	CLRF        R14, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1180 :: 		
0x0362	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x0364	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x0366	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x0368	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x036A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x036C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x036E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x0370	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x0372	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x0374	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x0376	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x0378	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x037A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x037C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x037E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x0380	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x0382	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1198 :: 		
0x0384	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x0386	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x0388	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x038A	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x038C	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x038E	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x0390	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x0392	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x0394	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x0396	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x0398	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x039A	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x039C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x039E	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x03A0	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x03A2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x03A4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x03A6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x03A8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x03AA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x03AC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x03AE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x03B0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x03B2	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x03B4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x03B6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x03B8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x03BA	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x03BC	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1231 :: 		
0x03BE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x03C0	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x03C2	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x03C4	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x03C6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x03C8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x03CA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x03CC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x03CE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x03D0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x03D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x03D4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x03D6	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x03D8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x03DA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x03DC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x03DE	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x03E0	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1251 :: 		
0x03E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x03E4	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x03E6	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x03E8	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x03EA	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x03EC	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x03EE	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x03F0	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x03F2	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x03F4	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x03F6	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x03F8	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x03FA	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x03FC	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x03FE	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x0400	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x0402	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x0404	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x0406	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x0408	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x040A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x040C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x040E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x0410	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x0412	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x0414	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x0416	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x0418	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x041A	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1285 :: 		
0x041C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x041E	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x0420	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x0422	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x0424	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x0426	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x0428	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x042A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x042C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x042E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x0430	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x0432	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x0434	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x0436	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x0438	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x043A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x043C	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x043E	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1305 :: 		
0x0440	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x0442	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x0444	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x0446	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x0448	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x044A	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x044C	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x044E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x0450	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x0452	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x0454	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x0456	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x0458	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x045A	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x045C	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x045E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x0460	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x0462	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x0464	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x0466	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x0468	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x046A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x046C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x046E	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x0470	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x0472	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x0474	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x0476	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x0478	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1340 :: 		
0x047A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x047C	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x047E	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x0480	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x0482	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x0484	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x0486	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x0488	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x048A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x048C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x048E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x0490	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x0492	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x0494	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x0496	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x0498	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x049A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x049C	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1360 :: 		
0x049E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x04A0	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x04A2	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x04A4	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x04A6	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x04A8	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x04AA	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x04AC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x04AE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x04B0	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x04B2	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x04B4	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x04B6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x04B8	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x04BA	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x04BC	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x04BE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x04C0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x04C2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x04C4	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x04C6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x04C8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x04CA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x04CC	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x04CE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x04D0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x04D2	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x04D4	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x04D6	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1394 :: 		
0x04D8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x04DA	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x04DC	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x04DE	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x04E0	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x04E2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x04E4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x04E6	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x04E8	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x04EA	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x04EC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x04EE	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x04F0	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x04F2	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x04F4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x04F6	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x04F8	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x04FA	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1414 :: 		
0x04FC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x04FE	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x0500	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x0502	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x0504	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x0506	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x0508	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x050A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x050C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x050E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x0510	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x0512	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x0514	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x0516	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x0518	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x051A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x051C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x051E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x0520	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x0522	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x0524	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x0526	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x0528	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x052A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x052C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x052E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x0530	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x0532	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x0534	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1449 :: 		
0x0536	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x0538	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x053A	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x053C	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x053E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x0540	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x0542	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x0544	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x0546	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x0548	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x054A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x054C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x054E	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x0550	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x0552	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x0554	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x0556	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x0558	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1469 :: 		
0x055A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x055C	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x055E	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x0560	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x0562	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x0564	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x0566	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x0568	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x056A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x056C	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x056E	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x0570	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x0572	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x0574	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x0576	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x0578	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x057A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x057C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x057E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x0580	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x0582	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x0584	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x0586	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x0588	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x058A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x058C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x058E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x0590	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x0592	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1503 :: 		
0x0594	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x0596	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x0598	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x059A	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x059C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x059E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x05A0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x05A2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x05A4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x05A6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x05A8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x05AA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x05AC	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x05AE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x05B0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x05B2	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x05B4	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x05B6	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1523 :: 		
0x05B8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x05BA	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x05BC	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x05BE	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x05C0	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x05C2	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x05C4	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x05C6	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x05C8	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x05CA	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x05CC	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x05CE	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x05D0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x05D2	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x05D4	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x05D6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x05D8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x05DA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x05DC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x05DE	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x05E0	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x05E2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x05E4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x05E6	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x05E8	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x05EA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x05EC	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x05EE	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x05F0	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1558 :: 		
0x05F2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x05F4	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x05F6	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x05F8	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x05FA	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x05FC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x05FE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x0600	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x0602	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x0604	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x0606	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x0608	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x060A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x060C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x060E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x0610	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x0612	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x0614	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1578 :: 		
0x0616	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x0618	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x061A	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x061C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x061E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x0620	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x0622	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x0624	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x0626	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x0628	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x062A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x062C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x062E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x0630	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x0632	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x0634	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x0636	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x0638	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x063A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x063C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x063E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x0640	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x0642	0x0012      	RETURN      0
; end of _Div_32x32_U
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0644	0x0E48      	MOVLW       72
0x0646	0x6E0C      	MOVWF       R12, 0
0x0648	0x0E6C      	MOVLW       108
0x064A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us6:
0x064C	0x2E0D      	DECFSZ      R13, 1, 0
0x064E	0xD7FE      	BRA         L_Delay_5500us6
0x0650	0x2E0C      	DECFSZ      R12, 1, 0
0x0652	0xD7FC      	BRA         L_Delay_5500us6
0x0654	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
0x0656	0x0012      	RETURN      0
; end of _Delay_5500us
_UART_Write:
;__Lib_UART_c67.c,119 :: 		
;__Lib_UART_c67.c,120 :: 		
0x0658	0xFFE1C17C  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x065C	0xFFE2C17D  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0660	0xFFE6C504  	MOVFF       FARG_UART_Write__data, POSTINC1
0x0664	0xF000C17A  	MOVFF       _UART_Wr_Ptr, R0
0x0668	0xF001C17B  	MOVFF       _UART_Wr_Ptr+1, R1
0x066C	0xDD8F      	RCALL       _____DoIFC
;__Lib_UART_c67.c,121 :: 		
L_end_UART_Write:
0x066E	0x0012      	RETURN      0
; end of _UART_Write
_SetOverloadParams:
;FirmV_0_7_0.c,2445 :: 		void SetOverloadParams(char p)
;FirmV_0_7_0.c,2448 :: 		switch(p)
0x0670	0xD04E      	BRA         L_SetOverloadParams612
;FirmV_0_7_0.c,2450 :: 		case 0: OverloadTreshold=0;OverloadDuration=255; break;
L_SetOverloadParams614:
0x0672	0x0101      	MOVLB       1
0x0674	0x6B43      	CLRF        _OverloadTreshold, 1
0x0676	0x6B44      	CLRF        _OverloadTreshold+1, 1
0x0678	0x0EFF      	MOVLW       255
0x067A	0x6F45      	MOVWF       _OverloadDuration, 1
0x067C	0xD067      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2452 :: 		case 1: OverloadTreshold=400;OverloadDuration=200; break;
L_SetOverloadParams615:
0x067E	0x0101      	MOVLB       1
0x0680	0x0E90      	MOVLW       144
0x0682	0x6F43      	MOVWF       _OverloadTreshold, 1
0x0684	0x0E01      	MOVLW       1
0x0686	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x0688	0x0EC8      	MOVLW       200
0x068A	0x6F45      	MOVWF       _OverloadDuration, 1
0x068C	0xD05F      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2454 :: 		case 2: OverloadTreshold=450;OverloadDuration=150; break;
L_SetOverloadParams616:
0x068E	0x0101      	MOVLB       1
0x0690	0x0EC2      	MOVLW       194
0x0692	0x6F43      	MOVWF       _OverloadTreshold, 1
0x0694	0x0E01      	MOVLW       1
0x0696	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x0698	0x0E96      	MOVLW       150
0x069A	0x6F45      	MOVWF       _OverloadDuration, 1
0x069C	0xD057      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2456 :: 		case 3: OverloadTreshold=500;OverloadDuration=100; break;
L_SetOverloadParams617:
0x069E	0x0101      	MOVLB       1
0x06A0	0x0EF4      	MOVLW       244
0x06A2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06A4	0x0E01      	MOVLW       1
0x06A6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06A8	0x0E64      	MOVLW       100
0x06AA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06AC	0xD04F      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2458 :: 		case 4: OverloadTreshold=550;OverloadDuration=80; break;
L_SetOverloadParams618:
0x06AE	0x0101      	MOVLB       1
0x06B0	0x0E26      	MOVLW       38
0x06B2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06B4	0x0E02      	MOVLW       2
0x06B6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06B8	0x0E50      	MOVLW       80
0x06BA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06BC	0xD047      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2460 :: 		case 5: OverloadTreshold=600;OverloadDuration=150; break;
L_SetOverloadParams619:
0x06BE	0x0101      	MOVLB       1
0x06C0	0x0E58      	MOVLW       88
0x06C2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06C4	0x0E02      	MOVLW       2
0x06C6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06C8	0x0E96      	MOVLW       150
0x06CA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06CC	0xD03F      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2462 :: 		case 6: OverloadTreshold=600;OverloadDuration=100; break;
L_SetOverloadParams620:
0x06CE	0x0101      	MOVLB       1
0x06D0	0x0E58      	MOVLW       88
0x06D2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06D4	0x0E02      	MOVLW       2
0x06D6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06D8	0x0E64      	MOVLW       100
0x06DA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06DC	0xD037      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2464 :: 		case 7: OverloadTreshold=600;OverloadDuration=50; break;
L_SetOverloadParams621:
0x06DE	0x0101      	MOVLB       1
0x06E0	0x0E58      	MOVLW       88
0x06E2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06E4	0x0E02      	MOVLW       2
0x06E6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06E8	0x0E32      	MOVLW       50
0x06EA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06EC	0xD02F      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2466 :: 		case 8: OverloadTreshold=700;OverloadDuration=100; break;
L_SetOverloadParams622:
0x06EE	0x0101      	MOVLB       1
0x06F0	0x0EBC      	MOVLW       188
0x06F2	0x6F43      	MOVWF       _OverloadTreshold, 1
0x06F4	0x0E02      	MOVLW       2
0x06F6	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x06F8	0x0E64      	MOVLW       100
0x06FA	0x6F45      	MOVWF       _OverloadDuration, 1
0x06FC	0xD027      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2468 :: 		case 9: OverloadTreshold=700;OverloadDuration=50; break;
L_SetOverloadParams623:
0x06FE	0x0101      	MOVLB       1
0x0700	0x0EBC      	MOVLW       188
0x0702	0x6F43      	MOVWF       _OverloadTreshold, 1
0x0704	0x0E02      	MOVLW       2
0x0706	0x6F44      	MOVWF       _OverloadTreshold+1, 1
0x0708	0x0E32      	MOVLW       50
0x070A	0x6F45      	MOVWF       _OverloadDuration, 1
0x070C	0xD01F      	BRA         L_SetOverloadParams613
;FirmV_0_7_0.c,2470 :: 		}
L_SetOverloadParams612:
0x070E	0x0105      	MOVLB       5
0x0710	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0712	0x0A00      	XORLW       0
0x0714	0xE0AE      	BZ          L_SetOverloadParams614
0x0716	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0718	0x0A01      	XORLW       1
0x071A	0xE0B1      	BZ          L_SetOverloadParams615
0x071C	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x071E	0x0A02      	XORLW       2
0x0720	0xE0B6      	BZ          L_SetOverloadParams616
0x0722	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0724	0x0A03      	XORLW       3
0x0726	0xE0BB      	BZ          L_SetOverloadParams617
0x0728	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x072A	0x0A04      	XORLW       4
0x072C	0xE0C0      	BZ          L_SetOverloadParams618
0x072E	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0730	0x0A05      	XORLW       5
0x0732	0xE0C5      	BZ          L_SetOverloadParams619
0x0734	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0736	0x0A06      	XORLW       6
0x0738	0xE0CA      	BZ          L_SetOverloadParams620
0x073A	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x073C	0x0A07      	XORLW       7
0x073E	0xE0CF      	BZ          L_SetOverloadParams621
0x0740	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0742	0x0A08      	XORLW       8
0x0744	0xE0D4      	BZ          L_SetOverloadParams622
0x0746	0x5104      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0748	0x0A09      	XORLW       9
0x074A	0xE0D9      	BZ          L_SetOverloadParams623
L_SetOverloadParams613:
;FirmV_0_7_0.c,2471 :: 		}
0x074C	0x0012      	RETURN      0
; end of _SetOverloadParams
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x074E	0x0EA6      	MOVLW       166
0x0750	0x6E0D      	MOVWF       R13, 0
L_Delay_50us3:
0x0752	0x2E0D      	DECFSZ      R13, 1, 0
0x0754	0xD7FE      	BRA         L_Delay_50us3
0x0756	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
0x0758	0x0012      	RETURN      0
; end of _Delay_50us
_EEPROM_Write:
;__Lib_EEPROM_256.c,21 :: 		
;__Lib_EEPROM_256.c,24 :: 		
L_EEPROM_Write0:
0x075A	0xA2A6      	BTFSS       EECON1, 1 
0x075C	0xD002      	BRA         L_EEPROM_Write1
;__Lib_EEPROM_256.c,25 :: 		
0x075E	0x0000      	NOP
0x0760	0xD7FC      	BRA         L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_256.c,26 :: 		
0x0762	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,27 :: 		
0x0764	0xFFA9C504  	MOVFF       FARG_EEPROM_Write_address, EEADR
;__Lib_EEPROM_256.c,28 :: 		
0x0768	0xFFA8C505  	MOVFF       FARG_EEPROM_Write_data_, EEDATA
;__Lib_EEPROM_256.c,29 :: 		
0x076C	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,30 :: 		
0x076E	0x84A6      	BSF         EECON1, 2 
;__Lib_EEPROM_256.c,32 :: 		
0x0770	0xF000CFF2  	MOVFF       INTCON, R0
;__Lib_EEPROM_256.c,35 :: 		
0x0774	0x9EF2      	BCF         INTCON, 7 
;__Lib_EEPROM_256.c,36 :: 		
0x0776	0x0E55      	MOVLW       85
0x0778	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,37 :: 		
0x077A	0x0EAA      	MOVLW       170
0x077C	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,38 :: 		
0x077E	0x82A6      	BSF         EECON1, 1 
;__Lib_EEPROM_256.c,42 :: 		
0x0780	0xBE00      	BTFSC       R0, 7 
0x0782	0xD002      	BRA         L__EEPROM_Write4
0x0784	0x9EF2      	BCF         INTCON, 7 
0x0786	0xD001      	BRA         L__EEPROM_Write5
L__EEPROM_Write4:
0x0788	0x8EF2      	BSF         INTCON, 7 
L__EEPROM_Write5:
;__Lib_EEPROM_256.c,44 :: 		
0x078A	0x94A6      	BCF         EECON1, 2 
;__Lib_EEPROM_256.c,46 :: 		
L_end_EEPROM_Write:
0x078C	0x0012      	RETURN      0
; end of _EEPROM_Write
_LongWordToStrWithZeros:
;__Lib_Conversions.c,226 :: 		
;__Lib_Conversions.c,229 :: 		
0x078E	0x0104      	MOVLB       4
0x0790	0x6BFE      	CLRF        LongWordToStrWithZeros_len_L0, 1
L_LongWordToStrWithZeros44:
0x0792	0x0E0A      	MOVLW       10
0x0794	0x5DFE      	SUBWF       LongWordToStrWithZeros_len_L0, 0, 1
0x0796	0xE20A      	BC          L_LongWordToStrWithZeros45
;__Lib_Conversions.c,230 :: 		
0x0798	0x51FE      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x079A	0x25FC      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x079C	0x6EE1      	MOVWF       FSR1L 
0x079E	0x0E00      	MOVLW       0
0x07A0	0x21FD      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x07A2	0x6EE2      	MOVWF       FSR1H 
0x07A4	0x0E30      	MOVLW       48
0x07A6	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,229 :: 		
0x07A8	0x2BFE      	INCF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,230 :: 		
0x07AA	0xD7F3      	BRA         L_LongWordToStrWithZeros44
L_LongWordToStrWithZeros45:
;__Lib_Conversions.c,231 :: 		
0x07AC	0x51FE      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x07AE	0x25FC      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x07B0	0x6EE1      	MOVWF       FSR1L 
0x07B2	0x0E00      	MOVLW       0
0x07B4	0x21FD      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x07B6	0x6EE2      	MOVWF       FSR1H 
0x07B8	0x6AE6      	CLRF        POSTINC1 
0x07BA	0x07FE      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,233 :: 		
L_LongWordToStrWithZeros47:
0x07BC	0x0E00      	MOVLW       0
0x07BE	0x6E00      	MOVWF       R0 
0x07C0	0x19FB      	XORWF       FARG_LongWordToStrWithZeros_input+3, 0, 1
0x07C2	0xE108      	BNZ         L__LongWordToStrWithZeros125
0x07C4	0x5000      	MOVF        R0, 0 
0x07C6	0x19FA      	XORWF       FARG_LongWordToStrWithZeros_input+2, 0, 1
0x07C8	0xE105      	BNZ         L__LongWordToStrWithZeros125
0x07CA	0x5000      	MOVF        R0, 0 
0x07CC	0x19F9      	XORWF       FARG_LongWordToStrWithZeros_input+1, 0, 1
0x07CE	0xE102      	BNZ         L__LongWordToStrWithZeros125
0x07D0	0x51F8      	MOVF        FARG_LongWordToStrWithZeros_input, 0, 1
0x07D2	0x0A00      	XORLW       0
L__LongWordToStrWithZeros125:
0x07D4	0xE040      	BZ          L_LongWordToStrWithZeros48
;__Lib_Conversions.c,234 :: 		
0x07D6	0x51FE      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x07D8	0x25FC      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x07DA	0x6FFF      	MOVWF       FLOC__LongWordToStrWithZeros, 1
0x07DC	0x0E00      	MOVLW       0
0x07DE	0x21FD      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x07E0	0x0105      	MOVLB       5
0x07E2	0x6F00      	MOVWF       FLOC__LongWordToStrWithZeros+1, 1
0x07E4	0x0E0A      	MOVLW       10
0x07E6	0x6E04      	MOVWF       R4 
0x07E8	0x0E00      	MOVLW       0
0x07EA	0x6E05      	MOVWF       R5 
0x07EC	0x6E06      	MOVWF       R6 
0x07EE	0x6E07      	MOVWF       R7 
0x07F0	0xF000C4F8  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x07F4	0xF001C4F9  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x07F8	0xF002C4FA  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x07FC	0xF003C4FB  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0800	0xDDAB      	RCALL       _Div_32x32_U
0x0802	0xF000C008  	MOVFF       R8, R0
0x0806	0xF001C009  	MOVFF       R9, R1
0x080A	0xF002C00A  	MOVFF       R10, R2
0x080E	0xF003C00B  	MOVFF       R11, R3
0x0812	0x0E30      	MOVLW       48
0x0814	0x2600      	ADDWF       R0, 1 
0x0816	0xFFE1C4FF  	MOVFF       FLOC__LongWordToStrWithZeros, FSR1L
0x081A	0xFFE2C500  	MOVFF       FLOC__LongWordToStrWithZeros+1, FSR1H
0x081E	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0822	0x0104      	MOVLB       4
0x0824	0x07FE      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,235 :: 		
0x0826	0x0E0A      	MOVLW       10
0x0828	0x6E04      	MOVWF       R4 
0x082A	0x0E00      	MOVLW       0
0x082C	0x6E05      	MOVWF       R5 
0x082E	0x6E06      	MOVWF       R6 
0x0830	0x6E07      	MOVWF       R7 
0x0832	0xF000C4F8  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x0836	0xF001C4F9  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x083A	0xF002C4FA  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x083E	0xF003C4FB  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0842	0xDD8A      	RCALL       _Div_32x32_U
0x0844	0xF4F8C000  	MOVFF       R0, FARG_LongWordToStrWithZeros_input
0x0848	0xF4F9C001  	MOVFF       R1, FARG_LongWordToStrWithZeros_input+1
0x084C	0xF4FAC002  	MOVFF       R2, FARG_LongWordToStrWithZeros_input+2
0x0850	0xF4FBC003  	MOVFF       R3, FARG_LongWordToStrWithZeros_input+3
;__Lib_Conversions.c,236 :: 		
0x0854	0xD7B3      	BRA         L_LongWordToStrWithZeros47
L_LongWordToStrWithZeros48:
;__Lib_Conversions.c,237 :: 		
L_end_LongWordToStrWithZeros:
0x0856	0x0012      	RETURN      0
; end of _LongWordToStrWithZeros
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0858	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,448 :: 		
0x085A	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,449 :: 		
0x085C	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,450 :: 		
0x085E	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0860	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,453 :: 		
0x0862	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0866	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x086A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x086C	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,458 :: 		
0x086E	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0872	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0876	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0878	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,463 :: 		
0x087A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x087C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x087E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0880	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0882	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,468 :: 		
0x0884	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0886	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x0888	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,472 :: 		
0x088A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x088C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x088E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0890	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0892	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,477 :: 		
0x0894	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0896	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x089A	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x089E	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x08A2	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x08A6	0x0012      	RETURN      0
; end of _Mul_16x16_U
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x08A8	0x0104      	MOVLB       4
0x08AA	0x6BFB      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x08AC	0xFFE9C4F8  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x08B0	0xFFEAC4F9  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x08B4	0xF4FACFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x08B8	0x51FA      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x08BA	0x0A00      	XORLW       0
0x08BC	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x08BE	0xF50BC4FA  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x08C2	0xDC54      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x08C4	0x0104      	MOVLB       4
0x08C6	0x2BFB      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x08C8	0x51FB      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x08CA	0x25F8      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x08CC	0x6EE9      	MOVWF       FSR0L 
0x08CE	0x0E00      	MOVLW       0
0x08D0	0x21F9      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x08D2	0x6EEA      	MOVWF       FSR0H 
0x08D4	0xF4FACFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x08D8	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x08DA	0x0012      	RETURN      0
; end of _UART1_Write_Text
_UART_Write_Text:
;__Lib_UART_c67.c,123 :: 		
;__Lib_UART_c67.c,124 :: 		
0x08DC	0x0104      	MOVLB       4
0x08DE	0x6BFB      	CLRF        UART_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,126 :: 		
0x08E0	0xFFE9C4F8  	MOVFF       FARG_UART_Write_Text_uart_text, FSR0L
0x08E4	0xFFEAC4F9  	MOVFF       FARG_UART_Write_Text_uart_text+1, FSR0H
0x08E8	0xF4FACFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,127 :: 		
L_UART_Write_Text16:
0x08EC	0x51FA      	MOVF        UART_Write_Text_data__L0, 0, 1
0x08EE	0x0A00      	XORLW       0
0x08F0	0xE00E      	BZ          L_UART_Write_Text17
;__Lib_UART_c67.c,128 :: 		
0x08F2	0xF504C4FA  	MOVFF       UART_Write_Text_data__L0, FARG_UART_Write__data
0x08F6	0xDEB0      	RCALL       _UART_Write
;__Lib_UART_c67.c,129 :: 		
0x08F8	0x0104      	MOVLB       4
0x08FA	0x2BFB      	INCF        UART_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,130 :: 		
0x08FC	0x51FB      	MOVF        UART_Write_Text_counter_L0, 0, 1
0x08FE	0x25F8      	ADDWF       FARG_UART_Write_Text_uart_text, 0, 1
0x0900	0x6EE9      	MOVWF       FSR0L 
0x0902	0x0E00      	MOVLW       0
0x0904	0x21F9      	ADDWFC      FARG_UART_Write_Text_uart_text+1, 0, 1
0x0906	0x6EEA      	MOVWF       FSR0H 
0x0908	0xF4FACFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,131 :: 		
0x090C	0xD7EF      	BRA         L_UART_Write_Text16
L_UART_Write_Text17:
;__Lib_UART_c67.c,132 :: 		
L_end_UART_Write_Text:
0x090E	0x0012      	RETURN      0
; end of _UART_Write_Text
_EEPROM_Read:
;__Lib_EEPROM_256.c,7 :: 		
;__Lib_EEPROM_256.c,9 :: 		
0x0910	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,10 :: 		
0x0912	0xFFA9C4F8  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_256.c,11 :: 		
0x0916	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,12 :: 		
0x0918	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_256.c,14 :: 		
0x091A	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_256.c,16 :: 		
L_end_EEPROM_Read:
0x091E	0x0012      	RETURN      0
; end of _EEPROM_Read
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0920	0x0E49      	MOVLW       73
0x0922	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x0924	0x2E0D      	DECFSZ      R13, 1, 0
0x0926	0xD7FE      	BRA         L_Delay_22us2
;__Lib_Delays.c,17 :: 		}
0x0928	0x0012      	RETURN      0
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x092A	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x092C	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0930	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0932	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0934	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0936	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0938	0x0012      	RETURN      0
; end of ___CC2DW
_SaveConfigs:
;FirmV_0_7_0.c,1562 :: 		void SaveConfigs()
;FirmV_0_7_0.c,1565 :: 		EEPROM_Write(1,Door1OpenTime);
0x093A	0x0E01      	MOVLW       1
0x093C	0x0105      	MOVLB       5
0x093E	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0940	0xF505C216  	MOVFF       _Door1OpenTime, FARG_EEPROM_Write_data_
0x0944	0xDF0A      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1566 :: 		EEPROM_Write(2,Door2OpenTime);
0x0946	0x0E02      	MOVLW       2
0x0948	0x0105      	MOVLB       5
0x094A	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x094C	0xF505C213  	MOVFF       _Door2OpenTime, FARG_EEPROM_Write_data_
0x0950	0xDF04      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1567 :: 		EEPROM_Write(3,Door1CloseTime);
0x0952	0x0E03      	MOVLW       3
0x0954	0x0105      	MOVLB       5
0x0956	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0958	0xF505C215  	MOVFF       _Door1CloseTime, FARG_EEPROM_Write_data_
0x095C	0xDEFE      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1568 :: 		EEPROM_Write(4,Door2CloseTime);
0x095E	0x0E04      	MOVLW       4
0x0960	0x0105      	MOVLB       5
0x0962	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0964	0xF505C214  	MOVFF       _Door2CloseTime, FARG_EEPROM_Write_data_
0x0968	0xDEF8      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1569 :: 		EEPROM_Write(5,ActionTimeDiff);
0x096A	0x0E05      	MOVLW       5
0x096C	0x0105      	MOVLB       5
0x096E	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0970	0xF505C210  	MOVFF       _ActionTimeDiff, FARG_EEPROM_Write_data_
0x0974	0xDEF2      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1570 :: 		EEPROM_Write(6,OpenSoftStartTime);
0x0976	0x0E06      	MOVLW       6
0x0978	0x0105      	MOVLB       5
0x097A	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x097C	0xF505C21A  	MOVFF       _OpenSoftStartTime, FARG_EEPROM_Write_data_
0x0980	0xDEEC      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1571 :: 		EEPROM_Write(7,OpenSoftStopTime);
0x0982	0x0E07      	MOVLW       7
0x0984	0x0105      	MOVLB       5
0x0986	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0988	0xF505C219  	MOVFF       _OpenSoftStopTime, FARG_EEPROM_Write_data_
0x098C	0xDEE6      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1572 :: 		EEPROM_Write(8,CloseSoftStartTime);
0x098E	0x0E08      	MOVLW       8
0x0990	0x0105      	MOVLB       5
0x0992	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0994	0xF505C218  	MOVFF       _CloseSoftStartTime, FARG_EEPROM_Write_data_
0x0998	0xDEE0      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1573 :: 		EEPROM_Write(9,CloseSoftStopTime);
0x099A	0x0E09      	MOVLW       9
0x099C	0x0105      	MOVLB       5
0x099E	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09A0	0xF505C217  	MOVFF       _CloseSoftStopTime, FARG_EEPROM_Write_data_
0x09A4	0xDEDA      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1574 :: 		EEPROM_Write(10,Hi(AutoCloseTime));
0x09A6	0x0E0A      	MOVLW       10
0x09A8	0x0105      	MOVLB       5
0x09AA	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09AC	0xF505C212  	MOVFF       _AutoCloseTime+1, FARG_EEPROM_Write_data_
0x09B0	0xDED4      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1575 :: 		EEPROM_Write(11,Lo(AutoCloseTime));
0x09B2	0x0E0B      	MOVLW       11
0x09B4	0x0105      	MOVLB       5
0x09B6	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09B8	0xF505C211  	MOVFF       _AutoCloseTime, FARG_EEPROM_Write_data_
0x09BC	0xDECE      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1576 :: 		EEPROM_Write(12,OverloadSens);
0x09BE	0x0E0C      	MOVLW       12
0x09C0	0x0105      	MOVLB       5
0x09C2	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09C4	0xF505C11C  	MOVFF       _OverloadSens, FARG_EEPROM_Write_data_
0x09C8	0xDEC8      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1577 :: 		SetOverloadParams(9-OverloadSens);
0x09CA	0x0101      	MOVLB       1
0x09CC	0x511C      	MOVF        _OverloadSens, 0, 1
0x09CE	0x0809      	SUBLW       9
0x09D0	0x0105      	MOVLB       5
0x09D2	0x6F04      	MOVWF       FARG_SetOverloadParams_p, 1
0x09D4	0xDE4D      	RCALL       _SetOverloadParams
;FirmV_0_7_0.c,1578 :: 		EEPROM_Write(13,CloseAfterPass);
0x09D6	0x0E0D      	MOVLW       13
0x09D8	0x0105      	MOVLB       5
0x09DA	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09DC	0xF505C11E  	MOVFF       _CloseAfterPass, FARG_EEPROM_Write_data_
0x09E0	0xDEBC      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1579 :: 		EEPROM_Write(14,LockForce);
0x09E2	0x0E0E      	MOVLW       14
0x09E4	0x0105      	MOVLB       5
0x09E6	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09E8	0xF505C15E  	MOVFF       _LockForce, FARG_EEPROM_Write_data_
0x09EC	0xDEB6      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1580 :: 		EEPROM_Write(15,OpenPhEnable);
0x09EE	0x0E0F      	MOVLW       15
0x09F0	0x0105      	MOVLB       5
0x09F2	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x09F4	0xF505C20E  	MOVFF       _OpenPhEnable, FARG_EEPROM_Write_data_
0x09F8	0xDEB0      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1581 :: 		EEPROM_Write(16,LimiterEnable);
0x09FA	0x0E10      	MOVLW       16
0x09FC	0x0105      	MOVLB       5
0x09FE	0x6F04      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A00	0xF505C20F  	MOVFF       _LimiterEnable, FARG_EEPROM_Write_data_
0x0A04	0xDEAA      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1583 :: 		}
0x0A06	0x0012      	RETURN      0
; end of _SaveConfigs
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0A08	0x0104      	MOVLB       4
0x0A0A	0xBFF8      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0A0C	0xD002      	BRA         L__Lcd_Cmd21
0x0A0E	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0A10	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0A12	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0A14	0xBDF8      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0A16	0xD002      	BRA         L__Lcd_Cmd23
0x0A18	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0A1A	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0A1C	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0A1E	0xBBF8      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0A20	0xD002      	BRA         L__Lcd_Cmd25
0x0A22	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0A24	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0A26	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0A28	0xB9F8      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0A2A	0xD002      	BRA         L__Lcd_Cmd27
0x0A2C	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0A2E	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0A30	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0A32	0x0101      	MOVLB       1
0x0A34	0xB146      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0A36	0xD002      	BRA         L__Lcd_Cmd29
0x0A38	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0A3A	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0A3C	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0A3E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0A40	0xDC3D      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0A42	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0A44	0x0104      	MOVLB       4
0x0A46	0xB7F8      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0A48	0xD002      	BRA         L__Lcd_Cmd31
0x0A4A	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0A4C	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0A4E	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0A50	0xB5F8      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x0A52	0xD002      	BRA         L__Lcd_Cmd33
0x0A54	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0A56	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0A58	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0A5A	0xB3F8      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x0A5C	0xD002      	BRA         L__Lcd_Cmd35
0x0A5E	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0A60	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0A62	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0A64	0xB1F8      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x0A66	0xD002      	BRA         L__Lcd_Cmd37
0x0A68	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0A6A	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0A6C	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0A6E	0x0101      	MOVLB       1
0x0A70	0xB146      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0A72	0xD002      	BRA         L__Lcd_Cmd39
0x0A74	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0A76	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0A78	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0A7A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x0A7C	0xDC1F      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0A7E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x0A80	0xA146      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0A82	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0A84	0xDDDF      	RCALL       _Delay_5500us
0x0A86	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0A88	0xDE62      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0A8A	0x0012      	RETURN      0
; end of _Lcd_Cmd
_charValueToStr:
;FirmV_0_7_0.c,2406 :: 		void charValueToStr(char val, char * string)
;FirmV_0_7_0.c,2408 :: 		bytetostr(val>>1,string);
0x0A8C	0xF504C4F8  	MOVFF       FARG_charValueToStr_val, FARG_ByteToStr_input
0x0A90	0x0105      	MOVLB       5
0x0A92	0x3304      	RRCF        FARG_ByteToStr_input, 1, 1
0x0A94	0x9F04      	BCF         FARG_ByteToStr_input, 7, 1
0x0A96	0xF505C4F9  	MOVFF       FARG_charValueToStr_string, FARG_ByteToStr_output
0x0A9A	0xF506C4FA  	MOVFF       FARG_charValueToStr_string+1, FARG_ByteToStr_output+1
0x0A9E	0xF001EC24  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,2409 :: 		if((val%2)==1)
0x0AA2	0x0E01      	MOVLW       1
0x0AA4	0x0104      	MOVLB       4
0x0AA6	0x15F8      	ANDWF       FARG_charValueToStr_val, 0, 1
0x0AA8	0x6E01      	MOVWF       R1 
0x0AAA	0x5001      	MOVF        R1, 0 
0x0AAC	0x0A01      	XORLW       1
0x0AAE	0xE11D      	BNZ         L_charValueToStr608
;FirmV_0_7_0.c,2410 :: 		memcpy(string+3,".5s",4);
0x0AB0	0x0E03      	MOVLW       3
0x0AB2	0x25F9      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0AB4	0x0105      	MOVLB       5
0x0AB6	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0AB8	0x0E00      	MOVLW       0
0x0ABA	0x0104      	MOVLB       4
0x0ABC	0x21FA      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0ABE	0x0105      	MOVLB       5
0x0AC0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0AC2	0x0E2E      	MOVLW       46
0x0AC4	0x0104      	MOVLB       4
0x0AC6	0x6FFB      	MOVWF       ?lstr107_FirmV_0_7_0, 1
0x0AC8	0x0E35      	MOVLW       53
0x0ACA	0x6FFC      	MOVWF       ?lstr107_FirmV_0_7_0+1, 1
0x0ACC	0x0E73      	MOVLW       115
0x0ACE	0x6FFD      	MOVWF       ?lstr107_FirmV_0_7_0+2, 1
0x0AD0	0x6BFE      	CLRF        ?lstr107_FirmV_0_7_0+3, 1
0x0AD2	0x0EFB      	MOVLW       ?lstr107_FirmV_0_7_0
0x0AD4	0x0105      	MOVLB       5
0x0AD6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0AD8	0x0E04      	MOVLW       hi_addr(?lstr107_FirmV_0_7_0)
0x0ADA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0ADC	0x0E04      	MOVLW       4
0x0ADE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0AE0	0x0E00      	MOVLW       0
0x0AE2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0AE4	0xF000ECFC  	CALL        _memcpy, 0
0x0AE8	0xD01D      	BRA         L_charValueToStr609
L_charValueToStr608:
;FirmV_0_7_0.c,2412 :: 		memcpy(string+3,"s  ",4);
0x0AEA	0x0E03      	MOVLW       3
0x0AEC	0x0104      	MOVLB       4
0x0AEE	0x25F9      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0AF0	0x0105      	MOVLB       5
0x0AF2	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0AF4	0x0E00      	MOVLW       0
0x0AF6	0x0104      	MOVLB       4
0x0AF8	0x21FA      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0AFA	0x0105      	MOVLB       5
0x0AFC	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0AFE	0x0E73      	MOVLW       115
0x0B00	0x0104      	MOVLB       4
0x0B02	0x6FFF      	MOVWF       ?lstr108_FirmV_0_7_0, 1
0x0B04	0x0E20      	MOVLW       32
0x0B06	0x0105      	MOVLB       5
0x0B08	0x6F00      	MOVWF       ?lstr108_FirmV_0_7_0+1, 1
0x0B0A	0x0E20      	MOVLW       32
0x0B0C	0x6F01      	MOVWF       ?lstr108_FirmV_0_7_0+2, 1
0x0B0E	0x6B02      	CLRF        ?lstr108_FirmV_0_7_0+3, 1
0x0B10	0x0EFF      	MOVLW       ?lstr108_FirmV_0_7_0
0x0B12	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0B14	0x0E04      	MOVLW       hi_addr(?lstr108_FirmV_0_7_0)
0x0B16	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0B18	0x0E04      	MOVLW       4
0x0B1A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0B1C	0x0E00      	MOVLW       0
0x0B1E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0B20	0xF000ECFC  	CALL        _memcpy, 0
L_charValueToStr609:
;FirmV_0_7_0.c,2413 :: 		}
0x0B24	0x0012      	RETURN      0
; end of _charValueToStr
_intValueToStr:
;FirmV_0_7_0.c,2426 :: 		void intValueToStr(unsigned val, char * string)
;FirmV_0_7_0.c,2428 :: 		wordtostr(val>>1,string);
0x0B26	0xF504C4F8  	MOVFF       FARG_intValueToStr_val, FARG_WordToStr_input
0x0B2A	0xF505C4F9  	MOVFF       FARG_intValueToStr_val+1, FARG_WordToStr_input+1
0x0B2E	0x0105      	MOVLB       5
0x0B30	0x3305      	RRCF        FARG_WordToStr_input+1, 1, 1
0x0B32	0x3304      	RRCF        FARG_WordToStr_input, 1, 1
0x0B34	0x9F05      	BCF         FARG_WordToStr_input+1, 7, 1
0x0B36	0xF506C4FA  	MOVFF       FARG_intValueToStr_string, FARG_WordToStr_output
0x0B3A	0xF507C4FB  	MOVFF       FARG_intValueToStr_string+1, FARG_WordToStr_output+1
0x0B3E	0xF001EC63  	CALL        _WordToStr, 0
;FirmV_0_7_0.c,2429 :: 		if((val%2)==1)
0x0B42	0x0E01      	MOVLW       1
0x0B44	0x0104      	MOVLB       4
0x0B46	0x15F8      	ANDWF       FARG_intValueToStr_val, 0, 1
0x0B48	0x6E01      	MOVWF       R1 
0x0B4A	0xF002C4F9  	MOVFF       FARG_intValueToStr_val+1, R2
0x0B4E	0x0E00      	MOVLW       0
0x0B50	0x1602      	ANDWF       R2, 1 
0x0B52	0x0E00      	MOVLW       0
0x0B54	0x1802      	XORWF       R2, 0 
0x0B56	0xE102      	BNZ         L__intValueToStr756
0x0B58	0x0E01      	MOVLW       1
0x0B5A	0x1801      	XORWF       R1, 0 
L__intValueToStr756:
0x0B5C	0xE11D      	BNZ         L_intValueToStr610
;FirmV_0_7_0.c,2430 :: 		memcpy(string+5,".5s",4);
0x0B5E	0x0E05      	MOVLW       5
0x0B60	0x25FA      	ADDWF       FARG_intValueToStr_string, 0, 1
0x0B62	0x0105      	MOVLB       5
0x0B64	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0B66	0x0E00      	MOVLW       0
0x0B68	0x0104      	MOVLB       4
0x0B6A	0x21FB      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x0B6C	0x0105      	MOVLB       5
0x0B6E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0B70	0x0E2E      	MOVLW       46
0x0B72	0x0104      	MOVLB       4
0x0B74	0x6FFC      	MOVWF       ?lstr109_FirmV_0_7_0, 1
0x0B76	0x0E35      	MOVLW       53
0x0B78	0x6FFD      	MOVWF       ?lstr109_FirmV_0_7_0+1, 1
0x0B7A	0x0E73      	MOVLW       115
0x0B7C	0x6FFE      	MOVWF       ?lstr109_FirmV_0_7_0+2, 1
0x0B7E	0x6BFF      	CLRF        ?lstr109_FirmV_0_7_0+3, 1
0x0B80	0x0EFC      	MOVLW       ?lstr109_FirmV_0_7_0
0x0B82	0x0105      	MOVLB       5
0x0B84	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0B86	0x0E04      	MOVLW       hi_addr(?lstr109_FirmV_0_7_0)
0x0B88	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0B8A	0x0E04      	MOVLW       4
0x0B8C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0B8E	0x0E00      	MOVLW       0
0x0B90	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0B92	0xF000ECFC  	CALL        _memcpy, 0
0x0B96	0xD01B      	BRA         L_intValueToStr611
L_intValueToStr610:
;FirmV_0_7_0.c,2432 :: 		memcpy(string+5,"s  ",4);
0x0B98	0x0E05      	MOVLW       5
0x0B9A	0x0104      	MOVLB       4
0x0B9C	0x25FA      	ADDWF       FARG_intValueToStr_string, 0, 1
0x0B9E	0x0105      	MOVLB       5
0x0BA0	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0BA2	0x0E00      	MOVLW       0
0x0BA4	0x0104      	MOVLB       4
0x0BA6	0x21FB      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x0BA8	0x0105      	MOVLB       5
0x0BAA	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0BAC	0x0E73      	MOVLW       115
0x0BAE	0x6F00      	MOVWF       ?lstr110_FirmV_0_7_0, 1
0x0BB0	0x0E20      	MOVLW       32
0x0BB2	0x6F01      	MOVWF       ?lstr110_FirmV_0_7_0+1, 1
0x0BB4	0x0E20      	MOVLW       32
0x0BB6	0x6F02      	MOVWF       ?lstr110_FirmV_0_7_0+2, 1
0x0BB8	0x6B03      	CLRF        ?lstr110_FirmV_0_7_0+3, 1
0x0BBA	0x0E00      	MOVLW       ?lstr110_FirmV_0_7_0
0x0BBC	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0BBE	0x0E05      	MOVLW       hi_addr(?lstr110_FirmV_0_7_0)
0x0BC0	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0BC2	0x0E04      	MOVLW       4
0x0BC4	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0BC6	0x0E00      	MOVLW       0
0x0BC8	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0BCA	0xF000ECFC  	CALL        _memcpy, 0
L_intValueToStr611:
;FirmV_0_7_0.c,2433 :: 		}
0x0BCE	0x0012      	RETURN      0
; end of _intValueToStr
_FactorySettings:
;FirmV_0_7_0.c,1630 :: 		void FactorySettings()
;FirmV_0_7_0.c,1632 :: 		Door1OpenTime=20;
0x0BD0	0x0E14      	MOVLW       20
0x0BD2	0x0102      	MOVLB       2
0x0BD4	0x6F16      	MOVWF       _Door1OpenTime, 1
;FirmV_0_7_0.c,1633 :: 		Door1CloseTime=20;
0x0BD6	0x0E14      	MOVLW       20
0x0BD8	0x6F15      	MOVWF       _Door1CloseTime, 1
;FirmV_0_7_0.c,1634 :: 		Door2OpenTime=20;
0x0BDA	0x0E14      	MOVLW       20
0x0BDC	0x6F13      	MOVWF       _Door2OpenTime, 1
;FirmV_0_7_0.c,1635 :: 		Door2CloseTime=20;
0x0BDE	0x0E14      	MOVLW       20
0x0BE0	0x6F14      	MOVWF       _Door2CloseTime, 1
;FirmV_0_7_0.c,1636 :: 		OverloadSens=5;
0x0BE2	0x0E05      	MOVLW       5
0x0BE4	0x0101      	MOVLB       1
0x0BE6	0x6F1C      	MOVWF       _OverloadSens, 1
;FirmV_0_7_0.c,1637 :: 		SetOverloadParams(4);  //9-5
0x0BE8	0x0E04      	MOVLW       4
0x0BEA	0x0105      	MOVLB       5
0x0BEC	0x6F04      	MOVWF       FARG_SetOverloadParams_p, 1
0x0BEE	0xDD40      	RCALL       _SetOverloadParams
;FirmV_0_7_0.c,1638 :: 		OpenSoftStopTime=10;
0x0BF0	0x0E0A      	MOVLW       10
0x0BF2	0x0102      	MOVLB       2
0x0BF4	0x6F19      	MOVWF       _OpenSoftStopTime, 1
;FirmV_0_7_0.c,1639 :: 		OpenSoftStartTime=4;
0x0BF6	0x0E04      	MOVLW       4
0x0BF8	0x6F1A      	MOVWF       _OpenSoftStartTime, 1
;FirmV_0_7_0.c,1640 :: 		CloseSoftStopTime=10;
0x0BFA	0x0E0A      	MOVLW       10
0x0BFC	0x6F17      	MOVWF       _CloseSoftStopTime, 1
;FirmV_0_7_0.c,1641 :: 		CloseSoftStartTime=4;
0x0BFE	0x0E04      	MOVLW       4
0x0C00	0x6F18      	MOVWF       _CloseSoftStartTime, 1
;FirmV_0_7_0.c,1642 :: 		ActionTimeDiff=12;
0x0C02	0x0E0C      	MOVLW       12
0x0C04	0x6F10      	MOVWF       _ActionTimeDiff, 1
;FirmV_0_7_0.c,1643 :: 		AutoCloseTime=0;
0x0C06	0x6B11      	CLRF        _AutoCloseTime, 1
0x0C08	0x6B12      	CLRF        _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1644 :: 		LockForce=0;
0x0C0A	0x0101      	MOVLB       1
0x0C0C	0x6B5E      	CLRF        _LockForce, 1
;FirmV_0_7_0.c,1645 :: 		OpenPhEnable=0;
0x0C0E	0x0102      	MOVLB       2
0x0C10	0x6B0E      	CLRF        _OpenPhEnable, 1
;FirmV_0_7_0.c,1646 :: 		LimiterEnable=0;
0x0C12	0x6B0F      	CLRF        _LimiterEnable, 1
;FirmV_0_7_0.c,1647 :: 		CloseAfterPass=0;
0x0C14	0x0101      	MOVLB       1
0x0C16	0x6B1E      	CLRF        _CloseAfterPass, 1
;FirmV_0_7_0.c,1649 :: 		SaveConfigs();
0x0C18	0xDE90      	RCALL       _SaveConfigs
;FirmV_0_7_0.c,1650 :: 		}
0x0C1A	0x0012      	RETURN      0
; end of _FactorySettings
_StartMotor:
;FirmV_0_7_0.c,1656 :: 		void StartMotor(char Mx,char Dir)
;FirmV_0_7_0.c,1658 :: 		if(Mx==1)
0x0C1C	0x0103      	MOVLB       3
0x0C1E	0x514F      	MOVF        FARG_StartMotor_Mx, 0, 1
0x0C20	0x0A01      	XORLW       1
0x0C22	0xE10A      	BNZ         L_StartMotor352
;FirmV_0_7_0.c,1660 :: 		Motor1Start=1;
0x0C24	0x0E01      	MOVLW       1
0x0C26	0x0100      	MOVLB       0
0x0C28	0x6F95      	MOVWF       _Motor1Start, 1
;FirmV_0_7_0.c,1661 :: 		Motor1Dir=Dir;
0x0C2A	0x0103      	MOVLB       3
0x0C2C	0xB150      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x0C2E	0xD002      	BRA         L__StartMotor750
0x0C30	0x9882      	BCF         PORTC, 4 
0x0C32	0xD001      	BRA         L__StartMotor751
L__StartMotor750:
0x0C34	0x8882      	BSF         PORTC, 4 
L__StartMotor751:
;FirmV_0_7_0.c,1662 :: 		Motor1=1;
0x0C36	0x8282      	BSF         PORTC, 1 
;FirmV_0_7_0.c,1663 :: 		}
L_StartMotor352:
;FirmV_0_7_0.c,1665 :: 		if(Mx==2)
0x0C38	0x514F      	MOVF        FARG_StartMotor_Mx, 0, 1
0x0C3A	0x0A02      	XORLW       2
0x0C3C	0xE108      	BNZ         L_StartMotor353
;FirmV_0_7_0.c,1667 :: 		Motor2Start=1;
0x0C3E	0x0E01      	MOVLW       1
0x0C40	0x6E70      	MOVWF       _Motor2Start 
;FirmV_0_7_0.c,1668 :: 		Motor2Dir=Dir;
0x0C42	0xB150      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x0C44	0xD002      	BRA         L__StartMotor752
0x0C46	0x9682      	BCF         PORTC, 3 
0x0C48	0xD001      	BRA         L__StartMotor753
L__StartMotor752:
0x0C4A	0x8682      	BSF         PORTC, 3 
L__StartMotor753:
;FirmV_0_7_0.c,1669 :: 		Motor2=1;
0x0C4C	0x8082      	BSF         PORTC, 0 
;FirmV_0_7_0.c,1670 :: 		}
L_StartMotor353:
;FirmV_0_7_0.c,1671 :: 		}
0x0C4E	0x0012      	RETURN      0
; end of _StartMotor
_GetAutocloseTime:
;FirmV_0_7_0.c,1720 :: 		char GetAutocloseTime()
;FirmV_0_7_0.c,1724 :: 		for(i=0;i<20;i++)
0x0C50	0x0103      	MOVLB       3
0x0C52	0x6B4F      	CLRF        GetAutocloseTime_i_L0, 1
L_GetAutocloseTime359:
0x0C54	0x0E14      	MOVLW       20
0x0C56	0x5D4F      	SUBWF       GetAutocloseTime_i_L0, 0, 1
0x0C58	0xE25C      	BC          L_GetAutocloseTime360
;FirmV_0_7_0.c,1726 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode==9))
0x0C5A	0xF000C34F  	MOVFF       GetAutocloseTime_i_L0, R0
0x0C5E	0x0E00      	MOVLW       0
0x0C60	0x6E01      	MOVWF       R1 
0x0C62	0x0E07      	MOVLW       7
0x0C64	0x6E04      	MOVWF       R4 
0x0C66	0x0E00      	MOVLW       0
0x0C68	0x6E05      	MOVWF       R5 
0x0C6A	0xDDF6      	RCALL       _Mul_16x16_U
0x0C6C	0x0E82      	MOVLW       _Tasks
0x0C6E	0x2600      	ADDWF       R0, 1 
0x0C70	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0C72	0x2201      	ADDWFC      R1, 1 
0x0C74	0x0E05      	MOVLW       5
0x0C76	0x2400      	ADDWF       R0, 0 
0x0C78	0x6EE9      	MOVWF       FSR0L 
0x0C7A	0x0E00      	MOVLW       0
0x0C7C	0x2001      	ADDWFC      R1, 0 
0x0C7E	0x6EEA      	MOVWF       FSR0H 
0x0C80	0x50EE      	MOVF        POSTINC0, 0 
0x0C82	0x0A00      	XORLW       0
0x0C84	0xE12F      	BNZ         L_GetAutocloseTime364
0x0C86	0xF000C34F  	MOVFF       GetAutocloseTime_i_L0, R0
0x0C8A	0x0E00      	MOVLW       0
0x0C8C	0x6E01      	MOVWF       R1 
0x0C8E	0x0E07      	MOVLW       7
0x0C90	0x6E04      	MOVWF       R4 
0x0C92	0x0E00      	MOVLW       0
0x0C94	0x6E05      	MOVWF       R5 
0x0C96	0xDDE0      	RCALL       _Mul_16x16_U
0x0C98	0x0E82      	MOVLW       _Tasks
0x0C9A	0x2400      	ADDWF       R0, 0 
0x0C9C	0x6EE9      	MOVWF       FSR0L 
0x0C9E	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0CA0	0x2001      	ADDWFC      R1, 0 
0x0CA2	0x6EEA      	MOVWF       FSR0H 
0x0CA4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0CA8	0x5001      	MOVF        R1, 0 
0x0CAA	0x0A09      	XORLW       9
0x0CAC	0xE11B      	BNZ         L_GetAutocloseTime364
L__GetAutocloseTime683:
;FirmV_0_7_0.c,1727 :: 		t=Tasks[i].Time;
0x0CAE	0xF000C34F  	MOVFF       GetAutocloseTime_i_L0, R0
0x0CB2	0x0E00      	MOVLW       0
0x0CB4	0x6E01      	MOVWF       R1 
0x0CB6	0x0E07      	MOVLW       7
0x0CB8	0x6E04      	MOVWF       R4 
0x0CBA	0x0E00      	MOVLW       0
0x0CBC	0x6E05      	MOVWF       R5 
0x0CBE	0xDDCC      	RCALL       _Mul_16x16_U
0x0CC0	0x0E82      	MOVLW       _Tasks
0x0CC2	0x2600      	ADDWF       R0, 1 
0x0CC4	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0CC6	0x2201      	ADDWFC      R1, 1 
0x0CC8	0x0E01      	MOVLW       1
0x0CCA	0x2400      	ADDWF       R0, 0 
0x0CCC	0x6EE9      	MOVWF       FSR0L 
0x0CCE	0x0E00      	MOVLW       0
0x0CD0	0x2001      	ADDWFC      R1, 0 
0x0CD2	0x6EEA      	MOVWF       FSR0H 
0x0CD4	0xF350CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0
0x0CD8	0xF351CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+1
0x0CDC	0xF352CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+2
0x0CE0	0xF353CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+3
L_GetAutocloseTime364:
;FirmV_0_7_0.c,1728 :: 		Tasks[i].Expired=1;
0x0CE4	0xF000C34F  	MOVFF       GetAutocloseTime_i_L0, R0
0x0CE8	0x0E00      	MOVLW       0
0x0CEA	0x6E01      	MOVWF       R1 
0x0CEC	0x0E07      	MOVLW       7
0x0CEE	0x6E04      	MOVWF       R4 
0x0CF0	0x0E00      	MOVLW       0
0x0CF2	0x6E05      	MOVWF       R5 
0x0CF4	0xDDB1      	RCALL       _Mul_16x16_U
0x0CF6	0x0E82      	MOVLW       _Tasks
0x0CF8	0x2600      	ADDWF       R0, 1 
0x0CFA	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0CFC	0x2201      	ADDWFC      R1, 1 
0x0CFE	0x0E05      	MOVLW       5
0x0D00	0x2400      	ADDWF       R0, 0 
0x0D02	0x6EE1      	MOVWF       FSR1L 
0x0D04	0x0E00      	MOVLW       0
0x0D06	0x2001      	ADDWFC      R1, 0 
0x0D08	0x6EE2      	MOVWF       FSR1H 
0x0D0A	0x0E01      	MOVLW       1
0x0D0C	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,1724 :: 		for(i=0;i<20;i++)
0x0D0E	0x2B4F      	INCF        GetAutocloseTime_i_L0, 1, 1
;FirmV_0_7_0.c,1729 :: 		}
0x0D10	0xD7A1      	BRA         L_GetAutocloseTime359
L_GetAutocloseTime360:
;FirmV_0_7_0.c,1730 :: 		i=t-ms500;
0x0D12	0x0100      	MOVLB       0
0x0D14	0x51EE      	MOVF        _ms500, 0, 1
0x0D16	0x0103      	MOVLB       3
0x0D18	0x5D50      	SUBWF       GetAutocloseTime_t_L0, 0, 1
0x0D1A	0x6E00      	MOVWF       R0 
0x0D1C	0xF34FC000  	MOVFF       R0, GetAutocloseTime_i_L0
;FirmV_0_7_0.c,1731 :: 		return i;
;FirmV_0_7_0.c,1732 :: 		}
0x0D20	0x0012      	RETURN      0
; end of _GetAutocloseTime
_ClearTasks:
;FirmV_0_7_0.c,1749 :: 		void ClearTasks(char except)
;FirmV_0_7_0.c,1752 :: 		for(i=0;i<20;i++)
0x0D22	0x0103      	MOVLB       3
0x0D24	0x6B50      	CLRF        ClearTasks_i_L0, 1
L_ClearTasks365:
0x0D26	0x0E14      	MOVLW       20
0x0D28	0x5D50      	SUBWF       ClearTasks_i_L0, 0, 1
0x0D2A	0xE241      	BC          L_ClearTasks366
;FirmV_0_7_0.c,1753 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode!=except))
0x0D2C	0xF000C350  	MOVFF       ClearTasks_i_L0, R0
0x0D30	0x0E00      	MOVLW       0
0x0D32	0x6E01      	MOVWF       R1 
0x0D34	0x0E07      	MOVLW       7
0x0D36	0x6E04      	MOVWF       R4 
0x0D38	0x0E00      	MOVLW       0
0x0D3A	0x6E05      	MOVWF       R5 
0x0D3C	0xDD8D      	RCALL       _Mul_16x16_U
0x0D3E	0x0E82      	MOVLW       _Tasks
0x0D40	0x2600      	ADDWF       R0, 1 
0x0D42	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0D44	0x2201      	ADDWFC      R1, 1 
0x0D46	0x0E05      	MOVLW       5
0x0D48	0x2400      	ADDWF       R0, 0 
0x0D4A	0x6EE9      	MOVWF       FSR0L 
0x0D4C	0x0E00      	MOVLW       0
0x0D4E	0x2001      	ADDWFC      R1, 0 
0x0D50	0x6EEA      	MOVWF       FSR0H 
0x0D52	0x50EE      	MOVF        POSTINC0, 0 
0x0D54	0x0A00      	XORLW       0
0x0D56	0xE129      	BNZ         L_ClearTasks370
0x0D58	0xF000C350  	MOVFF       ClearTasks_i_L0, R0
0x0D5C	0x0E00      	MOVLW       0
0x0D5E	0x6E01      	MOVWF       R1 
0x0D60	0x0E07      	MOVLW       7
0x0D62	0x6E04      	MOVWF       R4 
0x0D64	0x0E00      	MOVLW       0
0x0D66	0x6E05      	MOVWF       R5 
0x0D68	0xDD77      	RCALL       _Mul_16x16_U
0x0D6A	0x0E82      	MOVLW       _Tasks
0x0D6C	0x2400      	ADDWF       R0, 0 
0x0D6E	0x6EE9      	MOVWF       FSR0L 
0x0D70	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0D72	0x2001      	ADDWFC      R1, 0 
0x0D74	0x6EEA      	MOVWF       FSR0H 
0x0D76	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0D7A	0x5001      	MOVF        R1, 0 
0x0D7C	0x194F      	XORWF       FARG_ClearTasks_except, 0, 1
0x0D7E	0xE015      	BZ          L_ClearTasks370
L__ClearTasks684:
;FirmV_0_7_0.c,1754 :: 		Tasks[i].Expired=1;
0x0D80	0xF000C350  	MOVFF       ClearTasks_i_L0, R0
0x0D84	0x0E00      	MOVLW       0
0x0D86	0x6E01      	MOVWF       R1 
0x0D88	0x0E07      	MOVLW       7
0x0D8A	0x6E04      	MOVWF       R4 
0x0D8C	0x0E00      	MOVLW       0
0x0D8E	0x6E05      	MOVWF       R5 
0x0D90	0xDD63      	RCALL       _Mul_16x16_U
0x0D92	0x0E82      	MOVLW       _Tasks
0x0D94	0x2600      	ADDWF       R0, 1 
0x0D96	0x0E01      	MOVLW       hi_addr(_Tasks)
0x0D98	0x2201      	ADDWFC      R1, 1 
0x0D9A	0x0E05      	MOVLW       5
0x0D9C	0x2400      	ADDWF       R0, 0 
0x0D9E	0x6EE1      	MOVWF       FSR1L 
0x0DA0	0x0E00      	MOVLW       0
0x0DA2	0x2001      	ADDWFC      R1, 0 
0x0DA4	0x6EE2      	MOVWF       FSR1H 
0x0DA6	0x0E01      	MOVLW       1
0x0DA8	0x6EE6      	MOVWF       POSTINC1 
L_ClearTasks370:
;FirmV_0_7_0.c,1752 :: 		for(i=0;i<20;i++)
0x0DAA	0x2B50      	INCF        ClearTasks_i_L0, 1, 1
;FirmV_0_7_0.c,1754 :: 		Tasks[i].Expired=1;
0x0DAC	0xD7BC      	BRA         L_ClearTasks365
L_ClearTasks366:
;FirmV_0_7_0.c,1755 :: 		}
0x0DAE	0x0012      	RETURN      0
; end of _ClearTasks
_LoadConfigs:
;FirmV_0_7_0.c,1596 :: 		void LoadConfigs()
;FirmV_0_7_0.c,1598 :: 		Door1OpenTime=EEPROM_Read(1);
0x0DB0	0x0E01      	MOVLW       1
0x0DB2	0x0104      	MOVLB       4
0x0DB4	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DB6	0xDDAC      	RCALL       _EEPROM_Read
0x0DB8	0xF216C000  	MOVFF       R0, _Door1OpenTime
;FirmV_0_7_0.c,1599 :: 		Door2OpenTime=EEPROM_Read(2);
0x0DBC	0x0E02      	MOVLW       2
0x0DBE	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DC0	0xDDA7      	RCALL       _EEPROM_Read
0x0DC2	0xF213C000  	MOVFF       R0, _Door2OpenTime
;FirmV_0_7_0.c,1600 :: 		Door1CloseTime=EEPROM_Read(3);
0x0DC6	0x0E03      	MOVLW       3
0x0DC8	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DCA	0xDDA2      	RCALL       _EEPROM_Read
0x0DCC	0xF215C000  	MOVFF       R0, _Door1CloseTime
;FirmV_0_7_0.c,1601 :: 		Door2CloseTime=EEPROM_Read(4);
0x0DD0	0x0E04      	MOVLW       4
0x0DD2	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DD4	0xDD9D      	RCALL       _EEPROM_Read
0x0DD6	0xF214C000  	MOVFF       R0, _Door2CloseTime
;FirmV_0_7_0.c,1602 :: 		ActionTimeDiff=EEPROM_Read(5);
0x0DDA	0x0E05      	MOVLW       5
0x0DDC	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DDE	0xDD98      	RCALL       _EEPROM_Read
0x0DE0	0xF210C000  	MOVFF       R0, _ActionTimeDiff
;FirmV_0_7_0.c,1603 :: 		OpenSoftStartTime=EEPROM_Read(6);
0x0DE4	0x0E06      	MOVLW       6
0x0DE6	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DE8	0xDD93      	RCALL       _EEPROM_Read
0x0DEA	0xF21AC000  	MOVFF       R0, _OpenSoftStartTime
;FirmV_0_7_0.c,1604 :: 		OpenSoftStopTime=EEPROM_Read(7);
0x0DEE	0x0E07      	MOVLW       7
0x0DF0	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DF2	0xDD8E      	RCALL       _EEPROM_Read
0x0DF4	0xF219C000  	MOVFF       R0, _OpenSoftStopTime
;FirmV_0_7_0.c,1605 :: 		CloseSoftStartTime=EEPROM_Read(8);
0x0DF8	0x0E08      	MOVLW       8
0x0DFA	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0DFC	0xDD89      	RCALL       _EEPROM_Read
0x0DFE	0xF218C000  	MOVFF       R0, _CloseSoftStartTime
;FirmV_0_7_0.c,1606 :: 		CloseSoftStopTime=EEPROM_Read(9);
0x0E02	0x0E09      	MOVLW       9
0x0E04	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E06	0xDD84      	RCALL       _EEPROM_Read
0x0E08	0xF217C000  	MOVFF       R0, _CloseSoftStopTime
;FirmV_0_7_0.c,1607 :: 		AutoCloseTime=EEPROM_Read(10);
0x0E0C	0x0E0A      	MOVLW       10
0x0E0E	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E10	0xDD7F      	RCALL       _EEPROM_Read
0x0E12	0xF211C000  	MOVFF       R0, _AutoCloseTime
0x0E16	0x0E00      	MOVLW       0
0x0E18	0x0102      	MOVLB       2
0x0E1A	0x6F12      	MOVWF       _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1608 :: 		AutoCloseTime=AutoCloseTime<<8;
0x0E1C	0xF212C211  	MOVFF       _AutoCloseTime, _AutoCloseTime+1
0x0E20	0x6B11      	CLRF        _AutoCloseTime, 1
;FirmV_0_7_0.c,1609 :: 		AutoCloseTime=AutocloseTime|EEPROM_Read(11);
0x0E22	0x0E0B      	MOVLW       11
0x0E24	0x0104      	MOVLB       4
0x0E26	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E28	0xDD73      	RCALL       _EEPROM_Read
0x0E2A	0x5000      	MOVF        R0, 0 
0x0E2C	0x0102      	MOVLB       2
0x0E2E	0x1311      	IORWF       _AutoCloseTime, 1, 1
0x0E30	0x0E00      	MOVLW       0
0x0E32	0x1312      	IORWF       _AutoCloseTime+1, 1, 1
;FirmV_0_7_0.c,1610 :: 		OverloadSens=EEPROM_Read(12);
0x0E34	0x0E0C      	MOVLW       12
0x0E36	0x0104      	MOVLB       4
0x0E38	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E3A	0xDD6A      	RCALL       _EEPROM_Read
0x0E3C	0xF11CC000  	MOVFF       R0, _OverloadSens
;FirmV_0_7_0.c,1611 :: 		SetOverloadParams(9-OverloadSens);
0x0E40	0x5000      	MOVF        R0, 0 
0x0E42	0x0809      	SUBLW       9
0x0E44	0x0105      	MOVLB       5
0x0E46	0x6F04      	MOVWF       FARG_SetOverloadParams_p, 1
0x0E48	0xDC13      	RCALL       _SetOverloadParams
;FirmV_0_7_0.c,1612 :: 		CloseAfterPass=EEPROM_Read(13);
0x0E4A	0x0E0D      	MOVLW       13
0x0E4C	0x0104      	MOVLB       4
0x0E4E	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E50	0xDD5F      	RCALL       _EEPROM_Read
0x0E52	0xF11EC000  	MOVFF       R0, _CloseAfterPass
;FirmV_0_7_0.c,1613 :: 		LockForce=EEPROM_Read(14);
0x0E56	0x0E0E      	MOVLW       14
0x0E58	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E5A	0xDD5A      	RCALL       _EEPROM_Read
0x0E5C	0xF15EC000  	MOVFF       R0, _LockForce
;FirmV_0_7_0.c,1614 :: 		OpenPhEnable=EEPROM_Read(15);
0x0E60	0x0E0F      	MOVLW       15
0x0E62	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E64	0xDD55      	RCALL       _EEPROM_Read
0x0E66	0xF20EC000  	MOVFF       R0, _OpenPhEnable
;FirmV_0_7_0.c,1615 :: 		LimiterEnable=EEPROM_Read(16);
0x0E6A	0x0E10      	MOVLW       16
0x0E6C	0x6FF8      	MOVWF       FARG_EEPROM_Read_address, 1
0x0E6E	0xDD50      	RCALL       _EEPROM_Read
0x0E70	0xF20FC000  	MOVFF       R0, _LimiterEnable
;FirmV_0_7_0.c,1617 :: 		}
0x0E74	0x0012      	RETURN      0
; end of _LoadConfigs
_StopMotor:
;FirmV_0_7_0.c,1674 :: 		void StopMotor(char Mx)
;FirmV_0_7_0.c,1676 :: 		if(Mx==1)
0x0E76	0x0103      	MOVLB       3
0x0E78	0x514F      	MOVF        FARG_StopMotor_Mx, 0, 1
0x0E7A	0x0A01      	XORLW       1
0x0E7C	0xE103      	BNZ         L_StopMotor354
;FirmV_0_7_0.c,1678 :: 		Motor1Start=0;
0x0E7E	0x0100      	MOVLB       0
0x0E80	0x6B95      	CLRF        _Motor1Start, 1
;FirmV_0_7_0.c,1679 :: 		Motor1=0;
0x0E82	0x9282      	BCF         PORTC, 1 
;FirmV_0_7_0.c,1680 :: 		}
L_StopMotor354:
;FirmV_0_7_0.c,1682 :: 		if(Mx==2)
0x0E84	0x0103      	MOVLB       3
0x0E86	0x514F      	MOVF        FARG_StopMotor_Mx, 0, 1
0x0E88	0x0A02      	XORLW       2
0x0E8A	0xE102      	BNZ         L_StopMotor355
;FirmV_0_7_0.c,1684 :: 		Motor2Start=0;
0x0E8C	0x6A70      	CLRF        _Motor2Start 
;FirmV_0_7_0.c,1685 :: 		Motor2=0;
0x0E8E	0x9082      	BCF         PORTC, 0 
;FirmV_0_7_0.c,1686 :: 		}
L_StopMotor355:
;FirmV_0_7_0.c,1687 :: 		}
0x0E90	0x0012      	RETURN      0
; end of _StopMotor
_OverloadInit:
;FirmV_0_7_0.c,1538 :: 		void OverloadInit(char ch)
;FirmV_0_7_0.c,1540 :: 		if(ch==1)
0x0E92	0x0103      	MOVLB       3
0x0E94	0x514F      	MOVF        FARG_OverloadInit_ch, 0, 1
0x0E96	0x0A01      	XORLW       1
0x0E98	0xE103      	BNZ         L_OverloadInit350
;FirmV_0_7_0.c,1542 :: 		OverloadCounter1=0;
0x0E9A	0x6A71      	CLRF        _OverloadCounter1 
;FirmV_0_7_0.c,1543 :: 		Events.Overload.b0=0;
0x0E9C	0x0101      	MOVLB       1
0x0E9E	0x9176      	BCF         _Events+5, 0, 1
;FirmV_0_7_0.c,1544 :: 		}
L_OverloadInit350:
;FirmV_0_7_0.c,1546 :: 		if(ch==2)
0x0EA0	0x0103      	MOVLB       3
0x0EA2	0x514F      	MOVF        FARG_OverloadInit_ch, 0, 1
0x0EA4	0x0A02      	XORLW       2
0x0EA6	0xE103      	BNZ         L_OverloadInit351
;FirmV_0_7_0.c,1548 :: 		OverloadCounter2=0;
0x0EA8	0x6A72      	CLRF        _OverloadCounter2 
;FirmV_0_7_0.c,1549 :: 		Events.Overload.b1=0;
0x0EAA	0x0101      	MOVLB       1
0x0EAC	0x9376      	BCF         _Events+5, 1, 1
;FirmV_0_7_0.c,1550 :: 		}
L_OverloadInit351:
;FirmV_0_7_0.c,1551 :: 		}
0x0EAE	0x0012      	RETURN      0
; end of _OverloadInit
_CheckTask:
;FirmV_0_7_0.c,1699 :: 		char CheckTask(char TaskCode)
;FirmV_0_7_0.c,1701 :: 		if(Events.Task1==TaskCode)
0x0EB0	0x0101      	MOVLB       1
0x0EB2	0x5172      	MOVF        _Events+1, 0, 1
0x0EB4	0x0103      	MOVLB       3
0x0EB6	0x194F      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0EB8	0xE105      	BNZ         L_CheckTask356
;FirmV_0_7_0.c,1702 :: 		{Events.Task1=0; return 1;}
0x0EBA	0x0101      	MOVLB       1
0x0EBC	0x6B72      	CLRF        _Events+1, 1
0x0EBE	0x0E01      	MOVLW       1
0x0EC0	0x6E00      	MOVWF       R0 
0x0EC2	0x0012      	RETURN      0
L_CheckTask356:
0x0EC4	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1704 :: 		if(Events.Task2==TaskCode)
0x0EC6	0x5173      	MOVF        _Events+2, 0, 1
0x0EC8	0x0103      	MOVLB       3
0x0ECA	0x194F      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0ECC	0xE105      	BNZ         L_CheckTask357
;FirmV_0_7_0.c,1705 :: 		{Events.Task2=0; return 1;}
0x0ECE	0x0101      	MOVLB       1
0x0ED0	0x6B73      	CLRF        _Events+2, 1
0x0ED2	0x0E01      	MOVLW       1
0x0ED4	0x6E00      	MOVWF       R0 
0x0ED6	0x0012      	RETURN      0
L_CheckTask357:
0x0ED8	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1707 :: 		if(Events.Task3==TaskCode)
0x0EDA	0x5174      	MOVF        _Events+3, 0, 1
0x0EDC	0x0103      	MOVLB       3
0x0EDE	0x194F      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0EE0	0xE105      	BNZ         L_CheckTask358
;FirmV_0_7_0.c,1708 :: 		{Events.Task3=0; return 1;}
0x0EE2	0x0101      	MOVLB       1
0x0EE4	0x6B74      	CLRF        _Events+3, 1
0x0EE6	0x0E01      	MOVLW       1
0x0EE8	0x6E00      	MOVWF       R0 
0x0EEA	0x0012      	RETURN      0
L_CheckTask358:
;FirmV_0_7_0.c,1710 :: 		return 0;
0x0EEC	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1712 :: 		}
0x0EEE	0x0012      	RETURN      0
; end of _CheckTask
_SetMotorSpeed:
;FirmV_0_7_0.c,1518 :: 		void SetMotorSpeed(char M1FullSpeed,char M2FullSpeed)
;FirmV_0_7_0.c,1520 :: 		if((M1FullSpeed==0)||(M2FullSpeed==0))
0x0EF0	0x0103      	MOVLB       3
0x0EF2	0x514F      	MOVF        FARG_SetMotorSpeed_M1FullSpeed, 0, 1
0x0EF4	0x0A00      	XORLW       0
0x0EF6	0xE004      	BZ          L__SetMotorSpeed682
0x0EF8	0x5150      	MOVF        FARG_SetMotorSpeed_M2FullSpeed, 0, 1
0x0EFA	0x0A00      	XORLW       0
0x0EFC	0xE001      	BZ          L__SetMotorSpeed682
0x0EFE	0xD002      	BRA         L_SetMotorSpeed348
L__SetMotorSpeed682:
;FirmV_0_7_0.c,1521 :: 		INT0E_bit=1;
0x0F00	0x88F2      	BSF         INT0E_bit, 4 
0x0F02	0xD001      	BRA         L_SetMotorSpeed349
L_SetMotorSpeed348:
;FirmV_0_7_0.c,1523 :: 		INT0E_bit=0;
0x0F04	0x98F2      	BCF         INT0E_bit, 4 
L_SetMotorSpeed349:
;FirmV_0_7_0.c,1525 :: 		Motor1FullSpeed=M1FullSpeed;
0x0F06	0xF096C34F  	MOVFF       FARG_SetMotorSpeed_M1FullSpeed, _Motor1FullSpeed
;FirmV_0_7_0.c,1526 :: 		Motor2FullSpeed=M2FullSpeed;
0x0F0A	0xF0BDC350  	MOVFF       FARG_SetMotorSpeed_M2FullSpeed, _Motor2FullSpeed
;FirmV_0_7_0.c,1527 :: 		}
0x0F0E	0x0012      	RETURN      0
; end of _SetMotorSpeed
_Menu0:
;FirmV_0_7_0.c,1770 :: 		void Menu0()
;FirmV_0_7_0.c,1772 :: 		memcpy(LCDLine2,"                ",16);
0x0F10	0x0E04      	MOVLW       _LCDLine2
0x0F12	0x0105      	MOVLB       5
0x0F14	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0F16	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x0F18	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0F1A	0x0EEE      	MOVLW       ?ICS?lstr69_FirmV_0_7_0
0x0F1C	0x6EF6      	MOVWF       4086 
0x0F1E	0x0E6D      	MOVLW       hi_addr(?ICS?lstr69_FirmV_0_7_0)
0x0F20	0x6EF7      	MOVWF       TBLPTRH 
0x0F22	0x0E00      	MOVLW       higher_addr(?ICS?lstr69_FirmV_0_7_0)
0x0F24	0x6EF8      	MOVWF       TBLPTRU 
0x0F26	0x0E4F      	MOVLW       ?lstr69_FirmV_0_7_0
0x0F28	0x6EE1      	MOVWF       FSR1L 
0x0F2A	0x0E03      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x0F2C	0x6EE2      	MOVWF       FSR1H 
0x0F2E	0x0E11      	MOVLW       17
0x0F30	0x6E00      	MOVWF       R0 
0x0F32	0x0E01      	MOVLW       1
0x0F34	0x6E01      	MOVWF       R1 
0x0F36	0xDCF9      	RCALL       ___CC2DW
0x0F38	0x0E4F      	MOVLW       ?lstr69_FirmV_0_7_0
0x0F3A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0F3C	0x0E03      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x0F3E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0F40	0x0E10      	MOVLW       16
0x0F42	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0F44	0x0E00      	MOVLW       0
0x0F46	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0F48	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,1774 :: 		if(MenuPointer==0)
0x0F4C	0x0100      	MOVLB       0
0x0F4E	0x51ED      	MOVF        _MenuPointer, 0, 1
0x0F50	0x0A00      	XORLW       0
0x0F52	0xE164      	BNZ         L_Menu0371
;FirmV_0_7_0.c,1775 :: 		{memcpy(LCDLine1,"00 Learning Mode",16);LCDUpdateFlag=1;
0x0F54	0x0EF3      	MOVLW       _LCDLine1
0x0F56	0x0105      	MOVLB       5
0x0F58	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0F5A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0F5C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0F5E	0x0EFF      	MOVLW       ?ICS?lstr70_FirmV_0_7_0
0x0F60	0x6EF6      	MOVWF       4086 
0x0F62	0x0E6D      	MOVLW       hi_addr(?ICS?lstr70_FirmV_0_7_0)
0x0F64	0x6EF7      	MOVWF       TBLPTRH 
0x0F66	0x0E00      	MOVLW       higher_addr(?ICS?lstr70_FirmV_0_7_0)
0x0F68	0x6EF8      	MOVWF       TBLPTRU 
0x0F6A	0x0E60      	MOVLW       ?lstr70_FirmV_0_7_0
0x0F6C	0x6EE1      	MOVWF       FSR1L 
0x0F6E	0x0E03      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x0F70	0x6EE2      	MOVWF       FSR1H 
0x0F72	0x0E11      	MOVLW       17
0x0F74	0x6E00      	MOVWF       R0 
0x0F76	0x0E01      	MOVLW       1
0x0F78	0x6E01      	MOVWF       R1 
0x0F7A	0xDCD7      	RCALL       ___CC2DW
0x0F7C	0x0E60      	MOVLW       ?lstr70_FirmV_0_7_0
0x0F7E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0F80	0x0E03      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x0F82	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0F84	0x0E10      	MOVLW       16
0x0F86	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0F88	0x0E00      	MOVLW       0
0x0F8A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0F8C	0xF000ECFC  	CALL        _memcpy, 0
0x0F90	0x0E01      	MOVLW       1
0x0F92	0x0101      	MOVLB       1
0x0F94	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1776 :: 		if(LearningMode==0)memcpy(LCDLine2,"      Auto      ",16);
0x0F96	0x511A      	MOVF        _LearningMode, 0, 1
0x0F98	0x0A00      	XORLW       0
0x0F9A	0xE11E      	BNZ         L_Menu0372
0x0F9C	0x0E04      	MOVLW       _LCDLine2
0x0F9E	0x0105      	MOVLB       5
0x0FA0	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0FA2	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x0FA4	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0FA6	0x0E10      	MOVLW       ?ICS?lstr71_FirmV_0_7_0
0x0FA8	0x6EF6      	MOVWF       4086 
0x0FAA	0x0E6E      	MOVLW       hi_addr(?ICS?lstr71_FirmV_0_7_0)
0x0FAC	0x6EF7      	MOVWF       TBLPTRH 
0x0FAE	0x0E00      	MOVLW       higher_addr(?ICS?lstr71_FirmV_0_7_0)
0x0FB0	0x6EF8      	MOVWF       TBLPTRU 
0x0FB2	0x0E71      	MOVLW       ?lstr71_FirmV_0_7_0
0x0FB4	0x6EE1      	MOVWF       FSR1L 
0x0FB6	0x0E03      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x0FB8	0x6EE2      	MOVWF       FSR1H 
0x0FBA	0x0E11      	MOVLW       17
0x0FBC	0x6E00      	MOVWF       R0 
0x0FBE	0x0E01      	MOVLW       1
0x0FC0	0x6E01      	MOVWF       R1 
0x0FC2	0xDCB3      	RCALL       ___CC2DW
0x0FC4	0x0E71      	MOVLW       ?lstr71_FirmV_0_7_0
0x0FC6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x0FC8	0x0E03      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x0FCA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x0FCC	0x0E10      	MOVLW       16
0x0FCE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x0FD0	0x0E00      	MOVLW       0
0x0FD2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x0FD4	0xF000ECFC  	CALL        _memcpy, 0
L_Menu0372:
;FirmV_0_7_0.c,1777 :: 		if(LearningMode==1)memcpy(LCDLine2,"     Manual     ",16);}
0x0FD8	0x0101      	MOVLB       1
0x0FDA	0x511A      	MOVF        _LearningMode, 0, 1
0x0FDC	0x0A01      	XORLW       1
0x0FDE	0xE11E      	BNZ         L_Menu0373
0x0FE0	0x0E04      	MOVLW       _LCDLine2
0x0FE2	0x0105      	MOVLB       5
0x0FE4	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x0FE6	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x0FE8	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x0FEA	0x0E21      	MOVLW       ?ICS?lstr72_FirmV_0_7_0
0x0FEC	0x6EF6      	MOVWF       4086 
0x0FEE	0x0E6E      	MOVLW       hi_addr(?ICS?lstr72_FirmV_0_7_0)
0x0FF0	0x6EF7      	MOVWF       TBLPTRH 
0x0FF2	0x0E00      	MOVLW       higher_addr(?ICS?lstr72_FirmV_0_7_0)
0x0FF4	0x6EF8      	MOVWF       TBLPTRU 
0x0FF6	0x0E82      	MOVLW       ?lstr72_FirmV_0_7_0
0x0FF8	0x6EE1      	MOVWF       FSR1L 
0x0FFA	0x0E03      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x0FFC	0x6EE2      	MOVWF       FSR1H 
0x0FFE	0x0E11      	MOVLW       17
0x1000	0x6E00      	MOVWF       R0 
0x1002	0x0E01      	MOVLW       1
0x1004	0x6E01      	MOVWF       R1 
0x1006	0xDC91      	RCALL       ___CC2DW
0x1008	0x0E82      	MOVLW       ?lstr72_FirmV_0_7_0
0x100A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x100C	0x0E03      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x100E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1010	0x0E10      	MOVLW       16
0x1012	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1014	0x0E00      	MOVLW       0
0x1016	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1018	0xF000ECFC  	CALL        _memcpy, 0
L_Menu0373:
L_Menu0371:
;FirmV_0_7_0.c,1779 :: 		if(MenuPointer==1)
0x101C	0x0100      	MOVLB       0
0x101E	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1020	0x0A01      	XORLW       1
0x1022	0xE129      	BNZ         L_Menu0374
;FirmV_0_7_0.c,1780 :: 		{memcpy(LCDLine1,"01 D1 Open Time ",16);LCDUpdateFlag=1;
0x1024	0x0EF3      	MOVLW       _LCDLine1
0x1026	0x0105      	MOVLB       5
0x1028	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x102A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x102C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x102E	0x0E32      	MOVLW       ?ICS?lstr73_FirmV_0_7_0
0x1030	0x6EF6      	MOVWF       4086 
0x1032	0x0E6E      	MOVLW       hi_addr(?ICS?lstr73_FirmV_0_7_0)
0x1034	0x6EF7      	MOVWF       TBLPTRH 
0x1036	0x0E00      	MOVLW       higher_addr(?ICS?lstr73_FirmV_0_7_0)
0x1038	0x6EF8      	MOVWF       TBLPTRU 
0x103A	0x0E93      	MOVLW       ?lstr73_FirmV_0_7_0
0x103C	0x6EE1      	MOVWF       FSR1L 
0x103E	0x0E03      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x1040	0x6EE2      	MOVWF       FSR1H 
0x1042	0x0E11      	MOVLW       17
0x1044	0x6E00      	MOVWF       R0 
0x1046	0x0E01      	MOVLW       1
0x1048	0x6E01      	MOVWF       R1 
0x104A	0xDC6F      	RCALL       ___CC2DW
0x104C	0x0E93      	MOVLW       ?lstr73_FirmV_0_7_0
0x104E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1050	0x0E03      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x1052	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1054	0x0E10      	MOVLW       16
0x1056	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1058	0x0E00      	MOVLW       0
0x105A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x105C	0xF000ECFC  	CALL        _memcpy, 0
0x1060	0x0E01      	MOVLW       1
0x1062	0x0101      	MOVLB       1
0x1064	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1781 :: 		charValueToStr(Door1OpenTime,LCDLine2+6);}
0x1066	0xF4F8C216  	MOVFF       _Door1OpenTime, FARG_charValueToStr_val
0x106A	0x0E0A      	MOVLW       _LCDLine2+6
0x106C	0x0104      	MOVLB       4
0x106E	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x1070	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1072	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x1074	0xDD0B      	RCALL       _charValueToStr
L_Menu0374:
;FirmV_0_7_0.c,1783 :: 		if(MenuPointer==2)
0x1076	0x0100      	MOVLB       0
0x1078	0x51ED      	MOVF        _MenuPointer, 0, 1
0x107A	0x0A02      	XORLW       2
0x107C	0xE129      	BNZ         L_Menu0375
;FirmV_0_7_0.c,1784 :: 		{memcpy(LCDLine1,"02 D2 Open Time ",16);LCDUpdateFlag=1;
0x107E	0x0EF3      	MOVLW       _LCDLine1
0x1080	0x0105      	MOVLB       5
0x1082	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1084	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1086	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1088	0x0E43      	MOVLW       ?ICS?lstr74_FirmV_0_7_0
0x108A	0x6EF6      	MOVWF       4086 
0x108C	0x0E6E      	MOVLW       hi_addr(?ICS?lstr74_FirmV_0_7_0)
0x108E	0x6EF7      	MOVWF       TBLPTRH 
0x1090	0x0E00      	MOVLW       higher_addr(?ICS?lstr74_FirmV_0_7_0)
0x1092	0x6EF8      	MOVWF       TBLPTRU 
0x1094	0x0EA4      	MOVLW       ?lstr74_FirmV_0_7_0
0x1096	0x6EE1      	MOVWF       FSR1L 
0x1098	0x0E03      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x109A	0x6EE2      	MOVWF       FSR1H 
0x109C	0x0E11      	MOVLW       17
0x109E	0x6E00      	MOVWF       R0 
0x10A0	0x0E01      	MOVLW       1
0x10A2	0x6E01      	MOVWF       R1 
0x10A4	0xDC42      	RCALL       ___CC2DW
0x10A6	0x0EA4      	MOVLW       ?lstr74_FirmV_0_7_0
0x10A8	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x10AA	0x0E03      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x10AC	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x10AE	0x0E10      	MOVLW       16
0x10B0	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x10B2	0x0E00      	MOVLW       0
0x10B4	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x10B6	0xF000ECFC  	CALL        _memcpy, 0
0x10BA	0x0E01      	MOVLW       1
0x10BC	0x0101      	MOVLB       1
0x10BE	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1785 :: 		charValueToStr(Door2OpenTime,LCDLine2+6);}
0x10C0	0xF4F8C213  	MOVFF       _Door2OpenTime, FARG_charValueToStr_val
0x10C4	0x0E0A      	MOVLW       _LCDLine2+6
0x10C6	0x0104      	MOVLB       4
0x10C8	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x10CA	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x10CC	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x10CE	0xDCDE      	RCALL       _charValueToStr
L_Menu0375:
;FirmV_0_7_0.c,1787 :: 		if(MenuPointer==3)
0x10D0	0x0100      	MOVLB       0
0x10D2	0x51ED      	MOVF        _MenuPointer, 0, 1
0x10D4	0x0A03      	XORLW       3
0x10D6	0xE129      	BNZ         L_Menu0376
;FirmV_0_7_0.c,1788 :: 		{memcpy(LCDLine1,"03 D1 Close Time",16);LCDUpdateFlag=1;
0x10D8	0x0EF3      	MOVLW       _LCDLine1
0x10DA	0x0105      	MOVLB       5
0x10DC	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x10DE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x10E0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x10E2	0x0E54      	MOVLW       ?ICS?lstr75_FirmV_0_7_0
0x10E4	0x6EF6      	MOVWF       4086 
0x10E6	0x0E6E      	MOVLW       hi_addr(?ICS?lstr75_FirmV_0_7_0)
0x10E8	0x6EF7      	MOVWF       TBLPTRH 
0x10EA	0x0E00      	MOVLW       higher_addr(?ICS?lstr75_FirmV_0_7_0)
0x10EC	0x6EF8      	MOVWF       TBLPTRU 
0x10EE	0x0EB5      	MOVLW       ?lstr75_FirmV_0_7_0
0x10F0	0x6EE1      	MOVWF       FSR1L 
0x10F2	0x0E03      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x10F4	0x6EE2      	MOVWF       FSR1H 
0x10F6	0x0E11      	MOVLW       17
0x10F8	0x6E00      	MOVWF       R0 
0x10FA	0x0E01      	MOVLW       1
0x10FC	0x6E01      	MOVWF       R1 
0x10FE	0xDC15      	RCALL       ___CC2DW
0x1100	0x0EB5      	MOVLW       ?lstr75_FirmV_0_7_0
0x1102	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1104	0x0E03      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x1106	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1108	0x0E10      	MOVLW       16
0x110A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x110C	0x0E00      	MOVLW       0
0x110E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1110	0xF000ECFC  	CALL        _memcpy, 0
0x1114	0x0E01      	MOVLW       1
0x1116	0x0101      	MOVLB       1
0x1118	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1789 :: 		charValueToStr(Door1CloseTime,LCDLine2+6);}
0x111A	0xF4F8C215  	MOVFF       _Door1CloseTime, FARG_charValueToStr_val
0x111E	0x0E0A      	MOVLW       _LCDLine2+6
0x1120	0x0104      	MOVLB       4
0x1122	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x1124	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1126	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x1128	0xDCB1      	RCALL       _charValueToStr
L_Menu0376:
;FirmV_0_7_0.c,1791 :: 		if(MenuPointer==4)
0x112A	0x0100      	MOVLB       0
0x112C	0x51ED      	MOVF        _MenuPointer, 0, 1
0x112E	0x0A04      	XORLW       4
0x1130	0xE12A      	BNZ         L_Menu0377
;FirmV_0_7_0.c,1792 :: 		{memcpy(LCDLine1,"04 D2 Close Time",16);LCDUpdateFlag=1;
0x1132	0x0EF3      	MOVLW       _LCDLine1
0x1134	0x0105      	MOVLB       5
0x1136	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1138	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x113A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x113C	0x0E65      	MOVLW       ?ICS?lstr76_FirmV_0_7_0
0x113E	0x6EF6      	MOVWF       4086 
0x1140	0x0E6E      	MOVLW       hi_addr(?ICS?lstr76_FirmV_0_7_0)
0x1142	0x6EF7      	MOVWF       TBLPTRH 
0x1144	0x0E00      	MOVLW       higher_addr(?ICS?lstr76_FirmV_0_7_0)
0x1146	0x6EF8      	MOVWF       TBLPTRU 
0x1148	0x0EC6      	MOVLW       ?lstr76_FirmV_0_7_0
0x114A	0x6EE1      	MOVWF       FSR1L 
0x114C	0x0E03      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x114E	0x6EE2      	MOVWF       FSR1H 
0x1150	0x0E11      	MOVLW       17
0x1152	0x6E00      	MOVWF       R0 
0x1154	0x0E01      	MOVLW       1
0x1156	0x6E01      	MOVWF       R1 
0x1158	0xF004EC95  	CALL        ___CC2DW, 0
0x115C	0x0EC6      	MOVLW       ?lstr76_FirmV_0_7_0
0x115E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1160	0x0E03      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x1162	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1164	0x0E10      	MOVLW       16
0x1166	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1168	0x0E00      	MOVLW       0
0x116A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x116C	0xF000ECFC  	CALL        _memcpy, 0
0x1170	0x0E01      	MOVLW       1
0x1172	0x0101      	MOVLB       1
0x1174	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1793 :: 		charValueToStr(Door2CloseTime,LCDLine2+6);}
0x1176	0xF4F8C214  	MOVFF       _Door2CloseTime, FARG_charValueToStr_val
0x117A	0x0E0A      	MOVLW       _LCDLine2+6
0x117C	0x0104      	MOVLB       4
0x117E	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x1180	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1182	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x1184	0xDC83      	RCALL       _charValueToStr
L_Menu0377:
;FirmV_0_7_0.c,1795 :: 		if(MenuPointer==5)
0x1186	0x0100      	MOVLB       0
0x1188	0x51ED      	MOVF        _MenuPointer, 0, 1
0x118A	0x0A05      	XORLW       5
0x118C	0xE12A      	BNZ         L_Menu0378
;FirmV_0_7_0.c,1796 :: 		{memcpy(LCDLine1,"05 Op Soft Start",16);LCDUpdateFlag=1;
0x118E	0x0EF3      	MOVLW       _LCDLine1
0x1190	0x0105      	MOVLB       5
0x1192	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1194	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1196	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1198	0x0E76      	MOVLW       ?ICS?lstr77_FirmV_0_7_0
0x119A	0x6EF6      	MOVWF       4086 
0x119C	0x0E6E      	MOVLW       hi_addr(?ICS?lstr77_FirmV_0_7_0)
0x119E	0x6EF7      	MOVWF       TBLPTRH 
0x11A0	0x0E00      	MOVLW       higher_addr(?ICS?lstr77_FirmV_0_7_0)
0x11A2	0x6EF8      	MOVWF       TBLPTRU 
0x11A4	0x0ED7      	MOVLW       ?lstr77_FirmV_0_7_0
0x11A6	0x6EE1      	MOVWF       FSR1L 
0x11A8	0x0E03      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x11AA	0x6EE2      	MOVWF       FSR1H 
0x11AC	0x0E11      	MOVLW       17
0x11AE	0x6E00      	MOVWF       R0 
0x11B0	0x0E01      	MOVLW       1
0x11B2	0x6E01      	MOVWF       R1 
0x11B4	0xF004EC95  	CALL        ___CC2DW, 0
0x11B8	0x0ED7      	MOVLW       ?lstr77_FirmV_0_7_0
0x11BA	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x11BC	0x0E03      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x11BE	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x11C0	0x0E10      	MOVLW       16
0x11C2	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x11C4	0x0E00      	MOVLW       0
0x11C6	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x11C8	0xF000ECFC  	CALL        _memcpy, 0
0x11CC	0x0E01      	MOVLW       1
0x11CE	0x0101      	MOVLB       1
0x11D0	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1797 :: 		charValueToStr(OpenSoftStartTime,LCDLine2+6);}
0x11D2	0xF4F8C21A  	MOVFF       _OpenSoftStartTime, FARG_charValueToStr_val
0x11D6	0x0E0A      	MOVLW       _LCDLine2+6
0x11D8	0x0104      	MOVLB       4
0x11DA	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x11DC	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x11DE	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x11E0	0xDC55      	RCALL       _charValueToStr
L_Menu0378:
;FirmV_0_7_0.c,1799 :: 		if(MenuPointer==6)
0x11E2	0x0100      	MOVLB       0
0x11E4	0x51ED      	MOVF        _MenuPointer, 0, 1
0x11E6	0x0A06      	XORLW       6
0x11E8	0xE12A      	BNZ         L_Menu0379
;FirmV_0_7_0.c,1800 :: 		{memcpy(LCDLine1,"06 Op Soft Stop ",16);LCDUpdateFlag=1;
0x11EA	0x0EF3      	MOVLW       _LCDLine1
0x11EC	0x0105      	MOVLB       5
0x11EE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x11F0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x11F2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x11F4	0x0E87      	MOVLW       ?ICS?lstr78_FirmV_0_7_0
0x11F6	0x6EF6      	MOVWF       4086 
0x11F8	0x0E6E      	MOVLW       hi_addr(?ICS?lstr78_FirmV_0_7_0)
0x11FA	0x6EF7      	MOVWF       TBLPTRH 
0x11FC	0x0E00      	MOVLW       higher_addr(?ICS?lstr78_FirmV_0_7_0)
0x11FE	0x6EF8      	MOVWF       TBLPTRU 
0x1200	0x0EE8      	MOVLW       ?lstr78_FirmV_0_7_0
0x1202	0x6EE1      	MOVWF       FSR1L 
0x1204	0x0E03      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x1206	0x6EE2      	MOVWF       FSR1H 
0x1208	0x0E11      	MOVLW       17
0x120A	0x6E00      	MOVWF       R0 
0x120C	0x0E01      	MOVLW       1
0x120E	0x6E01      	MOVWF       R1 
0x1210	0xF004EC95  	CALL        ___CC2DW, 0
0x1214	0x0EE8      	MOVLW       ?lstr78_FirmV_0_7_0
0x1216	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1218	0x0E03      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x121A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x121C	0x0E10      	MOVLW       16
0x121E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1220	0x0E00      	MOVLW       0
0x1222	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1224	0xF000ECFC  	CALL        _memcpy, 0
0x1228	0x0E01      	MOVLW       1
0x122A	0x0101      	MOVLB       1
0x122C	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1801 :: 		charValueToStr(OpenSoftStopTime,LCDLine2+6);}
0x122E	0xF4F8C219  	MOVFF       _OpenSoftStopTime, FARG_charValueToStr_val
0x1232	0x0E0A      	MOVLW       _LCDLine2+6
0x1234	0x0104      	MOVLB       4
0x1236	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x1238	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x123A	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x123C	0xDC27      	RCALL       _charValueToStr
L_Menu0379:
;FirmV_0_7_0.c,1803 :: 		if(MenuPointer==7)
0x123E	0x0100      	MOVLB       0
0x1240	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1242	0x0A07      	XORLW       7
0x1244	0xE12B      	BNZ         L_Menu0380
;FirmV_0_7_0.c,1804 :: 		{memcpy(LCDLine1,"07 Cl Soft Start",16);LCDUpdateFlag=1;
0x1246	0x0EF3      	MOVLW       _LCDLine1
0x1248	0x0105      	MOVLB       5
0x124A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x124C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x124E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1250	0x0E98      	MOVLW       ?ICS?lstr79_FirmV_0_7_0
0x1252	0x6EF6      	MOVWF       4086 
0x1254	0x0E6E      	MOVLW       hi_addr(?ICS?lstr79_FirmV_0_7_0)
0x1256	0x6EF7      	MOVWF       TBLPTRH 
0x1258	0x0E00      	MOVLW       higher_addr(?ICS?lstr79_FirmV_0_7_0)
0x125A	0x6EF8      	MOVWF       TBLPTRU 
0x125C	0x0EF9      	MOVLW       ?lstr79_FirmV_0_7_0
0x125E	0x6EE1      	MOVWF       FSR1L 
0x1260	0x0E03      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x1262	0x6EE2      	MOVWF       FSR1H 
0x1264	0x0E11      	MOVLW       17
0x1266	0x6E00      	MOVWF       R0 
0x1268	0x0E01      	MOVLW       1
0x126A	0x6E01      	MOVWF       R1 
0x126C	0xF004EC95  	CALL        ___CC2DW, 0
0x1270	0x0EF9      	MOVLW       ?lstr79_FirmV_0_7_0
0x1272	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1274	0x0E03      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x1276	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1278	0x0E10      	MOVLW       16
0x127A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x127C	0x0E00      	MOVLW       0
0x127E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1280	0xF000ECFC  	CALL        _memcpy, 0
0x1284	0x0E01      	MOVLW       1
0x1286	0x0101      	MOVLB       1
0x1288	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1805 :: 		charValueToStr(CloseSoftStartTime,LCDLine2+6);}
0x128A	0xF4F8C218  	MOVFF       _CloseSoftStartTime, FARG_charValueToStr_val
0x128E	0x0E0A      	MOVLW       _LCDLine2+6
0x1290	0x0104      	MOVLB       4
0x1292	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x1294	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1296	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x1298	0xF005EC46  	CALL        _charValueToStr, 0
L_Menu0380:
;FirmV_0_7_0.c,1807 :: 		if(MenuPointer==8)
0x129C	0x0100      	MOVLB       0
0x129E	0x51ED      	MOVF        _MenuPointer, 0, 1
0x12A0	0x0A08      	XORLW       8
0x12A2	0xE12B      	BNZ         L_Menu0381
;FirmV_0_7_0.c,1808 :: 		{memcpy(LCDLine1,"08 Cl Soft Stop ",16);LCDUpdateFlag=1;
0x12A4	0x0EF3      	MOVLW       _LCDLine1
0x12A6	0x0105      	MOVLB       5
0x12A8	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x12AA	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x12AC	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x12AE	0x0EA9      	MOVLW       ?ICS?lstr80_FirmV_0_7_0
0x12B0	0x6EF6      	MOVWF       4086 
0x12B2	0x0E6E      	MOVLW       hi_addr(?ICS?lstr80_FirmV_0_7_0)
0x12B4	0x6EF7      	MOVWF       TBLPTRH 
0x12B6	0x0E00      	MOVLW       higher_addr(?ICS?lstr80_FirmV_0_7_0)
0x12B8	0x6EF8      	MOVWF       TBLPTRU 
0x12BA	0x0E0A      	MOVLW       ?lstr80_FirmV_0_7_0
0x12BC	0x6EE1      	MOVWF       FSR1L 
0x12BE	0x0E04      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x12C0	0x6EE2      	MOVWF       FSR1H 
0x12C2	0x0E11      	MOVLW       17
0x12C4	0x6E00      	MOVWF       R0 
0x12C6	0x0E01      	MOVLW       1
0x12C8	0x6E01      	MOVWF       R1 
0x12CA	0xF004EC95  	CALL        ___CC2DW, 0
0x12CE	0x0E0A      	MOVLW       ?lstr80_FirmV_0_7_0
0x12D0	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x12D2	0x0E04      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x12D4	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x12D6	0x0E10      	MOVLW       16
0x12D8	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x12DA	0x0E00      	MOVLW       0
0x12DC	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x12DE	0xF000ECFC  	CALL        _memcpy, 0
0x12E2	0x0E01      	MOVLW       1
0x12E4	0x0101      	MOVLB       1
0x12E6	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1809 :: 		charValueToStr(CloseSoftStopTime,LCDLine2+6);}
0x12E8	0xF4F8C217  	MOVFF       _CloseSoftStopTime, FARG_charValueToStr_val
0x12EC	0x0E0A      	MOVLW       _LCDLine2+6
0x12EE	0x0104      	MOVLB       4
0x12F0	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x12F2	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x12F4	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x12F6	0xF005EC46  	CALL        _charValueToStr, 0
L_Menu0381:
;FirmV_0_7_0.c,1811 :: 		if(MenuPointer==9)
0x12FA	0x0100      	MOVLB       0
0x12FC	0x51ED      	MOVF        _MenuPointer, 0, 1
0x12FE	0x0A09      	XORLW       9
0x1300	0xE12E      	BNZ         L_Menu0382
;FirmV_0_7_0.c,1812 :: 		{memcpy(LCDLine1,"09 Power        ",16);LCDUpdateFlag=1;
0x1302	0x0EF3      	MOVLW       _LCDLine1
0x1304	0x0105      	MOVLB       5
0x1306	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1308	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x130A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x130C	0x0EBA      	MOVLW       ?ICS?lstr81_FirmV_0_7_0
0x130E	0x6EF6      	MOVWF       4086 
0x1310	0x0E6E      	MOVLW       hi_addr(?ICS?lstr81_FirmV_0_7_0)
0x1312	0x6EF7      	MOVWF       TBLPTRH 
0x1314	0x0E00      	MOVLW       higher_addr(?ICS?lstr81_FirmV_0_7_0)
0x1316	0x6EF8      	MOVWF       TBLPTRU 
0x1318	0x0E1B      	MOVLW       ?lstr81_FirmV_0_7_0
0x131A	0x6EE1      	MOVWF       FSR1L 
0x131C	0x0E04      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x131E	0x6EE2      	MOVWF       FSR1H 
0x1320	0x0E11      	MOVLW       17
0x1322	0x6E00      	MOVWF       R0 
0x1324	0x0E01      	MOVLW       1
0x1326	0x6E01      	MOVWF       R1 
0x1328	0xF004EC95  	CALL        ___CC2DW, 0
0x132C	0x0E1B      	MOVLW       ?lstr81_FirmV_0_7_0
0x132E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1330	0x0E04      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x1332	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1334	0x0E10      	MOVLW       16
0x1336	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1338	0x0E00      	MOVLW       0
0x133A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x133C	0xF000ECFC  	CALL        _memcpy, 0
0x1340	0x0E01      	MOVLW       1
0x1342	0x0101      	MOVLB       1
0x1344	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1813 :: 		bytetostr(OverloadSens,LCDLine2+6);LCDLine2[9]=' ';}
0x1346	0xF504C11C  	MOVFF       _OverloadSens, FARG_ByteToStr_input
0x134A	0x0E0A      	MOVLW       _LCDLine2+6
0x134C	0x0105      	MOVLB       5
0x134E	0x6F05      	MOVWF       FARG_ByteToStr_output, 1
0x1350	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1352	0x6F06      	MOVWF       FARG_ByteToStr_output+1, 1
0x1354	0xF001EC24  	CALL        _ByteToStr, 0
0x1358	0x0E20      	MOVLW       32
0x135A	0x0101      	MOVLB       1
0x135C	0x6F0D      	MOVWF       _LCDLine2+9, 1
L_Menu0382:
;FirmV_0_7_0.c,1815 :: 		if(MenuPointer==10)
0x135E	0x0100      	MOVLB       0
0x1360	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1362	0x0A0A      	XORLW       10
0x1364	0xE12B      	BNZ         L_Menu0383
;FirmV_0_7_0.c,1816 :: 		{memcpy(LCDLine1,"10 Interval Time",16);LCDUpdateFlag=1;
0x1366	0x0EF3      	MOVLW       _LCDLine1
0x1368	0x0105      	MOVLB       5
0x136A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x136C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x136E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1370	0x0ECB      	MOVLW       ?ICS?lstr82_FirmV_0_7_0
0x1372	0x6EF6      	MOVWF       4086 
0x1374	0x0E6E      	MOVLW       hi_addr(?ICS?lstr82_FirmV_0_7_0)
0x1376	0x6EF7      	MOVWF       TBLPTRH 
0x1378	0x0E00      	MOVLW       higher_addr(?ICS?lstr82_FirmV_0_7_0)
0x137A	0x6EF8      	MOVWF       TBLPTRU 
0x137C	0x0E2C      	MOVLW       ?lstr82_FirmV_0_7_0
0x137E	0x6EE1      	MOVWF       FSR1L 
0x1380	0x0E04      	MOVLW       hi_addr(?lstr82_FirmV_0_7_0)
0x1382	0x6EE2      	MOVWF       FSR1H 
0x1384	0x0E11      	MOVLW       17
0x1386	0x6E00      	MOVWF       R0 
0x1388	0x0E01      	MOVLW       1
0x138A	0x6E01      	MOVWF       R1 
0x138C	0xF004EC95  	CALL        ___CC2DW, 0
0x1390	0x0E2C      	MOVLW       ?lstr82_FirmV_0_7_0
0x1392	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1394	0x0E04      	MOVLW       hi_addr(?lstr82_FirmV_0_7_0)
0x1396	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1398	0x0E10      	MOVLW       16
0x139A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x139C	0x0E00      	MOVLW       0
0x139E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x13A0	0xF000ECFC  	CALL        _memcpy, 0
0x13A4	0x0E01      	MOVLW       1
0x13A6	0x0101      	MOVLB       1
0x13A8	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1817 :: 		charValueToStr(ActionTimeDiff,LCDLine2+6);}
0x13AA	0xF4F8C210  	MOVFF       _ActionTimeDiff, FARG_charValueToStr_val
0x13AE	0x0E0A      	MOVLW       _LCDLine2+6
0x13B0	0x0104      	MOVLB       4
0x13B2	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x13B4	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x13B6	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x13B8	0xF005EC46  	CALL        _charValueToStr, 0
L_Menu0383:
;FirmV_0_7_0.c,1819 :: 		if(MenuPointer==11)
0x13BC	0x0100      	MOVLB       0
0x13BE	0x51ED      	MOVF        _MenuPointer, 0, 1
0x13C0	0x0A0B      	XORLW       11
0x13C2	0xE12D      	BNZ         L_Menu0384
;FirmV_0_7_0.c,1820 :: 		{memcpy(LCDLine1,"11 Auto-close T ",16);LCDUpdateFlag=1;
0x13C4	0x0EF3      	MOVLW       _LCDLine1
0x13C6	0x0105      	MOVLB       5
0x13C8	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x13CA	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x13CC	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x13CE	0x0EDC      	MOVLW       ?ICS?lstr83_FirmV_0_7_0
0x13D0	0x6EF6      	MOVWF       4086 
0x13D2	0x0E6E      	MOVLW       hi_addr(?ICS?lstr83_FirmV_0_7_0)
0x13D4	0x6EF7      	MOVWF       TBLPTRH 
0x13D6	0x0E00      	MOVLW       higher_addr(?ICS?lstr83_FirmV_0_7_0)
0x13D8	0x6EF8      	MOVWF       TBLPTRU 
0x13DA	0x0E3D      	MOVLW       ?lstr83_FirmV_0_7_0
0x13DC	0x6EE1      	MOVWF       FSR1L 
0x13DE	0x0E04      	MOVLW       hi_addr(?lstr83_FirmV_0_7_0)
0x13E0	0x6EE2      	MOVWF       FSR1H 
0x13E2	0x0E11      	MOVLW       17
0x13E4	0x6E00      	MOVWF       R0 
0x13E6	0x0E01      	MOVLW       1
0x13E8	0x6E01      	MOVWF       R1 
0x13EA	0xF004EC95  	CALL        ___CC2DW, 0
0x13EE	0x0E3D      	MOVLW       ?lstr83_FirmV_0_7_0
0x13F0	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x13F2	0x0E04      	MOVLW       hi_addr(?lstr83_FirmV_0_7_0)
0x13F4	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x13F6	0x0E10      	MOVLW       16
0x13F8	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x13FA	0x0E00      	MOVLW       0
0x13FC	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x13FE	0xF000ECFC  	CALL        _memcpy, 0
0x1402	0x0E01      	MOVLW       1
0x1404	0x0101      	MOVLB       1
0x1406	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1821 :: 		intValueToStr(AutoCloseTime,LCDLine2+4);}
0x1408	0xF4F8C211  	MOVFF       _AutoCloseTime, FARG_intValueToStr_val
0x140C	0xF4F9C212  	MOVFF       _AutoCloseTime+1, FARG_intValueToStr_val+1
0x1410	0x0E08      	MOVLW       _LCDLine2+4
0x1412	0x0104      	MOVLB       4
0x1414	0x6FFA      	MOVWF       FARG_intValueToStr_string, 1
0x1416	0x0E01      	MOVLW       hi_addr(_LCDLine2+4)
0x1418	0x6FFB      	MOVWF       FARG_intValueToStr_string+1, 1
0x141A	0xF005EC93  	CALL        _intValueToStr, 0
L_Menu0384:
;FirmV_0_7_0.c,1823 :: 		if(MenuPointer==12)
0x141E	0x0100      	MOVLB       0
0x1420	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1422	0x0A0C      	XORLW       12
0x1424	0xE122      	BNZ         L_Menu0385
;FirmV_0_7_0.c,1824 :: 		{memcpy(LCDLine1,"12 Factory Reset",16);LCDUpdateFlag=1;}
0x1426	0x0EF3      	MOVLW       _LCDLine1
0x1428	0x0105      	MOVLB       5
0x142A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x142C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x142E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1430	0x0EED      	MOVLW       ?ICS?lstr84_FirmV_0_7_0
0x1432	0x6EF6      	MOVWF       4086 
0x1434	0x0E6E      	MOVLW       hi_addr(?ICS?lstr84_FirmV_0_7_0)
0x1436	0x6EF7      	MOVWF       TBLPTRH 
0x1438	0x0E00      	MOVLW       higher_addr(?ICS?lstr84_FirmV_0_7_0)
0x143A	0x6EF8      	MOVWF       TBLPTRU 
0x143C	0x0E4E      	MOVLW       ?lstr84_FirmV_0_7_0
0x143E	0x6EE1      	MOVWF       FSR1L 
0x1440	0x0E04      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x1442	0x6EE2      	MOVWF       FSR1H 
0x1444	0x0E11      	MOVLW       17
0x1446	0x6E00      	MOVWF       R0 
0x1448	0x0E01      	MOVLW       1
0x144A	0x6E01      	MOVWF       R1 
0x144C	0xF004EC95  	CALL        ___CC2DW, 0
0x1450	0x0E4E      	MOVLW       ?lstr84_FirmV_0_7_0
0x1452	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1454	0x0E04      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x1456	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1458	0x0E10      	MOVLW       16
0x145A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x145C	0x0E00      	MOVLW       0
0x145E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1460	0xF000ECFC  	CALL        _memcpy, 0
0x1464	0x0E01      	MOVLW       1
0x1466	0x0101      	MOVLB       1
0x1468	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_Menu0385:
;FirmV_0_7_0.c,1826 :: 		if(MenuPointer==13)
0x146A	0x0100      	MOVLB       0
0x146C	0x51ED      	MOVF        _MenuPointer, 0, 1
0x146E	0x0A0D      	XORLW       13
0x1470	0xE169      	BNZ         L_Menu0386
;FirmV_0_7_0.c,1827 :: 		{memcpy(LCDLine1,"13 Open Photo En",16);LCDUpdateFlag=1;
0x1472	0x0EF3      	MOVLW       _LCDLine1
0x1474	0x0105      	MOVLB       5
0x1476	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1478	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x147A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x147C	0x0EFE      	MOVLW       ?ICS?lstr85_FirmV_0_7_0
0x147E	0x6EF6      	MOVWF       4086 
0x1480	0x0E6E      	MOVLW       hi_addr(?ICS?lstr85_FirmV_0_7_0)
0x1482	0x6EF7      	MOVWF       TBLPTRH 
0x1484	0x0E00      	MOVLW       higher_addr(?ICS?lstr85_FirmV_0_7_0)
0x1486	0x6EF8      	MOVWF       TBLPTRU 
0x1488	0x0E5F      	MOVLW       ?lstr85_FirmV_0_7_0
0x148A	0x6EE1      	MOVWF       FSR1L 
0x148C	0x0E04      	MOVLW       hi_addr(?lstr85_FirmV_0_7_0)
0x148E	0x6EE2      	MOVWF       FSR1H 
0x1490	0x0E11      	MOVLW       17
0x1492	0x6E00      	MOVWF       R0 
0x1494	0x0E01      	MOVLW       1
0x1496	0x6E01      	MOVWF       R1 
0x1498	0xF004EC95  	CALL        ___CC2DW, 0
0x149C	0x0E5F      	MOVLW       ?lstr85_FirmV_0_7_0
0x149E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x14A0	0x0E04      	MOVLW       hi_addr(?lstr85_FirmV_0_7_0)
0x14A2	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x14A4	0x0E10      	MOVLW       16
0x14A6	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x14A8	0x0E00      	MOVLW       0
0x14AA	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x14AC	0xF000ECFC  	CALL        _memcpy, 0
0x14B0	0x0E01      	MOVLW       1
0x14B2	0x0101      	MOVLB       1
0x14B4	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1828 :: 		if(OpenPhEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x14B6	0x0102      	MOVLB       2
0x14B8	0x510E      	MOVF        _OpenPhEnable, 0, 1
0x14BA	0x0A00      	XORLW       0
0x14BC	0xE121      	BNZ         L_Menu0387
0x14BE	0x0E0A      	MOVLW       _LCDLine2+6
0x14C0	0x0105      	MOVLB       5
0x14C2	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x14C4	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x14C6	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x14C8	0x0E4E      	MOVLW       78
0x14CA	0x0104      	MOVLB       4
0x14CC	0x6F70      	MOVWF       ?lstr86_FirmV_0_7_0, 1
0x14CE	0x0E6F      	MOVLW       111
0x14D0	0x6F71      	MOVWF       ?lstr86_FirmV_0_7_0+1, 1
0x14D2	0x0E20      	MOVLW       32
0x14D4	0x6F72      	MOVWF       ?lstr86_FirmV_0_7_0+2, 1
0x14D6	0x0E20      	MOVLW       32
0x14D8	0x6F73      	MOVWF       ?lstr86_FirmV_0_7_0+3, 1
0x14DA	0x0E20      	MOVLW       32
0x14DC	0x6F74      	MOVWF       ?lstr86_FirmV_0_7_0+4, 1
0x14DE	0x0E20      	MOVLW       32
0x14E0	0x6F75      	MOVWF       ?lstr86_FirmV_0_7_0+5, 1
0x14E2	0x0E20      	MOVLW       32
0x14E4	0x6F76      	MOVWF       ?lstr86_FirmV_0_7_0+6, 1
0x14E6	0x6B77      	CLRF        ?lstr86_FirmV_0_7_0+7, 1
0x14E8	0x0E70      	MOVLW       ?lstr86_FirmV_0_7_0
0x14EA	0x0105      	MOVLB       5
0x14EC	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x14EE	0x0E04      	MOVLW       hi_addr(?lstr86_FirmV_0_7_0)
0x14F0	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x14F2	0x0E07      	MOVLW       7
0x14F4	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x14F6	0x0E00      	MOVLW       0
0x14F8	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x14FA	0xF000ECFC  	CALL        _memcpy, 0
0x14FE	0xD022      	BRA         L_Menu0388
L_Menu0387:
0x1500	0x0105      	MOVLB       5
0x1502	0x0E0A      	MOVLW       _LCDLine2+6
0x1504	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1506	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1508	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x150A	0x0E59      	MOVLW       89
0x150C	0x0104      	MOVLB       4
0x150E	0x6F78      	MOVWF       ?lstr87_FirmV_0_7_0, 1
0x1510	0x0E65      	MOVLW       101
0x1512	0x6F79      	MOVWF       ?lstr87_FirmV_0_7_0+1, 1
0x1514	0x0E73      	MOVLW       115
0x1516	0x6F7A      	MOVWF       ?lstr87_FirmV_0_7_0+2, 1
0x1518	0x0E20      	MOVLW       32
0x151A	0x6F7B      	MOVWF       ?lstr87_FirmV_0_7_0+3, 1
0x151C	0x0E20      	MOVLW       32
0x151E	0x6F7C      	MOVWF       ?lstr87_FirmV_0_7_0+4, 1
0x1520	0x0E20      	MOVLW       32
0x1522	0x6F7D      	MOVWF       ?lstr87_FirmV_0_7_0+5, 1
0x1524	0x0E20      	MOVLW       32
0x1526	0x6F7E      	MOVWF       ?lstr87_FirmV_0_7_0+6, 1
0x1528	0x0E20      	MOVLW       32
0x152A	0x6F7F      	MOVWF       ?lstr87_FirmV_0_7_0+7, 1
0x152C	0x6B80      	CLRF        ?lstr87_FirmV_0_7_0+8, 1
0x152E	0x0E78      	MOVLW       ?lstr87_FirmV_0_7_0
0x1530	0x0105      	MOVLB       5
0x1532	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1534	0x0E04      	MOVLW       hi_addr(?lstr87_FirmV_0_7_0)
0x1536	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1538	0x0E08      	MOVLW       8
0x153A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x153C	0x0E00      	MOVLW       0
0x153E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1540	0xF000ECFC  	CALL        _memcpy, 0
L_Menu0388:
L_Menu0386:
;FirmV_0_7_0.c,1830 :: 		if(MenuPointer==14)
0x1544	0x0100      	MOVLB       0
0x1546	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1548	0x0A0E      	XORLW       14
0x154A	0xE169      	BNZ         L_Menu0389
;FirmV_0_7_0.c,1831 :: 		{memcpy(LCDLine1,"14 Limit Enable ",16);LCDUpdateFlag=1;
0x154C	0x0EF3      	MOVLW       _LCDLine1
0x154E	0x0105      	MOVLB       5
0x1550	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1552	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1554	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1556	0x0E20      	MOVLW       ?ICS?lstr88_FirmV_0_7_0
0x1558	0x6EF6      	MOVWF       4086 
0x155A	0x0E6F      	MOVLW       hi_addr(?ICS?lstr88_FirmV_0_7_0)
0x155C	0x6EF7      	MOVWF       TBLPTRH 
0x155E	0x0E00      	MOVLW       higher_addr(?ICS?lstr88_FirmV_0_7_0)
0x1560	0x6EF8      	MOVWF       TBLPTRU 
0x1562	0x0E81      	MOVLW       ?lstr88_FirmV_0_7_0
0x1564	0x6EE1      	MOVWF       FSR1L 
0x1566	0x0E04      	MOVLW       hi_addr(?lstr88_FirmV_0_7_0)
0x1568	0x6EE2      	MOVWF       FSR1H 
0x156A	0x0E11      	MOVLW       17
0x156C	0x6E00      	MOVWF       R0 
0x156E	0x0E01      	MOVLW       1
0x1570	0x6E01      	MOVWF       R1 
0x1572	0xF004EC95  	CALL        ___CC2DW, 0
0x1576	0x0E81      	MOVLW       ?lstr88_FirmV_0_7_0
0x1578	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x157A	0x0E04      	MOVLW       hi_addr(?lstr88_FirmV_0_7_0)
0x157C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x157E	0x0E10      	MOVLW       16
0x1580	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1582	0x0E00      	MOVLW       0
0x1584	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1586	0xF000ECFC  	CALL        _memcpy, 0
0x158A	0x0E01      	MOVLW       1
0x158C	0x0101      	MOVLB       1
0x158E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1832 :: 		if(LimiterEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x1590	0x0102      	MOVLB       2
0x1592	0x510F      	MOVF        _LimiterEnable, 0, 1
0x1594	0x0A00      	XORLW       0
0x1596	0xE121      	BNZ         L_Menu0390
0x1598	0x0E0A      	MOVLW       _LCDLine2+6
0x159A	0x0105      	MOVLB       5
0x159C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x159E	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x15A0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x15A2	0x0E4E      	MOVLW       78
0x15A4	0x0104      	MOVLB       4
0x15A6	0x6F92      	MOVWF       ?lstr89_FirmV_0_7_0, 1
0x15A8	0x0E6F      	MOVLW       111
0x15AA	0x6F93      	MOVWF       ?lstr89_FirmV_0_7_0+1, 1
0x15AC	0x0E20      	MOVLW       32
0x15AE	0x6F94      	MOVWF       ?lstr89_FirmV_0_7_0+2, 1
0x15B0	0x0E20      	MOVLW       32
0x15B2	0x6F95      	MOVWF       ?lstr89_FirmV_0_7_0+3, 1
0x15B4	0x0E20      	MOVLW       32
0x15B6	0x6F96      	MOVWF       ?lstr89_FirmV_0_7_0+4, 1
0x15B8	0x0E20      	MOVLW       32
0x15BA	0x6F97      	MOVWF       ?lstr89_FirmV_0_7_0+5, 1
0x15BC	0x0E20      	MOVLW       32
0x15BE	0x6F98      	MOVWF       ?lstr89_FirmV_0_7_0+6, 1
0x15C0	0x6B99      	CLRF        ?lstr89_FirmV_0_7_0+7, 1
0x15C2	0x0E92      	MOVLW       ?lstr89_FirmV_0_7_0
0x15C4	0x0105      	MOVLB       5
0x15C6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x15C8	0x0E04      	MOVLW       hi_addr(?lstr89_FirmV_0_7_0)
0x15CA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x15CC	0x0E07      	MOVLW       7
0x15CE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x15D0	0x0E00      	MOVLW       0
0x15D2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x15D4	0xF000ECFC  	CALL        _memcpy, 0
0x15D8	0xD022      	BRA         L_Menu0391
L_Menu0390:
0x15DA	0x0105      	MOVLB       5
0x15DC	0x0E0A      	MOVLW       _LCDLine2+6
0x15DE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x15E0	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x15E2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x15E4	0x0E59      	MOVLW       89
0x15E6	0x0104      	MOVLB       4
0x15E8	0x6F9A      	MOVWF       ?lstr90_FirmV_0_7_0, 1
0x15EA	0x0E65      	MOVLW       101
0x15EC	0x6F9B      	MOVWF       ?lstr90_FirmV_0_7_0+1, 1
0x15EE	0x0E73      	MOVLW       115
0x15F0	0x6F9C      	MOVWF       ?lstr90_FirmV_0_7_0+2, 1
0x15F2	0x0E20      	MOVLW       32
0x15F4	0x6F9D      	MOVWF       ?lstr90_FirmV_0_7_0+3, 1
0x15F6	0x0E20      	MOVLW       32
0x15F8	0x6F9E      	MOVWF       ?lstr90_FirmV_0_7_0+4, 1
0x15FA	0x0E20      	MOVLW       32
0x15FC	0x6F9F      	MOVWF       ?lstr90_FirmV_0_7_0+5, 1
0x15FE	0x0E20      	MOVLW       32
0x1600	0x6FA0      	MOVWF       ?lstr90_FirmV_0_7_0+6, 1
0x1602	0x0E20      	MOVLW       32
0x1604	0x6FA1      	MOVWF       ?lstr90_FirmV_0_7_0+7, 1
0x1606	0x6BA2      	CLRF        ?lstr90_FirmV_0_7_0+8, 1
0x1608	0x0E9A      	MOVLW       ?lstr90_FirmV_0_7_0
0x160A	0x0105      	MOVLB       5
0x160C	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x160E	0x0E04      	MOVLW       hi_addr(?lstr90_FirmV_0_7_0)
0x1610	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1612	0x0E08      	MOVLW       8
0x1614	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1616	0x0E00      	MOVLW       0
0x1618	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x161A	0xF000ECFC  	CALL        _memcpy, 0
L_Menu0391:
L_Menu0389:
;FirmV_0_7_0.c,1834 :: 		if(MenuPointer==15)
0x161E	0x0100      	MOVLB       0
0x1620	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1622	0x0A0F      	XORLW       15
0x1624	0xE168      	BNZ         L_Menu0392
;FirmV_0_7_0.c,1835 :: 		{memcpy(LCDLine1,"15 Lock Force   ",16);LCDUpdateFlag=1;
0x1626	0x0EF3      	MOVLW       _LCDLine1
0x1628	0x0105      	MOVLB       5
0x162A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x162C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x162E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1630	0x0E42      	MOVLW       ?ICS?lstr91_FirmV_0_7_0
0x1632	0x6EF6      	MOVWF       4086 
0x1634	0x0E6F      	MOVLW       hi_addr(?ICS?lstr91_FirmV_0_7_0)
0x1636	0x6EF7      	MOVWF       TBLPTRH 
0x1638	0x0E00      	MOVLW       higher_addr(?ICS?lstr91_FirmV_0_7_0)
0x163A	0x6EF8      	MOVWF       TBLPTRU 
0x163C	0x0EA3      	MOVLW       ?lstr91_FirmV_0_7_0
0x163E	0x6EE1      	MOVWF       FSR1L 
0x1640	0x0E04      	MOVLW       hi_addr(?lstr91_FirmV_0_7_0)
0x1642	0x6EE2      	MOVWF       FSR1H 
0x1644	0x0E11      	MOVLW       17
0x1646	0x6E00      	MOVWF       R0 
0x1648	0x0E01      	MOVLW       1
0x164A	0x6E01      	MOVWF       R1 
0x164C	0xF004EC95  	CALL        ___CC2DW, 0
0x1650	0x0EA3      	MOVLW       ?lstr91_FirmV_0_7_0
0x1652	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1654	0x0E04      	MOVLW       hi_addr(?lstr91_FirmV_0_7_0)
0x1656	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1658	0x0E10      	MOVLW       16
0x165A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x165C	0x0E00      	MOVLW       0
0x165E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1660	0xF000ECFC  	CALL        _memcpy, 0
0x1664	0x0E01      	MOVLW       1
0x1666	0x0101      	MOVLB       1
0x1668	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1836 :: 		if(LockForce==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x166A	0x515E      	MOVF        _LockForce, 0, 1
0x166C	0x0A00      	XORLW       0
0x166E	0xE121      	BNZ         L_Menu0393
0x1670	0x0E0A      	MOVLW       _LCDLine2+6
0x1672	0x0105      	MOVLB       5
0x1674	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1676	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x1678	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x167A	0x0E4E      	MOVLW       78
0x167C	0x0104      	MOVLB       4
0x167E	0x6FB4      	MOVWF       ?lstr92_FirmV_0_7_0, 1
0x1680	0x0E6F      	MOVLW       111
0x1682	0x6FB5      	MOVWF       ?lstr92_FirmV_0_7_0+1, 1
0x1684	0x0E20      	MOVLW       32
0x1686	0x6FB6      	MOVWF       ?lstr92_FirmV_0_7_0+2, 1
0x1688	0x0E20      	MOVLW       32
0x168A	0x6FB7      	MOVWF       ?lstr92_FirmV_0_7_0+3, 1
0x168C	0x0E20      	MOVLW       32
0x168E	0x6FB8      	MOVWF       ?lstr92_FirmV_0_7_0+4, 1
0x1690	0x0E20      	MOVLW       32
0x1692	0x6FB9      	MOVWF       ?lstr92_FirmV_0_7_0+5, 1
0x1694	0x0E20      	MOVLW       32
0x1696	0x6FBA      	MOVWF       ?lstr92_FirmV_0_7_0+6, 1
0x1698	0x6BBB      	CLRF        ?lstr92_FirmV_0_7_0+7, 1
0x169A	0x0EB4      	MOVLW       ?lstr92_FirmV_0_7_0
0x169C	0x0105      	MOVLB       5
0x169E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x16A0	0x0E04      	MOVLW       hi_addr(?lstr92_FirmV_0_7_0)
0x16A2	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x16A4	0x0E07      	MOVLW       7
0x16A6	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x16A8	0x0E00      	MOVLW       0
0x16AA	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x16AC	0xF000ECFC  	CALL        _memcpy, 0
0x16B0	0xD022      	BRA         L_Menu0394
L_Menu0393:
0x16B2	0x0105      	MOVLB       5
0x16B4	0x0E0A      	MOVLW       _LCDLine2+6
0x16B6	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x16B8	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x16BA	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x16BC	0x0E59      	MOVLW       89
0x16BE	0x0104      	MOVLB       4
0x16C0	0x6FBC      	MOVWF       ?lstr93_FirmV_0_7_0, 1
0x16C2	0x0E65      	MOVLW       101
0x16C4	0x6FBD      	MOVWF       ?lstr93_FirmV_0_7_0+1, 1
0x16C6	0x0E73      	MOVLW       115
0x16C8	0x6FBE      	MOVWF       ?lstr93_FirmV_0_7_0+2, 1
0x16CA	0x0E20      	MOVLW       32
0x16CC	0x6FBF      	MOVWF       ?lstr93_FirmV_0_7_0+3, 1
0x16CE	0x0E20      	MOVLW       32
0x16D0	0x6FC0      	MOVWF       ?lstr93_FirmV_0_7_0+4, 1
0x16D2	0x0E20      	MOVLW       32
0x16D4	0x6FC1      	MOVWF       ?lstr93_FirmV_0_7_0+5, 1
0x16D6	0x0E20      	MOVLW       32
0x16D8	0x6FC2      	MOVWF       ?lstr93_FirmV_0_7_0+6, 1
0x16DA	0x0E20      	MOVLW       32
0x16DC	0x6FC3      	MOVWF       ?lstr93_FirmV_0_7_0+7, 1
0x16DE	0x6BC4      	CLRF        ?lstr93_FirmV_0_7_0+8, 1
0x16E0	0x0EBC      	MOVLW       ?lstr93_FirmV_0_7_0
0x16E2	0x0105      	MOVLB       5
0x16E4	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x16E6	0x0E04      	MOVLW       hi_addr(?lstr93_FirmV_0_7_0)
0x16E8	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x16EA	0x0E08      	MOVLW       8
0x16EC	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x16EE	0x0E00      	MOVLW       0
0x16F0	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x16F2	0xF000ECFC  	CALL        _memcpy, 0
L_Menu0394:
L_Menu0392:
;FirmV_0_7_0.c,1838 :: 		if(MenuPointer==16)
0x16F6	0x0100      	MOVLB       0
0x16F8	0x51ED      	MOVF        _MenuPointer, 0, 1
0x16FA	0x0A10      	XORLW       16
0x16FC	0xE12B      	BNZ         L_Menu0395
;FirmV_0_7_0.c,1839 :: 		{memcpy(LCDLine1,"16 Au-Cl Pass   ",16);LCDUpdateFlag=1;
0x16FE	0x0EF3      	MOVLW       _LCDLine1
0x1700	0x0105      	MOVLB       5
0x1702	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1704	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1706	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1708	0x0E64      	MOVLW       ?ICS?lstr94_FirmV_0_7_0
0x170A	0x6EF6      	MOVWF       4086 
0x170C	0x0E6F      	MOVLW       hi_addr(?ICS?lstr94_FirmV_0_7_0)
0x170E	0x6EF7      	MOVWF       TBLPTRH 
0x1710	0x0E00      	MOVLW       higher_addr(?ICS?lstr94_FirmV_0_7_0)
0x1712	0x6EF8      	MOVWF       TBLPTRU 
0x1714	0x0EC5      	MOVLW       ?lstr94_FirmV_0_7_0
0x1716	0x6EE1      	MOVWF       FSR1L 
0x1718	0x0E04      	MOVLW       hi_addr(?lstr94_FirmV_0_7_0)
0x171A	0x6EE2      	MOVWF       FSR1H 
0x171C	0x0E11      	MOVLW       17
0x171E	0x6E00      	MOVWF       R0 
0x1720	0x0E01      	MOVLW       1
0x1722	0x6E01      	MOVWF       R1 
0x1724	0xF004EC95  	CALL        ___CC2DW, 0
0x1728	0x0EC5      	MOVLW       ?lstr94_FirmV_0_7_0
0x172A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x172C	0x0E04      	MOVLW       hi_addr(?lstr94_FirmV_0_7_0)
0x172E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1730	0x0E10      	MOVLW       16
0x1732	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1734	0x0E00      	MOVLW       0
0x1736	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1738	0xF000ECFC  	CALL        _memcpy, 0
0x173C	0x0E01      	MOVLW       1
0x173E	0x0101      	MOVLB       1
0x1740	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1840 :: 		charValueToStr(CloseAfterPass,LCDLine2+6);}
0x1742	0xF4F8C11E  	MOVFF       _CloseAfterPass, FARG_charValueToStr_val
0x1746	0x0E0A      	MOVLW       _LCDLine2+6
0x1748	0x0104      	MOVLB       4
0x174A	0x6FF9      	MOVWF       FARG_charValueToStr_string, 1
0x174C	0x0E01      	MOVLW       hi_addr(_LCDLine2+6)
0x174E	0x6FFA      	MOVWF       FARG_charValueToStr_string+1, 1
0x1750	0xF005EC46  	CALL        _charValueToStr, 0
L_Menu0395:
;FirmV_0_7_0.c,1842 :: 		if(MenuPointer==17)
0x1754	0x0100      	MOVLB       0
0x1756	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1758	0x0A11      	XORLW       17
0x175A	0xE122      	BNZ         L_Menu0396
;FirmV_0_7_0.c,1843 :: 		{memcpy(LCDLine1,"17 Save Changes ",16);LCDUpdateFlag=1;}
0x175C	0x0EF3      	MOVLW       _LCDLine1
0x175E	0x0105      	MOVLB       5
0x1760	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1762	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1764	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1766	0x0E75      	MOVLW       ?ICS?lstr95_FirmV_0_7_0
0x1768	0x6EF6      	MOVWF       4086 
0x176A	0x0E6F      	MOVLW       hi_addr(?ICS?lstr95_FirmV_0_7_0)
0x176C	0x6EF7      	MOVWF       TBLPTRH 
0x176E	0x0E00      	MOVLW       higher_addr(?ICS?lstr95_FirmV_0_7_0)
0x1770	0x6EF8      	MOVWF       TBLPTRU 
0x1772	0x0ED6      	MOVLW       ?lstr95_FirmV_0_7_0
0x1774	0x6EE1      	MOVWF       FSR1L 
0x1776	0x0E04      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x1778	0x6EE2      	MOVWF       FSR1H 
0x177A	0x0E11      	MOVLW       17
0x177C	0x6E00      	MOVWF       R0 
0x177E	0x0E01      	MOVLW       1
0x1780	0x6E01      	MOVWF       R1 
0x1782	0xF004EC95  	CALL        ___CC2DW, 0
0x1786	0x0ED6      	MOVLW       ?lstr95_FirmV_0_7_0
0x1788	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x178A	0x0E04      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x178C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x178E	0x0E10      	MOVLW       16
0x1790	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1792	0x0E00      	MOVLW       0
0x1794	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1796	0xF000ECFC  	CALL        _memcpy, 0
0x179A	0x0E01      	MOVLW       1
0x179C	0x0101      	MOVLB       1
0x179E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_Menu0396:
;FirmV_0_7_0.c,1845 :: 		if(MenuPointer==18)
0x17A0	0x0100      	MOVLB       0
0x17A2	0x51ED      	MOVF        _MenuPointer, 0, 1
0x17A4	0x0A12      	XORLW       18
0x17A6	0xE122      	BNZ         L_Menu0397
;FirmV_0_7_0.c,1846 :: 		{memcpy(LCDLine1,"18 Discard Exit ",16);LCDUpdateFlag=1;}
0x17A8	0x0EF3      	MOVLW       _LCDLine1
0x17AA	0x0105      	MOVLB       5
0x17AC	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x17AE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x17B0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x17B2	0x0E86      	MOVLW       ?ICS?lstr96_FirmV_0_7_0
0x17B4	0x6EF6      	MOVWF       4086 
0x17B6	0x0E6F      	MOVLW       hi_addr(?ICS?lstr96_FirmV_0_7_0)
0x17B8	0x6EF7      	MOVWF       TBLPTRH 
0x17BA	0x0E00      	MOVLW       higher_addr(?ICS?lstr96_FirmV_0_7_0)
0x17BC	0x6EF8      	MOVWF       TBLPTRU 
0x17BE	0x0EE7      	MOVLW       ?lstr96_FirmV_0_7_0
0x17C0	0x6EE1      	MOVWF       FSR1L 
0x17C2	0x0E04      	MOVLW       hi_addr(?lstr96_FirmV_0_7_0)
0x17C4	0x6EE2      	MOVWF       FSR1H 
0x17C6	0x0E11      	MOVLW       17
0x17C8	0x6E00      	MOVWF       R0 
0x17CA	0x0E01      	MOVLW       1
0x17CC	0x6E01      	MOVWF       R1 
0x17CE	0xF004EC95  	CALL        ___CC2DW, 0
0x17D2	0x0EE7      	MOVLW       ?lstr96_FirmV_0_7_0
0x17D4	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x17D6	0x0E04      	MOVLW       hi_addr(?lstr96_FirmV_0_7_0)
0x17D8	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x17DA	0x0E10      	MOVLW       16
0x17DC	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x17DE	0x0E00      	MOVLW       0
0x17E0	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x17E2	0xF000ECFC  	CALL        _memcpy, 0
0x17E6	0x0E01      	MOVLW       1
0x17E8	0x0101      	MOVLB       1
0x17EA	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_Menu0397:
;FirmV_0_7_0.c,1849 :: 		State=101;
0x17EC	0x0E65      	MOVLW       101
0x17EE	0x0100      	MOVLB       0
0x17F0	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,1850 :: 		}
0x17F2	0x0012      	RETURN      0
; end of _Menu0
_Logger:
;FirmV_0_7_0.c,333 :: 		void Logger(char* text)
;FirmV_0_7_0.c,336 :: 		longwordtostrwithzeros(ms500,time);
0x17F4	0xF4F8C0EE  	MOVFF       _ms500, FARG_LongWordToStrWithZeros_input
0x17F8	0xF4F9C0EF  	MOVFF       _ms500+1, FARG_LongWordToStrWithZeros_input+1
0x17FC	0xF4FAC0F0  	MOVFF       _ms500+2, FARG_LongWordToStrWithZeros_input+2
0x1800	0xF4FBC0F1  	MOVFF       _ms500+3, FARG_LongWordToStrWithZeros_input+3
0x1804	0x0E51      	MOVLW       Logger_time_L0
0x1806	0x0104      	MOVLB       4
0x1808	0x6FFC      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x180A	0x0E03      	MOVLW       hi_addr(Logger_time_L0)
0x180C	0x6FFD      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x180E	0xF003ECC7  	CALL        _LongWordToStrWithZeros, 0
;FirmV_0_7_0.c,337 :: 		uart_write_text(time);
0x1812	0x0E51      	MOVLW       Logger_time_L0
0x1814	0x6FF8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x1816	0x0E03      	MOVLW       hi_addr(Logger_time_L0)
0x1818	0x6FF9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x181A	0xF004EC6E  	CALL        _UART_Write_Text, 0
;FirmV_0_7_0.c,338 :: 		uart1_write_text(": ");
0x181E	0x0E3A      	MOVLW       58
0x1820	0x0103      	MOVLB       3
0x1822	0x6F5C      	MOVWF       ?lstr1_FirmV_0_7_0, 1
0x1824	0x0E20      	MOVLW       32
0x1826	0x6F5D      	MOVWF       ?lstr1_FirmV_0_7_0+1, 1
0x1828	0x6B5E      	CLRF        ?lstr1_FirmV_0_7_0+2, 1
0x182A	0x0E5C      	MOVLW       ?lstr1_FirmV_0_7_0
0x182C	0x0104      	MOVLB       4
0x182E	0x6FF8      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x1830	0x0E03      	MOVLW       hi_addr(?lstr1_FirmV_0_7_0)
0x1832	0x6FF9      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x1834	0xF004EC54  	CALL        _UART1_Write_Text, 0
;FirmV_0_7_0.c,339 :: 		uart1_write_text(text);
0x1838	0xF4F8C34F  	MOVFF       FARG_Logger_text, FARG_UART1_Write_Text_uart_text
0x183C	0xF4F9C350  	MOVFF       FARG_Logger_text+1, FARG_UART1_Write_Text_uart_text+1
0x1840	0xF004EC54  	CALL        _UART1_Write_Text, 0
;FirmV_0_7_0.c,340 :: 		uart1_write(10);
0x1844	0x0E0A      	MOVLW       10
0x1846	0x0105      	MOVLB       5
0x1848	0x6F0B      	MOVWF       FARG_UART1_Write_data_, 1
0x184A	0xF000ECB6  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,341 :: 		uart1_write(13);
0x184E	0x0E0D      	MOVLW       13
0x1850	0x0105      	MOVLB       5
0x1852	0x6F0B      	MOVWF       FARG_UART1_Write_data_, 1
0x1854	0xF000ECB6  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,342 :: 		}
0x1858	0x0012      	RETURN      0
; end of _Logger
_AutoLearnCalculator:
;FirmV_0_7_0.c,2200 :: 		void AutoLearnCalculator(Learn *raw)
;FirmV_0_7_0.c,2203 :: 		(*raw).D1OpenTime=(*raw).D1OpenTime+16;
0x185A	0x0E01      	MOVLW       1
0x185C	0x0103      	MOVLB       3
0x185E	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x1860	0x6E01      	MOVWF       R1 
0x1862	0x0E00      	MOVLW       0
0x1864	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1866	0x6E02      	MOVWF       R2 
0x1868	0xFFE9C001  	MOVFF       R1, FSR0L
0x186C	0xFFEAC002  	MOVFF       R2, FSR0H
0x1870	0x0E10      	MOVLW       16
0x1872	0x24EE      	ADDWF       POSTINC0, 0 
0x1874	0x6E00      	MOVWF       R0 
0x1876	0xFFE1C001  	MOVFF       R1, FSR1L
0x187A	0xFFE2C002  	MOVFF       R2, FSR1H
0x187E	0xFFE6C000  	MOVFF       R0, POSTINC1
;FirmV_0_7_0.c,2204 :: 		(*raw).D2OpenTime=(*raw).D2OpenTime+16;
0x1882	0x0E03      	MOVLW       3
0x1884	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x1886	0x6E01      	MOVWF       R1 
0x1888	0x0E00      	MOVLW       0
0x188A	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x188C	0x6E02      	MOVWF       R2 
0x188E	0xFFE9C001  	MOVFF       R1, FSR0L
0x1892	0xFFEAC002  	MOVFF       R2, FSR0H
0x1896	0x0E10      	MOVLW       16
0x1898	0x24EE      	ADDWF       POSTINC0, 0 
0x189A	0x6E00      	MOVWF       R0 
0x189C	0xFFE1C001  	MOVFF       R1, FSR1L
0x18A0	0xFFE2C002  	MOVFF       R2, FSR1H
0x18A4	0xFFE6C000  	MOVFF       R0, POSTINC1
;FirmV_0_7_0.c,2206 :: 		(*raw).D1OpenSoftStart=4;
0x18A8	0x0E04      	MOVLW       4
0x18AA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18AC	0x6EE1      	MOVWF       FSR1L 
0x18AE	0x0E00      	MOVLW       0
0x18B0	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x18B2	0x6EE2      	MOVWF       FSR1H 
0x18B4	0x0E04      	MOVLW       4
0x18B6	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2207 :: 		(*raw).D1CloseSoftStart=4;
0x18B8	0x0E06      	MOVLW       6
0x18BA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18BC	0x6EE1      	MOVWF       FSR1L 
0x18BE	0x0E00      	MOVLW       0
0x18C0	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x18C2	0x6EE2      	MOVWF       FSR1H 
0x18C4	0x0E04      	MOVLW       4
0x18C6	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2208 :: 		(*raw).D2OpenSoftStart=4;
0x18C8	0x0E08      	MOVLW       8
0x18CA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18CC	0x6EE1      	MOVWF       FSR1L 
0x18CE	0x0E00      	MOVLW       0
0x18D0	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x18D2	0x6EE2      	MOVWF       FSR1H 
0x18D4	0x0E04      	MOVLW       4
0x18D6	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2209 :: 		(*raw).D2CloseSoftStart=4;
0x18D8	0x0E0A      	MOVLW       10
0x18DA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18DC	0x6EE1      	MOVWF       FSR1L 
0x18DE	0x0E00      	MOVLW       0
0x18E0	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x18E2	0x6EE2      	MOVWF       FSR1H 
0x18E4	0x0E04      	MOVLW       4
0x18E6	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2211 :: 		(*raw).D1OpenSoftStop=10;
0x18E8	0x0E05      	MOVLW       5
0x18EA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18EC	0x6EE1      	MOVWF       FSR1L 
0x18EE	0x0E00      	MOVLW       0
0x18F0	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x18F2	0x6EE2      	MOVWF       FSR1H 
0x18F4	0x0E0A      	MOVLW       10
0x18F6	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2212 :: 		(*raw).D2OpenSoftStop=10;
0x18F8	0x0E09      	MOVLW       9
0x18FA	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x18FC	0x6EE1      	MOVWF       FSR1L 
0x18FE	0x0E00      	MOVLW       0
0x1900	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1902	0x6EE2      	MOVWF       FSR1H 
0x1904	0x0E0A      	MOVLW       10
0x1906	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2213 :: 		(*raw).D1CloseSoftStop=10;
0x1908	0x0E07      	MOVLW       7
0x190A	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x190C	0x6EE1      	MOVWF       FSR1L 
0x190E	0x0E00      	MOVLW       0
0x1910	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1912	0x6EE2      	MOVWF       FSR1H 
0x1914	0x0E0A      	MOVLW       10
0x1916	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2214 :: 		(*raw).D2CloseSoftStop=10;
0x1918	0x0E0B      	MOVLW       11
0x191A	0x254F      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x191C	0x6EE1      	MOVWF       FSR1L 
0x191E	0x0E00      	MOVLW       0
0x1920	0x2150      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1922	0x6EE2      	MOVWF       FSR1H 
0x1924	0x0E0A      	MOVLW       10
0x1926	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2216 :: 		}
0x1928	0x0012      	RETURN      0
; end of _AutoLearnCalculator
_ADC_Read:
;__Lib_ADC_A_C.c,41 :: 		
;__Lib_ADC_A_C.c,44 :: 		
0x192A	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_C.c,45 :: 		
0x192C	0x0EC0      	MOVLW       192
0x192E	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,46 :: 		
0x1930	0x8CC1      	BSF         ADCON1, 6 
;__Lib_ADC_A_C.c,48 :: 		
0x1932	0x8EC1      	BSF         ADCON1, 7 
;__Lib_ADC_A_C.c,49 :: 		
0x1934	0xF000C34F  	MOVFF       FARG_ADC_Read_channel, R0
0x1938	0x3600      	RLCF        R0, 1 
0x193A	0x9000      	BCF         R0, 0 
0x193C	0x3600      	RLCF        R0, 1 
0x193E	0x9000      	BCF         R0, 0 
0x1940	0x3600      	RLCF        R0, 1 
0x1942	0x9000      	BCF         R0, 0 
0x1944	0x5000      	MOVF        R0, 0 
0x1946	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,50 :: 		
0x1948	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_C.c,51 :: 		
0x194A	0xF004EC90  	CALL        _Delay_22us, 0
;__Lib_ADC_A_C.c,52 :: 		
0x194E	0x84C2      	BSF         ADCON0, 2 
;__Lib_ADC_A_C.c,53 :: 		
L_ADC_Read2:
0x1950	0xA4C2      	BTFSS       ADCON0, 2 
0x1952	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_C.c,54 :: 		
0x1954	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,56 :: 		
0x1956	0xF001CFC4  	MOVFF       ADRESH, R1
0x195A	0x6A00      	CLRF        R0 
;__Lib_ADC_A_C.c,57 :: 		
0x195C	0x50C3      	MOVF        ADRESL, 0 
0x195E	0x1200      	IORWF       R0, 1 
0x1960	0x0E00      	MOVLW       0
0x1962	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_C.c,58 :: 		
0x1964	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_C.c,60 :: 		
;__Lib_ADC_A_C.c,61 :: 		
L_end_ADC_Read:
0x1966	0x0012      	RETURN      0
; end of _ADC_Read
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x1968	0x0101      	MOVLB       1
0x196A	0x9146      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x196C	0xF4F8C34F  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x1970	0xF005EC04  	CALL        _Lcd_Cmd, 0
;__Lib_Lcd.c,54 :: 		
0x1974	0x8146      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x1976	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_SaveLearnData:
;FirmV_0_7_0.c,2228 :: 		void SaveLearnData(Learn *d,char DCount)
;FirmV_0_7_0.c,2230 :: 		Door1OpenTime=(*d).D1OpenTime;
0x1978	0x0E01      	MOVLW       1
0x197A	0x0103      	MOVLB       3
0x197C	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x197E	0x6EE9      	MOVWF       FSR0L 
0x1980	0x0E00      	MOVLW       0
0x1982	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1984	0x6EEA      	MOVWF       FSR0H 
0x1986	0xF216CFEE  	MOVFF       POSTINC0, _Door1OpenTime
;FirmV_0_7_0.c,2231 :: 		Door1CloseTime=(*d).D1CloseTime;
0x198A	0xFFE9C34F  	MOVFF       FARG_SaveLearnData_d, FSR0L
0x198E	0xFFEAC350  	MOVFF       FARG_SaveLearnData_d+1, FSR0H
0x1992	0xF215CFEE  	MOVFF       POSTINC0, _Door1CloseTime
;FirmV_0_7_0.c,2232 :: 		if(DCount==2)
0x1996	0x5151      	MOVF        FARG_SaveLearnData_DCount, 0, 1
0x1998	0x0A02      	XORLW       2
0x199A	0xA4D8      	BTFSS       STATUS, 2 
0x199C	0xD085      	BRA         L_SaveLearnData558
;FirmV_0_7_0.c,2234 :: 		Door2OpenTime=(*d).D2OpenTime;
0x199E	0x0E03      	MOVLW       3
0x19A0	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x19A2	0x6EE9      	MOVWF       FSR0L 
0x19A4	0x0E00      	MOVLW       0
0x19A6	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x19A8	0x6EEA      	MOVWF       FSR0H 
0x19AA	0xF213CFEE  	MOVFF       POSTINC0, _Door2OpenTime
;FirmV_0_7_0.c,2235 :: 		Door2CloseTime=(*d).D2CloseTime;
0x19AE	0x0E02      	MOVLW       2
0x19B0	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x19B2	0x6EE9      	MOVWF       FSR0L 
0x19B4	0x0E00      	MOVLW       0
0x19B6	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x19B8	0x6EEA      	MOVWF       FSR0H 
0x19BA	0xF214CFEE  	MOVFF       POSTINC0, _Door2CloseTime
;FirmV_0_7_0.c,2236 :: 		OpenSoftStartTime=((*d).D1OpenSoftStart+(*d).D2OpenSoftStart)/2;
0x19BE	0x0E04      	MOVLW       4
0x19C0	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x19C2	0x6EE9      	MOVWF       FSR0L 
0x19C4	0x0E00      	MOVLW       0
0x19C6	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x19C8	0x6EEA      	MOVWF       FSR0H 
0x19CA	0x0E08      	MOVLW       8
0x19CC	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x19CE	0x6ED9      	MOVWF       FSR2L 
0x19D0	0x0E00      	MOVLW       0
0x19D2	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x19D4	0x6EDA      	MOVWF       FSR2H 
0x19D6	0x50DE      	MOVF        POSTINC2, 0 
0x19D8	0x24EE      	ADDWF       POSTINC0, 0 
0x19DA	0x6E03      	MOVWF       R3 
0x19DC	0x6A04      	CLRF        R4 
0x19DE	0x0E00      	MOVLW       0
0x19E0	0x2204      	ADDWFC      R4, 1 
0x19E2	0xF000C003  	MOVFF       R3, R0
0x19E6	0xF001C004  	MOVFF       R4, R1
0x19EA	0x3201      	RRCF        R1, 1 
0x19EC	0x3200      	RRCF        R0, 1 
0x19EE	0x9E01      	BCF         R1, 7 
0x19F0	0xBC01      	BTFSC       R1, 6 
0x19F2	0x8E01      	BSF         R1, 7 
0x19F4	0xF21AC000  	MOVFF       R0, _OpenSoftStartTime
;FirmV_0_7_0.c,2237 :: 		OpenSoftStopTime=((*d).D1OpenSoftStop+(*d).D2OpenSoftStop)/2;
0x19F8	0x0E05      	MOVLW       5
0x19FA	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x19FC	0x6EE9      	MOVWF       FSR0L 
0x19FE	0x0E00      	MOVLW       0
0x1A00	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A02	0x6EEA      	MOVWF       FSR0H 
0x1A04	0x0E09      	MOVLW       9
0x1A06	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1A08	0x6ED9      	MOVWF       FSR2L 
0x1A0A	0x0E00      	MOVLW       0
0x1A0C	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A0E	0x6EDA      	MOVWF       FSR2H 
0x1A10	0x50DE      	MOVF        POSTINC2, 0 
0x1A12	0x24EE      	ADDWF       POSTINC0, 0 
0x1A14	0x6E03      	MOVWF       R3 
0x1A16	0x6A04      	CLRF        R4 
0x1A18	0x0E00      	MOVLW       0
0x1A1A	0x2204      	ADDWFC      R4, 1 
0x1A1C	0xF000C003  	MOVFF       R3, R0
0x1A20	0xF001C004  	MOVFF       R4, R1
0x1A24	0x3201      	RRCF        R1, 1 
0x1A26	0x3200      	RRCF        R0, 1 
0x1A28	0x9E01      	BCF         R1, 7 
0x1A2A	0xBC01      	BTFSC       R1, 6 
0x1A2C	0x8E01      	BSF         R1, 7 
0x1A2E	0xF219C000  	MOVFF       R0, _OpenSoftStopTime
;FirmV_0_7_0.c,2238 :: 		CloseSoftStartTime=((*d).D1CloseSoftStart+(*d).D2CloseSoftStart)/2;
0x1A32	0x0E06      	MOVLW       6
0x1A34	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1A36	0x6EE9      	MOVWF       FSR0L 
0x1A38	0x0E00      	MOVLW       0
0x1A3A	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A3C	0x6EEA      	MOVWF       FSR0H 
0x1A3E	0x0E0A      	MOVLW       10
0x1A40	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1A42	0x6ED9      	MOVWF       FSR2L 
0x1A44	0x0E00      	MOVLW       0
0x1A46	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A48	0x6EDA      	MOVWF       FSR2H 
0x1A4A	0x50DE      	MOVF        POSTINC2, 0 
0x1A4C	0x24EE      	ADDWF       POSTINC0, 0 
0x1A4E	0x6E03      	MOVWF       R3 
0x1A50	0x6A04      	CLRF        R4 
0x1A52	0x0E00      	MOVLW       0
0x1A54	0x2204      	ADDWFC      R4, 1 
0x1A56	0xF000C003  	MOVFF       R3, R0
0x1A5A	0xF001C004  	MOVFF       R4, R1
0x1A5E	0x3201      	RRCF        R1, 1 
0x1A60	0x3200      	RRCF        R0, 1 
0x1A62	0x9E01      	BCF         R1, 7 
0x1A64	0xBC01      	BTFSC       R1, 6 
0x1A66	0x8E01      	BSF         R1, 7 
0x1A68	0xF218C000  	MOVFF       R0, _CloseSoftStartTime
;FirmV_0_7_0.c,2239 :: 		CloseSoftStopTime=((*d).D1CloseSoftStop+(*d).D2CloseSoftStop)/2;
0x1A6C	0x0E07      	MOVLW       7
0x1A6E	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1A70	0x6EE9      	MOVWF       FSR0L 
0x1A72	0x0E00      	MOVLW       0
0x1A74	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A76	0x6EEA      	MOVWF       FSR0H 
0x1A78	0x0E0B      	MOVLW       11
0x1A7A	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1A7C	0x6ED9      	MOVWF       FSR2L 
0x1A7E	0x0E00      	MOVLW       0
0x1A80	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1A82	0x6EDA      	MOVWF       FSR2H 
0x1A84	0x50DE      	MOVF        POSTINC2, 0 
0x1A86	0x24EE      	ADDWF       POSTINC0, 0 
0x1A88	0x6E03      	MOVWF       R3 
0x1A8A	0x6A04      	CLRF        R4 
0x1A8C	0x0E00      	MOVLW       0
0x1A8E	0x2204      	ADDWFC      R4, 1 
0x1A90	0xF000C003  	MOVFF       R3, R0
0x1A94	0xF001C004  	MOVFF       R4, R1
0x1A98	0x3201      	RRCF        R1, 1 
0x1A9A	0x3200      	RRCF        R0, 1 
0x1A9C	0x9E01      	BCF         R1, 7 
0x1A9E	0xBC01      	BTFSC       R1, 6 
0x1AA0	0x8E01      	BSF         R1, 7 
0x1AA2	0xF217C000  	MOVFF       R0, _CloseSoftStopTime
;FirmV_0_7_0.c,2240 :: 		}
0x1AA6	0xD024      	BRA         L_SaveLearnData559
L_SaveLearnData558:
;FirmV_0_7_0.c,2243 :: 		Door2OpenTime=0;
0x1AA8	0x0102      	MOVLB       2
0x1AAA	0x6B13      	CLRF        _Door2OpenTime, 1
;FirmV_0_7_0.c,2244 :: 		Door2CloseTime=0;
0x1AAC	0x6B14      	CLRF        _Door2CloseTime, 1
;FirmV_0_7_0.c,2245 :: 		OpenSoftStartTime=(*d).D1OpenSoftStart;
0x1AAE	0x0E04      	MOVLW       4
0x1AB0	0x0103      	MOVLB       3
0x1AB2	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1AB4	0x6EE9      	MOVWF       FSR0L 
0x1AB6	0x0E00      	MOVLW       0
0x1AB8	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1ABA	0x6EEA      	MOVWF       FSR0H 
0x1ABC	0xF21ACFEE  	MOVFF       POSTINC0, _OpenSoftStartTime
;FirmV_0_7_0.c,2246 :: 		OpenSoftStopTime=(*d).D1OpenSoftStop;
0x1AC0	0x0E05      	MOVLW       5
0x1AC2	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1AC4	0x6EE9      	MOVWF       FSR0L 
0x1AC6	0x0E00      	MOVLW       0
0x1AC8	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1ACA	0x6EEA      	MOVWF       FSR0H 
0x1ACC	0xF219CFEE  	MOVFF       POSTINC0, _OpenSoftStopTime
;FirmV_0_7_0.c,2247 :: 		CloseSoftStartTime=(*d).D1CloseSoftStart;
0x1AD0	0x0E06      	MOVLW       6
0x1AD2	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1AD4	0x6EE9      	MOVWF       FSR0L 
0x1AD6	0x0E00      	MOVLW       0
0x1AD8	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1ADA	0x6EEA      	MOVWF       FSR0H 
0x1ADC	0xF218CFEE  	MOVFF       POSTINC0, _CloseSoftStartTime
;FirmV_0_7_0.c,2248 :: 		CloseSoftStopTime=(*d).D1CloseSoftStop;
0x1AE0	0x0E07      	MOVLW       7
0x1AE2	0x254F      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1AE4	0x6EE9      	MOVWF       FSR0L 
0x1AE6	0x0E00      	MOVLW       0
0x1AE8	0x2150      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1AEA	0x6EEA      	MOVWF       FSR0H 
0x1AEC	0xF217CFEE  	MOVFF       POSTINC0, _CloseSoftStopTime
;FirmV_0_7_0.c,2249 :: 		}
L_SaveLearnData559:
;FirmV_0_7_0.c,2251 :: 		SaveConfigs();
0x1AF0	0xF004EC9D  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2252 :: 		}
0x1AF4	0x0012      	RETURN      0
; end of _SaveLearnData
_AddTask:
;FirmV_0_7_0.c,1276 :: 		void AddTask(unsigned long OccTime,char tcode)
;FirmV_0_7_0.c,1279 :: 		for(i=0;i<20;i++)
0x1AF6	0x0103      	MOVLB       3
0x1AF8	0x6B54      	CLRF        AddTask_i_L0, 1
L_AddTask280:
0x1AFA	0x0E14      	MOVLW       20
0x1AFC	0x5D54      	SUBWF       AddTask_i_L0, 0, 1
0x1AFE	0xE272      	BC          L_AddTask281
;FirmV_0_7_0.c,1280 :: 		if(Tasks[i].Expired==1)
0x1B00	0xF000C354  	MOVFF       AddTask_i_L0, R0
0x1B04	0x0E00      	MOVLW       0
0x1B06	0x6E01      	MOVWF       R1 
0x1B08	0x0E07      	MOVLW       7
0x1B0A	0x6E04      	MOVWF       R4 
0x1B0C	0x0E00      	MOVLW       0
0x1B0E	0x6E05      	MOVWF       R5 
0x1B10	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x1B14	0x0E82      	MOVLW       _Tasks
0x1B16	0x2600      	ADDWF       R0, 1 
0x1B18	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1B1A	0x2201      	ADDWFC      R1, 1 
0x1B1C	0x0E05      	MOVLW       5
0x1B1E	0x2400      	ADDWF       R0, 0 
0x1B20	0x6EE9      	MOVWF       FSR0L 
0x1B22	0x0E00      	MOVLW       0
0x1B24	0x2001      	ADDWFC      R1, 0 
0x1B26	0x6EEA      	MOVWF       FSR0H 
0x1B28	0x50EE      	MOVF        POSTINC0, 0 
0x1B2A	0x0A01      	XORLW       1
0x1B2C	0xE159      	BNZ         L_AddTask283
;FirmV_0_7_0.c,1282 :: 		Tasks[i].TaskCode=tcode;
0x1B2E	0xF000C354  	MOVFF       AddTask_i_L0, R0
0x1B32	0x0E00      	MOVLW       0
0x1B34	0x6E01      	MOVWF       R1 
0x1B36	0x0E07      	MOVLW       7
0x1B38	0x6E04      	MOVWF       R4 
0x1B3A	0x0E00      	MOVLW       0
0x1B3C	0x6E05      	MOVWF       R5 
0x1B3E	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x1B42	0x0E82      	MOVLW       _Tasks
0x1B44	0x2400      	ADDWF       R0, 0 
0x1B46	0x6EE1      	MOVWF       FSR1L 
0x1B48	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1B4A	0x2001      	ADDWFC      R1, 0 
0x1B4C	0x6EE2      	MOVWF       FSR1H 
0x1B4E	0xFFE6C353  	MOVFF       FARG_AddTask_tcode, POSTINC1
;FirmV_0_7_0.c,1283 :: 		Tasks[i].Time=OccTime;
0x1B52	0xF000C354  	MOVFF       AddTask_i_L0, R0
0x1B56	0x0E00      	MOVLW       0
0x1B58	0x6E01      	MOVWF       R1 
0x1B5A	0x0E07      	MOVLW       7
0x1B5C	0x6E04      	MOVWF       R4 
0x1B5E	0x0E00      	MOVLW       0
0x1B60	0x6E05      	MOVWF       R5 
0x1B62	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x1B66	0x0E82      	MOVLW       _Tasks
0x1B68	0x2600      	ADDWF       R0, 1 
0x1B6A	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1B6C	0x2201      	ADDWFC      R1, 1 
0x1B6E	0x0E01      	MOVLW       1
0x1B70	0x2400      	ADDWF       R0, 0 
0x1B72	0x6EE1      	MOVWF       FSR1L 
0x1B74	0x0E00      	MOVLW       0
0x1B76	0x2001      	ADDWFC      R1, 0 
0x1B78	0x6EE2      	MOVWF       FSR1H 
0x1B7A	0xFFE6C34F  	MOVFF       FARG_AddTask_OccTime, POSTINC1
0x1B7E	0xFFE6C350  	MOVFF       FARG_AddTask_OccTime+1, POSTINC1
0x1B82	0xFFE6C351  	MOVFF       FARG_AddTask_OccTime+2, POSTINC1
0x1B86	0xFFE6C352  	MOVFF       FARG_AddTask_OccTime+3, POSTINC1
;FirmV_0_7_0.c,1284 :: 		Tasks[i].Expired=0;
0x1B8A	0xF000C354  	MOVFF       AddTask_i_L0, R0
0x1B8E	0x0E00      	MOVLW       0
0x1B90	0x6E01      	MOVWF       R1 
0x1B92	0x0E07      	MOVLW       7
0x1B94	0x6E04      	MOVWF       R4 
0x1B96	0x0E00      	MOVLW       0
0x1B98	0x6E05      	MOVWF       R5 
0x1B9A	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x1B9E	0x0E82      	MOVLW       _Tasks
0x1BA0	0x2600      	ADDWF       R0, 1 
0x1BA2	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1BA4	0x2201      	ADDWFC      R1, 1 
0x1BA6	0x0E05      	MOVLW       5
0x1BA8	0x2400      	ADDWF       R0, 0 
0x1BAA	0x6EE1      	MOVWF       FSR1L 
0x1BAC	0x0E00      	MOVLW       0
0x1BAE	0x2001      	ADDWFC      R1, 0 
0x1BB0	0x6EE2      	MOVWF       FSR1H 
0x1BB2	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1285 :: 		Tasks[i].Fired=0;
0x1BB4	0xF000C354  	MOVFF       AddTask_i_L0, R0
0x1BB8	0x0E00      	MOVLW       0
0x1BBA	0x6E01      	MOVWF       R1 
0x1BBC	0x0E07      	MOVLW       7
0x1BBE	0x6E04      	MOVWF       R4 
0x1BC0	0x0E00      	MOVLW       0
0x1BC2	0x6E05      	MOVWF       R5 
0x1BC4	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x1BC8	0x0E82      	MOVLW       _Tasks
0x1BCA	0x2600      	ADDWF       R0, 1 
0x1BCC	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1BCE	0x2201      	ADDWFC      R1, 1 
0x1BD0	0x0E06      	MOVLW       6
0x1BD2	0x2400      	ADDWF       R0, 0 
0x1BD4	0x6EE1      	MOVWF       FSR1L 
0x1BD6	0x0E00      	MOVLW       0
0x1BD8	0x2001      	ADDWFC      R1, 0 
0x1BDA	0x6EE2      	MOVWF       FSR1H 
0x1BDC	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1286 :: 		break;
0x1BDE	0xD002      	BRA         L_AddTask281
;FirmV_0_7_0.c,1287 :: 		}
L_AddTask283:
;FirmV_0_7_0.c,1279 :: 		for(i=0;i<20;i++)
0x1BE0	0x2B54      	INCF        AddTask_i_L0, 1, 1
;FirmV_0_7_0.c,1287 :: 		}
0x1BE2	0xD78B      	BRA         L_AddTask280
L_AddTask281:
;FirmV_0_7_0.c,1288 :: 		}
0x1BE4	0x0012      	RETURN      0
; end of _AddTask
_GetLimitSwitchState:
;FirmV_0_7_0.c,1399 :: 		char GetLimitSwitchState()
;FirmV_0_7_0.c,1401 :: 		if((Limit1==0)||(Limit2==0))
0x1BE6	0xA283      	BTFSS       PORTD, 1 
0x1BE8	0xD003      	BRA         L__GetLimitSwitchState681
0x1BEA	0xA483      	BTFSS       PORTD, 2 
0x1BEC	0xD001      	BRA         L__GetLimitSwitchState681
0x1BEE	0xD003      	BRA         L_GetLimitSwitchState325
L__GetLimitSwitchState681:
;FirmV_0_7_0.c,1402 :: 		return 1;
0x1BF0	0x0E01      	MOVLW       1
0x1BF2	0x6E00      	MOVWF       R0 
0x1BF4	0x0012      	RETURN      0
L_GetLimitSwitchState325:
;FirmV_0_7_0.c,1404 :: 		return 0;
0x1BF6	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1405 :: 		}
0x1BF8	0x0012      	RETURN      0
; end of _GetLimitSwitchState
_Menu2:
;FirmV_0_7_0.c,1888 :: 		void Menu2()
;FirmV_0_7_0.c,1891 :: 		LCDFlash=1;
0x1BFA	0x0E01      	MOVLW       1
0x1BFC	0x0101      	MOVLB       1
0x1BFE	0x6F1B      	MOVWF       _LCDFlash, 1
;FirmV_0_7_0.c,1893 :: 		if(Events.Keys.b1==1)
0x1C00	0xA371      	BTFSS       _Events, 1, 1
0x1C02	0xD017      	BRA         L_Menu2405
;FirmV_0_7_0.c,1895 :: 		LCDFlash=0;LCDFlashFlag=0;State=101;
0x1C04	0x6B1B      	CLRF        _LCDFlash, 1
0x1C06	0x6B19      	CLRF        _LCDFlashFlag, 1
0x1C08	0x0E65      	MOVLW       101
0x1C0A	0x0100      	MOVLB       0
0x1C0C	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,1896 :: 		if(MenuPointer==0)
0x1C0E	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1C10	0x0A00      	XORLW       0
0x1C12	0xE10F      	BNZ         L_Menu2406
;FirmV_0_7_0.c,1898 :: 		LearnPhase=0;
0x1C14	0x0101      	MOVLB       1
0x1C16	0x6B63      	CLRF        _LearnPhase, 1
;FirmV_0_7_0.c,1899 :: 		if(LearningMode==0)
0x1C18	0x511A      	MOVF        _LearningMode, 0, 1
0x1C1A	0x0A00      	XORLW       0
0x1C1C	0xE103      	BNZ         L_Menu2407
;FirmV_0_7_0.c,1900 :: 		State=200;
0x1C1E	0x0EC8      	MOVLW       200
0x1C20	0x0100      	MOVLB       0
0x1C22	0x6FF2      	MOVWF       _State, 1
L_Menu2407:
;FirmV_0_7_0.c,1901 :: 		if(LearningMode==1)
0x1C24	0x0101      	MOVLB       1
0x1C26	0x511A      	MOVF        _LearningMode, 0, 1
0x1C28	0x0A01      	XORLW       1
0x1C2A	0xE103      	BNZ         L_Menu2408
;FirmV_0_7_0.c,1902 :: 		State=201;
0x1C2C	0x0EC9      	MOVLW       201
0x1C2E	0x0100      	MOVLB       0
0x1C30	0x6FF2      	MOVWF       _State, 1
L_Menu2408:
;FirmV_0_7_0.c,1903 :: 		}
L_Menu2406:
;FirmV_0_7_0.c,1904 :: 		}
L_Menu2405:
0x1C32	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1907 :: 		if(MenuPointer==0)
0x1C34	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1C36	0x0A00      	XORLW       0
0x1C38	0xE116      	BNZ         L_Menu2409
;FirmV_0_7_0.c,1908 :: 		{ if((Events.Keys.b0==1)&&(LearningMode>0))
0x1C3A	0x0101      	MOVLB       1
0x1C3C	0xA171      	BTFSS       _Events, 0, 1
0x1C3E	0xD008      	BRA         L_Menu2412
0x1C40	0x511A      	MOVF        _LearningMode, 0, 1
0x1C42	0x0800      	SUBLW       0
0x1C44	0xE205      	BC          L_Menu2412
L__Menu2716:
;FirmV_0_7_0.c,1909 :: 		{LearningMode=LearningMode-1;Menu0();State=102;}
0x1C46	0x071A      	DECF        _LearningMode, 1, 1
0x1C48	0xF007EC88  	CALL        _Menu0, 0
0x1C4C	0x0E66      	MOVLW       102
0x1C4E	0x6FF2      	MOVWF       _State, 1
L_Menu2412:
;FirmV_0_7_0.c,1910 :: 		if((Events.Keys.b2==1)&&(LearningMode<1))
0x1C50	0x0101      	MOVLB       1
0x1C52	0xA571      	BTFSS       _Events, 2, 1
0x1C54	0xD008      	BRA         L_Menu2415
0x1C56	0x0E01      	MOVLW       1
0x1C58	0x5D1A      	SUBWF       _LearningMode, 0, 1
0x1C5A	0xE205      	BC          L_Menu2415
L__Menu2715:
;FirmV_0_7_0.c,1911 :: 		{LearningMode=LearningMode+1;Menu0();State=102;}
0x1C5C	0x2B1A      	INCF        _LearningMode, 1, 1
0x1C5E	0xF007EC88  	CALL        _Menu0, 0
0x1C62	0x0E66      	MOVLW       102
0x1C64	0x6FF2      	MOVWF       _State, 1
L_Menu2415:
;FirmV_0_7_0.c,1912 :: 		}
L_Menu2409:
0x1C66	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1916 :: 		if(MenuPointer==1)
0x1C68	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1C6A	0x0A01      	XORLW       1
0x1C6C	0xE118      	BNZ         L_Menu2416
;FirmV_0_7_0.c,1917 :: 		{ if((Events.Keys.b0==1)&&(Door1OpenTime>0))
0x1C6E	0x0101      	MOVLB       1
0x1C70	0xA171      	BTFSS       _Events, 0, 1
0x1C72	0xD009      	BRA         L_Menu2419
0x1C74	0x0102      	MOVLB       2
0x1C76	0x5116      	MOVF        _Door1OpenTime, 0, 1
0x1C78	0x0800      	SUBLW       0
0x1C7A	0xE205      	BC          L_Menu2419
L__Menu2714:
;FirmV_0_7_0.c,1918 :: 		{Door1OpenTime=Door1OpenTime-1;Menu0();State=102;}
0x1C7C	0x0716      	DECF        _Door1OpenTime, 1, 1
0x1C7E	0xF007EC88  	CALL        _Menu0, 0
0x1C82	0x0E66      	MOVLW       102
0x1C84	0x6FF2      	MOVWF       _State, 1
L_Menu2419:
;FirmV_0_7_0.c,1919 :: 		if((Events.Keys.b2==1)&&(Door1OpenTime<255))
0x1C86	0x0101      	MOVLB       1
0x1C88	0xA571      	BTFSS       _Events, 2, 1
0x1C8A	0xD009      	BRA         L_Menu2422
0x1C8C	0x0EFF      	MOVLW       255
0x1C8E	0x0102      	MOVLB       2
0x1C90	0x5D16      	SUBWF       _Door1OpenTime, 0, 1
0x1C92	0xE205      	BC          L_Menu2422
L__Menu2713:
;FirmV_0_7_0.c,1920 :: 		{Door1OpenTime=Door1OpenTime+1;Menu0();State=102;}
0x1C94	0x2B16      	INCF        _Door1OpenTime, 1, 1
0x1C96	0xF007EC88  	CALL        _Menu0, 0
0x1C9A	0x0E66      	MOVLW       102
0x1C9C	0x6FF2      	MOVWF       _State, 1
L_Menu2422:
;FirmV_0_7_0.c,1921 :: 		}
L_Menu2416:
0x1C9E	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1925 :: 		if(MenuPointer==2)
0x1CA0	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1CA2	0x0A02      	XORLW       2
0x1CA4	0xE118      	BNZ         L_Menu2423
;FirmV_0_7_0.c,1926 :: 		{ if((Events.Keys.b0==1)&&(Door2OpenTime>0))
0x1CA6	0x0101      	MOVLB       1
0x1CA8	0xA171      	BTFSS       _Events, 0, 1
0x1CAA	0xD009      	BRA         L_Menu2426
0x1CAC	0x0102      	MOVLB       2
0x1CAE	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x1CB0	0x0800      	SUBLW       0
0x1CB2	0xE205      	BC          L_Menu2426
L__Menu2712:
;FirmV_0_7_0.c,1927 :: 		{Door2OpenTime=Door2OpenTime-1;Menu0();State=102;}
0x1CB4	0x0713      	DECF        _Door2OpenTime, 1, 1
0x1CB6	0xF007EC88  	CALL        _Menu0, 0
0x1CBA	0x0E66      	MOVLW       102
0x1CBC	0x6FF2      	MOVWF       _State, 1
L_Menu2426:
;FirmV_0_7_0.c,1928 :: 		if((Events.Keys.b2==1)&&(Door2OpenTime<255))
0x1CBE	0x0101      	MOVLB       1
0x1CC0	0xA571      	BTFSS       _Events, 2, 1
0x1CC2	0xD009      	BRA         L_Menu2429
0x1CC4	0x0EFF      	MOVLW       255
0x1CC6	0x0102      	MOVLB       2
0x1CC8	0x5D13      	SUBWF       _Door2OpenTime, 0, 1
0x1CCA	0xE205      	BC          L_Menu2429
L__Menu2711:
;FirmV_0_7_0.c,1929 :: 		{Door2OpenTime=Door2OpenTime+1;Menu0();State=102;}
0x1CCC	0x2B13      	INCF        _Door2OpenTime, 1, 1
0x1CCE	0xF007EC88  	CALL        _Menu0, 0
0x1CD2	0x0E66      	MOVLW       102
0x1CD4	0x6FF2      	MOVWF       _State, 1
L_Menu2429:
;FirmV_0_7_0.c,1930 :: 		}
L_Menu2423:
0x1CD6	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1933 :: 		if(MenuPointer==3)
0x1CD8	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1CDA	0x0A03      	XORLW       3
0x1CDC	0xE118      	BNZ         L_Menu2430
;FirmV_0_7_0.c,1934 :: 		{ if((Events.Keys.b0==1)&&(Door1CloseTime>0))
0x1CDE	0x0101      	MOVLB       1
0x1CE0	0xA171      	BTFSS       _Events, 0, 1
0x1CE2	0xD009      	BRA         L_Menu2433
0x1CE4	0x0102      	MOVLB       2
0x1CE6	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x1CE8	0x0800      	SUBLW       0
0x1CEA	0xE205      	BC          L_Menu2433
L__Menu2710:
;FirmV_0_7_0.c,1935 :: 		{Door1CloseTime=Door1CloseTime-1;Menu0();State=102;}
0x1CEC	0x0715      	DECF        _Door1CloseTime, 1, 1
0x1CEE	0xF007EC88  	CALL        _Menu0, 0
0x1CF2	0x0E66      	MOVLW       102
0x1CF4	0x6FF2      	MOVWF       _State, 1
L_Menu2433:
;FirmV_0_7_0.c,1936 :: 		if((Events.Keys.b2==1)&&(Door1CloseTime<255))
0x1CF6	0x0101      	MOVLB       1
0x1CF8	0xA571      	BTFSS       _Events, 2, 1
0x1CFA	0xD009      	BRA         L_Menu2436
0x1CFC	0x0EFF      	MOVLW       255
0x1CFE	0x0102      	MOVLB       2
0x1D00	0x5D15      	SUBWF       _Door1CloseTime, 0, 1
0x1D02	0xE205      	BC          L_Menu2436
L__Menu2709:
;FirmV_0_7_0.c,1937 :: 		{Door1CloseTime=Door1CloseTime+1;Menu0();State=102;}
0x1D04	0x2B15      	INCF        _Door1CloseTime, 1, 1
0x1D06	0xF007EC88  	CALL        _Menu0, 0
0x1D0A	0x0E66      	MOVLW       102
0x1D0C	0x6FF2      	MOVWF       _State, 1
L_Menu2436:
;FirmV_0_7_0.c,1938 :: 		}
L_Menu2430:
0x1D0E	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1941 :: 		if(MenuPointer==4)
0x1D10	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1D12	0x0A04      	XORLW       4
0x1D14	0xE118      	BNZ         L_Menu2437
;FirmV_0_7_0.c,1942 :: 		{ if((Events.Keys.b0==1)&&(Door2CloseTime>0))
0x1D16	0x0101      	MOVLB       1
0x1D18	0xA171      	BTFSS       _Events, 0, 1
0x1D1A	0xD009      	BRA         L_Menu2440
0x1D1C	0x0102      	MOVLB       2
0x1D1E	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x1D20	0x0800      	SUBLW       0
0x1D22	0xE205      	BC          L_Menu2440
L__Menu2708:
;FirmV_0_7_0.c,1943 :: 		{Door2CloseTime=Door2CloseTime-1;Menu0();State=102;}
0x1D24	0x0714      	DECF        _Door2CloseTime, 1, 1
0x1D26	0xF007EC88  	CALL        _Menu0, 0
0x1D2A	0x0E66      	MOVLW       102
0x1D2C	0x6FF2      	MOVWF       _State, 1
L_Menu2440:
;FirmV_0_7_0.c,1944 :: 		if((Events.Keys.b2==1)&&(Door2CloseTime<255))
0x1D2E	0x0101      	MOVLB       1
0x1D30	0xA571      	BTFSS       _Events, 2, 1
0x1D32	0xD009      	BRA         L_Menu2443
0x1D34	0x0EFF      	MOVLW       255
0x1D36	0x0102      	MOVLB       2
0x1D38	0x5D14      	SUBWF       _Door2CloseTime, 0, 1
0x1D3A	0xE205      	BC          L_Menu2443
L__Menu2707:
;FirmV_0_7_0.c,1945 :: 		{Door2CloseTime=Door2CloseTime+1;Menu0();State=102;}
0x1D3C	0x2B14      	INCF        _Door2CloseTime, 1, 1
0x1D3E	0xF007EC88  	CALL        _Menu0, 0
0x1D42	0x0E66      	MOVLW       102
0x1D44	0x6FF2      	MOVWF       _State, 1
L_Menu2443:
;FirmV_0_7_0.c,1946 :: 		}
L_Menu2437:
0x1D46	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1950 :: 		if(MenuPointer==5)
0x1D48	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1D4A	0x0A05      	XORLW       5
0x1D4C	0xE118      	BNZ         L_Menu2444
;FirmV_0_7_0.c,1951 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStartTime>0))
0x1D4E	0x0101      	MOVLB       1
0x1D50	0xA171      	BTFSS       _Events, 0, 1
0x1D52	0xD009      	BRA         L_Menu2447
0x1D54	0x0102      	MOVLB       2
0x1D56	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x1D58	0x0800      	SUBLW       0
0x1D5A	0xE205      	BC          L_Menu2447
L__Menu2706:
;FirmV_0_7_0.c,1952 :: 		{OpenSoftStartTime=OpenSoftStartTime-1;Menu0();State=102;}
0x1D5C	0x071A      	DECF        _OpenSoftStartTime, 1, 1
0x1D5E	0xF007EC88  	CALL        _Menu0, 0
0x1D62	0x0E66      	MOVLW       102
0x1D64	0x6FF2      	MOVWF       _State, 1
L_Menu2447:
;FirmV_0_7_0.c,1953 :: 		if((Events.Keys.b2==1)&&(OpenSoftStartTime<255))
0x1D66	0x0101      	MOVLB       1
0x1D68	0xA571      	BTFSS       _Events, 2, 1
0x1D6A	0xD009      	BRA         L_Menu2450
0x1D6C	0x0EFF      	MOVLW       255
0x1D6E	0x0102      	MOVLB       2
0x1D70	0x5D1A      	SUBWF       _OpenSoftStartTime, 0, 1
0x1D72	0xE205      	BC          L_Menu2450
L__Menu2705:
;FirmV_0_7_0.c,1954 :: 		{OpenSoftStartTime=OpenSoftStartTime+1;Menu0();State=102;}
0x1D74	0x2B1A      	INCF        _OpenSoftStartTime, 1, 1
0x1D76	0xF007EC88  	CALL        _Menu0, 0
0x1D7A	0x0E66      	MOVLW       102
0x1D7C	0x6FF2      	MOVWF       _State, 1
L_Menu2450:
;FirmV_0_7_0.c,1955 :: 		}
L_Menu2444:
0x1D7E	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1958 :: 		if(MenuPointer==6)
0x1D80	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1D82	0x0A06      	XORLW       6
0x1D84	0xE118      	BNZ         L_Menu2451
;FirmV_0_7_0.c,1959 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStopTime>0))
0x1D86	0x0101      	MOVLB       1
0x1D88	0xA171      	BTFSS       _Events, 0, 1
0x1D8A	0xD009      	BRA         L_Menu2454
0x1D8C	0x0102      	MOVLB       2
0x1D8E	0x5119      	MOVF        _OpenSoftStopTime, 0, 1
0x1D90	0x0800      	SUBLW       0
0x1D92	0xE205      	BC          L_Menu2454
L__Menu2704:
;FirmV_0_7_0.c,1960 :: 		{OpenSoftStopTime=OpenSoftStopTime-1;Menu0();State=102;}
0x1D94	0x0719      	DECF        _OpenSoftStopTime, 1, 1
0x1D96	0xF007EC88  	CALL        _Menu0, 0
0x1D9A	0x0E66      	MOVLW       102
0x1D9C	0x6FF2      	MOVWF       _State, 1
L_Menu2454:
;FirmV_0_7_0.c,1961 :: 		if((Events.Keys.b2==1)&&(OpenSoftStopTime<255))
0x1D9E	0x0101      	MOVLB       1
0x1DA0	0xA571      	BTFSS       _Events, 2, 1
0x1DA2	0xD009      	BRA         L_Menu2457
0x1DA4	0x0EFF      	MOVLW       255
0x1DA6	0x0102      	MOVLB       2
0x1DA8	0x5D19      	SUBWF       _OpenSoftStopTime, 0, 1
0x1DAA	0xE205      	BC          L_Menu2457
L__Menu2703:
;FirmV_0_7_0.c,1962 :: 		{OpenSoftStopTime=OpenSoftStopTime+1;Menu0();State=102;}
0x1DAC	0x2B19      	INCF        _OpenSoftStopTime, 1, 1
0x1DAE	0xF007EC88  	CALL        _Menu0, 0
0x1DB2	0x0E66      	MOVLW       102
0x1DB4	0x6FF2      	MOVWF       _State, 1
L_Menu2457:
;FirmV_0_7_0.c,1963 :: 		}
L_Menu2451:
0x1DB6	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1966 :: 		if(MenuPointer==7)
0x1DB8	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1DBA	0x0A07      	XORLW       7
0x1DBC	0xE118      	BNZ         L_Menu2458
;FirmV_0_7_0.c,1967 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStartTime>0))
0x1DBE	0x0101      	MOVLB       1
0x1DC0	0xA171      	BTFSS       _Events, 0, 1
0x1DC2	0xD009      	BRA         L_Menu2461
0x1DC4	0x0102      	MOVLB       2
0x1DC6	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x1DC8	0x0800      	SUBLW       0
0x1DCA	0xE205      	BC          L_Menu2461
L__Menu2702:
;FirmV_0_7_0.c,1968 :: 		{CloseSoftStartTime=CloseSoftStartTime-1;Menu0();State=102;}
0x1DCC	0x0718      	DECF        _CloseSoftStartTime, 1, 1
0x1DCE	0xF007EC88  	CALL        _Menu0, 0
0x1DD2	0x0E66      	MOVLW       102
0x1DD4	0x6FF2      	MOVWF       _State, 1
L_Menu2461:
;FirmV_0_7_0.c,1969 :: 		if((Events.Keys.b2==1)&&(CloseSoftStartTime<255))
0x1DD6	0x0101      	MOVLB       1
0x1DD8	0xA571      	BTFSS       _Events, 2, 1
0x1DDA	0xD009      	BRA         L_Menu2464
0x1DDC	0x0EFF      	MOVLW       255
0x1DDE	0x0102      	MOVLB       2
0x1DE0	0x5D18      	SUBWF       _CloseSoftStartTime, 0, 1
0x1DE2	0xE205      	BC          L_Menu2464
L__Menu2701:
;FirmV_0_7_0.c,1970 :: 		{CloseSoftStartTime=CloseSoftStartTime+1;Menu0();State=102;}
0x1DE4	0x2B18      	INCF        _CloseSoftStartTime, 1, 1
0x1DE6	0xF007EC88  	CALL        _Menu0, 0
0x1DEA	0x0E66      	MOVLW       102
0x1DEC	0x6FF2      	MOVWF       _State, 1
L_Menu2464:
;FirmV_0_7_0.c,1971 :: 		}
L_Menu2458:
0x1DEE	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1974 :: 		if(MenuPointer==8)
0x1DF0	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1DF2	0x0A08      	XORLW       8
0x1DF4	0xE118      	BNZ         L_Menu2465
;FirmV_0_7_0.c,1975 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStopTime>0))
0x1DF6	0x0101      	MOVLB       1
0x1DF8	0xA171      	BTFSS       _Events, 0, 1
0x1DFA	0xD009      	BRA         L_Menu2468
0x1DFC	0x0102      	MOVLB       2
0x1DFE	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x1E00	0x0800      	SUBLW       0
0x1E02	0xE205      	BC          L_Menu2468
L__Menu2700:
;FirmV_0_7_0.c,1976 :: 		{CloseSoftStopTime=CloseSoftStopTime-1;Menu0();State=102;}
0x1E04	0x0717      	DECF        _CloseSoftStopTime, 1, 1
0x1E06	0xF007EC88  	CALL        _Menu0, 0
0x1E0A	0x0E66      	MOVLW       102
0x1E0C	0x6FF2      	MOVWF       _State, 1
L_Menu2468:
;FirmV_0_7_0.c,1977 :: 		if((Events.Keys.b2==1)&&(CloseSoftStopTime<255))
0x1E0E	0x0101      	MOVLB       1
0x1E10	0xA571      	BTFSS       _Events, 2, 1
0x1E12	0xD009      	BRA         L_Menu2471
0x1E14	0x0EFF      	MOVLW       255
0x1E16	0x0102      	MOVLB       2
0x1E18	0x5D17      	SUBWF       _CloseSoftStopTime, 0, 1
0x1E1A	0xE205      	BC          L_Menu2471
L__Menu2699:
;FirmV_0_7_0.c,1978 :: 		{CloseSoftStopTime=CloseSoftStopTime+1;Menu0();State=102;}
0x1E1C	0x2B17      	INCF        _CloseSoftStopTime, 1, 1
0x1E1E	0xF007EC88  	CALL        _Menu0, 0
0x1E22	0x0E66      	MOVLW       102
0x1E24	0x6FF2      	MOVWF       _State, 1
L_Menu2471:
;FirmV_0_7_0.c,1979 :: 		}
L_Menu2465:
0x1E26	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1983 :: 		if(MenuPointer==9)
0x1E28	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1E2A	0x0A09      	XORLW       9
0x1E2C	0xE116      	BNZ         L_Menu2472
;FirmV_0_7_0.c,1984 :: 		{ if((Events.Keys.b0==1)&&(OverloadSens>0))
0x1E2E	0x0101      	MOVLB       1
0x1E30	0xA171      	BTFSS       _Events, 0, 1
0x1E32	0xD008      	BRA         L_Menu2475
0x1E34	0x511C      	MOVF        _OverloadSens, 0, 1
0x1E36	0x0800      	SUBLW       0
0x1E38	0xE205      	BC          L_Menu2475
L__Menu2698:
;FirmV_0_7_0.c,1985 :: 		{OverloadSens=OverloadSens-1;Menu0();State=102;}
0x1E3A	0x071C      	DECF        _OverloadSens, 1, 1
0x1E3C	0xF007EC88  	CALL        _Menu0, 0
0x1E40	0x0E66      	MOVLW       102
0x1E42	0x6FF2      	MOVWF       _State, 1
L_Menu2475:
;FirmV_0_7_0.c,1986 :: 		if((Events.Keys.b2==1)&&(OverloadSens<9))
0x1E44	0x0101      	MOVLB       1
0x1E46	0xA571      	BTFSS       _Events, 2, 1
0x1E48	0xD008      	BRA         L_Menu2478
0x1E4A	0x0E09      	MOVLW       9
0x1E4C	0x5D1C      	SUBWF       _OverloadSens, 0, 1
0x1E4E	0xE205      	BC          L_Menu2478
L__Menu2697:
;FirmV_0_7_0.c,1987 :: 		{OverloadSens=OverloadSens+1;Menu0();State=102;}
0x1E50	0x2B1C      	INCF        _OverloadSens, 1, 1
0x1E52	0xF007EC88  	CALL        _Menu0, 0
0x1E56	0x0E66      	MOVLW       102
0x1E58	0x6FF2      	MOVWF       _State, 1
L_Menu2478:
;FirmV_0_7_0.c,1988 :: 		}
L_Menu2472:
0x1E5A	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1991 :: 		if(MenuPointer==10)
0x1E5C	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1E5E	0x0A0A      	XORLW       10
0x1E60	0xE118      	BNZ         L_Menu2479
;FirmV_0_7_0.c,1992 :: 		{ if((Events.Keys.b0==1)&&(ActionTimeDiff>0))
0x1E62	0x0101      	MOVLB       1
0x1E64	0xA171      	BTFSS       _Events, 0, 1
0x1E66	0xD009      	BRA         L_Menu2482
0x1E68	0x0102      	MOVLB       2
0x1E6A	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x1E6C	0x0800      	SUBLW       0
0x1E6E	0xE205      	BC          L_Menu2482
L__Menu2696:
;FirmV_0_7_0.c,1993 :: 		{ActionTimeDiff=ActionTimeDiff-1;Menu0();State=102;}
0x1E70	0x0710      	DECF        _ActionTimeDiff, 1, 1
0x1E72	0xF007EC88  	CALL        _Menu0, 0
0x1E76	0x0E66      	MOVLW       102
0x1E78	0x6FF2      	MOVWF       _State, 1
L_Menu2482:
;FirmV_0_7_0.c,1994 :: 		if((Events.Keys.b2==1)&&(ActionTimeDiff<255))
0x1E7A	0x0101      	MOVLB       1
0x1E7C	0xA571      	BTFSS       _Events, 2, 1
0x1E7E	0xD009      	BRA         L_Menu2485
0x1E80	0x0EFF      	MOVLW       255
0x1E82	0x0102      	MOVLB       2
0x1E84	0x5D10      	SUBWF       _ActionTimeDiff, 0, 1
0x1E86	0xE205      	BC          L_Menu2485
L__Menu2695:
;FirmV_0_7_0.c,1995 :: 		{ActionTimeDiff=ActionTimeDiff+1;Menu0();State=102;}
0x1E88	0x2B10      	INCF        _ActionTimeDiff, 1, 1
0x1E8A	0xF007EC88  	CALL        _Menu0, 0
0x1E8E	0x0E66      	MOVLW       102
0x1E90	0x6FF2      	MOVWF       _State, 1
L_Menu2485:
;FirmV_0_7_0.c,1996 :: 		}
L_Menu2479:
0x1E92	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1999 :: 		if(MenuPointer==11)
0x1E94	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1E96	0x0A0B      	XORLW       11
0x1E98	0xE124      	BNZ         L_Menu2486
;FirmV_0_7_0.c,2000 :: 		{ if((Events.Keys.b0==1)&&(AutoCloseTime>0))
0x1E9A	0x0101      	MOVLB       1
0x1E9C	0xA171      	BTFSS       _Events, 0, 1
0x1E9E	0xD011      	BRA         L_Menu2489
0x1EA0	0x0E00      	MOVLW       0
0x1EA2	0x6E00      	MOVWF       R0 
0x1EA4	0x0102      	MOVLB       2
0x1EA6	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x1EA8	0x5C00      	SUBWF       R0, 0 
0x1EAA	0xE102      	BNZ         L__Menu2754
0x1EAC	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x1EAE	0x0800      	SUBLW       0
L__Menu2754:
0x1EB0	0xE208      	BC          L_Menu2489
L__Menu2694:
;FirmV_0_7_0.c,2001 :: 		{AutoCloseTime=AutoCloseTime-1;Menu0();State=102;}
0x1EB2	0x0E01      	MOVLW       1
0x1EB4	0x5F11      	SUBWF       _AutoCloseTime, 1, 1
0x1EB6	0x0E00      	MOVLW       0
0x1EB8	0x5B12      	SUBWFB      _AutoCloseTime+1, 1, 1
0x1EBA	0xF007EC88  	CALL        _Menu0, 0
0x1EBE	0x0E66      	MOVLW       102
0x1EC0	0x6FF2      	MOVWF       _State, 1
L_Menu2489:
;FirmV_0_7_0.c,2002 :: 		if((Events.Keys.b2==1)&&(AutoCloseTime<65000))
0x1EC2	0x0101      	MOVLB       1
0x1EC4	0xA571      	BTFSS       _Events, 2, 1
0x1EC6	0xD00D      	BRA         L_Menu2492
0x1EC8	0x0EFD      	MOVLW       253
0x1ECA	0x0102      	MOVLB       2
0x1ECC	0x5D12      	SUBWF       _AutoCloseTime+1, 0, 1
0x1ECE	0xE102      	BNZ         L__Menu2755
0x1ED0	0x0EE8      	MOVLW       232
0x1ED2	0x5D11      	SUBWF       _AutoCloseTime, 0, 1
L__Menu2755:
0x1ED4	0xE206      	BC          L_Menu2492
L__Menu2693:
;FirmV_0_7_0.c,2003 :: 		{AutoCloseTime=AutoCloseTime+1;Menu0();State=102;}
0x1ED6	0x4B11      	INFSNZ      _AutoCloseTime, 1, 1
0x1ED8	0x2B12      	INCF        _AutoCloseTime+1, 1, 1
0x1EDA	0xF007EC88  	CALL        _Menu0, 0
0x1EDE	0x0E66      	MOVLW       102
0x1EE0	0x6FF2      	MOVWF       _State, 1
L_Menu2492:
;FirmV_0_7_0.c,2004 :: 		}
L_Menu2486:
0x1EE2	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2007 :: 		if(MenuPointer==12)
0x1EE4	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1EE6	0x0A0C      	XORLW       12
0x1EE8	0xE147      	BNZ         L_Menu2493
;FirmV_0_7_0.c,2009 :: 		State=0;
0x1EEA	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,2010 :: 		memcpy(LCDLine1,"                ",16);
0x1EEC	0x0EF3      	MOVLW       _LCDLine1
0x1EEE	0x0105      	MOVLB       5
0x1EF0	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1EF2	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1EF4	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1EF6	0x0E6E      	MOVLW       ?ICS?lstr97_FirmV_0_7_0
0x1EF8	0x6EF6      	MOVWF       4086 
0x1EFA	0x0E74      	MOVLW       hi_addr(?ICS?lstr97_FirmV_0_7_0)
0x1EFC	0x6EF7      	MOVWF       TBLPTRH 
0x1EFE	0x0E00      	MOVLW       higher_addr(?ICS?lstr97_FirmV_0_7_0)
0x1F00	0x6EF8      	MOVWF       TBLPTRU 
0x1F02	0x0E35      	MOVLW       ?lstr97_FirmV_0_7_0
0x1F04	0x6EE1      	MOVWF       FSR1L 
0x1F06	0x0E02      	MOVLW       hi_addr(?lstr97_FirmV_0_7_0)
0x1F08	0x6EE2      	MOVWF       FSR1H 
0x1F0A	0x0E11      	MOVLW       17
0x1F0C	0x6E00      	MOVWF       R0 
0x1F0E	0x0E01      	MOVLW       1
0x1F10	0x6E01      	MOVWF       R1 
0x1F12	0xF004EC95  	CALL        ___CC2DW, 0
0x1F16	0x0E35      	MOVLW       ?lstr97_FirmV_0_7_0
0x1F18	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1F1A	0x0E02      	MOVLW       hi_addr(?lstr97_FirmV_0_7_0)
0x1F1C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1F1E	0x0E10      	MOVLW       16
0x1F20	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1F22	0x0E00      	MOVLW       0
0x1F24	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1F26	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2011 :: 		memcpy(LCDLine2,"                ",16);
0x1F2A	0x0E04      	MOVLW       _LCDLine2
0x1F2C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x1F2E	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x1F30	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x1F32	0x0E7F      	MOVLW       ?ICS?lstr98_FirmV_0_7_0
0x1F34	0x6EF6      	MOVWF       4086 
0x1F36	0x0E74      	MOVLW       hi_addr(?ICS?lstr98_FirmV_0_7_0)
0x1F38	0x6EF7      	MOVWF       TBLPTRH 
0x1F3A	0x0E00      	MOVLW       higher_addr(?ICS?lstr98_FirmV_0_7_0)
0x1F3C	0x6EF8      	MOVWF       TBLPTRU 
0x1F3E	0x0E46      	MOVLW       ?lstr98_FirmV_0_7_0
0x1F40	0x6EE1      	MOVWF       FSR1L 
0x1F42	0x0E02      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x1F44	0x6EE2      	MOVWF       FSR1H 
0x1F46	0x0E11      	MOVLW       17
0x1F48	0x6E00      	MOVWF       R0 
0x1F4A	0x0E01      	MOVLW       1
0x1F4C	0x6E01      	MOVWF       R1 
0x1F4E	0xF004EC95  	CALL        ___CC2DW, 0
0x1F52	0x0E46      	MOVLW       ?lstr98_FirmV_0_7_0
0x1F54	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x1F56	0x0E02      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x1F58	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x1F5A	0x0E10      	MOVLW       16
0x1F5C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x1F5E	0x0E00      	MOVLW       0
0x1F60	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x1F62	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2012 :: 		LCDFlash=0; LCDFlashFlag=0;
0x1F66	0x0101      	MOVLB       1
0x1F68	0x6B1B      	CLRF        _LCDFlash, 1
0x1F6A	0x6B19      	CLRF        _LCDFlashFlag, 1
;FirmV_0_7_0.c,2013 :: 		LCDUpdateFlag=1;
0x1F6C	0x0E01      	MOVLW       1
0x1F6E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2014 :: 		FactorySettings();
0x1F70	0xF005ECE8  	CALL        _FactorySettings, 0
;FirmV_0_7_0.c,2015 :: 		SaveConfigs();
0x1F74	0xF004EC9D  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2016 :: 		}
L_Menu2493:
;FirmV_0_7_0.c,2019 :: 		if(MenuPointer==13)
0x1F78	0x0100      	MOVLB       0
0x1F7A	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1F7C	0x0A0D      	XORLW       13
0x1F7E	0xE118      	BNZ         L_Menu2494
;FirmV_0_7_0.c,2020 :: 		{ if((Events.Keys.b0==1)&&(OpenPhEnable>0))
0x1F80	0x0101      	MOVLB       1
0x1F82	0xA171      	BTFSS       _Events, 0, 1
0x1F84	0xD009      	BRA         L_Menu2497
0x1F86	0x0102      	MOVLB       2
0x1F88	0x510E      	MOVF        _OpenPhEnable, 0, 1
0x1F8A	0x0800      	SUBLW       0
0x1F8C	0xE205      	BC          L_Menu2497
L__Menu2692:
;FirmV_0_7_0.c,2021 :: 		{OpenPhEnable=OpenPhEnable-1;Menu0();State=102;}
0x1F8E	0x070E      	DECF        _OpenPhEnable, 1, 1
0x1F90	0xF007EC88  	CALL        _Menu0, 0
0x1F94	0x0E66      	MOVLW       102
0x1F96	0x6FF2      	MOVWF       _State, 1
L_Menu2497:
;FirmV_0_7_0.c,2022 :: 		if((Events.Keys.b2==1)&&(OpenPhEnable<1))
0x1F98	0x0101      	MOVLB       1
0x1F9A	0xA571      	BTFSS       _Events, 2, 1
0x1F9C	0xD009      	BRA         L_Menu2500
0x1F9E	0x0E01      	MOVLW       1
0x1FA0	0x0102      	MOVLB       2
0x1FA2	0x5D0E      	SUBWF       _OpenPhEnable, 0, 1
0x1FA4	0xE205      	BC          L_Menu2500
L__Menu2691:
;FirmV_0_7_0.c,2023 :: 		{OpenPhEnable=OpenPhEnable+1;Menu0();State=102;}
0x1FA6	0x2B0E      	INCF        _OpenPhEnable, 1, 1
0x1FA8	0xF007EC88  	CALL        _Menu0, 0
0x1FAC	0x0E66      	MOVLW       102
0x1FAE	0x6FF2      	MOVWF       _State, 1
L_Menu2500:
;FirmV_0_7_0.c,2024 :: 		}
L_Menu2494:
0x1FB0	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2028 :: 		if(MenuPointer==14)
0x1FB2	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1FB4	0x0A0E      	XORLW       14
0x1FB6	0xE118      	BNZ         L_Menu2501
;FirmV_0_7_0.c,2029 :: 		{ if((Events.Keys.b0==1)&&(LimiterEnable>0))
0x1FB8	0x0101      	MOVLB       1
0x1FBA	0xA171      	BTFSS       _Events, 0, 1
0x1FBC	0xD009      	BRA         L_Menu2504
0x1FBE	0x0102      	MOVLB       2
0x1FC0	0x510F      	MOVF        _LimiterEnable, 0, 1
0x1FC2	0x0800      	SUBLW       0
0x1FC4	0xE205      	BC          L_Menu2504
L__Menu2690:
;FirmV_0_7_0.c,2030 :: 		{LimiterEnable=LimiterEnable-1;Menu0();State=102;}
0x1FC6	0x070F      	DECF        _LimiterEnable, 1, 1
0x1FC8	0xF007EC88  	CALL        _Menu0, 0
0x1FCC	0x0E66      	MOVLW       102
0x1FCE	0x6FF2      	MOVWF       _State, 1
L_Menu2504:
;FirmV_0_7_0.c,2031 :: 		if((Events.Keys.b2==1)&&(LimiterEnable<1))
0x1FD0	0x0101      	MOVLB       1
0x1FD2	0xA571      	BTFSS       _Events, 2, 1
0x1FD4	0xD009      	BRA         L_Menu2507
0x1FD6	0x0E01      	MOVLW       1
0x1FD8	0x0102      	MOVLB       2
0x1FDA	0x5D0F      	SUBWF       _LimiterEnable, 0, 1
0x1FDC	0xE205      	BC          L_Menu2507
L__Menu2689:
;FirmV_0_7_0.c,2032 :: 		{LimiterEnable=LimiterEnable+1;Menu0();State=102;}
0x1FDE	0x2B0F      	INCF        _LimiterEnable, 1, 1
0x1FE0	0xF007EC88  	CALL        _Menu0, 0
0x1FE4	0x0E66      	MOVLW       102
0x1FE6	0x6FF2      	MOVWF       _State, 1
L_Menu2507:
;FirmV_0_7_0.c,2033 :: 		}
L_Menu2501:
0x1FE8	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2036 :: 		if(MenuPointer==15)
0x1FEA	0x51ED      	MOVF        _MenuPointer, 0, 1
0x1FEC	0x0A0F      	XORLW       15
0x1FEE	0xE116      	BNZ         L_Menu2508
;FirmV_0_7_0.c,2037 :: 		{ if((Events.Keys.b0==1)&&(LockForce>0))
0x1FF0	0x0101      	MOVLB       1
0x1FF2	0xA171      	BTFSS       _Events, 0, 1
0x1FF4	0xD008      	BRA         L_Menu2511
0x1FF6	0x515E      	MOVF        _LockForce, 0, 1
0x1FF8	0x0800      	SUBLW       0
0x1FFA	0xE205      	BC          L_Menu2511
L__Menu2688:
;FirmV_0_7_0.c,2038 :: 		{LockForce=LockForce-1;Menu0();State=102;}
0x1FFC	0x075E      	DECF        _LockForce, 1, 1
0x1FFE	0xF007EC88  	CALL        _Menu0, 0
0x2002	0x0E66      	MOVLW       102
0x2004	0x6FF2      	MOVWF       _State, 1
L_Menu2511:
;FirmV_0_7_0.c,2039 :: 		if((Events.Keys.b2==1)&&(LockForce<1))
0x2006	0x0101      	MOVLB       1
0x2008	0xA571      	BTFSS       _Events, 2, 1
0x200A	0xD008      	BRA         L_Menu2514
0x200C	0x0E01      	MOVLW       1
0x200E	0x5D5E      	SUBWF       _LockForce, 0, 1
0x2010	0xE205      	BC          L_Menu2514
L__Menu2687:
;FirmV_0_7_0.c,2040 :: 		{LockForce=LockForce+1;Menu0();State=102;}
0x2012	0x2B5E      	INCF        _LockForce, 1, 1
0x2014	0xF007EC88  	CALL        _Menu0, 0
0x2018	0x0E66      	MOVLW       102
0x201A	0x6FF2      	MOVWF       _State, 1
L_Menu2514:
;FirmV_0_7_0.c,2041 :: 		}
L_Menu2508:
0x201C	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2044 :: 		if(MenuPointer==16)
0x201E	0x51ED      	MOVF        _MenuPointer, 0, 1
0x2020	0x0A10      	XORLW       16
0x2022	0xE11F      	BNZ         L_Menu2515
;FirmV_0_7_0.c,2045 :: 		{ if((Events.Keys.b0==1)&&(CloseAfterPass>0))
0x2024	0x0101      	MOVLB       1
0x2026	0xA171      	BTFSS       _Events, 0, 1
0x2028	0xD00C      	BRA         L_Menu2518
0x202A	0x511E      	MOVF        _CloseAfterPass, 0, 1
0x202C	0x0800      	SUBLW       0
0x202E	0xE209      	BC          L_Menu2518
L__Menu2686:
;FirmV_0_7_0.c,2046 :: 		{CloseAfterPass=CloseAfterPass-1;if(CloseAfterPass==9) CloseAfterPass=0;Menu0();State=102;}
0x2030	0x071E      	DECF        _CloseAfterPass, 1, 1
0x2032	0x511E      	MOVF        _CloseAfterPass, 0, 1
0x2034	0x0A09      	XORLW       9
0x2036	0xE101      	BNZ         L_Menu2519
0x2038	0x6B1E      	CLRF        _CloseAfterPass, 1
L_Menu2519:
0x203A	0xF007EC88  	CALL        _Menu0, 0
0x203E	0x0E66      	MOVLW       102
0x2040	0x6FF2      	MOVWF       _State, 1
L_Menu2518:
;FirmV_0_7_0.c,2047 :: 		if((Events.Keys.b2==1)&&(CloseAfterPass<255))
0x2042	0x0101      	MOVLB       1
0x2044	0xA571      	BTFSS       _Events, 2, 1
0x2046	0xD00D      	BRA         L_Menu2522
0x2048	0x0EFF      	MOVLW       255
0x204A	0x5D1E      	SUBWF       _CloseAfterPass, 0, 1
0x204C	0xE20A      	BC          L_Menu2522
L__Menu2685:
;FirmV_0_7_0.c,2048 :: 		{CloseAfterPass=CloseAfterPass+1;if(CloseAfterPass==1) CloseAfterPass=10;Menu0();State=102;}
0x204E	0x2B1E      	INCF        _CloseAfterPass, 1, 1
0x2050	0x511E      	MOVF        _CloseAfterPass, 0, 1
0x2052	0x0A01      	XORLW       1
0x2054	0xE102      	BNZ         L_Menu2523
0x2056	0x0E0A      	MOVLW       10
0x2058	0x6F1E      	MOVWF       _CloseAfterPass, 1
L_Menu2523:
0x205A	0xF007EC88  	CALL        _Menu0, 0
0x205E	0x0E66      	MOVLW       102
0x2060	0x6FF2      	MOVWF       _State, 1
L_Menu2522:
;FirmV_0_7_0.c,2049 :: 		}
L_Menu2515:
0x2062	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2052 :: 		if(MenuPointer==17)
0x2064	0x51ED      	MOVF        _MenuPointer, 0, 1
0x2066	0x0A11      	XORLW       17
0x2068	0xE143      	BNZ         L_Menu2524
;FirmV_0_7_0.c,2054 :: 		State=103;
0x206A	0x0E67      	MOVLW       103
0x206C	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,2055 :: 		memcpy(LCDLine1,"                ",16);
0x206E	0x0EF3      	MOVLW       _LCDLine1
0x2070	0x0105      	MOVLB       5
0x2072	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x2074	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2076	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x2078	0x0E90      	MOVLW       ?ICS?lstr99_FirmV_0_7_0
0x207A	0x6EF6      	MOVWF       4086 
0x207C	0x0E74      	MOVLW       hi_addr(?ICS?lstr99_FirmV_0_7_0)
0x207E	0x6EF7      	MOVWF       TBLPTRH 
0x2080	0x0E00      	MOVLW       higher_addr(?ICS?lstr99_FirmV_0_7_0)
0x2082	0x6EF8      	MOVWF       TBLPTRU 
0x2084	0x0E57      	MOVLW       ?lstr99_FirmV_0_7_0
0x2086	0x6EE1      	MOVWF       FSR1L 
0x2088	0x0E02      	MOVLW       hi_addr(?lstr99_FirmV_0_7_0)
0x208A	0x6EE2      	MOVWF       FSR1H 
0x208C	0x0E11      	MOVLW       17
0x208E	0x6E00      	MOVWF       R0 
0x2090	0x0E01      	MOVLW       1
0x2092	0x6E01      	MOVWF       R1 
0x2094	0xF004EC95  	CALL        ___CC2DW, 0
0x2098	0x0E57      	MOVLW       ?lstr99_FirmV_0_7_0
0x209A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x209C	0x0E02      	MOVLW       hi_addr(?lstr99_FirmV_0_7_0)
0x209E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x20A0	0x0E10      	MOVLW       16
0x20A2	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x20A4	0x0E00      	MOVLW       0
0x20A6	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x20A8	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2056 :: 		memcpy(LCDLine2,"                ",16);
0x20AC	0x0E04      	MOVLW       _LCDLine2
0x20AE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x20B0	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x20B2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x20B4	0x0EA1      	MOVLW       ?ICS?lstr100_FirmV_0_7_0
0x20B6	0x6EF6      	MOVWF       4086 
0x20B8	0x0E74      	MOVLW       hi_addr(?ICS?lstr100_FirmV_0_7_0)
0x20BA	0x6EF7      	MOVWF       TBLPTRH 
0x20BC	0x0E00      	MOVLW       higher_addr(?ICS?lstr100_FirmV_0_7_0)
0x20BE	0x6EF8      	MOVWF       TBLPTRU 
0x20C0	0x0E68      	MOVLW       ?lstr100_FirmV_0_7_0
0x20C2	0x6EE1      	MOVWF       FSR1L 
0x20C4	0x0E02      	MOVLW       hi_addr(?lstr100_FirmV_0_7_0)
0x20C6	0x6EE2      	MOVWF       FSR1H 
0x20C8	0x0E11      	MOVLW       17
0x20CA	0x6E00      	MOVWF       R0 
0x20CC	0x0E01      	MOVLW       1
0x20CE	0x6E01      	MOVWF       R1 
0x20D0	0xF004EC95  	CALL        ___CC2DW, 0
0x20D4	0x0E68      	MOVLW       ?lstr100_FirmV_0_7_0
0x20D6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x20D8	0x0E02      	MOVLW       hi_addr(?lstr100_FirmV_0_7_0)
0x20DA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x20DC	0x0E10      	MOVLW       16
0x20DE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x20E0	0x0E00      	MOVLW       0
0x20E2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x20E4	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2057 :: 		LCDFlash=0;
0x20E8	0x0101      	MOVLB       1
0x20EA	0x6B1B      	CLRF        _LCDFlash, 1
;FirmV_0_7_0.c,2058 :: 		LCDUpdateFlag=1;
0x20EC	0x0E01      	MOVLW       1
0x20EE	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2059 :: 		}
L_Menu2524:
;FirmV_0_7_0.c,2062 :: 		if(MenuPointer==18)
0x20F0	0x0100      	MOVLB       0
0x20F2	0x51ED      	MOVF        _MenuPointer, 0, 1
0x20F4	0x0A12      	XORLW       18
0x20F6	0xE144      	BNZ         L_Menu2525
;FirmV_0_7_0.c,2064 :: 		State=0;
0x20F8	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,2065 :: 		memcpy(LCDLine1,"                ",16);
0x20FA	0x0EF3      	MOVLW       _LCDLine1
0x20FC	0x0105      	MOVLB       5
0x20FE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x2100	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2102	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x2104	0x0EB2      	MOVLW       ?ICS?lstr101_FirmV_0_7_0
0x2106	0x6EF6      	MOVWF       4086 
0x2108	0x0E74      	MOVLW       hi_addr(?ICS?lstr101_FirmV_0_7_0)
0x210A	0x6EF7      	MOVWF       TBLPTRH 
0x210C	0x0E00      	MOVLW       higher_addr(?ICS?lstr101_FirmV_0_7_0)
0x210E	0x6EF8      	MOVWF       TBLPTRU 
0x2110	0x0E79      	MOVLW       ?lstr101_FirmV_0_7_0
0x2112	0x6EE1      	MOVWF       FSR1L 
0x2114	0x0E02      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x2116	0x6EE2      	MOVWF       FSR1H 
0x2118	0x0E11      	MOVLW       17
0x211A	0x6E00      	MOVWF       R0 
0x211C	0x0E01      	MOVLW       1
0x211E	0x6E01      	MOVWF       R1 
0x2120	0xF004EC95  	CALL        ___CC2DW, 0
0x2124	0x0E79      	MOVLW       ?lstr101_FirmV_0_7_0
0x2126	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x2128	0x0E02      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x212A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x212C	0x0E10      	MOVLW       16
0x212E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x2130	0x0E00      	MOVLW       0
0x2132	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x2134	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2066 :: 		memcpy(LCDLine2,"                ",16);
0x2138	0x0E04      	MOVLW       _LCDLine2
0x213A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x213C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x213E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x2140	0x0EC3      	MOVLW       ?ICS?lstr102_FirmV_0_7_0
0x2142	0x6EF6      	MOVWF       4086 
0x2144	0x0E74      	MOVLW       hi_addr(?ICS?lstr102_FirmV_0_7_0)
0x2146	0x6EF7      	MOVWF       TBLPTRH 
0x2148	0x0E00      	MOVLW       higher_addr(?ICS?lstr102_FirmV_0_7_0)
0x214A	0x6EF8      	MOVWF       TBLPTRU 
0x214C	0x0E8A      	MOVLW       ?lstr102_FirmV_0_7_0
0x214E	0x6EE1      	MOVWF       FSR1L 
0x2150	0x0E02      	MOVLW       hi_addr(?lstr102_FirmV_0_7_0)
0x2152	0x6EE2      	MOVWF       FSR1H 
0x2154	0x0E11      	MOVLW       17
0x2156	0x6E00      	MOVWF       R0 
0x2158	0x0E01      	MOVLW       1
0x215A	0x6E01      	MOVWF       R1 
0x215C	0xF004EC95  	CALL        ___CC2DW, 0
0x2160	0x0E8A      	MOVLW       ?lstr102_FirmV_0_7_0
0x2162	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x2164	0x0E02      	MOVLW       hi_addr(?lstr102_FirmV_0_7_0)
0x2166	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x2168	0x0E10      	MOVLW       16
0x216A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x216C	0x0E00      	MOVLW       0
0x216E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x2170	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2067 :: 		LCDFlash=0;
0x2174	0x0101      	MOVLB       1
0x2176	0x6B1B      	CLRF        _LCDFlash, 1
;FirmV_0_7_0.c,2068 :: 		LCDUpdateFlag=1;
0x2178	0x0E01      	MOVLW       1
0x217A	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2069 :: 		LoadConfigs();
0x217C	0xF006ECD8  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,2070 :: 		}
L_Menu2525:
;FirmV_0_7_0.c,2071 :: 		}
0x2180	0x0012      	RETURN      0
; end of _Menu2
_GetKeysState:
;FirmV_0_7_0.c,1328 :: 		char GetKeysState()
;FirmV_0_7_0.c,1330 :: 		unsigned res=0;
0x2182	0x0102      	MOVLB       2
0x2184	0x6B36      	CLRF        GetKeysState_res_L0, 1
0x2186	0x6B37      	CLRF        GetKeysState_res_L0+1, 1
;FirmV_0_7_0.c,1334 :: 		char resch=0,fin;
0x2188	0x6B38      	CLRF        GetKeysState_resch_L0, 1
;FirmV_0_7_0.c,1335 :: 		res=ADC_Read(5);
0x218A	0x0E05      	MOVLW       5
0x218C	0x0103      	MOVLB       3
0x218E	0x6F4F      	MOVWF       FARG_ADC_Read_channel, 1
0x2190	0xF00CEC95  	CALL        _ADC_Read, 0
0x2194	0xF236C000  	MOVFF       R0, GetKeysState_res_L0
0x2198	0xF237C001  	MOVFF       R1, GetKeysState_res_L0+1
;FirmV_0_7_0.c,1336 :: 		if(((res>>2)>160)&&((res>>2)<185))
0x219C	0xF002C000  	MOVFF       R0, R2
0x21A0	0xF003C001  	MOVFF       R1, R3
0x21A4	0x3203      	RRCF        R3, 1 
0x21A6	0x3202      	RRCF        R2, 1 
0x21A8	0x9E03      	BCF         R3, 7 
0x21AA	0x3203      	RRCF        R3, 1 
0x21AC	0x3202      	RRCF        R2, 1 
0x21AE	0x9E03      	BCF         R3, 7 
0x21B0	0x0E00      	MOVLW       0
0x21B2	0x6E00      	MOVWF       R0 
0x21B4	0x5003      	MOVF        R3, 0 
0x21B6	0x5C00      	SUBWF       R0, 0 
0x21B8	0xE102      	BNZ         L__GetKeysState730
0x21BA	0x5002      	MOVF        R2, 0 
0x21BC	0x08A0      	SUBLW       160
L__GetKeysState730:
0x21BE	0xE212      	BC          L_GetKeysState297
0x21C0	0xF001C236  	MOVFF       GetKeysState_res_L0, R1
0x21C4	0xF002C237  	MOVFF       GetKeysState_res_L0+1, R2
0x21C8	0x3202      	RRCF        R2, 1 
0x21CA	0x3201      	RRCF        R1, 1 
0x21CC	0x9E02      	BCF         R2, 7 
0x21CE	0x3202      	RRCF        R2, 1 
0x21D0	0x3201      	RRCF        R1, 1 
0x21D2	0x9E02      	BCF         R2, 7 
0x21D4	0x0E00      	MOVLW       0
0x21D6	0x5C02      	SUBWF       R2, 0 
0x21D8	0xE102      	BNZ         L__GetKeysState731
0x21DA	0x0EB9      	MOVLW       185
0x21DC	0x5C01      	SUBWF       R1, 0 
L__GetKeysState731:
0x21DE	0xE202      	BC          L_GetKeysState297
L__GetKeysState680:
;FirmV_0_7_0.c,1337 :: 		resch.b2=1;
0x21E0	0x0102      	MOVLB       2
0x21E2	0x8538      	BSF         GetKeysState_resch_L0, 2, 1
L_GetKeysState297:
;FirmV_0_7_0.c,1338 :: 		if(((res>>2)>100)&&((res>>2)<160))
0x21E4	0xF001C236  	MOVFF       GetKeysState_res_L0, R1
0x21E8	0xF002C237  	MOVFF       GetKeysState_res_L0+1, R2
0x21EC	0x3202      	RRCF        R2, 1 
0x21EE	0x3201      	RRCF        R1, 1 
0x21F0	0x9E02      	BCF         R2, 7 
0x21F2	0x3202      	RRCF        R2, 1 
0x21F4	0x3201      	RRCF        R1, 1 
0x21F6	0x9E02      	BCF         R2, 7 
0x21F8	0x0E00      	MOVLW       0
0x21FA	0x6E00      	MOVWF       R0 
0x21FC	0x5002      	MOVF        R2, 0 
0x21FE	0x5C00      	SUBWF       R0, 0 
0x2200	0xE102      	BNZ         L__GetKeysState732
0x2202	0x5001      	MOVF        R1, 0 
0x2204	0x0864      	SUBLW       100
L__GetKeysState732:
0x2206	0xE212      	BC          L_GetKeysState300
0x2208	0xF001C236  	MOVFF       GetKeysState_res_L0, R1
0x220C	0xF002C237  	MOVFF       GetKeysState_res_L0+1, R2
0x2210	0x3202      	RRCF        R2, 1 
0x2212	0x3201      	RRCF        R1, 1 
0x2214	0x9E02      	BCF         R2, 7 
0x2216	0x3202      	RRCF        R2, 1 
0x2218	0x3201      	RRCF        R1, 1 
0x221A	0x9E02      	BCF         R2, 7 
0x221C	0x0E00      	MOVLW       0
0x221E	0x5C02      	SUBWF       R2, 0 
0x2220	0xE102      	BNZ         L__GetKeysState733
0x2222	0x0EA0      	MOVLW       160
0x2224	0x5C01      	SUBWF       R1, 0 
L__GetKeysState733:
0x2226	0xE202      	BC          L_GetKeysState300
L__GetKeysState679:
0x2228	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1339 :: 		resch.b1=1;
0x222A	0x8338      	BSF         GetKeysState_resch_L0, 1, 1
L_GetKeysState300:
;FirmV_0_7_0.c,1340 :: 		if((res>>2)<50)
0x222C	0xF001C236  	MOVFF       GetKeysState_res_L0, R1
0x2230	0xF002C237  	MOVFF       GetKeysState_res_L0+1, R2
0x2234	0x3202      	RRCF        R2, 1 
0x2236	0x3201      	RRCF        R1, 1 
0x2238	0x9E02      	BCF         R2, 7 
0x223A	0x3202      	RRCF        R2, 1 
0x223C	0x3201      	RRCF        R1, 1 
0x223E	0x9E02      	BCF         R2, 7 
0x2240	0x0E00      	MOVLW       0
0x2242	0x5C02      	SUBWF       R2, 0 
0x2244	0xE102      	BNZ         L__GetKeysState734
0x2246	0x0E32      	MOVLW       50
0x2248	0x5C01      	SUBWF       R1, 0 
L__GetKeysState734:
0x224A	0xE202      	BC          L_GetKeysState301
;FirmV_0_7_0.c,1341 :: 		resch.b0=1;
0x224C	0x0102      	MOVLB       2
0x224E	0x8138      	BSF         GetKeysState_resch_L0, 0, 1
L_GetKeysState301:
0x2250	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1343 :: 		if((resch==0))
0x2252	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x2254	0x0A00      	XORLW       0
0x2256	0xE11B      	BNZ         L_GetKeysState302
;FirmV_0_7_0.c,1345 :: 		if(Pressed==0)
0x2258	0x0100      	MOVLB       0
0x225A	0x51C5      	MOVF        _Pressed, 0, 1
0x225C	0x0A00      	XORLW       0
0x225E	0xE108      	BNZ         L_GetKeysState303
;FirmV_0_7_0.c,1346 :: 		{Repeat=0;Pressed=0;fin=0;RepeatRate=0;}
0x2260	0x0101      	MOVLB       1
0x2262	0x6B58      	CLRF        GetKeysState_Repeat_L0, 1
0x2264	0x0100      	MOVLB       0
0x2266	0x6BC5      	CLRF        _Pressed, 1
0x2268	0x0102      	MOVLB       2
0x226A	0x6B35      	CLRF        GetKeysState_fin_L0, 1
0x226C	0x0101      	MOVLB       1
0x226E	0x6B57      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState303:
;FirmV_0_7_0.c,1347 :: 		if(Pressed==1)
0x2270	0x0100      	MOVLB       0
0x2272	0x51C5      	MOVF        _Pressed, 0, 1
0x2274	0x0A01      	XORLW       1
0x2276	0xE10B      	BNZ         L_GetKeysState304
;FirmV_0_7_0.c,1348 :: 		if(DebouncingDelay>=DebouncingFix)
0x2278	0x0E05      	MOVLW       5
0x227A	0x5DC3      	SUBWF       _DebouncingDelay, 0, 1
0x227C	0xE308      	BNC         L_GetKeysState305
;FirmV_0_7_0.c,1349 :: 		{Repeat=0;Pressed=0;fin=0;RepeatRate=0;}
0x227E	0x0101      	MOVLB       1
0x2280	0x6B58      	CLRF        GetKeysState_Repeat_L0, 1
0x2282	0x0100      	MOVLB       0
0x2284	0x6BC5      	CLRF        _Pressed, 1
0x2286	0x0102      	MOVLB       2
0x2288	0x6B35      	CLRF        GetKeysState_fin_L0, 1
0x228A	0x0101      	MOVLB       1
0x228C	0x6B57      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState305:
L_GetKeysState304:
;FirmV_0_7_0.c,1350 :: 		}
L_GetKeysState302:
;FirmV_0_7_0.c,1351 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0)&&(ms500==PressTime+KeyRepeatDelay))
0x228E	0x0102      	MOVLB       2
0x2290	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x2292	0x0A00      	XORLW       0
0x2294	0xE024      	BZ          L_GetKeysState308
0x2296	0x0100      	MOVLB       0
0x2298	0x51C5      	MOVF        _Pressed, 0, 1
0x229A	0x0A01      	XORLW       1
0x229C	0xE120      	BNZ         L_GetKeysState308
0x229E	0x0101      	MOVLB       1
0x22A0	0x5158      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x22A2	0x0A00      	XORLW       0
0x22A4	0xE11C      	BNZ         L_GetKeysState308
0x22A6	0x0E03      	MOVLW       3
0x22A8	0x253F      	ADDWF       GetKeysState_PressTime_L0, 0, 1
0x22AA	0x6E01      	MOVWF       R1 
0x22AC	0x0E00      	MOVLW       0
0x22AE	0x2140      	ADDWFC      GetKeysState_PressTime_L0+1, 0, 1
0x22B0	0x6E02      	MOVWF       R2 
0x22B2	0x0E00      	MOVLW       0
0x22B4	0x2141      	ADDWFC      GetKeysState_PressTime_L0+2, 0, 1
0x22B6	0x6E03      	MOVWF       R3 
0x22B8	0x0E00      	MOVLW       0
0x22BA	0x2142      	ADDWFC      GetKeysState_PressTime_L0+3, 0, 1
0x22BC	0x6E04      	MOVWF       R4 
0x22BE	0x0100      	MOVLB       0
0x22C0	0x51F1      	MOVF        _ms500+3, 0, 1
0x22C2	0x1804      	XORWF       R4, 0 
0x22C4	0xE108      	BNZ         L__GetKeysState735
0x22C6	0x51F0      	MOVF        _ms500+2, 0, 1
0x22C8	0x1803      	XORWF       R3, 0 
0x22CA	0xE105      	BNZ         L__GetKeysState735
0x22CC	0x51EF      	MOVF        _ms500+1, 0, 1
0x22CE	0x1802      	XORWF       R2, 0 
0x22D0	0xE102      	BNZ         L__GetKeysState735
0x22D2	0x51EE      	MOVF        _ms500, 0, 1
0x22D4	0x1801      	XORWF       R1, 0 
L__GetKeysState735:
0x22D6	0xE103      	BNZ         L_GetKeysState308
L__GetKeysState678:
;FirmV_0_7_0.c,1352 :: 		Repeat=1;
0x22D8	0x0E01      	MOVLW       1
0x22DA	0x0101      	MOVLB       1
0x22DC	0x6F58      	MOVWF       GetKeysState_Repeat_L0, 1
L_GetKeysState308:
;FirmV_0_7_0.c,1354 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0))
0x22DE	0x0102      	MOVLB       2
0x22E0	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x22E2	0x0A00      	XORLW       0
0x22E4	0xE00A      	BZ          L_GetKeysState311
0x22E6	0x0100      	MOVLB       0
0x22E8	0x51C5      	MOVF        _Pressed, 0, 1
0x22EA	0x0A01      	XORLW       1
0x22EC	0xE106      	BNZ         L_GetKeysState311
0x22EE	0x0101      	MOVLB       1
0x22F0	0x5158      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x22F2	0x0A00      	XORLW       0
0x22F4	0xE102      	BNZ         L_GetKeysState311
L__GetKeysState677:
;FirmV_0_7_0.c,1355 :: 		fin=0;
0x22F6	0x0102      	MOVLB       2
0x22F8	0x6B35      	CLRF        GetKeysState_fin_L0, 1
L_GetKeysState311:
0x22FA	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1357 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==1))
0x22FC	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x22FE	0x0A00      	XORLW       0
0x2300	0xE00F      	BZ          L_GetKeysState314
0x2302	0x0100      	MOVLB       0
0x2304	0x51C5      	MOVF        _Pressed, 0, 1
0x2306	0x0A01      	XORLW       1
0x2308	0xE10B      	BNZ         L_GetKeysState314
0x230A	0x0101      	MOVLB       1
0x230C	0x5158      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x230E	0x0A01      	XORLW       1
0x2310	0xE107      	BNZ         L_GetKeysState314
L__GetKeysState676:
;FirmV_0_7_0.c,1358 :: 		{fin=resch*RepeatRate;RepeatRate=0;}
0x2312	0x0102      	MOVLB       2
0x2314	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x2316	0x0101      	MOVLB       1
0x2318	0x0357      	MULWF       GetKeysState_RepeatRate_L0, 1
0x231A	0xF235CFF3  	MOVFF       PRODL, GetKeysState_fin_L0
0x231E	0x6B57      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState314:
;FirmV_0_7_0.c,1361 :: 		if((resch!=0)&&(Pressed==0))
0x2320	0x0102      	MOVLB       2
0x2322	0x5138      	MOVF        GetKeysState_resch_L0, 0, 1
0x2324	0x0A00      	XORLW       0
0x2326	0xE011      	BZ          L_GetKeysState317
0x2328	0x0100      	MOVLB       0
0x232A	0x51C5      	MOVF        _Pressed, 0, 1
0x232C	0x0A00      	XORLW       0
0x232E	0xE10D      	BNZ         L_GetKeysState317
L__GetKeysState675:
;FirmV_0_7_0.c,1362 :: 		{fin=resch; Pressed=1;PressTime=ms500;DebouncingDelay=0;}
0x2330	0xF235C238  	MOVFF       GetKeysState_resch_L0, GetKeysState_fin_L0
0x2334	0x0E01      	MOVLW       1
0x2336	0x6FC5      	MOVWF       _Pressed, 1
0x2338	0xF13FC0EE  	MOVFF       _ms500, GetKeysState_PressTime_L0
0x233C	0xF140C0EF  	MOVFF       _ms500+1, GetKeysState_PressTime_L0+1
0x2340	0xF141C0F0  	MOVFF       _ms500+2, GetKeysState_PressTime_L0+2
0x2344	0xF142C0F1  	MOVFF       _ms500+3, GetKeysState_PressTime_L0+3
0x2348	0x6BC3      	CLRF        _DebouncingDelay, 1
L_GetKeysState317:
;FirmV_0_7_0.c,1364 :: 		if((Repeat==1)&&(msCounter%10==0))
0x234A	0x0101      	MOVLB       1
0x234C	0x5158      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x234E	0x0A01      	XORLW       1
0x2350	0xE10D      	BNZ         L_GetKeysState320
0x2352	0x0E0A      	MOVLW       10
0x2354	0x6E04      	MOVWF       R4 
0x2356	0xF000C0C6  	MOVFF       _msCounter, R0
0x235A	0xF000ECED  	CALL        _Div_8x8_U, 0
0x235E	0xF000C008  	MOVFF       R8, R0
0x2362	0x5000      	MOVF        R0, 0 
0x2364	0x0A00      	XORLW       0
0x2366	0xE102      	BNZ         L_GetKeysState320
L__GetKeysState674:
;FirmV_0_7_0.c,1365 :: 		RepeatRate=1;
0x2368	0x0E01      	MOVLW       1
0x236A	0x6F57      	MOVWF       GetKeysState_RepeatRate_L0, 1
L_GetKeysState320:
;FirmV_0_7_0.c,1367 :: 		return fin;
0x236C	0xF000C235  	MOVFF       GetKeysState_fin_L0, R0
;FirmV_0_7_0.c,1368 :: 		}
0x2370	0x0012      	RETURN      0
; end of _GetKeysState
_Menu1:
;FirmV_0_7_0.c,1867 :: 		void Menu1()
;FirmV_0_7_0.c,1870 :: 		if((Events.Keys.b0==1))
0x2372	0x0101      	MOVLB       1
0x2374	0xA171      	BTFSS       _Events, 0, 1
0x2376	0xD00A      	BRA         L_Menu1398
;FirmV_0_7_0.c,1871 :: 		{if(MenuPointer==0){MenuPointer=18;}else{MenuPointer=MenuPointer-1;}State=100;}
0x2378	0x0100      	MOVLB       0
0x237A	0x51ED      	MOVF        _MenuPointer, 0, 1
0x237C	0x0A00      	XORLW       0
0x237E	0xE103      	BNZ         L_Menu1399
0x2380	0x0E12      	MOVLW       18
0x2382	0x6FED      	MOVWF       _MenuPointer, 1
0x2384	0xD001      	BRA         L_Menu1400
L_Menu1399:
0x2386	0x07ED      	DECF        _MenuPointer, 1, 1
L_Menu1400:
0x2388	0x0E64      	MOVLW       100
0x238A	0x6FF2      	MOVWF       _State, 1
L_Menu1398:
;FirmV_0_7_0.c,1873 :: 		if((Events.Keys.b2==1))
0x238C	0x0101      	MOVLB       1
0x238E	0xA571      	BTFSS       _Events, 2, 1
0x2390	0xD009      	BRA         L_Menu1401
;FirmV_0_7_0.c,1874 :: 		{if(MenuPointer==18){MenuPointer=0;}else{MenuPointer=MenuPointer+1;}State=100;}
0x2392	0x0100      	MOVLB       0
0x2394	0x51ED      	MOVF        _MenuPointer, 0, 1
0x2396	0x0A12      	XORLW       18
0x2398	0xE102      	BNZ         L_Menu1402
0x239A	0x6BED      	CLRF        _MenuPointer, 1
0x239C	0xD001      	BRA         L_Menu1403
L_Menu1402:
0x239E	0x2BED      	INCF        _MenuPointer, 1, 1
L_Menu1403:
0x23A0	0x0E64      	MOVLW       100
0x23A2	0x6FF2      	MOVWF       _State, 1
L_Menu1401:
;FirmV_0_7_0.c,1876 :: 		if((Events.Keys.b1==1))
0x23A4	0x0101      	MOVLB       1
0x23A6	0xA371      	BTFSS       _Events, 1, 1
0x23A8	0xD003      	BRA         L_Menu1404
;FirmV_0_7_0.c,1877 :: 		{State=102;}
0x23AA	0x0E66      	MOVLW       102
0x23AC	0x0100      	MOVLB       0
0x23AE	0x6FF2      	MOVWF       _State, 1
L_Menu1404:
;FirmV_0_7_0.c,1880 :: 		}
0x23B0	0x0012      	RETURN      0
; end of _Menu1
_GetExternalKeysState:
;FirmV_0_7_0.c,1378 :: 		char GetExternalKeysState()
;FirmV_0_7_0.c,1380 :: 		char out=0;
0x23B2	0x0102      	MOVLB       2
0x23B4	0x6B35      	CLRF        GetExternalKeysState_out_L0, 1
;FirmV_0_7_0.c,1381 :: 		if(D1ExKey==0)
0x23B6	0xB683      	BTFSC       PORTD, 3 
0x23B8	0xD001      	BRA         L_GetExternalKeysState321
;FirmV_0_7_0.c,1382 :: 		out.b0=1;
0x23BA	0x8135      	BSF         GetExternalKeysState_out_L0, 0, 1
L_GetExternalKeysState321:
;FirmV_0_7_0.c,1383 :: 		if(D2ExKey==0)
0x23BC	0xB883      	BTFSC       PORTD, 4 
0x23BE	0xD001      	BRA         L_GetExternalKeysState322
;FirmV_0_7_0.c,1384 :: 		out.b1=1;
0x23C0	0x8335      	BSF         GetExternalKeysState_out_L0, 1, 1
L_GetExternalKeysState322:
;FirmV_0_7_0.c,1385 :: 		return out;
0x23C2	0xF000C235  	MOVFF       GetExternalKeysState_out_L0, R0
;FirmV_0_7_0.c,1386 :: 		}
0x23C6	0x0012      	RETURN      0
; end of _GetExternalKeysState
_Menu3:
;FirmV_0_7_0.c,2083 :: 		void Menu3()
;FirmV_0_7_0.c,2085 :: 		SaveConfigs();
0x23C8	0xF004EC9D  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2086 :: 		State=0;
0x23CC	0x0100      	MOVLB       0
0x23CE	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,2087 :: 		}
0x23D0	0x0012      	RETURN      0
; end of _Menu3
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x23D2	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x23D4	0x0E80      	MOVLW       128
0x23D6	0x0102      	MOVLB       2
0x23D8	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x23DA	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x23DC	0x0EC0      	MOVLW       192
0x23DE	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x23E0	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x23E2	0x0E94      	MOVLW       148
0x23E4	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x23E6	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x23E8	0x0ED4      	MOVLW       212
0x23EA	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x23EC	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x23EE	0x0E80      	MOVLW       128
0x23F0	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x23F2	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x23F4	0x0102      	MOVLB       2
0x23F6	0x5135      	MOVF        FARG_Lcd_Out_row, 0, 1
0x23F8	0x0A01      	XORLW       1
0x23FA	0xE0EC      	BZ          L_Lcd_Out13
0x23FC	0x5135      	MOVF        FARG_Lcd_Out_row, 0, 1
0x23FE	0x0A02      	XORLW       2
0x2400	0xE0ED      	BZ          L_Lcd_Out14
0x2402	0x5135      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2404	0x0A03      	XORLW       3
0x2406	0xE0ED      	BZ          L_Lcd_Out15
0x2408	0x5135      	MOVF        FARG_Lcd_Out_row, 0, 1
0x240A	0x0A04      	XORLW       4
0x240C	0xE0ED      	BZ          L_Lcd_Out16
0x240E	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x2410	0x0536      	DECF        FARG_Lcd_Out_column, 0, 1
0x2412	0x6E00      	MOVWF       R0 
0x2414	0x5135      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2416	0x2600      	ADDWF       R0, 1 
0x2418	0xF235C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x241C	0xF4F8C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x2420	0xF005EC04  	CALL        _Lcd_Cmd, 0
;__Lib_Lcd.c,197 :: 		
0x2424	0x9146      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x2426	0x0102      	MOVLB       2
0x2428	0x6B39      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x242A	0x5139      	MOVF        Lcd_Out_i_L0, 0, 1
0x242C	0x2537      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x242E	0x6EE9      	MOVWF       FSR0L 
0x2430	0x0E00      	MOVLW       0
0x2432	0x2138      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x2434	0x6EEA      	MOVWF       FSR0H 
0x2436	0x52EE      	MOVF        POSTINC0, 1 
0x2438	0xE00D      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x243A	0x5139      	MOVF        Lcd_Out_i_L0, 0, 1
0x243C	0x2537      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x243E	0x6EE9      	MOVWF       FSR0L 
0x2440	0x0E00      	MOVLW       0
0x2442	0x2138      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x2444	0x6EEA      	MOVWF       FSR0H 
0x2446	0xF34FCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x244A	0xF00CECB4  	CALL        _Lcd_Chr_CP, 0
0x244E	0x0102      	MOVLB       2
0x2450	0x2B39      	INCF        Lcd_Out_i_L0, 1, 1
0x2452	0xD7EB      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x2454	0x0101      	MOVLB       1
0x2456	0x8146      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x2458	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x245A	0x9296      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x245C	0x9496      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x245E	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x2460	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x2462	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x2464	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x2466	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x2468	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x246A	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x246C	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x246E	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x2470	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x2472	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x2476	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x247A	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x247E	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x2480	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x2482	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x2484	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x2488	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x248A	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x248E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x2490	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x2494	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x2496	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x249A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x249C	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x24A0	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x24A2	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x24A6	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x24A8	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x24AA	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x24AE	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x24B0	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x24B4	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x24B6	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x24BA	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x24BC	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x24BE	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x24C0	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x24C2	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x24C6	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x24C8	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x24CC	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x24CE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x24D0	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x24D2	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x24D6	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x24D8	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x24DA	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x24DC	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x24E0	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x24E2	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x24E6	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x24E8	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x24EC	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x24EE	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x24F0	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x24F2	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x24F6	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x24F8	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x24FC	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x24FE	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x2500	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x2504	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x2506	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x2508	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x250A	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x250C	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x250E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x2510	0xF001EC5E  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x2514	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x2516	0xF003EC22  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x251A	0x0101      	MOVLB       1
0x251C	0x8146      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x251E	0x0012      	RETURN      0
; end of _Lcd_Init
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x2520	0x0E6C      	MOVLW       _UART1_Write
0x2522	0x0101      	MOVLB       1
0x2524	0x6F7A      	MOVWF       _UART_Wr_Ptr, 1
0x2526	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x2528	0x6F7B      	MOVWF       _UART_Wr_Ptr+1, 1
0x252A	0x0E0B      	MOVLW       FARG_UART1_Write_data_
0x252C	0x6F7C      	MOVWF       _UART_Wr_Ptr+2, 1
0x252E	0x0E05      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x2530	0x6F7D      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x2532	0x0EFF      	MOVLW       _UART1_Read
0x2534	0x6F7E      	MOVWF       _UART_Rd_Ptr, 1
0x2536	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x2538	0x6F7F      	MOVWF       _UART_Rd_Ptr+1, 1
0x253A	0x0E00      	MOVLW       0
0x253C	0x6F80      	MOVWF       _UART_Rd_Ptr+2, 1
0x253E	0x0E00      	MOVLW       0
0x2540	0x6F81      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x2542	0x0EFF      	MOVLW       _UART1_Data_Ready
0x2544	0x6F6D      	MOVWF       _UART_Rdy_Ptr, 1
0x2546	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x2548	0x6F6E      	MOVWF       _UART_Rdy_Ptr+1, 1
0x254A	0x0E00      	MOVLW       0
0x254C	0x6F6F      	MOVWF       _UART_Rdy_Ptr+2, 1
0x254E	0x0E00      	MOVLW       0
0x2550	0x6F70      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x2552	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x2554	0x6F5F      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x2556	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x2558	0x6F60      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x255A	0x0E00      	MOVLW       0
0x255C	0x6F61      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x255E	0x0E00      	MOVLW       0
0x2560	0x6F62      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x2562	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x2564	0x0E90      	MOVLW       144
0x2566	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x2568	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x256A	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x256C	0xAA9E      	BTFSS       PIR1, 5 
0x256E	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x2570	0xF000CFAE  	MOVFF       RCREG, R0
0x2574	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x2576	0x0012      	RETURN      0
; end of _UART1_Init
_LearnAuto:
;FirmV_0_7_0.c,2101 :: 		void LearnAuto()
;FirmV_0_7_0.c,2107 :: 		switch(LearnPhase)
0x2578	0xD1E2      	BRA         L_LearnAuto526
;FirmV_0_7_0.c,2109 :: 		case 0:
L_LearnAuto528:
;FirmV_0_7_0.c,2110 :: 		if(Events.Remote.b0==1) {DoorNo=2; LearnPhase=LearnPhase+1;} if(Events.Remote.b1==1) {DoorNo=1;LearnPhase=3;}
0x257A	0x0101      	MOVLB       1
0x257C	0xA175      	BTFSS       _Events+4, 0, 1
0x257E	0xD003      	BRA         L_LearnAuto529
0x2580	0x0E02      	MOVLW       2
0x2582	0x6F2E      	MOVWF       LearnAuto_DoorNo_L0, 1
0x2584	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnAuto529:
0x2586	0xA375      	BTFSS       _Events+4, 1, 1
0x2588	0xD004      	BRA         L_LearnAuto530
0x258A	0x0E01      	MOVLW       1
0x258C	0x6F2E      	MOVWF       LearnAuto_DoorNo_L0, 1
0x258E	0x0E03      	MOVLW       3
0x2590	0x6F63      	MOVWF       _LearnPhase, 1
L_LearnAuto530:
;FirmV_0_7_0.c,2111 :: 		break;
0x2592	0xD20E      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2113 :: 		case 1: //Start D2 and enable overload sensing after 1s
L_LearnAuto531:
;FirmV_0_7_0.c,2114 :: 		StartMotor(2,_Close);AddTask(ms500+2,21);LearnPhase=LearnPhase+1;
0x2594	0x0E02      	MOVLW       2
0x2596	0x0103      	MOVLB       3
0x2598	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x259A	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x259C	0xF006EC0E  	CALL        _StartMotor, 0
0x25A0	0x0E02      	MOVLW       2
0x25A2	0x0100      	MOVLB       0
0x25A4	0x25EE      	ADDWF       _ms500, 0, 1
0x25A6	0x0103      	MOVLB       3
0x25A8	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x25AA	0x0E00      	MOVLW       0
0x25AC	0x0100      	MOVLB       0
0x25AE	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x25B0	0x0103      	MOVLB       3
0x25B2	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x25B4	0x0E00      	MOVLW       0
0x25B6	0x0100      	MOVLB       0
0x25B8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x25BA	0x0103      	MOVLB       3
0x25BC	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x25BE	0x0E00      	MOVLW       0
0x25C0	0x0100      	MOVLB       0
0x25C2	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x25C4	0x0103      	MOVLB       3
0x25C6	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x25C8	0x0E15      	MOVLW       21
0x25CA	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x25CC	0xF00DEC7B  	CALL        _AddTask, 0
0x25D0	0x0101      	MOVLB       1
0x25D2	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2115 :: 		break;
0x25D4	0xD1ED      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2117 :: 		case 2: //Check if D2 reaches end of its course
L_LearnAuto532:
;FirmV_0_7_0.c,2118 :: 		if(Events.Overload.b1==1){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;}
0x25D6	0xA376      	BTFSS       _Events+5, 1, 1
0x25D8	0xD008      	BRA         L_LearnAuto533
0x25DA	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x25DC	0x0E02      	MOVLW       2
0x25DE	0x0103      	MOVLB       3
0x25E0	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x25E2	0xF007EC3B  	CALL        _StopMotor, 0
0x25E6	0x0101      	MOVLB       1
0x25E8	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnAuto533:
;FirmV_0_7_0.c,2119 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x25EA	0x0E15      	MOVLW       21
0x25EC	0x0103      	MOVLB       3
0x25EE	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x25F0	0xF007EC58  	CALL        _CheckTask, 0
0x25F4	0x5200      	MOVF        R0, 1 
0x25F6	0xE003      	BZ          L_LearnAuto534
0x25F8	0x0E01      	MOVLW       1
0x25FA	0x0101      	MOVLB       1
0x25FC	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
L_LearnAuto534:
;FirmV_0_7_0.c,2120 :: 		break;
0x25FE	0xD1D8      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2122 :: 		case 3: //Start D1 and enable overload sensin after 1 s
L_LearnAuto535:
;FirmV_0_7_0.c,2123 :: 		StartMotor(1,_Close);AddTask(ms500+2,20);LearnPhase=LearnPhase+1;;
0x2600	0x0E01      	MOVLW       1
0x2602	0x0103      	MOVLB       3
0x2604	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x2606	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x2608	0xF006EC0E  	CALL        _StartMotor, 0
0x260C	0x0E02      	MOVLW       2
0x260E	0x0100      	MOVLB       0
0x2610	0x25EE      	ADDWF       _ms500, 0, 1
0x2612	0x0103      	MOVLB       3
0x2614	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2616	0x0E00      	MOVLW       0
0x2618	0x0100      	MOVLB       0
0x261A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x261C	0x0103      	MOVLB       3
0x261E	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2620	0x0E00      	MOVLW       0
0x2622	0x0100      	MOVLB       0
0x2624	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2626	0x0103      	MOVLB       3
0x2628	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x262A	0x0E00      	MOVLW       0
0x262C	0x0100      	MOVLB       0
0x262E	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2630	0x0103      	MOVLB       3
0x2632	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2634	0x0E14      	MOVLW       20
0x2636	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2638	0xF00DEC7B  	CALL        _AddTask, 0
0x263C	0x0101      	MOVLB       1
0x263E	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2125 :: 		case 4: //Check if D1 reaches end of its course
L_LearnAuto536:
;FirmV_0_7_0.c,2126 :: 		if(Events.Overload.b0==1){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;}
0x2640	0xA176      	BTFSS       _Events+5, 0, 1
0x2642	0xD008      	BRA         L_LearnAuto537
0x2644	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x2646	0x0E01      	MOVLW       1
0x2648	0x0103      	MOVLB       3
0x264A	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x264C	0xF007EC3B  	CALL        _StopMotor, 0
0x2650	0x0101      	MOVLB       1
0x2652	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnAuto537:
;FirmV_0_7_0.c,2127 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x2654	0x0E14      	MOVLW       20
0x2656	0x0103      	MOVLB       3
0x2658	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x265A	0xF007EC58  	CALL        _CheckTask, 0
0x265E	0x5200      	MOVF        R0, 1 
0x2660	0xE003      	BZ          L_LearnAuto538
0x2662	0x0E01      	MOVLW       1
0x2664	0x0101      	MOVLB       1
0x2666	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto538:
;FirmV_0_7_0.c,2128 :: 		break;
0x2668	0xD1A3      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2130 :: 		case 5: //Start D1 for opening and save start time and enable overload sensing after 1s
L_LearnAuto539:
;FirmV_0_7_0.c,2131 :: 		startT=ms500;StartMotor(1,_Open);AddTask(ms500+2,20);LearnPhase=LearnPhase+1;
0x266A	0xF13BC0EE  	MOVFF       _ms500, LearnAuto_startT_L0
0x266E	0xF13CC0EF  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x2672	0xF13DC0F0  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x2676	0xF13EC0F1  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x267A	0x0E01      	MOVLW       1
0x267C	0x0103      	MOVLB       3
0x267E	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x2680	0x0E01      	MOVLW       1
0x2682	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x2684	0xF006EC0E  	CALL        _StartMotor, 0
0x2688	0x0E02      	MOVLW       2
0x268A	0x0100      	MOVLB       0
0x268C	0x25EE      	ADDWF       _ms500, 0, 1
0x268E	0x0103      	MOVLB       3
0x2690	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2692	0x0E00      	MOVLW       0
0x2694	0x0100      	MOVLB       0
0x2696	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2698	0x0103      	MOVLB       3
0x269A	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x269C	0x0E00      	MOVLW       0
0x269E	0x0100      	MOVLB       0
0x26A0	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x26A2	0x0103      	MOVLB       3
0x26A4	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x26A6	0x0E00      	MOVLW       0
0x26A8	0x0100      	MOVLB       0
0x26AA	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x26AC	0x0103      	MOVLB       3
0x26AE	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x26B0	0x0E14      	MOVLW       20
0x26B2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x26B4	0xF00DEC7B  	CALL        _AddTask, 0
0x26B8	0x0101      	MOVLB       1
0x26BA	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2132 :: 		break;
0x26BC	0xD179      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2134 :: 		case 6: //Check if D1 reaches end of its course and save the stop time
L_LearnAuto540:
;FirmV_0_7_0.c,2135 :: 		if(Events.Overload.b0==1){OverloadCheckFlag1=0;StopMotor(1);if(DoorNo==1)LearnPhase=11;else LearnPhase=LearnPhase+1;stopT=ms500;RawData.D1OpenTime=(char)(stopT-startT);}
0x26BE	0xA176      	BTFSS       _Events+5, 0, 1
0x26C0	0xD014      	BRA         L_LearnAuto541
0x26C2	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x26C4	0x0E01      	MOVLW       1
0x26C6	0x0103      	MOVLB       3
0x26C8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x26CA	0xF007EC3B  	CALL        _StopMotor, 0
0x26CE	0x0101      	MOVLB       1
0x26D0	0x512E      	MOVF        LearnAuto_DoorNo_L0, 0, 1
0x26D2	0x0A01      	XORLW       1
0x26D4	0xE103      	BNZ         L_LearnAuto542
0x26D6	0x0E0B      	MOVLW       11
0x26D8	0x6F63      	MOVWF       _LearnPhase, 1
0x26DA	0xD001      	BRA         L_LearnAuto543
L_LearnAuto542:
0x26DC	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnAuto543:
0x26DE	0x513B      	MOVF        LearnAuto_startT_L0, 0, 1
0x26E0	0x0100      	MOVLB       0
0x26E2	0x5DEE      	SUBWF       _ms500, 0, 1
0x26E4	0x6E00      	MOVWF       R0 
0x26E6	0xF130C000  	MOVFF       R0, LearnAuto_RawData_L0+1
L_LearnAuto541:
;FirmV_0_7_0.c,2136 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x26EA	0x0E14      	MOVLW       20
0x26EC	0x0103      	MOVLB       3
0x26EE	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x26F0	0xF007EC58  	CALL        _CheckTask, 0
0x26F4	0x5200      	MOVF        R0, 1 
0x26F6	0xE003      	BZ          L_LearnAuto544
0x26F8	0x0E01      	MOVLW       1
0x26FA	0x0101      	MOVLB       1
0x26FC	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto544:
;FirmV_0_7_0.c,2137 :: 		break;
0x26FE	0xD158      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2139 :: 		case 7: //Start D2 for opening and save start time and enable overload sensing after 1s
L_LearnAuto545:
;FirmV_0_7_0.c,2140 :: 		startT=ms500;StartMotor(2,_Open);AddTask(ms500+2,21);LearnPhase=LearnPhase+1;
0x2700	0xF13BC0EE  	MOVFF       _ms500, LearnAuto_startT_L0
0x2704	0xF13CC0EF  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x2708	0xF13DC0F0  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x270C	0xF13EC0F1  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x2710	0x0E02      	MOVLW       2
0x2712	0x0103      	MOVLB       3
0x2714	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x2716	0x0E01      	MOVLW       1
0x2718	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x271A	0xF006EC0E  	CALL        _StartMotor, 0
0x271E	0x0E02      	MOVLW       2
0x2720	0x0100      	MOVLB       0
0x2722	0x25EE      	ADDWF       _ms500, 0, 1
0x2724	0x0103      	MOVLB       3
0x2726	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2728	0x0E00      	MOVLW       0
0x272A	0x0100      	MOVLB       0
0x272C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x272E	0x0103      	MOVLB       3
0x2730	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2732	0x0E00      	MOVLW       0
0x2734	0x0100      	MOVLB       0
0x2736	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2738	0x0103      	MOVLB       3
0x273A	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x273C	0x0E00      	MOVLW       0
0x273E	0x0100      	MOVLB       0
0x2740	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2742	0x0103      	MOVLB       3
0x2744	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2746	0x0E15      	MOVLW       21
0x2748	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x274A	0xF00DEC7B  	CALL        _AddTask, 0
0x274E	0x0101      	MOVLB       1
0x2750	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2141 :: 		break;
0x2752	0xD12E      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2143 :: 		case 8: //Check if D2 reaches end of its course and save the stop time
L_LearnAuto546:
;FirmV_0_7_0.c,2144 :: 		if(Events.Overload.b1==1){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D2OpenTime=(char)(stopT-startT);}
0x2754	0xA376      	BTFSS       _Events+5, 1, 1
0x2756	0xD00E      	BRA         L_LearnAuto547
0x2758	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x275A	0x0E02      	MOVLW       2
0x275C	0x0103      	MOVLB       3
0x275E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x2760	0xF007EC3B  	CALL        _StopMotor, 0
0x2764	0x0101      	MOVLB       1
0x2766	0x2B63      	INCF        _LearnPhase, 1, 1
0x2768	0x513B      	MOVF        LearnAuto_startT_L0, 0, 1
0x276A	0x0100      	MOVLB       0
0x276C	0x5DEE      	SUBWF       _ms500, 0, 1
0x276E	0x6E00      	MOVWF       R0 
0x2770	0xF132C000  	MOVFF       R0, LearnAuto_RawData_L0+3
L_LearnAuto547:
;FirmV_0_7_0.c,2145 :: 		if(CheckTask(21))OverloadCheckFlag1=1;
0x2774	0x0E15      	MOVLW       21
0x2776	0x0103      	MOVLB       3
0x2778	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x277A	0xF007EC58  	CALL        _CheckTask, 0
0x277E	0x5200      	MOVF        R0, 1 
0x2780	0xE003      	BZ          L_LearnAuto548
0x2782	0x0E01      	MOVLW       1
0x2784	0x0101      	MOVLB       1
0x2786	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto548:
;FirmV_0_7_0.c,2146 :: 		break;
0x2788	0xD113      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2148 :: 		case 9: //Start D2 for closing and save start time and enable overload sensing after 1s
L_LearnAuto549:
;FirmV_0_7_0.c,2149 :: 		startT=ms500;StartMotor(2,_Close);AddTask(ms500+2,21);LearnPhase=LearnPhase+1;
0x278A	0xF13BC0EE  	MOVFF       _ms500, LearnAuto_startT_L0
0x278E	0xF13CC0EF  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x2792	0xF13DC0F0  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x2796	0xF13EC0F1  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x279A	0x0E02      	MOVLW       2
0x279C	0x0103      	MOVLB       3
0x279E	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x27A0	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x27A2	0xF006EC0E  	CALL        _StartMotor, 0
0x27A6	0x0E02      	MOVLW       2
0x27A8	0x0100      	MOVLB       0
0x27AA	0x25EE      	ADDWF       _ms500, 0, 1
0x27AC	0x0103      	MOVLB       3
0x27AE	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x27B0	0x0E00      	MOVLW       0
0x27B2	0x0100      	MOVLB       0
0x27B4	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x27B6	0x0103      	MOVLB       3
0x27B8	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x27BA	0x0E00      	MOVLW       0
0x27BC	0x0100      	MOVLB       0
0x27BE	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x27C0	0x0103      	MOVLB       3
0x27C2	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x27C4	0x0E00      	MOVLW       0
0x27C6	0x0100      	MOVLB       0
0x27C8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x27CA	0x0103      	MOVLB       3
0x27CC	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x27CE	0x0E15      	MOVLW       21
0x27D0	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x27D2	0xF00DEC7B  	CALL        _AddTask, 0
0x27D6	0x0101      	MOVLB       1
0x27D8	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2150 :: 		break;
0x27DA	0xD0EA      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2152 :: 		case 10: //Check if D2 reaches end of its course and save the stop time
L_LearnAuto550:
;FirmV_0_7_0.c,2153 :: 		if(Events.Overload.b1==1){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D2CloseTime=(char)(stopT-startT);}
0x27DC	0xA376      	BTFSS       _Events+5, 1, 1
0x27DE	0xD00E      	BRA         L_LearnAuto551
0x27E0	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x27E2	0x0E02      	MOVLW       2
0x27E4	0x0103      	MOVLB       3
0x27E6	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x27E8	0xF007EC3B  	CALL        _StopMotor, 0
0x27EC	0x0101      	MOVLB       1
0x27EE	0x2B63      	INCF        _LearnPhase, 1, 1
0x27F0	0x513B      	MOVF        LearnAuto_startT_L0, 0, 1
0x27F2	0x0100      	MOVLB       0
0x27F4	0x5DEE      	SUBWF       _ms500, 0, 1
0x27F6	0x6E00      	MOVWF       R0 
0x27F8	0xF131C000  	MOVFF       R0, LearnAuto_RawData_L0+2
L_LearnAuto551:
;FirmV_0_7_0.c,2154 :: 		if(CheckTask(21))OverloadCheckFlag1=1;
0x27FC	0x0E15      	MOVLW       21
0x27FE	0x0103      	MOVLB       3
0x2800	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2802	0xF007EC58  	CALL        _CheckTask, 0
0x2806	0x5200      	MOVF        R0, 1 
0x2808	0xE003      	BZ          L_LearnAuto552
0x280A	0x0E01      	MOVLW       1
0x280C	0x0101      	MOVLB       1
0x280E	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto552:
;FirmV_0_7_0.c,2155 :: 		break;
0x2810	0xD0CF      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2157 :: 		case 11: //Start D1 for closing and save start time and enable overload sensing after 1s
L_LearnAuto553:
;FirmV_0_7_0.c,2158 :: 		startT=ms500;StartMotor(1,_Close);AddTask(ms500+2,20);LearnPhase=LearnPhase+1;
0x2812	0xF13BC0EE  	MOVFF       _ms500, LearnAuto_startT_L0
0x2816	0xF13CC0EF  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x281A	0xF13DC0F0  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x281E	0xF13EC0F1  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x2822	0x0E01      	MOVLW       1
0x2824	0x0103      	MOVLB       3
0x2826	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x2828	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x282A	0xF006EC0E  	CALL        _StartMotor, 0
0x282E	0x0E02      	MOVLW       2
0x2830	0x0100      	MOVLB       0
0x2832	0x25EE      	ADDWF       _ms500, 0, 1
0x2834	0x0103      	MOVLB       3
0x2836	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2838	0x0E00      	MOVLW       0
0x283A	0x0100      	MOVLB       0
0x283C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x283E	0x0103      	MOVLB       3
0x2840	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2842	0x0E00      	MOVLW       0
0x2844	0x0100      	MOVLB       0
0x2846	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2848	0x0103      	MOVLB       3
0x284A	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x284C	0x0E00      	MOVLW       0
0x284E	0x0100      	MOVLB       0
0x2850	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2852	0x0103      	MOVLB       3
0x2854	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2856	0x0E14      	MOVLW       20
0x2858	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x285A	0xF00DEC7B  	CALL        _AddTask, 0
0x285E	0x0101      	MOVLB       1
0x2860	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2159 :: 		break;
0x2862	0xD0A6      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2161 :: 		case 12: //Check if D1 reaches end of its course and save the stop time
L_LearnAuto554:
;FirmV_0_7_0.c,2162 :: 		if(Events.Overload.b0==1){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D1CloseTime=(char)(stopT-startT);}
0x2864	0xA176      	BTFSS       _Events+5, 0, 1
0x2866	0xD00E      	BRA         L_LearnAuto555
0x2868	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x286A	0x0E01      	MOVLW       1
0x286C	0x0103      	MOVLB       3
0x286E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x2870	0xF007EC3B  	CALL        _StopMotor, 0
0x2874	0x0101      	MOVLB       1
0x2876	0x2B63      	INCF        _LearnPhase, 1, 1
0x2878	0x513B      	MOVF        LearnAuto_startT_L0, 0, 1
0x287A	0x0100      	MOVLB       0
0x287C	0x5DEE      	SUBWF       _ms500, 0, 1
0x287E	0x6E00      	MOVWF       R0 
0x2880	0xF12FC000  	MOVFF       R0, LearnAuto_RawData_L0
L_LearnAuto555:
;FirmV_0_7_0.c,2163 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x2884	0x0E14      	MOVLW       20
0x2886	0x0103      	MOVLB       3
0x2888	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x288A	0xF007EC58  	CALL        _CheckTask, 0
0x288E	0x5200      	MOVF        R0, 1 
0x2890	0xE003      	BZ          L_LearnAuto556
0x2892	0x0E01      	MOVLW       1
0x2894	0x0101      	MOVLB       1
0x2896	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto556:
;FirmV_0_7_0.c,2164 :: 		break;
0x2898	0xD08B      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2166 :: 		case 13:
L_LearnAuto557:
;FirmV_0_7_0.c,2167 :: 		AutoLearnCalculator(&RawData);
0x289A	0x0E2F      	MOVLW       LearnAuto_RawData_L0
0x289C	0x0103      	MOVLB       3
0x289E	0x6F4F      	MOVWF       FARG_AutoLearnCalculator_raw, 1
0x28A0	0x0E01      	MOVLW       hi_addr(LearnAuto_RawData_L0)
0x28A2	0x6F50      	MOVWF       FARG_AutoLearnCalculator_raw+1, 1
0x28A4	0xF00CEC2D  	CALL        _AutoLearnCalculator, 0
;FirmV_0_7_0.c,2168 :: 		SaveLearnData(&RawData,DoorNo);
0x28A8	0x0E2F      	MOVLW       LearnAuto_RawData_L0
0x28AA	0x6F4F      	MOVWF       FARG_SaveLearnData_d, 1
0x28AC	0x0E01      	MOVLW       hi_addr(LearnAuto_RawData_L0)
0x28AE	0x6F50      	MOVWF       FARG_SaveLearnData_d+1, 1
0x28B0	0xF351C12E  	MOVFF       LearnAuto_DoorNo_L0, FARG_SaveLearnData_DCount
0x28B4	0xF00CECBC  	CALL        _SaveLearnData, 0
;FirmV_0_7_0.c,2169 :: 		memcpy(LCDLine1,"Learn Complete  ",16);
0x28B8	0x0EF3      	MOVLW       _LCDLine1
0x28BA	0x0105      	MOVLB       5
0x28BC	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x28BE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x28C0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x28C2	0x0E79      	MOVLW       ?ICS?lstr103_FirmV_0_7_0
0x28C4	0x6EF6      	MOVWF       4086 
0x28C6	0x0E75      	MOVLW       hi_addr(?ICS?lstr103_FirmV_0_7_0)
0x28C8	0x6EF7      	MOVWF       TBLPTRH 
0x28CA	0x0E00      	MOVLW       higher_addr(?ICS?lstr103_FirmV_0_7_0)
0x28CC	0x6EF8      	MOVWF       TBLPTRU 
0x28CE	0x0E35      	MOVLW       ?lstr103_FirmV_0_7_0
0x28D0	0x6EE1      	MOVWF       FSR1L 
0x28D2	0x0E02      	MOVLW       hi_addr(?lstr103_FirmV_0_7_0)
0x28D4	0x6EE2      	MOVWF       FSR1H 
0x28D6	0x0E11      	MOVLW       17
0x28D8	0x6E00      	MOVWF       R0 
0x28DA	0x0E01      	MOVLW       1
0x28DC	0x6E01      	MOVWF       R1 
0x28DE	0xF004EC95  	CALL        ___CC2DW, 0
0x28E2	0x0E35      	MOVLW       ?lstr103_FirmV_0_7_0
0x28E4	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x28E6	0x0E02      	MOVLW       hi_addr(?lstr103_FirmV_0_7_0)
0x28E8	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x28EA	0x0E10      	MOVLW       16
0x28EC	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x28EE	0x0E00      	MOVLW       0
0x28F0	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x28F2	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2170 :: 		memcpy(LCDLine2,"     Ready      ",16);
0x28F6	0x0E04      	MOVLW       _LCDLine2
0x28F8	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x28FA	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x28FC	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x28FE	0x0E8A      	MOVLW       ?ICS?lstr104_FirmV_0_7_0
0x2900	0x6EF6      	MOVWF       4086 
0x2902	0x0E75      	MOVLW       hi_addr(?ICS?lstr104_FirmV_0_7_0)
0x2904	0x6EF7      	MOVWF       TBLPTRH 
0x2906	0x0E00      	MOVLW       higher_addr(?ICS?lstr104_FirmV_0_7_0)
0x2908	0x6EF8      	MOVWF       TBLPTRU 
0x290A	0x0E46      	MOVLW       ?lstr104_FirmV_0_7_0
0x290C	0x6EE1      	MOVWF       FSR1L 
0x290E	0x0E02      	MOVLW       hi_addr(?lstr104_FirmV_0_7_0)
0x2910	0x6EE2      	MOVWF       FSR1H 
0x2912	0x0E11      	MOVLW       17
0x2914	0x6E00      	MOVWF       R0 
0x2916	0x0E01      	MOVLW       1
0x2918	0x6E01      	MOVWF       R1 
0x291A	0xF004EC95  	CALL        ___CC2DW, 0
0x291E	0x0E46      	MOVLW       ?lstr104_FirmV_0_7_0
0x2920	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x2922	0x0E02      	MOVLW       hi_addr(?lstr104_FirmV_0_7_0)
0x2924	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x2926	0x0E10      	MOVLW       16
0x2928	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x292A	0x0E00      	MOVLW       0
0x292C	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x292E	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2171 :: 		LCDUpdateFlag=1;
0x2932	0x0E01      	MOVLW       1
0x2934	0x0101      	MOVLB       1
0x2936	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2172 :: 		State=0;
0x2938	0x0100      	MOVLB       0
0x293A	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,2173 :: 		break;
0x293C	0xD039      	BRA         L_LearnAuto527
;FirmV_0_7_0.c,2176 :: 		}
L_LearnAuto526:
0x293E	0x0101      	MOVLB       1
0x2940	0x5163      	MOVF        _LearnPhase, 0, 1
0x2942	0x0A00      	XORLW       0
0x2944	0xB4D8      	BTFSC       STATUS, 2 
0x2946	0xD619      	BRA         L_LearnAuto528
0x2948	0x5163      	MOVF        _LearnPhase, 0, 1
0x294A	0x0A01      	XORLW       1
0x294C	0xB4D8      	BTFSC       STATUS, 2 
0x294E	0xD622      	BRA         L_LearnAuto531
0x2950	0x5163      	MOVF        _LearnPhase, 0, 1
0x2952	0x0A02      	XORLW       2
0x2954	0xB4D8      	BTFSC       STATUS, 2 
0x2956	0xD63F      	BRA         L_LearnAuto532
0x2958	0x5163      	MOVF        _LearnPhase, 0, 1
0x295A	0x0A03      	XORLW       3
0x295C	0xB4D8      	BTFSC       STATUS, 2 
0x295E	0xD650      	BRA         L_LearnAuto535
0x2960	0x5163      	MOVF        _LearnPhase, 0, 1
0x2962	0x0A04      	XORLW       4
0x2964	0xB4D8      	BTFSC       STATUS, 2 
0x2966	0xD66C      	BRA         L_LearnAuto536
0x2968	0x5163      	MOVF        _LearnPhase, 0, 1
0x296A	0x0A05      	XORLW       5
0x296C	0xB4D8      	BTFSC       STATUS, 2 
0x296E	0xD67D      	BRA         L_LearnAuto539
0x2970	0x5163      	MOVF        _LearnPhase, 0, 1
0x2972	0x0A06      	XORLW       6
0x2974	0xB4D8      	BTFSC       STATUS, 2 
0x2976	0xD6A3      	BRA         L_LearnAuto540
0x2978	0x5163      	MOVF        _LearnPhase, 0, 1
0x297A	0x0A07      	XORLW       7
0x297C	0xB4D8      	BTFSC       STATUS, 2 
0x297E	0xD6C0      	BRA         L_LearnAuto545
0x2980	0x5163      	MOVF        _LearnPhase, 0, 1
0x2982	0x0A08      	XORLW       8
0x2984	0xB4D8      	BTFSC       STATUS, 2 
0x2986	0xD6E6      	BRA         L_LearnAuto546
0x2988	0x5163      	MOVF        _LearnPhase, 0, 1
0x298A	0x0A09      	XORLW       9
0x298C	0xB4D8      	BTFSC       STATUS, 2 
0x298E	0xD6FD      	BRA         L_LearnAuto549
0x2990	0x5163      	MOVF        _LearnPhase, 0, 1
0x2992	0x0A0A      	XORLW       10
0x2994	0xB4D8      	BTFSC       STATUS, 2 
0x2996	0xD722      	BRA         L_LearnAuto550
0x2998	0x5163      	MOVF        _LearnPhase, 0, 1
0x299A	0x0A0B      	XORLW       11
0x299C	0xB4D8      	BTFSC       STATUS, 2 
0x299E	0xD739      	BRA         L_LearnAuto553
0x29A0	0x5163      	MOVF        _LearnPhase, 0, 1
0x29A2	0x0A0C      	XORLW       12
0x29A4	0xB4D8      	BTFSC       STATUS, 2 
0x29A6	0xD75E      	BRA         L_LearnAuto554
0x29A8	0x5163      	MOVF        _LearnPhase, 0, 1
0x29AA	0x0A0D      	XORLW       13
0x29AC	0xB4D8      	BTFSC       STATUS, 2 
0x29AE	0xD775      	BRA         L_LearnAuto557
L_LearnAuto527:
;FirmV_0_7_0.c,2180 :: 		}
0x29B0	0x0012      	RETURN      0
; end of _LearnAuto
_State6:
;FirmV_0_7_0.c,915 :: 		void State6()
;FirmV_0_7_0.c,919 :: 		char delay=3;
0x29B2	0x0E03      	MOVLW       3
0x29B4	0x0102      	MOVLB       2
0x29B6	0x6F6B      	MOVWF       State6_delay_L0, 1
;FirmV_0_7_0.c,920 :: 		Flasher=0;
0x29B8	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,921 :: 		if((Events.Remote!=0)||(PhotocellOpenFlag))
0x29BA	0x0101      	MOVLB       1
0x29BC	0x5175      	MOVF        _Events+4, 0, 1
0x29BE	0x0A00      	XORLW       0
0x29C0	0xE103      	BNZ         L__State6652
0x29C2	0x526F      	MOVF        _PhotocellOpenFlag, 1 
0x29C4	0xE101      	BNZ         L__State6652
0x29C6	0xD142      	BRA         L_State6182
L__State6652:
;FirmV_0_7_0.c,923 :: 		PhotocellOpenFlag=0;
0x29C8	0x6A6F      	CLRF        _PhotocellOpenFlag 
;FirmV_0_7_0.c,924 :: 		Flasher=1;
0x29CA	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,925 :: 		ClearTasks(9);
0x29CC	0x0E09      	MOVLW       9
0x29CE	0x0103      	MOVLB       3
0x29D0	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x29D2	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,926 :: 		AddTask(ms500+1,12);
0x29D6	0x0E01      	MOVLW       1
0x29D8	0x0100      	MOVLB       0
0x29DA	0x25EE      	ADDWF       _ms500, 0, 1
0x29DC	0x0103      	MOVLB       3
0x29DE	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x29E0	0x0E00      	MOVLW       0
0x29E2	0x0100      	MOVLB       0
0x29E4	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x29E6	0x0103      	MOVLB       3
0x29E8	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x29EA	0x0E00      	MOVLW       0
0x29EC	0x0100      	MOVLB       0
0x29EE	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x29F0	0x0103      	MOVLB       3
0x29F2	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x29F4	0x0E00      	MOVLW       0
0x29F6	0x0100      	MOVLB       0
0x29F8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x29FA	0x0103      	MOVLB       3
0x29FC	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x29FE	0x0E0C      	MOVLW       12
0x2A00	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2A02	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,927 :: 		temp=ms500+delay;
0x2A06	0x0102      	MOVLB       2
0x2A08	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2A0A	0x0100      	MOVLB       0
0x2A0C	0x25EE      	ADDWF       _ms500, 0, 1
0x2A0E	0x6E00      	MOVWF       R0 
0x2A10	0x0E00      	MOVLW       0
0x2A12	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2A14	0x6E01      	MOVWF       R1 
0x2A16	0x0E00      	MOVLW       0
0x2A18	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2A1A	0x6E02      	MOVWF       R2 
0x2A1C	0x0E00      	MOVLW       0
0x2A1E	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2A20	0x6E03      	MOVWF       R3 
0x2A22	0xF11FC000  	MOVFF       R0, _temp
0x2A26	0xF120C001  	MOVFF       R1, _temp+1
0x2A2A	0xF121C002  	MOVFF       R2, _temp+2
0x2A2E	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,928 :: 		AddTask(temp,1);
0x2A32	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2A36	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2A3A	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2A3E	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2A42	0x0E01      	MOVLW       1
0x2A44	0x0103      	MOVLB       3
0x2A46	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2A48	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,929 :: 		AddTask(temp,5);
0x2A4C	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x2A50	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2A54	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2A58	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x2A5C	0x0E05      	MOVLW       5
0x2A5E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2A60	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,930 :: 		M1isSlow=0;//speed up
0x2A64	0x0100      	MOVLB       0
0x2A66	0x6B97      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,931 :: 		temp=ms500+OverloadDelay+delay;
0x2A68	0x0E02      	MOVLW       2
0x2A6A	0x25EE      	ADDWF       _ms500, 0, 1
0x2A6C	0x6E00      	MOVWF       R0 
0x2A6E	0x0E00      	MOVLW       0
0x2A70	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2A72	0x6E01      	MOVWF       R1 
0x2A74	0x0E00      	MOVLW       0
0x2A76	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2A78	0x6E02      	MOVWF       R2 
0x2A7A	0x0E00      	MOVLW       0
0x2A7C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2A7E	0x6E03      	MOVWF       R3 
0x2A80	0x0102      	MOVLB       2
0x2A82	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2A84	0x2600      	ADDWF       R0, 1 
0x2A86	0x0E00      	MOVLW       0
0x2A88	0x2201      	ADDWFC      R1, 1 
0x2A8A	0x2202      	ADDWFC      R2, 1 
0x2A8C	0x2203      	ADDWFC      R3, 1 
0x2A8E	0xF11FC000  	MOVFF       R0, _temp
0x2A92	0xF120C001  	MOVFF       R1, _temp+1
0x2A96	0xF121C002  	MOVFF       R2, _temp+2
0x2A9A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,932 :: 		AddTask(temp,10); //overload check
0x2A9E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2AA2	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2AA6	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2AAA	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2AAE	0x0E0A      	MOVLW       10
0x2AB0	0x0103      	MOVLB       3
0x2AB2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2AB4	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,933 :: 		temp=ms500+Door1OpenTime+delay;
0x2AB8	0x0102      	MOVLB       2
0x2ABA	0x5116      	MOVF        _Door1OpenTime, 0, 1
0x2ABC	0x0100      	MOVLB       0
0x2ABE	0x25EE      	ADDWF       _ms500, 0, 1
0x2AC0	0x6E00      	MOVWF       R0 
0x2AC2	0x0E00      	MOVLW       0
0x2AC4	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2AC6	0x6E01      	MOVWF       R1 
0x2AC8	0x0E00      	MOVLW       0
0x2ACA	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2ACC	0x6E02      	MOVWF       R2 
0x2ACE	0x0E00      	MOVLW       0
0x2AD0	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2AD2	0x6E03      	MOVWF       R3 
0x2AD4	0x0102      	MOVLB       2
0x2AD6	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2AD8	0x2600      	ADDWF       R0, 1 
0x2ADA	0x0E00      	MOVLW       0
0x2ADC	0x2201      	ADDWFC      R1, 1 
0x2ADE	0x2202      	ADDWFC      R2, 1 
0x2AE0	0x2203      	ADDWFC      R3, 1 
0x2AE2	0xF11FC000  	MOVFF       R0, _temp
0x2AE6	0xF120C001  	MOVFF       R1, _temp+1
0x2AEA	0xF121C002  	MOVFF       R2, _temp+2
0x2AEE	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,934 :: 		AddTask(temp,3);//Stop motor
0x2AF2	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2AF6	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2AFA	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2AFE	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2B02	0x0E03      	MOVLW       3
0x2B04	0x0103      	MOVLB       3
0x2B06	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2B08	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,935 :: 		if((Door2OpenTime!=0)&&(ActiveDoors==2))
0x2B0C	0x0102      	MOVLB       2
0x2B0E	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x2B10	0x0A00      	XORLW       0
0x2B12	0xB4D8      	BTFSC       STATUS, 2 
0x2B14	0xD091      	BRA         L_State6185
0x2B16	0x0100      	MOVLB       0
0x2B18	0x519A      	MOVF        _ActiveDoors, 0, 1
0x2B1A	0x0A02      	XORLW       2
0x2B1C	0xA4D8      	BTFSS       STATUS, 2 
0x2B1E	0xD08C      	BRA         L_State6185
L__State6651:
;FirmV_0_7_0.c,937 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x2B20	0x0102      	MOVLB       2
0x2B22	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2B24	0x0100      	MOVLB       0
0x2B26	0x25EE      	ADDWF       _ms500, 0, 1
0x2B28	0x0103      	MOVLB       3
0x2B2A	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2B2C	0x0E00      	MOVLW       0
0x2B2E	0x0100      	MOVLB       0
0x2B30	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2B32	0x0103      	MOVLB       3
0x2B34	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2B36	0x0E00      	MOVLW       0
0x2B38	0x0100      	MOVLB       0
0x2B3A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2B3C	0x0103      	MOVLB       3
0x2B3E	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2B40	0x0E00      	MOVLW       0
0x2B42	0x0100      	MOVLB       0
0x2B44	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2B46	0x0103      	MOVLB       3
0x2B48	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2B4A	0x0102      	MOVLB       2
0x2B4C	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2B4E	0x0103      	MOVLB       3
0x2B50	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2B52	0x0E00      	MOVLW       0
0x2B54	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2B56	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2B58	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2B5A	0x0E02      	MOVLW       2
0x2B5C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2B5E	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,938 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x2B62	0x0102      	MOVLB       2
0x2B64	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2B66	0x0100      	MOVLB       0
0x2B68	0x25EE      	ADDWF       _ms500, 0, 1
0x2B6A	0x0103      	MOVLB       3
0x2B6C	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2B6E	0x0E00      	MOVLW       0
0x2B70	0x0100      	MOVLB       0
0x2B72	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2B74	0x0103      	MOVLB       3
0x2B76	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2B78	0x0E00      	MOVLW       0
0x2B7A	0x0100      	MOVLB       0
0x2B7C	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2B7E	0x0103      	MOVLB       3
0x2B80	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2B82	0x0E00      	MOVLW       0
0x2B84	0x0100      	MOVLB       0
0x2B86	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2B88	0x0103      	MOVLB       3
0x2B8A	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2B8C	0x0102      	MOVLB       2
0x2B8E	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2B90	0x0103      	MOVLB       3
0x2B92	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2B94	0x0E00      	MOVLW       0
0x2B96	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2B98	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2B9A	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2B9C	0x0E06      	MOVLW       6
0x2B9E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2BA0	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,939 :: 		M2isSlow=0;//speed up
0x2BA4	0x0100      	MOVLB       0
0x2BA6	0x6B98      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,940 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x2BA8	0x0102      	MOVLB       2
0x2BAA	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2BAC	0x0100      	MOVLB       0
0x2BAE	0x25EE      	ADDWF       _ms500, 0, 1
0x2BB0	0x0103      	MOVLB       3
0x2BB2	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2BB4	0x0E00      	MOVLW       0
0x2BB6	0x0100      	MOVLB       0
0x2BB8	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2BBA	0x0103      	MOVLB       3
0x2BBC	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2BBE	0x0E00      	MOVLW       0
0x2BC0	0x0100      	MOVLB       0
0x2BC2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2BC4	0x0103      	MOVLB       3
0x2BC6	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2BC8	0x0E00      	MOVLW       0
0x2BCA	0x0100      	MOVLB       0
0x2BCC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2BCE	0x0103      	MOVLB       3
0x2BD0	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2BD2	0x0E02      	MOVLW       2
0x2BD4	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2BD6	0x0E00      	MOVLW       0
0x2BD8	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2BDA	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2BDC	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2BDE	0x0102      	MOVLB       2
0x2BE0	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2BE2	0x0103      	MOVLB       3
0x2BE4	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2BE6	0x0E00      	MOVLW       0
0x2BE8	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2BEA	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2BEC	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2BEE	0x0E0B      	MOVLW       11
0x2BF0	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2BF2	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,941 :: 		AddTask(ms500+Door2OpenTime+delay,4);//Stop motor
0x2BF6	0x0102      	MOVLB       2
0x2BF8	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x2BFA	0x0100      	MOVLB       0
0x2BFC	0x25EE      	ADDWF       _ms500, 0, 1
0x2BFE	0x0103      	MOVLB       3
0x2C00	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2C02	0x0E00      	MOVLW       0
0x2C04	0x0100      	MOVLB       0
0x2C06	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2C08	0x0103      	MOVLB       3
0x2C0A	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2C0C	0x0E00      	MOVLW       0
0x2C0E	0x0100      	MOVLB       0
0x2C10	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2C12	0x0103      	MOVLB       3
0x2C14	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2C16	0x0E00      	MOVLW       0
0x2C18	0x0100      	MOVLB       0
0x2C1A	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2C1C	0x0103      	MOVLB       3
0x2C1E	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2C20	0x0102      	MOVLB       2
0x2C22	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2C24	0x0103      	MOVLB       3
0x2C26	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2C28	0x0E00      	MOVLW       0
0x2C2A	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2C2C	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2C2E	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2C30	0x0E04      	MOVLW       4
0x2C32	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2C34	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,942 :: 		}
L_State6185:
;FirmV_0_7_0.c,943 :: 		OpenDone=3;
0x2C38	0x0E03      	MOVLW       3
0x2C3A	0x0100      	MOVLB       0
0x2C3C	0x6FC0      	MOVWF       _OpenDone, 1
;FirmV_0_7_0.c,944 :: 		OverloadCheckFlag1=0;
0x2C3E	0x0101      	MOVLB       1
0x2C40	0x6B16      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,945 :: 		OverloadCheckFlag2=0;
0x2C42	0x6B15      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,946 :: 		PassFlag=0;
0x2C44	0x0100      	MOVLB       0
0x2C46	0x6BBE      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,947 :: 		State=8;
0x2C48	0x0E08      	MOVLW       8
0x2C4A	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,948 :: 		}
L_State6182:
;FirmV_0_7_0.c,951 :: 		if(CheckTask(9)==1)
0x2C4C	0x0E09      	MOVLW       9
0x2C4E	0x0103      	MOVLB       3
0x2C50	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2C52	0xF007EC58  	CALL        _CheckTask, 0
0x2C56	0x5000      	MOVF        R0, 0 
0x2C58	0x0A01      	XORLW       1
0x2C5A	0xA4D8      	BTFSS       STATUS, 2 
0x2C5C	0xD128      	BRA         L_State6186
;FirmV_0_7_0.c,953 :: 		ClearTasks(9);
0x2C5E	0x0E09      	MOVLW       9
0x2C60	0x0103      	MOVLB       3
0x2C62	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x2C64	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,954 :: 		temp=ms500+delay;
0x2C68	0x0102      	MOVLB       2
0x2C6A	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2C6C	0x0100      	MOVLB       0
0x2C6E	0x25EE      	ADDWF       _ms500, 0, 1
0x2C70	0x6E00      	MOVWF       R0 
0x2C72	0x0E00      	MOVLW       0
0x2C74	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2C76	0x6E01      	MOVWF       R1 
0x2C78	0x0E00      	MOVLW       0
0x2C7A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2C7C	0x6E02      	MOVWF       R2 
0x2C7E	0x0E00      	MOVLW       0
0x2C80	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2C82	0x6E03      	MOVWF       R3 
0x2C84	0xF11FC000  	MOVFF       R0, _temp
0x2C88	0xF120C001  	MOVFF       R1, _temp+1
0x2C8C	0xF121C002  	MOVFF       R2, _temp+2
0x2C90	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,955 :: 		AddTask(temp,1);
0x2C94	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2C98	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2C9C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2CA0	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2CA4	0x0E01      	MOVLW       1
0x2CA6	0x0103      	MOVLB       3
0x2CA8	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2CAA	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,956 :: 		AddTask(temp,5);
0x2CAE	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x2CB2	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2CB6	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2CBA	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x2CBE	0x0E05      	MOVLW       5
0x2CC0	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2CC2	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,957 :: 		M1isSlow=0;//speed up
0x2CC6	0x0100      	MOVLB       0
0x2CC8	0x6B97      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,958 :: 		temp=ms500+OverloadDelay+delay;
0x2CCA	0x0E02      	MOVLW       2
0x2CCC	0x25EE      	ADDWF       _ms500, 0, 1
0x2CCE	0x6E00      	MOVWF       R0 
0x2CD0	0x0E00      	MOVLW       0
0x2CD2	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2CD4	0x6E01      	MOVWF       R1 
0x2CD6	0x0E00      	MOVLW       0
0x2CD8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2CDA	0x6E02      	MOVWF       R2 
0x2CDC	0x0E00      	MOVLW       0
0x2CDE	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2CE0	0x6E03      	MOVWF       R3 
0x2CE2	0x0102      	MOVLB       2
0x2CE4	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2CE6	0x2600      	ADDWF       R0, 1 
0x2CE8	0x0E00      	MOVLW       0
0x2CEA	0x2201      	ADDWFC      R1, 1 
0x2CEC	0x2202      	ADDWFC      R2, 1 
0x2CEE	0x2203      	ADDWFC      R3, 1 
0x2CF0	0xF11FC000  	MOVFF       R0, _temp
0x2CF4	0xF120C001  	MOVFF       R1, _temp+1
0x2CF8	0xF121C002  	MOVFF       R2, _temp+2
0x2CFC	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,959 :: 		AddTask(temp,10); //overload check
0x2D00	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2D04	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2D08	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2D0C	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2D10	0x0E0A      	MOVLW       10
0x2D12	0x0103      	MOVLB       3
0x2D14	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2D16	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,960 :: 		temp=ms500+Door1CloseTime+delay;
0x2D1A	0x0102      	MOVLB       2
0x2D1C	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x2D1E	0x0100      	MOVLB       0
0x2D20	0x25EE      	ADDWF       _ms500, 0, 1
0x2D22	0x6E00      	MOVWF       R0 
0x2D24	0x0E00      	MOVLW       0
0x2D26	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2D28	0x6E01      	MOVWF       R1 
0x2D2A	0x0E00      	MOVLW       0
0x2D2C	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2D2E	0x6E02      	MOVWF       R2 
0x2D30	0x0E00      	MOVLW       0
0x2D32	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2D34	0x6E03      	MOVWF       R3 
0x2D36	0x0102      	MOVLB       2
0x2D38	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2D3A	0x2600      	ADDWF       R0, 1 
0x2D3C	0x0E00      	MOVLW       0
0x2D3E	0x2201      	ADDWFC      R1, 1 
0x2D40	0x2202      	ADDWFC      R2, 1 
0x2D42	0x2203      	ADDWFC      R3, 1 
0x2D44	0xF11FC000  	MOVFF       R0, _temp
0x2D48	0xF120C001  	MOVFF       R1, _temp+1
0x2D4C	0xF121C002  	MOVFF       R2, _temp+2
0x2D50	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,961 :: 		AddTask(temp,3);//Stop motor
0x2D54	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2D58	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2D5C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2D60	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2D64	0x0E03      	MOVLW       3
0x2D66	0x0103      	MOVLB       3
0x2D68	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2D6A	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,963 :: 		if((Door2CloseTime!=0)&&(ActiveDoors==2))
0x2D6E	0x0102      	MOVLB       2
0x2D70	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x2D72	0x0A00      	XORLW       0
0x2D74	0xB4D8      	BTFSC       STATUS, 2 
0x2D76	0xD091      	BRA         L_State6189
0x2D78	0x0100      	MOVLB       0
0x2D7A	0x519A      	MOVF        _ActiveDoors, 0, 1
0x2D7C	0x0A02      	XORLW       2
0x2D7E	0xA4D8      	BTFSS       STATUS, 2 
0x2D80	0xD08C      	BRA         L_State6189
L__State6650:
;FirmV_0_7_0.c,965 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x2D82	0x0102      	MOVLB       2
0x2D84	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2D86	0x0100      	MOVLB       0
0x2D88	0x25EE      	ADDWF       _ms500, 0, 1
0x2D8A	0x0103      	MOVLB       3
0x2D8C	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2D8E	0x0E00      	MOVLW       0
0x2D90	0x0100      	MOVLB       0
0x2D92	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2D94	0x0103      	MOVLB       3
0x2D96	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2D98	0x0E00      	MOVLW       0
0x2D9A	0x0100      	MOVLB       0
0x2D9C	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2D9E	0x0103      	MOVLB       3
0x2DA0	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2DA2	0x0E00      	MOVLW       0
0x2DA4	0x0100      	MOVLB       0
0x2DA6	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2DA8	0x0103      	MOVLB       3
0x2DAA	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2DAC	0x0102      	MOVLB       2
0x2DAE	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2DB0	0x0103      	MOVLB       3
0x2DB2	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2DB4	0x0E00      	MOVLW       0
0x2DB6	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2DB8	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2DBA	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2DBC	0x0E02      	MOVLW       2
0x2DBE	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2DC0	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,966 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x2DC4	0x0102      	MOVLB       2
0x2DC6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2DC8	0x0100      	MOVLB       0
0x2DCA	0x25EE      	ADDWF       _ms500, 0, 1
0x2DCC	0x0103      	MOVLB       3
0x2DCE	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2DD0	0x0E00      	MOVLW       0
0x2DD2	0x0100      	MOVLB       0
0x2DD4	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2DD6	0x0103      	MOVLB       3
0x2DD8	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2DDA	0x0E00      	MOVLW       0
0x2DDC	0x0100      	MOVLB       0
0x2DDE	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2DE0	0x0103      	MOVLB       3
0x2DE2	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2DE4	0x0E00      	MOVLW       0
0x2DE6	0x0100      	MOVLB       0
0x2DE8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2DEA	0x0103      	MOVLB       3
0x2DEC	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2DEE	0x0102      	MOVLB       2
0x2DF0	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2DF2	0x0103      	MOVLB       3
0x2DF4	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2DF6	0x0E00      	MOVLW       0
0x2DF8	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2DFA	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2DFC	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2DFE	0x0E06      	MOVLW       6
0x2E00	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2E02	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,967 :: 		M2isSlow=0;//speed up
0x2E06	0x0100      	MOVLB       0
0x2E08	0x6B98      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,968 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x2E0A	0x0102      	MOVLB       2
0x2E0C	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2E0E	0x0100      	MOVLB       0
0x2E10	0x25EE      	ADDWF       _ms500, 0, 1
0x2E12	0x0103      	MOVLB       3
0x2E14	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2E16	0x0E00      	MOVLW       0
0x2E18	0x0100      	MOVLB       0
0x2E1A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2E1C	0x0103      	MOVLB       3
0x2E1E	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2E20	0x0E00      	MOVLW       0
0x2E22	0x0100      	MOVLB       0
0x2E24	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2E26	0x0103      	MOVLB       3
0x2E28	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2E2A	0x0E00      	MOVLW       0
0x2E2C	0x0100      	MOVLB       0
0x2E2E	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2E30	0x0103      	MOVLB       3
0x2E32	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2E34	0x0E02      	MOVLW       2
0x2E36	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2E38	0x0E00      	MOVLW       0
0x2E3A	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2E3C	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2E3E	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2E40	0x0102      	MOVLB       2
0x2E42	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2E44	0x0103      	MOVLB       3
0x2E46	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2E48	0x0E00      	MOVLW       0
0x2E4A	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2E4C	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2E4E	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2E50	0x0E0B      	MOVLW       11
0x2E52	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2E54	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,969 :: 		AddTask(ms500+Door1CloseTime+delay,4);//Stop motor
0x2E58	0x0102      	MOVLB       2
0x2E5A	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x2E5C	0x0100      	MOVLB       0
0x2E5E	0x25EE      	ADDWF       _ms500, 0, 1
0x2E60	0x0103      	MOVLB       3
0x2E62	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x2E64	0x0E00      	MOVLW       0
0x2E66	0x0100      	MOVLB       0
0x2E68	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2E6A	0x0103      	MOVLB       3
0x2E6C	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2E6E	0x0E00      	MOVLW       0
0x2E70	0x0100      	MOVLB       0
0x2E72	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2E74	0x0103      	MOVLB       3
0x2E76	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2E78	0x0E00      	MOVLW       0
0x2E7A	0x0100      	MOVLB       0
0x2E7C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2E7E	0x0103      	MOVLB       3
0x2E80	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2E82	0x0102      	MOVLB       2
0x2E84	0x516B      	MOVF        State6_delay_L0, 0, 1
0x2E86	0x0103      	MOVLB       3
0x2E88	0x274F      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x2E8A	0x0E00      	MOVLW       0
0x2E8C	0x2350      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x2E8E	0x2351      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x2E90	0x2352      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x2E92	0x0E04      	MOVLW       4
0x2E94	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2E96	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,970 :: 		}
L_State6189:
;FirmV_0_7_0.c,971 :: 		CloseDone=3;
0x2E9A	0x0E03      	MOVLW       3
0x2E9C	0x0100      	MOVLB       0
0x2E9E	0x6F99      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,972 :: 		OverloadCheckFlag1=0;
0x2EA0	0x0101      	MOVLB       1
0x2EA2	0x6B16      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,973 :: 		OverloadCheckFlag2=0;
0x2EA4	0x6B15      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,974 :: 		PassFlag=0;
0x2EA6	0x0100      	MOVLB       0
0x2EA8	0x6BBE      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,975 :: 		State=7;
0x2EAA	0x0E07      	MOVLW       7
0x2EAC	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,976 :: 		}
L_State6186:
;FirmV_0_7_0.c,978 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x2EAE	0x0101      	MOVLB       1
0x2EB0	0xA177      	BTFSS       _Events+6, 0, 1
0x2EB2	0xD027      	BRA         L_State6192
0x2EB4	0x0E00      	MOVLW       0
0x2EB6	0x0102      	MOVLB       2
0x2EB8	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x2EBA	0xE102      	BNZ         L__State6725
0x2EBC	0x0E00      	MOVLW       0
0x2EBE	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State6725:
0x2EC0	0xE020      	BZ          L_State6192
0x2EC2	0x0100      	MOVLB       0
0x2EC4	0x51BE      	MOVF        _PassFlag, 0, 1
0x2EC6	0x0A00      	XORLW       0
0x2EC8	0xE11C      	BNZ         L_State6192
L__State6649:
;FirmV_0_7_0.c,979 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S6 Auto Close Deleted");}
0x2ECA	0x0E01      	MOVLW       1
0x2ECC	0x6FBE      	MOVWF       _PassFlag, 1
0x2ECE	0xF006EC28  	CALL        _GetAutocloseTime, 0
0x2ED2	0xF0BFC000  	MOVFF       R0, __AC
0x2ED6	0x0E0B      	MOVLW       ?ICS?lstr41_FirmV_0_7_0
0x2ED8	0x6EF6      	MOVWF       4086 
0x2EDA	0x0E75      	MOVLW       hi_addr(?ICS?lstr41_FirmV_0_7_0)
0x2EDC	0x6EF7      	MOVWF       TBLPTRH 
0x2EDE	0x0E00      	MOVLW       higher_addr(?ICS?lstr41_FirmV_0_7_0)
0x2EE0	0x6EF8      	MOVWF       TBLPTRU 
0x2EE2	0x0E35      	MOVLW       ?lstr41_FirmV_0_7_0
0x2EE4	0x6EE1      	MOVWF       FSR1L 
0x2EE6	0x0E02      	MOVLW       hi_addr(?lstr41_FirmV_0_7_0)
0x2EE8	0x6EE2      	MOVWF       FSR1H 
0x2EEA	0x0E16      	MOVLW       22
0x2EEC	0x6E00      	MOVWF       R0 
0x2EEE	0x0E01      	MOVLW       1
0x2EF0	0x6E01      	MOVWF       R1 
0x2EF2	0xF004EC95  	CALL        ___CC2DW, 0
0x2EF6	0x0E35      	MOVLW       ?lstr41_FirmV_0_7_0
0x2EF8	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x2EFA	0x0E02      	MOVLW       hi_addr(?lstr41_FirmV_0_7_0)
0x2EFC	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x2EFE	0xF00BECFA  	CALL        _Logger, 0
L_State6192:
;FirmV_0_7_0.c,981 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x2F02	0x0100      	MOVLB       0
0x2F04	0x51BE      	MOVF        _PassFlag, 0, 1
0x2F06	0x0A01      	XORLW       1
0x2F08	0xE15B      	BNZ         L_State6195
0x2F0A	0x0101      	MOVLB       1
0x2F0C	0xB177      	BTFSC       _Events+6, 0, 1
0x2F0E	0xD058      	BRA         L_State6195
0x2F10	0x0E00      	MOVLW       0
0x2F12	0x0102      	MOVLB       2
0x2F14	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x2F16	0xE102      	BNZ         L__State6726
0x2F18	0x0E00      	MOVLW       0
0x2F1A	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State6726:
0x2F1C	0xE051      	BZ          L_State6195
L__State6648:
;FirmV_0_7_0.c,983 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:");Logger(t);}
0x2F1E	0x0100      	MOVLB       0
0x2F20	0x51BF      	MOVF        __AC, 0, 1
0x2F22	0x25EE      	ADDWF       _ms500, 0, 1
0x2F24	0x6E00      	MOVWF       R0 
0x2F26	0x0E00      	MOVLW       0
0x2F28	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x2F2A	0x6E01      	MOVWF       R1 
0x2F2C	0x0E00      	MOVLW       0
0x2F2E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x2F30	0x6E02      	MOVWF       R2 
0x2F32	0x0E00      	MOVLW       0
0x2F34	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x2F36	0x6E03      	MOVWF       R3 
0x2F38	0xF11FC000  	MOVFF       R0, _temp
0x2F3C	0xF120C001  	MOVFF       R1, _temp+1
0x2F40	0xF121C002  	MOVFF       R2, _temp+2
0x2F44	0xF122C003  	MOVFF       R3, _temp+3
0x2F48	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2F4C	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2F50	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2F54	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2F58	0x0E09      	MOVLW       9
0x2F5A	0x0103      	MOVLB       3
0x2F5C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x2F5E	0xF00DEC7B  	CALL        _AddTask, 0
0x2F62	0x0100      	MOVLB       0
0x2F64	0x6BBE      	CLRF        _PassFlag, 1
0x2F66	0xF4F8C11F  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x2F6A	0xF4F9C120  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x2F6E	0xF4FAC121  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x2F72	0xF4FBC122  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x2F76	0x0E23      	MOVLW       _t
0x2F78	0x0104      	MOVLB       4
0x2F7A	0x6FFC      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x2F7C	0x0E01      	MOVLW       hi_addr(_t)
0x2F7E	0x6FFD      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x2F80	0xF003ECC7  	CALL        _LongWordToStrWithZeros, 0
0x2F84	0x0E21      	MOVLW       ?ICS?lstr42_FirmV_0_7_0
0x2F86	0x6EF6      	MOVWF       4086 
0x2F88	0x0E75      	MOVLW       hi_addr(?ICS?lstr42_FirmV_0_7_0)
0x2F8A	0x6EF7      	MOVWF       TBLPTRH 
0x2F8C	0x0E00      	MOVLW       higher_addr(?ICS?lstr42_FirmV_0_7_0)
0x2F8E	0x6EF8      	MOVWF       TBLPTRU 
0x2F90	0x0E4B      	MOVLW       ?lstr42_FirmV_0_7_0
0x2F92	0x6EE1      	MOVWF       FSR1L 
0x2F94	0x0E02      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x2F96	0x6EE2      	MOVWF       FSR1H 
0x2F98	0x0E10      	MOVLW       16
0x2F9A	0x6E00      	MOVWF       R0 
0x2F9C	0x0E01      	MOVLW       1
0x2F9E	0x6E01      	MOVWF       R1 
0x2FA0	0xF004EC95  	CALL        ___CC2DW, 0
0x2FA4	0x0E4B      	MOVLW       ?lstr42_FirmV_0_7_0
0x2FA6	0x0103      	MOVLB       3
0x2FA8	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x2FAA	0x0E02      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x2FAC	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x2FAE	0xF00BECFA  	CALL        _Logger, 0
0x2FB2	0x0E23      	MOVLW       _t
0x2FB4	0x0103      	MOVLB       3
0x2FB6	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x2FB8	0x0E01      	MOVLW       hi_addr(_t)
0x2FBA	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x2FBC	0xF00BECFA  	CALL        _Logger, 0
;FirmV_0_7_0.c,985 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:");Logger(t);}
L_State6197:
;FirmV_0_7_0.c,986 :: 		}
L_State6195:
;FirmV_0_7_0.c,988 :: 		}
0x2FC0	0x0012      	RETURN      0
; end of _State6
_GetRemoteState:
;FirmV_0_7_0.c,1414 :: 		char GetRemoteState()
;FirmV_0_7_0.c,1416 :: 		char res=0;
0x2FC2	0x0102      	MOVLB       2
0x2FC4	0x6B35      	CLRF        GetRemoteState_res_L0, 1
;FirmV_0_7_0.c,1417 :: 		res.b0=RemoteAFlag.b0;
0x2FC6	0x0100      	MOVLB       0
0x2FC8	0xB1C9      	BTFSC       _RemoteAFlag, 0, 1
0x2FCA	0xD003      	BRA         L__GetRemoteState736
0x2FCC	0x0102      	MOVLB       2
0x2FCE	0x9135      	BCF         GetRemoteState_res_L0, 0, 1
0x2FD0	0xD002      	BRA         L__GetRemoteState737
L__GetRemoteState736:
0x2FD2	0x0102      	MOVLB       2
0x2FD4	0x8135      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState737:
;FirmV_0_7_0.c,1418 :: 		res.b1=RemoteBFlag.b0;
0x2FD6	0x0100      	MOVLB       0
0x2FD8	0xB1C4      	BTFSC       _RemoteBFlag, 0, 1
0x2FDA	0xD003      	BRA         L__GetRemoteState738
0x2FDC	0x0102      	MOVLB       2
0x2FDE	0x9335      	BCF         GetRemoteState_res_L0, 1, 1
0x2FE0	0xD002      	BRA         L__GetRemoteState739
L__GetRemoteState738:
0x2FE2	0x0102      	MOVLB       2
0x2FE4	0x8335      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState739:
;FirmV_0_7_0.c,1419 :: 		RemoteAFlag=0;
0x2FE6	0x0100      	MOVLB       0
0x2FE8	0x6BC9      	CLRF        _RemoteAFlag, 1
;FirmV_0_7_0.c,1420 :: 		RemoteBFlag=0;
0x2FEA	0x6BC4      	CLRF        _RemoteBFlag, 1
;FirmV_0_7_0.c,1421 :: 		res.b0=res.b0|(~D1ExKey);
0x2FEC	0xB683      	BTFSC       PORTD, 3 
0x2FEE	0xD002      	BRA         L__GetRemoteState740
0x2FF0	0x80D8      	BSF         STATUS, 0 
0x2FF2	0xD001      	BRA         L__GetRemoteState741
L__GetRemoteState740:
0x2FF4	0x90D8      	BCF         STATUS, 0 
L__GetRemoteState741:
0x2FF6	0x0102      	MOVLB       2
0x2FF8	0xB135      	BTFSC       GetRemoteState_res_L0, 0, 1
0x2FFA	0xD003      	BRA         L__GetRemoteState742
0x2FFC	0xE202      	BC          L__GetRemoteState742
0x2FFE	0x9135      	BCF         GetRemoteState_res_L0, 0, 1
0x3000	0xD001      	BRA         L__GetRemoteState743
L__GetRemoteState742:
0x3002	0x8135      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState743:
;FirmV_0_7_0.c,1422 :: 		res.b1=res.b1|(~D2ExKey);
0x3004	0xB883      	BTFSC       PORTD, 4 
0x3006	0xD002      	BRA         L__GetRemoteState744
0x3008	0x80D8      	BSF         STATUS, 0 
0x300A	0xD001      	BRA         L__GetRemoteState745
L__GetRemoteState744:
0x300C	0x90D8      	BCF         STATUS, 0 
L__GetRemoteState745:
0x300E	0xB335      	BTFSC       GetRemoteState_res_L0, 1, 1
0x3010	0xD003      	BRA         L__GetRemoteState746
0x3012	0xE202      	BC          L__GetRemoteState746
0x3014	0x9335      	BCF         GetRemoteState_res_L0, 1, 1
0x3016	0xD001      	BRA         L__GetRemoteState747
L__GetRemoteState746:
0x3018	0x8335      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState747:
;FirmV_0_7_0.c,1423 :: 		return res;
0x301A	0xF000C235  	MOVFF       GetRemoteState_res_L0, R0
;FirmV_0_7_0.c,1424 :: 		}
0x301E	0x0012      	RETURN      0
; end of _GetRemoteState
_State2:
;FirmV_0_7_0.c,572 :: 		void State2()
;FirmV_0_7_0.c,574 :: 		char delay=2;
0x3020	0x0E02      	MOVLW       2
0x3022	0x0102      	MOVLB       2
0x3024	0x6F6B      	MOVWF       State2_delay_L0, 1
;FirmV_0_7_0.c,576 :: 		Flasher=0;
0x3026	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,578 :: 		if((Events.Remote!=0)||(CheckTask(9)==1))
0x3028	0x0101      	MOVLB       1
0x302A	0x5175      	MOVF        _Events+4, 0, 1
0x302C	0x0A00      	XORLW       0
0x302E	0xE109      	BNZ         L__State2631
0x3030	0x0E09      	MOVLW       9
0x3032	0x0103      	MOVLB       3
0x3034	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3036	0xF007EC58  	CALL        _CheckTask, 0
0x303A	0x5000      	MOVF        R0, 0 
0x303C	0x0A01      	XORLW       1
0x303E	0xE001      	BZ          L__State2631
0x3040	0xD3CC      	BRA         L_State274
L__State2631:
;FirmV_0_7_0.c,581 :: 		ClearTasks(9);
0x3042	0x0E09      	MOVLW       9
0x3044	0x0103      	MOVLB       3
0x3046	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x3048	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,582 :: 		if((Door2CloseTime==0)||(ActiveDoors==1))
0x304C	0x0102      	MOVLB       2
0x304E	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x3050	0x0A00      	XORLW       0
0x3052	0xE005      	BZ          L__State2630
0x3054	0x0100      	MOVLB       0
0x3056	0x519A      	MOVF        _ActiveDoors, 0, 1
0x3058	0x0A01      	XORLW       1
0x305A	0xE001      	BZ          L__State2630
0x305C	0xD145      	BRA         L_State277
L__State2630:
;FirmV_0_7_0.c,584 :: 		temp=ms500+delay;
0x305E	0x0102      	MOVLB       2
0x3060	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3062	0x0100      	MOVLB       0
0x3064	0x25EE      	ADDWF       _ms500, 0, 1
0x3066	0x6E00      	MOVWF       R0 
0x3068	0x0E00      	MOVLW       0
0x306A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x306C	0x6E01      	MOVWF       R1 
0x306E	0x0E00      	MOVLW       0
0x3070	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3072	0x6E02      	MOVWF       R2 
0x3074	0x0E00      	MOVLW       0
0x3076	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3078	0x6E03      	MOVWF       R3 
0x307A	0xF11FC000  	MOVFF       R0, _temp
0x307E	0xF120C001  	MOVFF       R1, _temp+1
0x3082	0xF121C002  	MOVFF       R2, _temp+2
0x3086	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,585 :: 		AddTask(temp,1);
0x308A	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x308E	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3092	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3096	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x309A	0x0E01      	MOVLW       1
0x309C	0x0103      	MOVLB       3
0x309E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x30A0	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,586 :: 		if(CloseSoftStartTime!=0)
0x30A4	0x0102      	MOVLB       2
0x30A6	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x30A8	0x0A00      	XORLW       0
0x30AA	0xE011      	BZ          L_State278
;FirmV_0_7_0.c,587 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x30AC	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x30B0	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x30B4	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x30B8	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x30BC	0x0E07      	MOVLW       7
0x30BE	0x0103      	MOVLB       3
0x30C0	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x30C2	0xF00DEC7B  	CALL        _AddTask, 0
0x30C6	0x0E01      	MOVLW       1
0x30C8	0x0100      	MOVLB       0
0x30CA	0x6F97      	MOVWF       _M1isSlow, 1
0x30CC	0xD00F      	BRA         L_State279
L_State278:
;FirmV_0_7_0.c,589 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x30CE	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x30D2	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x30D6	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x30DA	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x30DE	0x0E05      	MOVLW       5
0x30E0	0x0103      	MOVLB       3
0x30E2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x30E4	0xF00DEC7B  	CALL        _AddTask, 0
0x30E8	0x0100      	MOVLB       0
0x30EA	0x6B97      	CLRF        _M1isSlow, 1
L_State279:
;FirmV_0_7_0.c,590 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x30EC	0x0102      	MOVLB       2
0x30EE	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x30F0	0x0100      	MOVLB       0
0x30F2	0x25EE      	ADDWF       _ms500, 0, 1
0x30F4	0x6E00      	MOVWF       R0 
0x30F6	0x0E00      	MOVLW       0
0x30F8	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x30FA	0x6E01      	MOVWF       R1 
0x30FC	0x0E00      	MOVLW       0
0x30FE	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3100	0x6E02      	MOVWF       R2 
0x3102	0x0E00      	MOVLW       0
0x3104	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3106	0x6E03      	MOVWF       R3 
0x3108	0x0E02      	MOVLW       2
0x310A	0x2600      	ADDWF       R0, 1 
0x310C	0x0E00      	MOVLW       0
0x310E	0x2201      	ADDWFC      R1, 1 
0x3110	0x2202      	ADDWFC      R2, 1 
0x3112	0x2203      	ADDWFC      R3, 1 
0x3114	0x0102      	MOVLB       2
0x3116	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3118	0x2600      	ADDWF       R0, 1 
0x311A	0x0E00      	MOVLW       0
0x311C	0x2201      	ADDWFC      R1, 1 
0x311E	0x2202      	ADDWFC      R2, 1 
0x3120	0x2203      	ADDWFC      R3, 1 
0x3122	0xF11FC000  	MOVFF       R0, _temp
0x3126	0xF120C001  	MOVFF       R1, _temp+1
0x312A	0xF121C002  	MOVFF       R2, _temp+2
0x312E	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,591 :: 		AddTask(temp,10); //overload check
0x3132	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3136	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x313A	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x313E	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3142	0x0E0A      	MOVLW       10
0x3144	0x0103      	MOVLB       3
0x3146	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3148	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,592 :: 		temp=ms500+CloseSoftStartTime+delay;
0x314C	0x0102      	MOVLB       2
0x314E	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x3150	0x0100      	MOVLB       0
0x3152	0x25EE      	ADDWF       _ms500, 0, 1
0x3154	0x6E00      	MOVWF       R0 
0x3156	0x0E00      	MOVLW       0
0x3158	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x315A	0x6E01      	MOVWF       R1 
0x315C	0x0E00      	MOVLW       0
0x315E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3160	0x6E02      	MOVWF       R2 
0x3162	0x0E00      	MOVLW       0
0x3164	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3166	0x6E03      	MOVWF       R3 
0x3168	0x0102      	MOVLB       2
0x316A	0x516B      	MOVF        State2_delay_L0, 0, 1
0x316C	0x2600      	ADDWF       R0, 1 
0x316E	0x0E00      	MOVLW       0
0x3170	0x2201      	ADDWFC      R1, 1 
0x3172	0x2202      	ADDWFC      R2, 1 
0x3174	0x2203      	ADDWFC      R3, 1 
0x3176	0xF11FC000  	MOVFF       R0, _temp
0x317A	0xF120C001  	MOVFF       R1, _temp+1
0x317E	0xF121C002  	MOVFF       R2, _temp+2
0x3182	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,593 :: 		AddTask(temp,5);//Speed up after soft start
0x3186	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x318A	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x318E	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3192	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3196	0x0E05      	MOVLW       5
0x3198	0x0103      	MOVLB       3
0x319A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x319C	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,594 :: 		if(CloseSoftStopTime!=0)
0x31A0	0x0102      	MOVLB       2
0x31A2	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x31A4	0x0A00      	XORLW       0
0x31A6	0xE02F      	BZ          L_State280
;FirmV_0_7_0.c,595 :: 		{temp=ms500+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x31A8	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x31AA	0x0100      	MOVLB       0
0x31AC	0x25EE      	ADDWF       _ms500, 0, 1
0x31AE	0x6E00      	MOVWF       R0 
0x31B0	0x0E00      	MOVLW       0
0x31B2	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x31B4	0x6E01      	MOVWF       R1 
0x31B6	0x0E00      	MOVLW       0
0x31B8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x31BA	0x6E02      	MOVWF       R2 
0x31BC	0x0E00      	MOVLW       0
0x31BE	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x31C0	0x6E03      	MOVWF       R3 
0x31C2	0x0102      	MOVLB       2
0x31C4	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x31C6	0x5E00      	SUBWF       R0, 1 
0x31C8	0x0E00      	MOVLW       0
0x31CA	0x5A01      	SUBWFB      R1, 1 
0x31CC	0x5A02      	SUBWFB      R2, 1 
0x31CE	0x5A03      	SUBWFB      R3, 1 
0x31D0	0x516B      	MOVF        State2_delay_L0, 0, 1
0x31D2	0x2600      	ADDWF       R0, 1 
0x31D4	0x0E00      	MOVLW       0
0x31D6	0x2201      	ADDWFC      R1, 1 
0x31D8	0x2202      	ADDWFC      R2, 1 
0x31DA	0x2203      	ADDWFC      R3, 1 
0x31DC	0xF11FC000  	MOVFF       R0, _temp
0x31E0	0xF120C001  	MOVFF       R1, _temp+1
0x31E4	0xF121C002  	MOVFF       R2, _temp+2
0x31E8	0xF122C003  	MOVFF       R3, _temp+3
0x31EC	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x31F0	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x31F4	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x31F8	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x31FC	0x0E07      	MOVLW       7
0x31FE	0x0103      	MOVLB       3
0x3200	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3202	0xF00DEC7B  	CALL        _AddTask, 0
L_State280:
;FirmV_0_7_0.c,596 :: 		if(LockForce!=0)
0x3206	0x0101      	MOVLB       1
0x3208	0x515E      	MOVF        _LockForce, 0, 1
0x320A	0x0A00      	XORLW       0
0x320C	0xE043      	BZ          L_State281
;FirmV_0_7_0.c,597 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x320E	0x0102      	MOVLB       2
0x3210	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x3212	0x0100      	MOVLB       0
0x3214	0x25EE      	ADDWF       _ms500, 0, 1
0x3216	0x6E00      	MOVWF       R0 
0x3218	0x0E00      	MOVLW       0
0x321A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x321C	0x6E01      	MOVWF       R1 
0x321E	0x0E00      	MOVLW       0
0x3220	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3222	0x6E02      	MOVWF       R2 
0x3224	0x0E00      	MOVLW       0
0x3226	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3228	0x6E03      	MOVWF       R3 
0x322A	0x0102      	MOVLB       2
0x322C	0x516B      	MOVF        State2_delay_L0, 0, 1
0x322E	0x2600      	ADDWF       R0, 1 
0x3230	0x0E00      	MOVLW       0
0x3232	0x2201      	ADDWFC      R1, 1 
0x3234	0x2202      	ADDWFC      R2, 1 
0x3236	0x2203      	ADDWFC      R3, 1 
0x3238	0xF11FC000  	MOVFF       R0, _temp
0x323C	0xF120C001  	MOVFF       R1, _temp+1
0x3240	0xF121C002  	MOVFF       R2, _temp+2
0x3244	0xF122C003  	MOVFF       R3, _temp+3
0x3248	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x324C	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3250	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3254	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3258	0x0E05      	MOVLW       5
0x325A	0x0103      	MOVLB       3
0x325C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x325E	0xF00DEC7B  	CALL        _AddTask, 0
0x3262	0x0E03      	MOVLW       3
0x3264	0x0101      	MOVLB       1
0x3266	0x251F      	ADDWF       _temp, 0, 1
0x3268	0x0103      	MOVLB       3
0x326A	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x326C	0x0E00      	MOVLW       0
0x326E	0x0101      	MOVLB       1
0x3270	0x2120      	ADDWFC      _temp+1, 0, 1
0x3272	0x0103      	MOVLB       3
0x3274	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3276	0x0E00      	MOVLW       0
0x3278	0x0101      	MOVLB       1
0x327A	0x2121      	ADDWFC      _temp+2, 0, 1
0x327C	0x0103      	MOVLB       3
0x327E	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3280	0x0E00      	MOVLW       0
0x3282	0x0101      	MOVLB       1
0x3284	0x2122      	ADDWFC      _temp+3, 0, 1
0x3286	0x0103      	MOVLB       3
0x3288	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x328A	0x0E03      	MOVLW       3
0x328C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x328E	0xF00DEC7B  	CALL        _AddTask, 0
0x3292	0xD02A      	BRA         L_State282
L_State281:
;FirmV_0_7_0.c,599 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,3);}
0x3294	0x0102      	MOVLB       2
0x3296	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x3298	0x0100      	MOVLB       0
0x329A	0x25EE      	ADDWF       _ms500, 0, 1
0x329C	0x6E00      	MOVWF       R0 
0x329E	0x0E00      	MOVLW       0
0x32A0	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x32A2	0x6E01      	MOVWF       R1 
0x32A4	0x0E00      	MOVLW       0
0x32A6	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x32A8	0x6E02      	MOVWF       R2 
0x32AA	0x0E00      	MOVLW       0
0x32AC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x32AE	0x6E03      	MOVWF       R3 
0x32B0	0x0102      	MOVLB       2
0x32B2	0x516B      	MOVF        State2_delay_L0, 0, 1
0x32B4	0x2600      	ADDWF       R0, 1 
0x32B6	0x0E00      	MOVLW       0
0x32B8	0x2201      	ADDWFC      R1, 1 
0x32BA	0x2202      	ADDWFC      R2, 1 
0x32BC	0x2203      	ADDWFC      R3, 1 
0x32BE	0xF11FC000  	MOVFF       R0, _temp
0x32C2	0xF120C001  	MOVFF       R1, _temp+1
0x32C6	0xF121C002  	MOVFF       R2, _temp+2
0x32CA	0xF122C003  	MOVFF       R3, _temp+3
0x32CE	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x32D2	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x32D6	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x32DA	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x32DE	0x0E03      	MOVLW       3
0x32E0	0x0103      	MOVLB       3
0x32E2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x32E4	0xF00DEC7B  	CALL        _AddTask, 0
L_State282:
;FirmV_0_7_0.c,601 :: 		}
L_State277:
;FirmV_0_7_0.c,603 :: 		if((Door2CloseTime!=0)&&(ActiveDoors=2))
0x32E8	0x0102      	MOVLB       2
0x32EA	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x32EC	0x0A00      	XORLW       0
0x32EE	0xB4D8      	BTFSC       STATUS, 2 
0x32F0	0xD26B      	BRA         L_State285
0x32F2	0x0E02      	MOVLW       2
0x32F4	0x0100      	MOVLB       0
0x32F6	0x6F9A      	MOVWF       _ActiveDoors, 1
L__State2629:
;FirmV_0_7_0.c,605 :: 		temp=ms500+delay;
0x32F8	0x0102      	MOVLB       2
0x32FA	0x516B      	MOVF        State2_delay_L0, 0, 1
0x32FC	0x0100      	MOVLB       0
0x32FE	0x25EE      	ADDWF       _ms500, 0, 1
0x3300	0x6E00      	MOVWF       R0 
0x3302	0x0E00      	MOVLW       0
0x3304	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3306	0x6E01      	MOVWF       R1 
0x3308	0x0E00      	MOVLW       0
0x330A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x330C	0x6E02      	MOVWF       R2 
0x330E	0x0E00      	MOVLW       0
0x3310	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3312	0x6E03      	MOVWF       R3 
0x3314	0xF11FC000  	MOVFF       R0, _temp
0x3318	0xF120C001  	MOVFF       R1, _temp+1
0x331C	0xF121C002  	MOVFF       R2, _temp+2
0x3320	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,606 :: 		AddTask(temp,2);
0x3324	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3328	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x332C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3330	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3334	0x0E02      	MOVLW       2
0x3336	0x0103      	MOVLB       3
0x3338	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x333A	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,607 :: 		if(CloseSoftStartTime!=0)
0x333E	0x0102      	MOVLB       2
0x3340	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x3342	0x0A00      	XORLW       0
0x3344	0xE011      	BZ          L_State286
;FirmV_0_7_0.c,608 :: 		{AddTask(temp,8); M2isSlow=1;}//speed down
0x3346	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x334A	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x334E	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x3352	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x3356	0x0E08      	MOVLW       8
0x3358	0x0103      	MOVLB       3
0x335A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x335C	0xF00DEC7B  	CALL        _AddTask, 0
0x3360	0x0E01      	MOVLW       1
0x3362	0x0100      	MOVLB       0
0x3364	0x6F98      	MOVWF       _M2isSlow, 1
0x3366	0xD00F      	BRA         L_State287
L_State286:
;FirmV_0_7_0.c,610 :: 		{AddTask(temp,6); M2isSlow=0;}//speed up
0x3368	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x336C	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x3370	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x3374	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x3378	0x0E06      	MOVLW       6
0x337A	0x0103      	MOVLB       3
0x337C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x337E	0xF00DEC7B  	CALL        _AddTask, 0
0x3382	0x0100      	MOVLB       0
0x3384	0x6B98      	CLRF        _M2isSlow, 1
L_State287:
;FirmV_0_7_0.c,611 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x3386	0x0102      	MOVLB       2
0x3388	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x338A	0x0100      	MOVLB       0
0x338C	0x25EE      	ADDWF       _ms500, 0, 1
0x338E	0x6E00      	MOVWF       R0 
0x3390	0x0E00      	MOVLW       0
0x3392	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3394	0x6E01      	MOVWF       R1 
0x3396	0x0E00      	MOVLW       0
0x3398	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x339A	0x6E02      	MOVWF       R2 
0x339C	0x0E00      	MOVLW       0
0x339E	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x33A0	0x6E03      	MOVWF       R3 
0x33A2	0x0E02      	MOVLW       2
0x33A4	0x2600      	ADDWF       R0, 1 
0x33A6	0x0E00      	MOVLW       0
0x33A8	0x2201      	ADDWFC      R1, 1 
0x33AA	0x2202      	ADDWFC      R2, 1 
0x33AC	0x2203      	ADDWFC      R3, 1 
0x33AE	0x0102      	MOVLB       2
0x33B0	0x516B      	MOVF        State2_delay_L0, 0, 1
0x33B2	0x2600      	ADDWF       R0, 1 
0x33B4	0x0E00      	MOVLW       0
0x33B6	0x2201      	ADDWFC      R1, 1 
0x33B8	0x2202      	ADDWFC      R2, 1 
0x33BA	0x2203      	ADDWFC      R3, 1 
0x33BC	0xF11FC000  	MOVFF       R0, _temp
0x33C0	0xF120C001  	MOVFF       R1, _temp+1
0x33C4	0xF121C002  	MOVFF       R2, _temp+2
0x33C8	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,612 :: 		AddTask(temp,11); //overload check
0x33CC	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x33D0	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x33D4	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x33D8	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x33DC	0x0E0B      	MOVLW       11
0x33DE	0x0103      	MOVLB       3
0x33E0	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x33E2	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,613 :: 		temp=ms500+CloseSoftStartTime+delay;
0x33E6	0x0102      	MOVLB       2
0x33E8	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x33EA	0x0100      	MOVLB       0
0x33EC	0x25EE      	ADDWF       _ms500, 0, 1
0x33EE	0x6E00      	MOVWF       R0 
0x33F0	0x0E00      	MOVLW       0
0x33F2	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x33F4	0x6E01      	MOVWF       R1 
0x33F6	0x0E00      	MOVLW       0
0x33F8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x33FA	0x6E02      	MOVWF       R2 
0x33FC	0x0E00      	MOVLW       0
0x33FE	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3400	0x6E03      	MOVWF       R3 
0x3402	0x0102      	MOVLB       2
0x3404	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3406	0x2600      	ADDWF       R0, 1 
0x3408	0x0E00      	MOVLW       0
0x340A	0x2201      	ADDWFC      R1, 1 
0x340C	0x2202      	ADDWFC      R2, 1 
0x340E	0x2203      	ADDWFC      R3, 1 
0x3410	0xF11FC000  	MOVFF       R0, _temp
0x3414	0xF120C001  	MOVFF       R1, _temp+1
0x3418	0xF121C002  	MOVFF       R2, _temp+2
0x341C	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,614 :: 		AddTask(temp,6);//Speed up after soft start
0x3420	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3424	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3428	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x342C	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3430	0x0E06      	MOVLW       6
0x3432	0x0103      	MOVLB       3
0x3434	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3436	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,615 :: 		if(CloseSoftStopTime!=0)
0x343A	0x0102      	MOVLB       2
0x343C	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x343E	0x0A00      	XORLW       0
0x3440	0xE02F      	BZ          L_State288
;FirmV_0_7_0.c,616 :: 		{temp=ms500+Door2CloseTime-CloseSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x3442	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x3444	0x0100      	MOVLB       0
0x3446	0x25EE      	ADDWF       _ms500, 0, 1
0x3448	0x6E00      	MOVWF       R0 
0x344A	0x0E00      	MOVLW       0
0x344C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x344E	0x6E01      	MOVWF       R1 
0x3450	0x0E00      	MOVLW       0
0x3452	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3454	0x6E02      	MOVWF       R2 
0x3456	0x0E00      	MOVLW       0
0x3458	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x345A	0x6E03      	MOVWF       R3 
0x345C	0x0102      	MOVLB       2
0x345E	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x3460	0x5E00      	SUBWF       R0, 1 
0x3462	0x0E00      	MOVLW       0
0x3464	0x5A01      	SUBWFB      R1, 1 
0x3466	0x5A02      	SUBWFB      R2, 1 
0x3468	0x5A03      	SUBWFB      R3, 1 
0x346A	0x516B      	MOVF        State2_delay_L0, 0, 1
0x346C	0x2600      	ADDWF       R0, 1 
0x346E	0x0E00      	MOVLW       0
0x3470	0x2201      	ADDWFC      R1, 1 
0x3472	0x2202      	ADDWFC      R2, 1 
0x3474	0x2203      	ADDWFC      R3, 1 
0x3476	0xF11FC000  	MOVFF       R0, _temp
0x347A	0xF120C001  	MOVFF       R1, _temp+1
0x347E	0xF121C002  	MOVFF       R2, _temp+2
0x3482	0xF122C003  	MOVFF       R3, _temp+3
0x3486	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x348A	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x348E	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3492	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3496	0x0E08      	MOVLW       8
0x3498	0x0103      	MOVLB       3
0x349A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x349C	0xF00DEC7B  	CALL        _AddTask, 0
L_State288:
;FirmV_0_7_0.c,618 :: 		temp=ms500+Door2CloseTime+delay;
0x34A0	0x0102      	MOVLB       2
0x34A2	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x34A4	0x0100      	MOVLB       0
0x34A6	0x25EE      	ADDWF       _ms500, 0, 1
0x34A8	0x6E00      	MOVWF       R0 
0x34AA	0x0E00      	MOVLW       0
0x34AC	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x34AE	0x6E01      	MOVWF       R1 
0x34B0	0x0E00      	MOVLW       0
0x34B2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x34B4	0x6E02      	MOVWF       R2 
0x34B6	0x0E00      	MOVLW       0
0x34B8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x34BA	0x6E03      	MOVWF       R3 
0x34BC	0x0102      	MOVLB       2
0x34BE	0x516B      	MOVF        State2_delay_L0, 0, 1
0x34C0	0x2600      	ADDWF       R0, 1 
0x34C2	0x0E00      	MOVLW       0
0x34C4	0x2201      	ADDWFC      R1, 1 
0x34C6	0x2202      	ADDWFC      R2, 1 
0x34C8	0x2203      	ADDWFC      R3, 1 
0x34CA	0xF11FC000  	MOVFF       R0, _temp
0x34CE	0xF120C001  	MOVFF       R1, _temp+1
0x34D2	0xF121C002  	MOVFF       R2, _temp+2
0x34D6	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,619 :: 		AddTask(temp,4);//Stop motor
0x34DA	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x34DE	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x34E2	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x34E6	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x34EA	0x0E04      	MOVLW       4
0x34EC	0x0103      	MOVLB       3
0x34EE	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x34F0	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,623 :: 		temp=ms500+ActionTimeDiff+delay;
0x34F4	0x0102      	MOVLB       2
0x34F6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x34F8	0x0100      	MOVLB       0
0x34FA	0x25EE      	ADDWF       _ms500, 0, 1
0x34FC	0x6E00      	MOVWF       R0 
0x34FE	0x0E00      	MOVLW       0
0x3500	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3502	0x6E01      	MOVWF       R1 
0x3504	0x0E00      	MOVLW       0
0x3506	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3508	0x6E02      	MOVWF       R2 
0x350A	0x0E00      	MOVLW       0
0x350C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x350E	0x6E03      	MOVWF       R3 
0x3510	0x0102      	MOVLB       2
0x3512	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3514	0x2600      	ADDWF       R0, 1 
0x3516	0x0E00      	MOVLW       0
0x3518	0x2201      	ADDWFC      R1, 1 
0x351A	0x2202      	ADDWFC      R2, 1 
0x351C	0x2203      	ADDWFC      R3, 1 
0x351E	0xF11FC000  	MOVFF       R0, _temp
0x3522	0xF120C001  	MOVFF       R1, _temp+1
0x3526	0xF121C002  	MOVFF       R2, _temp+2
0x352A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,624 :: 		AddTask(temp,1);
0x352E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3532	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3536	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x353A	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x353E	0x0E01      	MOVLW       1
0x3540	0x0103      	MOVLB       3
0x3542	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3544	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,625 :: 		if(CloseSoftStartTime!=0)
0x3548	0x0102      	MOVLB       2
0x354A	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x354C	0x0A00      	XORLW       0
0x354E	0xE011      	BZ          L_State289
;FirmV_0_7_0.c,626 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x3550	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x3554	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x3558	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x355C	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x3560	0x0E07      	MOVLW       7
0x3562	0x0103      	MOVLB       3
0x3564	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3566	0xF00DEC7B  	CALL        _AddTask, 0
0x356A	0x0E01      	MOVLW       1
0x356C	0x0100      	MOVLB       0
0x356E	0x6F97      	MOVWF       _M1isSlow, 1
0x3570	0xD00F      	BRA         L_State290
L_State289:
;FirmV_0_7_0.c,628 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x3572	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x3576	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x357A	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x357E	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x3582	0x0E05      	MOVLW       5
0x3584	0x0103      	MOVLB       3
0x3586	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3588	0xF00DEC7B  	CALL        _AddTask, 0
0x358C	0x0100      	MOVLB       0
0x358E	0x6B97      	CLRF        _M1isSlow, 1
L_State290:
;FirmV_0_7_0.c,629 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+OverloadDelay+delay;
0x3590	0x0102      	MOVLB       2
0x3592	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x3594	0x0100      	MOVLB       0
0x3596	0x25EE      	ADDWF       _ms500, 0, 1
0x3598	0x6E00      	MOVWF       R0 
0x359A	0x0E00      	MOVLW       0
0x359C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x359E	0x6E01      	MOVWF       R1 
0x35A0	0x0E00      	MOVLW       0
0x35A2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x35A4	0x6E02      	MOVWF       R2 
0x35A6	0x0E00      	MOVLW       0
0x35A8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x35AA	0x6E03      	MOVWF       R3 
0x35AC	0x0102      	MOVLB       2
0x35AE	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x35B0	0x2600      	ADDWF       R0, 1 
0x35B2	0x0E00      	MOVLW       0
0x35B4	0x2201      	ADDWFC      R1, 1 
0x35B6	0x2202      	ADDWFC      R2, 1 
0x35B8	0x2203      	ADDWFC      R3, 1 
0x35BA	0x0E02      	MOVLW       2
0x35BC	0x2600      	ADDWF       R0, 1 
0x35BE	0x0E00      	MOVLW       0
0x35C0	0x2201      	ADDWFC      R1, 1 
0x35C2	0x2202      	ADDWFC      R2, 1 
0x35C4	0x2203      	ADDWFC      R3, 1 
0x35C6	0x516B      	MOVF        State2_delay_L0, 0, 1
0x35C8	0x2600      	ADDWF       R0, 1 
0x35CA	0x0E00      	MOVLW       0
0x35CC	0x2201      	ADDWFC      R1, 1 
0x35CE	0x2202      	ADDWFC      R2, 1 
0x35D0	0x2203      	ADDWFC      R3, 1 
0x35D2	0xF11FC000  	MOVFF       R0, _temp
0x35D6	0xF120C001  	MOVFF       R1, _temp+1
0x35DA	0xF121C002  	MOVFF       R2, _temp+2
0x35DE	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,630 :: 		AddTask(temp,10); //overload check
0x35E2	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x35E6	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x35EA	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x35EE	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x35F2	0x0E0A      	MOVLW       10
0x35F4	0x0103      	MOVLB       3
0x35F6	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x35F8	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,631 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+delay;
0x35FC	0x0102      	MOVLB       2
0x35FE	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x3600	0x0100      	MOVLB       0
0x3602	0x25EE      	ADDWF       _ms500, 0, 1
0x3604	0x6E00      	MOVWF       R0 
0x3606	0x0E00      	MOVLW       0
0x3608	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x360A	0x6E01      	MOVWF       R1 
0x360C	0x0E00      	MOVLW       0
0x360E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3610	0x6E02      	MOVWF       R2 
0x3612	0x0E00      	MOVLW       0
0x3614	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3616	0x6E03      	MOVWF       R3 
0x3618	0x0102      	MOVLB       2
0x361A	0x5118      	MOVF        _CloseSoftStartTime, 0, 1
0x361C	0x2600      	ADDWF       R0, 1 
0x361E	0x0E00      	MOVLW       0
0x3620	0x2201      	ADDWFC      R1, 1 
0x3622	0x2202      	ADDWFC      R2, 1 
0x3624	0x2203      	ADDWFC      R3, 1 
0x3626	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3628	0x2600      	ADDWF       R0, 1 
0x362A	0x0E00      	MOVLW       0
0x362C	0x2201      	ADDWFC      R1, 1 
0x362E	0x2202      	ADDWFC      R2, 1 
0x3630	0x2203      	ADDWFC      R3, 1 
0x3632	0xF11FC000  	MOVFF       R0, _temp
0x3636	0xF120C001  	MOVFF       R1, _temp+1
0x363A	0xF121C002  	MOVFF       R2, _temp+2
0x363E	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,632 :: 		AddTask(temp,5);//Speed up after soft start
0x3642	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3646	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x364A	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x364E	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3652	0x0E05      	MOVLW       5
0x3654	0x0103      	MOVLB       3
0x3656	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3658	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,633 :: 		if(CloseSoftStopTime!=0)
0x365C	0x0102      	MOVLB       2
0x365E	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x3660	0x0A00      	XORLW       0
0x3662	0xE035      	BZ          L_State291
;FirmV_0_7_0.c,634 :: 		{temp=ms500+ActionTimeDiff+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x3664	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x3666	0x0100      	MOVLB       0
0x3668	0x25EE      	ADDWF       _ms500, 0, 1
0x366A	0x6E00      	MOVWF       R0 
0x366C	0x0E00      	MOVLW       0
0x366E	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3670	0x6E01      	MOVWF       R1 
0x3672	0x0E00      	MOVLW       0
0x3674	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3676	0x6E02      	MOVWF       R2 
0x3678	0x0E00      	MOVLW       0
0x367A	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x367C	0x6E03      	MOVWF       R3 
0x367E	0x0102      	MOVLB       2
0x3680	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x3682	0x2600      	ADDWF       R0, 1 
0x3684	0x0E00      	MOVLW       0
0x3686	0x2201      	ADDWFC      R1, 1 
0x3688	0x2202      	ADDWFC      R2, 1 
0x368A	0x2203      	ADDWFC      R3, 1 
0x368C	0x5117      	MOVF        _CloseSoftStopTime, 0, 1
0x368E	0x5E00      	SUBWF       R0, 1 
0x3690	0x0E00      	MOVLW       0
0x3692	0x5A01      	SUBWFB      R1, 1 
0x3694	0x5A02      	SUBWFB      R2, 1 
0x3696	0x5A03      	SUBWFB      R3, 1 
0x3698	0x516B      	MOVF        State2_delay_L0, 0, 1
0x369A	0x2600      	ADDWF       R0, 1 
0x369C	0x0E00      	MOVLW       0
0x369E	0x2201      	ADDWFC      R1, 1 
0x36A0	0x2202      	ADDWFC      R2, 1 
0x36A2	0x2203      	ADDWFC      R3, 1 
0x36A4	0xF11FC000  	MOVFF       R0, _temp
0x36A8	0xF120C001  	MOVFF       R1, _temp+1
0x36AC	0xF121C002  	MOVFF       R2, _temp+2
0x36B0	0xF122C003  	MOVFF       R3, _temp+3
0x36B4	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x36B8	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x36BC	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x36C0	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x36C4	0x0E07      	MOVLW       7
0x36C6	0x0103      	MOVLB       3
0x36C8	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x36CA	0xF00DEC7B  	CALL        _AddTask, 0
L_State291:
;FirmV_0_7_0.c,635 :: 		if(LockForce!=0)
0x36CE	0x0101      	MOVLB       1
0x36D0	0x515E      	MOVF        _LockForce, 0, 1
0x36D2	0x0A00      	XORLW       0
0x36D4	0xE049      	BZ          L_State292
;FirmV_0_7_0.c,636 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x36D6	0x0102      	MOVLB       2
0x36D8	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x36DA	0x0100      	MOVLB       0
0x36DC	0x25EE      	ADDWF       _ms500, 0, 1
0x36DE	0x6E00      	MOVWF       R0 
0x36E0	0x0E00      	MOVLW       0
0x36E2	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x36E4	0x6E01      	MOVWF       R1 
0x36E6	0x0E00      	MOVLW       0
0x36E8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x36EA	0x6E02      	MOVWF       R2 
0x36EC	0x0E00      	MOVLW       0
0x36EE	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x36F0	0x6E03      	MOVWF       R3 
0x36F2	0x0102      	MOVLB       2
0x36F4	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x36F6	0x2600      	ADDWF       R0, 1 
0x36F8	0x0E00      	MOVLW       0
0x36FA	0x2201      	ADDWFC      R1, 1 
0x36FC	0x2202      	ADDWFC      R2, 1 
0x36FE	0x2203      	ADDWFC      R3, 1 
0x3700	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3702	0x2600      	ADDWF       R0, 1 
0x3704	0x0E00      	MOVLW       0
0x3706	0x2201      	ADDWFC      R1, 1 
0x3708	0x2202      	ADDWFC      R2, 1 
0x370A	0x2203      	ADDWFC      R3, 1 
0x370C	0xF11FC000  	MOVFF       R0, _temp
0x3710	0xF120C001  	MOVFF       R1, _temp+1
0x3714	0xF121C002  	MOVFF       R2, _temp+2
0x3718	0xF122C003  	MOVFF       R3, _temp+3
0x371C	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3720	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3724	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3728	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x372C	0x0E05      	MOVLW       5
0x372E	0x0103      	MOVLB       3
0x3730	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3732	0xF00DEC7B  	CALL        _AddTask, 0
0x3736	0x0E03      	MOVLW       3
0x3738	0x0101      	MOVLB       1
0x373A	0x251F      	ADDWF       _temp, 0, 1
0x373C	0x0103      	MOVLB       3
0x373E	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x3740	0x0E00      	MOVLW       0
0x3742	0x0101      	MOVLB       1
0x3744	0x2120      	ADDWFC      _temp+1, 0, 1
0x3746	0x0103      	MOVLB       3
0x3748	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x374A	0x0E00      	MOVLW       0
0x374C	0x0101      	MOVLB       1
0x374E	0x2121      	ADDWFC      _temp+2, 0, 1
0x3750	0x0103      	MOVLB       3
0x3752	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3754	0x0E00      	MOVLW       0
0x3756	0x0101      	MOVLB       1
0x3758	0x2122      	ADDWFC      _temp+3, 0, 1
0x375A	0x0103      	MOVLB       3
0x375C	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x375E	0x0E03      	MOVLW       3
0x3760	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3762	0xF00DEC7B  	CALL        _AddTask, 0
0x3766	0xD030      	BRA         L_State293
L_State292:
;FirmV_0_7_0.c,638 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,3);}
0x3768	0x0102      	MOVLB       2
0x376A	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x376C	0x0100      	MOVLB       0
0x376E	0x25EE      	ADDWF       _ms500, 0, 1
0x3770	0x6E00      	MOVWF       R0 
0x3772	0x0E00      	MOVLW       0
0x3774	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3776	0x6E01      	MOVWF       R1 
0x3778	0x0E00      	MOVLW       0
0x377A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x377C	0x6E02      	MOVWF       R2 
0x377E	0x0E00      	MOVLW       0
0x3780	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3782	0x6E03      	MOVWF       R3 
0x3784	0x0102      	MOVLB       2
0x3786	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x3788	0x2600      	ADDWF       R0, 1 
0x378A	0x0E00      	MOVLW       0
0x378C	0x2201      	ADDWFC      R1, 1 
0x378E	0x2202      	ADDWFC      R2, 1 
0x3790	0x2203      	ADDWFC      R3, 1 
0x3792	0x516B      	MOVF        State2_delay_L0, 0, 1
0x3794	0x2600      	ADDWF       R0, 1 
0x3796	0x0E00      	MOVLW       0
0x3798	0x2201      	ADDWFC      R1, 1 
0x379A	0x2202      	ADDWFC      R2, 1 
0x379C	0x2203      	ADDWFC      R3, 1 
0x379E	0xF11FC000  	MOVFF       R0, _temp
0x37A2	0xF120C001  	MOVFF       R1, _temp+1
0x37A6	0xF121C002  	MOVFF       R2, _temp+2
0x37AA	0xF122C003  	MOVFF       R3, _temp+3
0x37AE	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x37B2	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x37B6	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x37BA	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x37BE	0x0E03      	MOVLW       3
0x37C0	0x0103      	MOVLB       3
0x37C2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x37C4	0xF00DEC7B  	CALL        _AddTask, 0
L_State293:
;FirmV_0_7_0.c,640 :: 		}
L_State285:
;FirmV_0_7_0.c,643 :: 		CloseDone=3;
0x37C8	0x0E03      	MOVLW       3
0x37CA	0x0100      	MOVLB       0
0x37CC	0x6F99      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,644 :: 		OverloadCheckFlag1=0;
0x37CE	0x0101      	MOVLB       1
0x37D0	0x6B16      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,645 :: 		OverloadCheckFlag2=0;
0x37D2	0x6B15      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,646 :: 		State=4;
0x37D4	0x0E04      	MOVLW       4
0x37D6	0x0100      	MOVLB       0
0x37D8	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,647 :: 		}
L_State274:
;FirmV_0_7_0.c,649 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x37DA	0x0101      	MOVLB       1
0x37DC	0xA177      	BTFSS       _Events+6, 0, 1
0x37DE	0xD027      	BRA         L_State296
0x37E0	0x0E00      	MOVLW       0
0x37E2	0x0102      	MOVLB       2
0x37E4	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x37E6	0xE102      	BNZ         L__State2719
0x37E8	0x0E00      	MOVLW       0
0x37EA	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State2719:
0x37EC	0xE020      	BZ          L_State296
0x37EE	0x0100      	MOVLB       0
0x37F0	0x51BE      	MOVF        _PassFlag, 0, 1
0x37F2	0x0A00      	XORLW       0
0x37F4	0xE11C      	BNZ         L_State296
L__State2628:
;FirmV_0_7_0.c,650 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S2 Auto Close Deleted");}
0x37F6	0x0E01      	MOVLW       1
0x37F8	0x6FBE      	MOVWF       _PassFlag, 1
0x37FA	0xF006EC28  	CALL        _GetAutocloseTime, 0
0x37FE	0xF0BFC000  	MOVFF       R0, __AC
0x3802	0x0ED4      	MOVLW       ?ICS?lstr3_FirmV_0_7_0
0x3804	0x6EF6      	MOVWF       4086 
0x3806	0x0E74      	MOVLW       hi_addr(?ICS?lstr3_FirmV_0_7_0)
0x3808	0x6EF7      	MOVWF       TBLPTRH 
0x380A	0x0E00      	MOVLW       higher_addr(?ICS?lstr3_FirmV_0_7_0)
0x380C	0x6EF8      	MOVWF       TBLPTRU 
0x380E	0x0E35      	MOVLW       ?lstr3_FirmV_0_7_0
0x3810	0x6EE1      	MOVWF       FSR1L 
0x3812	0x0E02      	MOVLW       hi_addr(?lstr3_FirmV_0_7_0)
0x3814	0x6EE2      	MOVWF       FSR1H 
0x3816	0x0E16      	MOVLW       22
0x3818	0x6E00      	MOVWF       R0 
0x381A	0x0E01      	MOVLW       1
0x381C	0x6E01      	MOVWF       R1 
0x381E	0xF004EC95  	CALL        ___CC2DW, 0
0x3822	0x0E35      	MOVLW       ?lstr3_FirmV_0_7_0
0x3824	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3826	0x0E02      	MOVLW       hi_addr(?lstr3_FirmV_0_7_0)
0x3828	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x382A	0xF00BECFA  	CALL        _Logger, 0
L_State296:
;FirmV_0_7_0.c,652 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x382E	0x0100      	MOVLB       0
0x3830	0x51BE      	MOVF        _PassFlag, 0, 1
0x3832	0x0A01      	XORLW       1
0x3834	0xA4D8      	BTFSS       STATUS, 2 
0x3836	0xD0B3      	BRA         L_State299
0x3838	0x0101      	MOVLB       1
0x383A	0xB177      	BTFSC       _Events+6, 0, 1
0x383C	0xD0B0      	BRA         L_State299
0x383E	0x0E00      	MOVLW       0
0x3840	0x0102      	MOVLB       2
0x3842	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x3844	0xE102      	BNZ         L__State2720
0x3846	0x0E00      	MOVLW       0
0x3848	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State2720:
0x384A	0xB4D8      	BTFSC       STATUS, 2 
0x384C	0xD0A8      	BRA         L_State299
L__State2627:
;FirmV_0_7_0.c,653 :: 		if(CloseAfterPass==0)
0x384E	0x0101      	MOVLB       1
0x3850	0x511E      	MOVF        _CloseAfterPass, 0, 1
0x3852	0x0A00      	XORLW       0
0x3854	0xE152      	BNZ         L_State2100
;FirmV_0_7_0.c,654 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:");Logger(t);}
0x3856	0x0100      	MOVLB       0
0x3858	0x51BF      	MOVF        __AC, 0, 1
0x385A	0x25EE      	ADDWF       _ms500, 0, 1
0x385C	0x6E00      	MOVWF       R0 
0x385E	0x0E00      	MOVLW       0
0x3860	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3862	0x6E01      	MOVWF       R1 
0x3864	0x0E00      	MOVLW       0
0x3866	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3868	0x6E02      	MOVWF       R2 
0x386A	0x0E00      	MOVLW       0
0x386C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x386E	0x6E03      	MOVWF       R3 
0x3870	0xF11FC000  	MOVFF       R0, _temp
0x3874	0xF120C001  	MOVFF       R1, _temp+1
0x3878	0xF121C002  	MOVFF       R2, _temp+2
0x387C	0xF122C003  	MOVFF       R3, _temp+3
0x3880	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3884	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3888	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x388C	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3890	0x0E09      	MOVLW       9
0x3892	0x0103      	MOVLB       3
0x3894	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3896	0xF00DEC7B  	CALL        _AddTask, 0
0x389A	0x0100      	MOVLB       0
0x389C	0x6BBE      	CLRF        _PassFlag, 1
0x389E	0xF4F8C11F  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x38A2	0xF4F9C120  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x38A6	0xF4FAC121  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x38AA	0xF4FBC122  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x38AE	0x0E23      	MOVLW       _t
0x38B0	0x0104      	MOVLB       4
0x38B2	0x6FFC      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x38B4	0x0E01      	MOVLW       hi_addr(_t)
0x38B6	0x6FFD      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x38B8	0xF003ECC7  	CALL        _LongWordToStrWithZeros, 0
0x38BC	0x0EEA      	MOVLW       ?ICS?lstr4_FirmV_0_7_0
0x38BE	0x6EF6      	MOVWF       4086 
0x38C0	0x0E74      	MOVLW       hi_addr(?ICS?lstr4_FirmV_0_7_0)
0x38C2	0x6EF7      	MOVWF       TBLPTRH 
0x38C4	0x0E00      	MOVLW       higher_addr(?ICS?lstr4_FirmV_0_7_0)
0x38C6	0x6EF8      	MOVWF       TBLPTRU 
0x38C8	0x0E4B      	MOVLW       ?lstr4_FirmV_0_7_0
0x38CA	0x6EE1      	MOVWF       FSR1L 
0x38CC	0x0E02      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x38CE	0x6EE2      	MOVWF       FSR1H 
0x38D0	0x0E10      	MOVLW       16
0x38D2	0x6E00      	MOVWF       R0 
0x38D4	0x0E01      	MOVLW       1
0x38D6	0x6E01      	MOVWF       R1 
0x38D8	0xF004EC95  	CALL        ___CC2DW, 0
0x38DC	0x0E4B      	MOVLW       ?lstr4_FirmV_0_7_0
0x38DE	0x0103      	MOVLB       3
0x38E0	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x38E2	0x0E02      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x38E4	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x38E6	0xF00BECFA  	CALL        _Logger, 0
0x38EA	0x0E23      	MOVLW       _t
0x38EC	0x0103      	MOVLB       3
0x38EE	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x38F0	0x0E01      	MOVLW       hi_addr(_t)
0x38F2	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x38F4	0xF00BECFA  	CALL        _Logger, 0
0x38F8	0xD052      	BRA         L_State2101
L_State2100:
;FirmV_0_7_0.c,656 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:");Logger(t);}
0x38FA	0x0101      	MOVLB       1
0x38FC	0x511E      	MOVF        _CloseAfterPass, 0, 1
0x38FE	0x0100      	MOVLB       0
0x3900	0x25EE      	ADDWF       _ms500, 0, 1
0x3902	0x6E00      	MOVWF       R0 
0x3904	0x0E00      	MOVLW       0
0x3906	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3908	0x6E01      	MOVWF       R1 
0x390A	0x0E00      	MOVLW       0
0x390C	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x390E	0x6E02      	MOVWF       R2 
0x3910	0x0E00      	MOVLW       0
0x3912	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3914	0x6E03      	MOVWF       R3 
0x3916	0xF11FC000  	MOVFF       R0, _temp
0x391A	0xF120C001  	MOVFF       R1, _temp+1
0x391E	0xF121C002  	MOVFF       R2, _temp+2
0x3922	0xF122C003  	MOVFF       R3, _temp+3
0x3926	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x392A	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x392E	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3932	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3936	0x0E09      	MOVLW       9
0x3938	0x0103      	MOVLB       3
0x393A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x393C	0xF00DEC7B  	CALL        _AddTask, 0
0x3940	0x0100      	MOVLB       0
0x3942	0x6BBE      	CLRF        _PassFlag, 1
0x3944	0xF4F8C11F  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x3948	0xF4F9C120  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x394C	0xF4FAC121  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x3950	0xF4FBC122  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x3954	0x0E23      	MOVLW       _t
0x3956	0x0104      	MOVLB       4
0x3958	0x6FFC      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x395A	0x0E01      	MOVLW       hi_addr(_t)
0x395C	0x6FFD      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x395E	0xF003ECC7  	CALL        _LongWordToStrWithZeros, 0
0x3962	0x0EFA      	MOVLW       ?ICS?lstr5_FirmV_0_7_0
0x3964	0x6EF6      	MOVWF       4086 
0x3966	0x0E74      	MOVLW       hi_addr(?ICS?lstr5_FirmV_0_7_0)
0x3968	0x6EF7      	MOVWF       TBLPTRH 
0x396A	0x0E00      	MOVLW       higher_addr(?ICS?lstr5_FirmV_0_7_0)
0x396C	0x6EF8      	MOVWF       TBLPTRU 
0x396E	0x0E5B      	MOVLW       ?lstr5_FirmV_0_7_0
0x3970	0x6EE1      	MOVWF       FSR1L 
0x3972	0x0E02      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x3974	0x6EE2      	MOVWF       FSR1H 
0x3976	0x0E10      	MOVLW       16
0x3978	0x6E00      	MOVWF       R0 
0x397A	0x0E01      	MOVLW       1
0x397C	0x6E01      	MOVWF       R1 
0x397E	0xF004EC95  	CALL        ___CC2DW, 0
0x3982	0x0E5B      	MOVLW       ?lstr5_FirmV_0_7_0
0x3984	0x0103      	MOVLB       3
0x3986	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3988	0x0E02      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x398A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x398C	0xF00BECFA  	CALL        _Logger, 0
0x3990	0x0E23      	MOVLW       _t
0x3992	0x0103      	MOVLB       3
0x3994	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3996	0x0E01      	MOVLW       hi_addr(_t)
0x3998	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x399A	0xF00BECFA  	CALL        _Logger, 0
L_State2101:
L_State299:
;FirmV_0_7_0.c,658 :: 		}
0x399E	0x0012      	RETURN      0
; end of _State2
_State7:
;FirmV_0_7_0.c,1010 :: 		void State7()
;FirmV_0_7_0.c,1012 :: 		Flasher=1;
0x39A0	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,1014 :: 		if(CheckTask(1))
0x39A2	0x0E01      	MOVLW       1
0x39A4	0x0103      	MOVLB       3
0x39A6	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x39A8	0xF007EC58  	CALL        _CheckTask, 0
0x39AC	0x5200      	MOVF        R0, 1 
0x39AE	0xE04B      	BZ          L_State7198
;FirmV_0_7_0.c,1015 :: 		{StartMotor(1,_Close);Logger("S7 Motor1Start");memcpy(LCDLine1,_closing,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x39B0	0x0E01      	MOVLW       1
0x39B2	0x0103      	MOVLB       3
0x39B4	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x39B6	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x39B8	0xF006EC0E  	CALL        _StartMotor, 0
0x39BC	0x0E53      	MOVLW       83
0x39BE	0x0102      	MOVLB       2
0x39C0	0x6F35      	MOVWF       ?lstr44_FirmV_0_7_0, 1
0x39C2	0x0E37      	MOVLW       55
0x39C4	0x6F36      	MOVWF       ?lstr44_FirmV_0_7_0+1, 1
0x39C6	0x0E20      	MOVLW       32
0x39C8	0x6F37      	MOVWF       ?lstr44_FirmV_0_7_0+2, 1
0x39CA	0x0E4D      	MOVLW       77
0x39CC	0x6F38      	MOVWF       ?lstr44_FirmV_0_7_0+3, 1
0x39CE	0x0E6F      	MOVLW       111
0x39D0	0x6F39      	MOVWF       ?lstr44_FirmV_0_7_0+4, 1
0x39D2	0x0E74      	MOVLW       116
0x39D4	0x6F3A      	MOVWF       ?lstr44_FirmV_0_7_0+5, 1
0x39D6	0x0E6F      	MOVLW       111
0x39D8	0x6F3B      	MOVWF       ?lstr44_FirmV_0_7_0+6, 1
0x39DA	0x0E72      	MOVLW       114
0x39DC	0x6F3C      	MOVWF       ?lstr44_FirmV_0_7_0+7, 1
0x39DE	0x0E31      	MOVLW       49
0x39E0	0x6F3D      	MOVWF       ?lstr44_FirmV_0_7_0+8, 1
0x39E2	0x0E53      	MOVLW       83
0x39E4	0x6F3E      	MOVWF       ?lstr44_FirmV_0_7_0+9, 1
0x39E6	0x0E74      	MOVLW       116
0x39E8	0x6F3F      	MOVWF       ?lstr44_FirmV_0_7_0+10, 1
0x39EA	0x0E61      	MOVLW       97
0x39EC	0x6F40      	MOVWF       ?lstr44_FirmV_0_7_0+11, 1
0x39EE	0x0E72      	MOVLW       114
0x39F0	0x6F41      	MOVWF       ?lstr44_FirmV_0_7_0+12, 1
0x39F2	0x0E74      	MOVLW       116
0x39F4	0x6F42      	MOVWF       ?lstr44_FirmV_0_7_0+13, 1
0x39F6	0x6B43      	CLRF        ?lstr44_FirmV_0_7_0+14, 1
0x39F8	0x0E35      	MOVLW       ?lstr44_FirmV_0_7_0
0x39FA	0x0103      	MOVLB       3
0x39FC	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x39FE	0x0E02      	MOVLW       hi_addr(?lstr44_FirmV_0_7_0)
0x3A00	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3A02	0xF00BECFA  	CALL        _Logger, 0
0x3A06	0x0EF3      	MOVLW       _LCDLine1
0x3A08	0x0105      	MOVLB       5
0x3A0A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3A0C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3A0E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3A10	0x0E9B      	MOVLW       __closing
0x3A12	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3A14	0x0E00      	MOVLW       hi_addr(__closing)
0x3A16	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3A18	0x0E10      	MOVLW       16
0x3A1A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3A1C	0x0E00      	MOVLW       0
0x3A1E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3A20	0xF000ECFC  	CALL        _memcpy, 0
0x3A24	0x0E04      	MOVLW       _LCDLine2
0x3A26	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3A28	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3A2A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3A2C	0x0EAC      	MOVLW       __Blank
0x3A2E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3A30	0x0E00      	MOVLW       hi_addr(__Blank)
0x3A32	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3A34	0x0E10      	MOVLW       16
0x3A36	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3A38	0x0E00      	MOVLW       0
0x3A3A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3A3C	0xF000ECFC  	CALL        _memcpy, 0
0x3A40	0x0E01      	MOVLW       1
0x3A42	0x0101      	MOVLB       1
0x3A44	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7198:
;FirmV_0_7_0.c,1017 :: 		if(CheckTask(2))
0x3A46	0x0E02      	MOVLW       2
0x3A48	0x0103      	MOVLB       3
0x3A4A	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3A4C	0xF007EC58  	CALL        _CheckTask, 0
0x3A50	0x5200      	MOVF        R0, 1 
0x3A52	0xE02B      	BZ          L_State7199
;FirmV_0_7_0.c,1018 :: 		{StartMotor(2,_Close);Logger("S7 Motor2Start");}
0x3A54	0x0E02      	MOVLW       2
0x3A56	0x0103      	MOVLB       3
0x3A58	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x3A5A	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x3A5C	0xF006EC0E  	CALL        _StartMotor, 0
0x3A60	0x0E53      	MOVLW       83
0x3A62	0x0102      	MOVLB       2
0x3A64	0x6F44      	MOVWF       ?lstr45_FirmV_0_7_0, 1
0x3A66	0x0E37      	MOVLW       55
0x3A68	0x6F45      	MOVWF       ?lstr45_FirmV_0_7_0+1, 1
0x3A6A	0x0E20      	MOVLW       32
0x3A6C	0x6F46      	MOVWF       ?lstr45_FirmV_0_7_0+2, 1
0x3A6E	0x0E4D      	MOVLW       77
0x3A70	0x6F47      	MOVWF       ?lstr45_FirmV_0_7_0+3, 1
0x3A72	0x0E6F      	MOVLW       111
0x3A74	0x6F48      	MOVWF       ?lstr45_FirmV_0_7_0+4, 1
0x3A76	0x0E74      	MOVLW       116
0x3A78	0x6F49      	MOVWF       ?lstr45_FirmV_0_7_0+5, 1
0x3A7A	0x0E6F      	MOVLW       111
0x3A7C	0x6F4A      	MOVWF       ?lstr45_FirmV_0_7_0+6, 1
0x3A7E	0x0E72      	MOVLW       114
0x3A80	0x6F4B      	MOVWF       ?lstr45_FirmV_0_7_0+7, 1
0x3A82	0x0E32      	MOVLW       50
0x3A84	0x6F4C      	MOVWF       ?lstr45_FirmV_0_7_0+8, 1
0x3A86	0x0E53      	MOVLW       83
0x3A88	0x6F4D      	MOVWF       ?lstr45_FirmV_0_7_0+9, 1
0x3A8A	0x0E74      	MOVLW       116
0x3A8C	0x6F4E      	MOVWF       ?lstr45_FirmV_0_7_0+10, 1
0x3A8E	0x0E61      	MOVLW       97
0x3A90	0x6F4F      	MOVWF       ?lstr45_FirmV_0_7_0+11, 1
0x3A92	0x0E72      	MOVLW       114
0x3A94	0x6F50      	MOVWF       ?lstr45_FirmV_0_7_0+12, 1
0x3A96	0x0E74      	MOVLW       116
0x3A98	0x6F51      	MOVWF       ?lstr45_FirmV_0_7_0+13, 1
0x3A9A	0x6B52      	CLRF        ?lstr45_FirmV_0_7_0+14, 1
0x3A9C	0x0E44      	MOVLW       ?lstr45_FirmV_0_7_0
0x3A9E	0x0103      	MOVLB       3
0x3AA0	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3AA2	0x0E02      	MOVLW       hi_addr(?lstr45_FirmV_0_7_0)
0x3AA4	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3AA6	0xF00BECFA  	CALL        _Logger, 0
L_State7199:
;FirmV_0_7_0.c,1020 :: 		if(CheckTask(10))
0x3AAA	0x0E0A      	MOVLW       10
0x3AAC	0x0103      	MOVLB       3
0x3AAE	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3AB0	0xF007EC58  	CALL        _CheckTask, 0
0x3AB4	0x5200      	MOVF        R0, 1 
0x3AB6	0xE01F      	BZ          L_State7200
;FirmV_0_7_0.c,1021 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S7 M1 Overload Check");}
0x3AB8	0x0E01      	MOVLW       1
0x3ABA	0x0101      	MOVLB       1
0x3ABC	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
0x3ABE	0x0E01      	MOVLW       1
0x3AC0	0x0103      	MOVLB       3
0x3AC2	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x3AC4	0xF007EC49  	CALL        _OverloadInit, 0
0x3AC8	0x0EBF      	MOVLW       ?ICS?lstr46_FirmV_0_7_0
0x3ACA	0x6EF6      	MOVWF       4086 
0x3ACC	0x0E73      	MOVLW       hi_addr(?ICS?lstr46_FirmV_0_7_0)
0x3ACE	0x6EF7      	MOVWF       TBLPTRH 
0x3AD0	0x0E00      	MOVLW       higher_addr(?ICS?lstr46_FirmV_0_7_0)
0x3AD2	0x6EF8      	MOVWF       TBLPTRU 
0x3AD4	0x0E53      	MOVLW       ?lstr46_FirmV_0_7_0
0x3AD6	0x6EE1      	MOVWF       FSR1L 
0x3AD8	0x0E02      	MOVLW       hi_addr(?lstr46_FirmV_0_7_0)
0x3ADA	0x6EE2      	MOVWF       FSR1H 
0x3ADC	0x0E15      	MOVLW       21
0x3ADE	0x6E00      	MOVWF       R0 
0x3AE0	0x0E01      	MOVLW       1
0x3AE2	0x6E01      	MOVWF       R1 
0x3AE4	0xF004EC95  	CALL        ___CC2DW, 0
0x3AE8	0x0E53      	MOVLW       ?lstr46_FirmV_0_7_0
0x3AEA	0x0103      	MOVLB       3
0x3AEC	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3AEE	0x0E02      	MOVLW       hi_addr(?lstr46_FirmV_0_7_0)
0x3AF0	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3AF2	0xF00BECFA  	CALL        _Logger, 0
L_State7200:
;FirmV_0_7_0.c,1023 :: 		if(CheckTask(11))
0x3AF6	0x0E0B      	MOVLW       11
0x3AF8	0x0103      	MOVLB       3
0x3AFA	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3AFC	0xF007EC58  	CALL        _CheckTask, 0
0x3B00	0x5200      	MOVF        R0, 1 
0x3B02	0xE01F      	BZ          L_State7201
;FirmV_0_7_0.c,1024 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S7 M2 Overload Check");}
0x3B04	0x0E01      	MOVLW       1
0x3B06	0x0101      	MOVLB       1
0x3B08	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
0x3B0A	0x0E02      	MOVLW       2
0x3B0C	0x0103      	MOVLB       3
0x3B0E	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x3B10	0xF007EC49  	CALL        _OverloadInit, 0
0x3B14	0x0ED4      	MOVLW       ?ICS?lstr47_FirmV_0_7_0
0x3B16	0x6EF6      	MOVWF       4086 
0x3B18	0x0E73      	MOVLW       hi_addr(?ICS?lstr47_FirmV_0_7_0)
0x3B1A	0x6EF7      	MOVWF       TBLPTRH 
0x3B1C	0x0E00      	MOVLW       higher_addr(?ICS?lstr47_FirmV_0_7_0)
0x3B1E	0x6EF8      	MOVWF       TBLPTRU 
0x3B20	0x0E68      	MOVLW       ?lstr47_FirmV_0_7_0
0x3B22	0x6EE1      	MOVWF       FSR1L 
0x3B24	0x0E02      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x3B26	0x6EE2      	MOVWF       FSR1H 
0x3B28	0x0E15      	MOVLW       21
0x3B2A	0x6E00      	MOVWF       R0 
0x3B2C	0x0E01      	MOVLW       1
0x3B2E	0x6E01      	MOVWF       R1 
0x3B30	0xF004EC95  	CALL        ___CC2DW, 0
0x3B34	0x0E68      	MOVLW       ?lstr47_FirmV_0_7_0
0x3B36	0x0103      	MOVLB       3
0x3B38	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3B3A	0x0E02      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x3B3C	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3B3E	0xF00BECFA  	CALL        _Logger, 0
L_State7201:
;FirmV_0_7_0.c,1026 :: 		if(CheckTask(5))
0x3B42	0x0E05      	MOVLW       5
0x3B44	0x0103      	MOVLB       3
0x3B46	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3B48	0xF007EC58  	CALL        _CheckTask, 0
0x3B4C	0x5200      	MOVF        R0, 1 
0x3B4E	0xE02E      	BZ          L_State7202
;FirmV_0_7_0.c,1027 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S7 M1 Speed UP");}
0x3B50	0x0E01      	MOVLW       1
0x3B52	0x0103      	MOVLB       3
0x3B54	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x3B56	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x3B5A	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x3B5E	0x0100      	MOVLB       0
0x3B60	0x6B97      	CLRF        _M1isSlow, 1
0x3B62	0x0E53      	MOVLW       83
0x3B64	0x0102      	MOVLB       2
0x3B66	0x6F7D      	MOVWF       ?lstr48_FirmV_0_7_0, 1
0x3B68	0x0E37      	MOVLW       55
0x3B6A	0x6F7E      	MOVWF       ?lstr48_FirmV_0_7_0+1, 1
0x3B6C	0x0E20      	MOVLW       32
0x3B6E	0x6F7F      	MOVWF       ?lstr48_FirmV_0_7_0+2, 1
0x3B70	0x0E4D      	MOVLW       77
0x3B72	0x6F80      	MOVWF       ?lstr48_FirmV_0_7_0+3, 1
0x3B74	0x0E31      	MOVLW       49
0x3B76	0x6F81      	MOVWF       ?lstr48_FirmV_0_7_0+4, 1
0x3B78	0x0E20      	MOVLW       32
0x3B7A	0x6F82      	MOVWF       ?lstr48_FirmV_0_7_0+5, 1
0x3B7C	0x0E53      	MOVLW       83
0x3B7E	0x6F83      	MOVWF       ?lstr48_FirmV_0_7_0+6, 1
0x3B80	0x0E70      	MOVLW       112
0x3B82	0x6F84      	MOVWF       ?lstr48_FirmV_0_7_0+7, 1
0x3B84	0x0E65      	MOVLW       101
0x3B86	0x6F85      	MOVWF       ?lstr48_FirmV_0_7_0+8, 1
0x3B88	0x0E65      	MOVLW       101
0x3B8A	0x6F86      	MOVWF       ?lstr48_FirmV_0_7_0+9, 1
0x3B8C	0x0E64      	MOVLW       100
0x3B8E	0x6F87      	MOVWF       ?lstr48_FirmV_0_7_0+10, 1
0x3B90	0x0E20      	MOVLW       32
0x3B92	0x6F88      	MOVWF       ?lstr48_FirmV_0_7_0+11, 1
0x3B94	0x0E55      	MOVLW       85
0x3B96	0x6F89      	MOVWF       ?lstr48_FirmV_0_7_0+12, 1
0x3B98	0x0E50      	MOVLW       80
0x3B9A	0x6F8A      	MOVWF       ?lstr48_FirmV_0_7_0+13, 1
0x3B9C	0x6B8B      	CLRF        ?lstr48_FirmV_0_7_0+14, 1
0x3B9E	0x0E7D      	MOVLW       ?lstr48_FirmV_0_7_0
0x3BA0	0x0103      	MOVLB       3
0x3BA2	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3BA4	0x0E02      	MOVLW       hi_addr(?lstr48_FirmV_0_7_0)
0x3BA6	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3BA8	0xF00BECFA  	CALL        _Logger, 0
L_State7202:
;FirmV_0_7_0.c,1029 :: 		if(CheckTask(6))
0x3BAC	0x0E06      	MOVLW       6
0x3BAE	0x0103      	MOVLB       3
0x3BB0	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3BB2	0xF007EC58  	CALL        _CheckTask, 0
0x3BB6	0x5200      	MOVF        R0, 1 
0x3BB8	0xE02E      	BZ          L_State7203
;FirmV_0_7_0.c,1030 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S7 M2 Speed UP");}
0x3BBA	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x3BBE	0x0E01      	MOVLW       1
0x3BC0	0x0103      	MOVLB       3
0x3BC2	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x3BC4	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x3BC8	0x0100      	MOVLB       0
0x3BCA	0x6B98      	CLRF        _M2isSlow, 1
0x3BCC	0x0E53      	MOVLW       83
0x3BCE	0x0102      	MOVLB       2
0x3BD0	0x6F8C      	MOVWF       ?lstr49_FirmV_0_7_0, 1
0x3BD2	0x0E37      	MOVLW       55
0x3BD4	0x6F8D      	MOVWF       ?lstr49_FirmV_0_7_0+1, 1
0x3BD6	0x0E20      	MOVLW       32
0x3BD8	0x6F8E      	MOVWF       ?lstr49_FirmV_0_7_0+2, 1
0x3BDA	0x0E4D      	MOVLW       77
0x3BDC	0x6F8F      	MOVWF       ?lstr49_FirmV_0_7_0+3, 1
0x3BDE	0x0E32      	MOVLW       50
0x3BE0	0x6F90      	MOVWF       ?lstr49_FirmV_0_7_0+4, 1
0x3BE2	0x0E20      	MOVLW       32
0x3BE4	0x6F91      	MOVWF       ?lstr49_FirmV_0_7_0+5, 1
0x3BE6	0x0E53      	MOVLW       83
0x3BE8	0x6F92      	MOVWF       ?lstr49_FirmV_0_7_0+6, 1
0x3BEA	0x0E70      	MOVLW       112
0x3BEC	0x6F93      	MOVWF       ?lstr49_FirmV_0_7_0+7, 1
0x3BEE	0x0E65      	MOVLW       101
0x3BF0	0x6F94      	MOVWF       ?lstr49_FirmV_0_7_0+8, 1
0x3BF2	0x0E65      	MOVLW       101
0x3BF4	0x6F95      	MOVWF       ?lstr49_FirmV_0_7_0+9, 1
0x3BF6	0x0E64      	MOVLW       100
0x3BF8	0x6F96      	MOVWF       ?lstr49_FirmV_0_7_0+10, 1
0x3BFA	0x0E20      	MOVLW       32
0x3BFC	0x6F97      	MOVWF       ?lstr49_FirmV_0_7_0+11, 1
0x3BFE	0x0E55      	MOVLW       85
0x3C00	0x6F98      	MOVWF       ?lstr49_FirmV_0_7_0+12, 1
0x3C02	0x0E50      	MOVLW       80
0x3C04	0x6F99      	MOVWF       ?lstr49_FirmV_0_7_0+13, 1
0x3C06	0x6B9A      	CLRF        ?lstr49_FirmV_0_7_0+14, 1
0x3C08	0x0E8C      	MOVLW       ?lstr49_FirmV_0_7_0
0x3C0A	0x0103      	MOVLB       3
0x3C0C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3C0E	0x0E02      	MOVLW       hi_addr(?lstr49_FirmV_0_7_0)
0x3C10	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3C12	0xF00BECFA  	CALL        _Logger, 0
L_State7203:
;FirmV_0_7_0.c,1032 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(CloseDone.b0))
0x3C16	0x0E03      	MOVLW       3
0x3C18	0x0103      	MOVLB       3
0x3C1A	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C1C	0xF007EC58  	CALL        _CheckTask, 0
0x3C20	0x5200      	MOVF        R0, 1 
0x3C22	0xE108      	BNZ         L__State7660
0x3C24	0x0101      	MOVLB       1
0x3C26	0x5116      	MOVF        _OverloadCheckFlag1, 0, 1
0x3C28	0x0A01      	XORLW       1
0x3C2A	0xE103      	BNZ         L__State7661
0x3C2C	0xA176      	BTFSS       _Events+5, 0, 1
0x3C2E	0xD001      	BRA         L__State7661
0x3C30	0xD001      	BRA         L__State7660
L__State7661:
0x3C32	0xD02A      	BRA         L_State7210
L__State7660:
0x3C34	0x0100      	MOVLB       0
0x3C36	0xA199      	BTFSS       _CloseDone, 0, 1
0x3C38	0xD027      	BRA         L_State7210
L__State7659:
;FirmV_0_7_0.c,1033 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S7 M1 Stoped");}
0x3C3A	0x9199      	BCF         _CloseDone, 0, 1
0x3C3C	0x0E01      	MOVLW       1
0x3C3E	0x0103      	MOVLB       3
0x3C40	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3C42	0xF007EC3B  	CALL        _StopMotor, 0
0x3C46	0x0E53      	MOVLW       83
0x3C48	0x0102      	MOVLB       2
0x3C4A	0x6F9B      	MOVWF       ?lstr50_FirmV_0_7_0, 1
0x3C4C	0x0E37      	MOVLW       55
0x3C4E	0x6F9C      	MOVWF       ?lstr50_FirmV_0_7_0+1, 1
0x3C50	0x0E20      	MOVLW       32
0x3C52	0x6F9D      	MOVWF       ?lstr50_FirmV_0_7_0+2, 1
0x3C54	0x0E4D      	MOVLW       77
0x3C56	0x6F9E      	MOVWF       ?lstr50_FirmV_0_7_0+3, 1
0x3C58	0x0E31      	MOVLW       49
0x3C5A	0x6F9F      	MOVWF       ?lstr50_FirmV_0_7_0+4, 1
0x3C5C	0x0E20      	MOVLW       32
0x3C5E	0x6FA0      	MOVWF       ?lstr50_FirmV_0_7_0+5, 1
0x3C60	0x0E53      	MOVLW       83
0x3C62	0x6FA1      	MOVWF       ?lstr50_FirmV_0_7_0+6, 1
0x3C64	0x0E74      	MOVLW       116
0x3C66	0x6FA2      	MOVWF       ?lstr50_FirmV_0_7_0+7, 1
0x3C68	0x0E6F      	MOVLW       111
0x3C6A	0x6FA3      	MOVWF       ?lstr50_FirmV_0_7_0+8, 1
0x3C6C	0x0E70      	MOVLW       112
0x3C6E	0x6FA4      	MOVWF       ?lstr50_FirmV_0_7_0+9, 1
0x3C70	0x0E65      	MOVLW       101
0x3C72	0x6FA5      	MOVWF       ?lstr50_FirmV_0_7_0+10, 1
0x3C74	0x0E64      	MOVLW       100
0x3C76	0x6FA6      	MOVWF       ?lstr50_FirmV_0_7_0+11, 1
0x3C78	0x6BA7      	CLRF        ?lstr50_FirmV_0_7_0+12, 1
0x3C7A	0x0E9B      	MOVLW       ?lstr50_FirmV_0_7_0
0x3C7C	0x0103      	MOVLB       3
0x3C7E	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3C80	0x0E02      	MOVLW       hi_addr(?lstr50_FirmV_0_7_0)
0x3C82	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3C84	0xF00BECFA  	CALL        _Logger, 0
L_State7210:
;FirmV_0_7_0.c,1035 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(CloseDone.b1))
0x3C88	0x0E04      	MOVLW       4
0x3C8A	0x0103      	MOVLB       3
0x3C8C	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C8E	0xF007EC58  	CALL        _CheckTask, 0
0x3C92	0x5200      	MOVF        R0, 1 
0x3C94	0xE108      	BNZ         L__State7657
0x3C96	0x0101      	MOVLB       1
0x3C98	0x5115      	MOVF        _OverloadCheckFlag2, 0, 1
0x3C9A	0x0A01      	XORLW       1
0x3C9C	0xE103      	BNZ         L__State7658
0x3C9E	0xA376      	BTFSS       _Events+5, 1, 1
0x3CA0	0xD001      	BRA         L__State7658
0x3CA2	0xD001      	BRA         L__State7657
L__State7658:
0x3CA4	0xD02A      	BRA         L_State7217
L__State7657:
0x3CA6	0x0100      	MOVLB       0
0x3CA8	0xA399      	BTFSS       _CloseDone, 1, 1
0x3CAA	0xD027      	BRA         L_State7217
L__State7656:
;FirmV_0_7_0.c,1036 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S7 M2 Stoped");}
0x3CAC	0x9399      	BCF         _CloseDone, 1, 1
0x3CAE	0x0E02      	MOVLW       2
0x3CB0	0x0103      	MOVLB       3
0x3CB2	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3CB4	0xF007EC3B  	CALL        _StopMotor, 0
0x3CB8	0x0E53      	MOVLW       83
0x3CBA	0x0102      	MOVLB       2
0x3CBC	0x6FA8      	MOVWF       ?lstr51_FirmV_0_7_0, 1
0x3CBE	0x0E37      	MOVLW       55
0x3CC0	0x6FA9      	MOVWF       ?lstr51_FirmV_0_7_0+1, 1
0x3CC2	0x0E20      	MOVLW       32
0x3CC4	0x6FAA      	MOVWF       ?lstr51_FirmV_0_7_0+2, 1
0x3CC6	0x0E4D      	MOVLW       77
0x3CC8	0x6FAB      	MOVWF       ?lstr51_FirmV_0_7_0+3, 1
0x3CCA	0x0E32      	MOVLW       50
0x3CCC	0x6FAC      	MOVWF       ?lstr51_FirmV_0_7_0+4, 1
0x3CCE	0x0E20      	MOVLW       32
0x3CD0	0x6FAD      	MOVWF       ?lstr51_FirmV_0_7_0+5, 1
0x3CD2	0x0E53      	MOVLW       83
0x3CD4	0x6FAE      	MOVWF       ?lstr51_FirmV_0_7_0+6, 1
0x3CD6	0x0E74      	MOVLW       116
0x3CD8	0x6FAF      	MOVWF       ?lstr51_FirmV_0_7_0+7, 1
0x3CDA	0x0E6F      	MOVLW       111
0x3CDC	0x6FB0      	MOVWF       ?lstr51_FirmV_0_7_0+8, 1
0x3CDE	0x0E70      	MOVLW       112
0x3CE0	0x6FB1      	MOVWF       ?lstr51_FirmV_0_7_0+9, 1
0x3CE2	0x0E65      	MOVLW       101
0x3CE4	0x6FB2      	MOVWF       ?lstr51_FirmV_0_7_0+10, 1
0x3CE6	0x0E64      	MOVLW       100
0x3CE8	0x6FB3      	MOVWF       ?lstr51_FirmV_0_7_0+11, 1
0x3CEA	0x6BB4      	CLRF        ?lstr51_FirmV_0_7_0+12, 1
0x3CEC	0x0EA8      	MOVLW       ?lstr51_FirmV_0_7_0
0x3CEE	0x0103      	MOVLB       3
0x3CF0	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3CF2	0x0E02      	MOVLW       hi_addr(?lstr51_FirmV_0_7_0)
0x3CF4	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3CF6	0xF00BECFA  	CALL        _Logger, 0
L_State7217:
;FirmV_0_7_0.c,1038 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x3CFA	0x0102      	MOVLB       2
0x3CFC	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x3CFE	0x0A00      	XORLW       0
0x3D00	0xE005      	BZ          L__State7655
0x3D02	0x0100      	MOVLB       0
0x3D04	0x519A      	MOVF        _ActiveDoors, 0, 1
0x3D06	0x0A01      	XORLW       1
0x3D08	0xE001      	BZ          L__State7655
0x3D0A	0xD002      	BRA         L_State7220
L__State7655:
0x3D0C	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1039 :: 		CloseDone.b1=0;
0x3D0E	0x9399      	BCF         _CloseDone, 1, 1
L_State7220:
;FirmV_0_7_0.c,1041 :: 		if((Events.Photocell.b0==1))
0x3D10	0x0101      	MOVLB       1
0x3D12	0xA177      	BTFSS       _Events+6, 0, 1
0x3D14	0xD04D      	BRA         L_State7221
;FirmV_0_7_0.c,1042 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S7 Photocell Int");ClearTasks(9);
0x3D16	0x0E01      	MOVLW       1
0x3D18	0x0103      	MOVLB       3
0x3D1A	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3D1C	0xF007EC3B  	CALL        _StopMotor, 0
0x3D20	0x0E02      	MOVLW       2
0x3D22	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3D24	0xF007EC3B  	CALL        _StopMotor, 0
0x3D28	0x0101      	MOVLB       1
0x3D2A	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x3D2C	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x3D2E	0x0E06      	MOVLW       6
0x3D30	0x0100      	MOVLB       0
0x3D32	0x6FF2      	MOVWF       _State, 1
0x3D34	0x0E01      	MOVLW       1
0x3D36	0x6E6F      	MOVWF       _PhotocellOpenFlag 
0x3D38	0x0E21      	MOVLW       ?ICS?lstr52_FirmV_0_7_0
0x3D3A	0x6EF6      	MOVWF       4086 
0x3D3C	0x0E74      	MOVLW       hi_addr(?ICS?lstr52_FirmV_0_7_0)
0x3D3E	0x6EF7      	MOVWF       TBLPTRH 
0x3D40	0x0E00      	MOVLW       higher_addr(?ICS?lstr52_FirmV_0_7_0)
0x3D42	0x6EF8      	MOVWF       TBLPTRU 
0x3D44	0x0EB5      	MOVLW       ?lstr52_FirmV_0_7_0
0x3D46	0x6EE1      	MOVWF       FSR1L 
0x3D48	0x0E02      	MOVLW       hi_addr(?lstr52_FirmV_0_7_0)
0x3D4A	0x6EE2      	MOVWF       FSR1H 
0x3D4C	0x0E11      	MOVLW       17
0x3D4E	0x6E00      	MOVWF       R0 
0x3D50	0x0E01      	MOVLW       1
0x3D52	0x6E01      	MOVWF       R1 
0x3D54	0xF004EC95  	CALL        ___CC2DW, 0
0x3D58	0x0EB5      	MOVLW       ?lstr52_FirmV_0_7_0
0x3D5A	0x0103      	MOVLB       3
0x3D5C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3D5E	0x0E02      	MOVLW       hi_addr(?lstr52_FirmV_0_7_0)
0x3D60	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3D62	0xF00BECFA  	CALL        _Logger, 0
0x3D66	0x0E09      	MOVLW       9
0x3D68	0x0103      	MOVLB       3
0x3D6A	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x3D6C	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1043 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;}
0x3D70	0x0EF3      	MOVLW       _LCDLine1
0x3D72	0x0105      	MOVLB       5
0x3D74	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3D76	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3D78	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3D7A	0x0E4D      	MOVLW       __stop
0x3D7C	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3D7E	0x0E00      	MOVLW       hi_addr(__stop)
0x3D80	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3D82	0x0E10      	MOVLW       16
0x3D84	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3D86	0x0E00      	MOVLW       0
0x3D88	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3D8A	0xF000ECFC  	CALL        _memcpy, 0
0x3D8E	0x0E04      	MOVLW       _LCDLine2
0x3D90	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3D92	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3D94	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3D96	0x0E1A      	MOVLW       __errPhoto
0x3D98	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3D9A	0x0E00      	MOVLW       hi_addr(__errPhoto)
0x3D9C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3D9E	0x0E10      	MOVLW       16
0x3DA0	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3DA2	0x0E00      	MOVLW       0
0x3DA4	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3DA6	0xF000ECFC  	CALL        _memcpy, 0
0x3DAA	0x0E01      	MOVLW       1
0x3DAC	0x0101      	MOVLB       1
0x3DAE	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7221:
;FirmV_0_7_0.c,1045 :: 		if((Events.Remote!=0))
0x3DB0	0x5175      	MOVF        _Events+4, 0, 1
0x3DB2	0x0A00      	XORLW       0
0x3DB4	0xE04B      	BZ          L_State7222
;FirmV_0_7_0.c,1046 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Remote Pressed");ClearTasks(9);
0x3DB6	0x0E01      	MOVLW       1
0x3DB8	0x0103      	MOVLB       3
0x3DBA	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3DBC	0xF007EC3B  	CALL        _StopMotor, 0
0x3DC0	0x0E02      	MOVLW       2
0x3DC2	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3DC4	0xF007EC3B  	CALL        _StopMotor, 0
0x3DC8	0x0E06      	MOVLW       6
0x3DCA	0x0100      	MOVLB       0
0x3DCC	0x6FF2      	MOVWF       _State, 1
0x3DCE	0x0101      	MOVLB       1
0x3DD0	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x3DD2	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x3DD4	0x0E32      	MOVLW       ?ICS?lstr53_FirmV_0_7_0
0x3DD6	0x6EF6      	MOVWF       4086 
0x3DD8	0x0E74      	MOVLW       hi_addr(?ICS?lstr53_FirmV_0_7_0)
0x3DDA	0x6EF7      	MOVWF       TBLPTRH 
0x3DDC	0x0E00      	MOVLW       higher_addr(?ICS?lstr53_FirmV_0_7_0)
0x3DDE	0x6EF8      	MOVWF       TBLPTRU 
0x3DE0	0x0EC6      	MOVLW       ?lstr53_FirmV_0_7_0
0x3DE2	0x6EE1      	MOVWF       FSR1L 
0x3DE4	0x0E02      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x3DE6	0x6EE2      	MOVWF       FSR1H 
0x3DE8	0x0E12      	MOVLW       18
0x3DEA	0x6E00      	MOVWF       R0 
0x3DEC	0x0E01      	MOVLW       1
0x3DEE	0x6E01      	MOVWF       R1 
0x3DF0	0xF004EC95  	CALL        ___CC2DW, 0
0x3DF4	0x0EC6      	MOVLW       ?lstr53_FirmV_0_7_0
0x3DF6	0x0103      	MOVLB       3
0x3DF8	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3DFA	0x0E02      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x3DFC	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3DFE	0xF00BECFA  	CALL        _Logger, 0
0x3E02	0x0E09      	MOVLW       9
0x3E04	0x0103      	MOVLB       3
0x3E06	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x3E08	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1047 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;}
0x3E0C	0x0EF3      	MOVLW       _LCDLine1
0x3E0E	0x0105      	MOVLB       5
0x3E10	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3E12	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3E14	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3E16	0x0E4D      	MOVLW       __stop
0x3E18	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3E1A	0x0E00      	MOVLW       hi_addr(__stop)
0x3E1C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3E1E	0x0E10      	MOVLW       16
0x3E20	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3E22	0x0E00      	MOVLW       0
0x3E24	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3E26	0xF000ECFC  	CALL        _memcpy, 0
0x3E2A	0x0E04      	MOVLW       _LCDLine2
0x3E2C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3E2E	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3E30	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3E32	0x0E3C      	MOVLW       __errRemote
0x3E34	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3E36	0x0E00      	MOVLW       hi_addr(__errRemote)
0x3E38	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3E3A	0x0E10      	MOVLW       16
0x3E3C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3E3E	0x0E00      	MOVLW       0
0x3E40	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3E42	0xF000ECFC  	CALL        _memcpy, 0
0x3E46	0x0E01      	MOVLW       1
0x3E48	0x0101      	MOVLB       1
0x3E4A	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7222:
;FirmV_0_7_0.c,1049 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x3E4C	0x5178      	MOVF        _Events+7, 0, 1
0x3E4E	0x0A01      	XORLW       1
0x3E50	0xE14E      	BNZ         L_State7225
0x3E52	0x0102      	MOVLB       2
0x3E54	0x530F      	MOVF        _LimiterEnable, 1, 1
0x3E56	0xE04B      	BZ          L_State7225
L__State7654:
;FirmV_0_7_0.c,1050 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Limit Switch Stop");ClearTasks(9);
0x3E58	0x0E01      	MOVLW       1
0x3E5A	0x0103      	MOVLB       3
0x3E5C	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3E5E	0xF007EC3B  	CALL        _StopMotor, 0
0x3E62	0x0E02      	MOVLW       2
0x3E64	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x3E66	0xF007EC3B  	CALL        _StopMotor, 0
0x3E6A	0x0E06      	MOVLW       6
0x3E6C	0x0100      	MOVLB       0
0x3E6E	0x6FF2      	MOVWF       _State, 1
0x3E70	0x0101      	MOVLB       1
0x3E72	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x3E74	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x3E76	0x0E44      	MOVLW       ?ICS?lstr54_FirmV_0_7_0
0x3E78	0x6EF6      	MOVWF       4086 
0x3E7A	0x0E74      	MOVLW       hi_addr(?ICS?lstr54_FirmV_0_7_0)
0x3E7C	0x6EF7      	MOVWF       TBLPTRH 
0x3E7E	0x0E00      	MOVLW       higher_addr(?ICS?lstr54_FirmV_0_7_0)
0x3E80	0x6EF8      	MOVWF       TBLPTRU 
0x3E82	0x0ED8      	MOVLW       ?lstr54_FirmV_0_7_0
0x3E84	0x6EE1      	MOVWF       FSR1L 
0x3E86	0x0E02      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x3E88	0x6EE2      	MOVWF       FSR1H 
0x3E8A	0x0E15      	MOVLW       21
0x3E8C	0x6E00      	MOVWF       R0 
0x3E8E	0x0E01      	MOVLW       1
0x3E90	0x6E01      	MOVWF       R1 
0x3E92	0xF004EC95  	CALL        ___CC2DW, 0
0x3E96	0x0ED8      	MOVLW       ?lstr54_FirmV_0_7_0
0x3E98	0x0103      	MOVLB       3
0x3E9A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3E9C	0x0E02      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x3E9E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3EA0	0xF00BECFA  	CALL        _Logger, 0
0x3EA4	0x0E09      	MOVLW       9
0x3EA6	0x0103      	MOVLB       3
0x3EA8	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x3EAA	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1051 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;}
0x3EAE	0x0EF3      	MOVLW       _LCDLine1
0x3EB0	0x0105      	MOVLB       5
0x3EB2	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3EB4	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3EB6	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3EB8	0x0E4D      	MOVLW       __stop
0x3EBA	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3EBC	0x0E00      	MOVLW       hi_addr(__stop)
0x3EBE	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3EC0	0x0E10      	MOVLW       16
0x3EC2	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3EC4	0x0E00      	MOVLW       0
0x3EC6	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3EC8	0xF000ECFC  	CALL        _memcpy, 0
0x3ECC	0x0E04      	MOVLW       _LCDLine2
0x3ECE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3ED0	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3ED2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3ED4	0x0E2B      	MOVLW       __errLimit
0x3ED6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3ED8	0x0E00      	MOVLW       hi_addr(__errLimit)
0x3EDA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3EDC	0x0E10      	MOVLW       16
0x3EDE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3EE0	0x0E00      	MOVLW       0
0x3EE2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3EE4	0xF000ECFC  	CALL        _memcpy, 0
0x3EE8	0x0E01      	MOVLW       1
0x3EEA	0x0101      	MOVLB       1
0x3EEC	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7225:
;FirmV_0_7_0.c,1053 :: 		if(CloseDone==0)
0x3EEE	0x0100      	MOVLB       0
0x3EF0	0x5199      	MOVF        _CloseDone, 0, 1
0x3EF2	0x0A00      	XORLW       0
0x3EF4	0xE128      	BNZ         L_State7226
;FirmV_0_7_0.c,1054 :: 		{State=1; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_close,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x3EF6	0x0E01      	MOVLW       1
0x3EF8	0x6FF2      	MOVWF       _State, 1
0x3EFA	0x6BBE      	CLRF        _PassFlag, 1
0x3EFC	0x0E09      	MOVLW       9
0x3EFE	0x0103      	MOVLB       3
0x3F00	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x3F02	0xF006EC91  	CALL        _ClearTasks, 0
0x3F06	0x0EF3      	MOVLW       _LCDLine1
0x3F08	0x0105      	MOVLB       5
0x3F0A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3F0C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3F0E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3F10	0x0E73      	MOVLW       __close
0x3F12	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3F14	0x0E00      	MOVLW       hi_addr(__close)
0x3F16	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3F18	0x0E10      	MOVLW       16
0x3F1A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3F1C	0x0E00      	MOVLW       0
0x3F1E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3F20	0xF000ECFC  	CALL        _memcpy, 0
0x3F24	0x0E04      	MOVLW       _LCDLine2
0x3F26	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3F28	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3F2A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3F2C	0x0EAC      	MOVLW       __Blank
0x3F2E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3F30	0x0E00      	MOVLW       hi_addr(__Blank)
0x3F32	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3F34	0x0E10      	MOVLW       16
0x3F36	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3F38	0x0E00      	MOVLW       0
0x3F3A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3F3C	0xF000ECFC  	CALL        _memcpy, 0
0x3F40	0x0E01      	MOVLW       1
0x3F42	0x0101      	MOVLB       1
0x3F44	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7226:
;FirmV_0_7_0.c,1056 :: 		if((State==5)||(State==6))
0x3F46	0x0100      	MOVLB       0
0x3F48	0x51F2      	MOVF        _State, 0, 1
0x3F4A	0x0A05      	XORLW       5
0x3F4C	0xE004      	BZ          L__State7653
0x3F4E	0x51F2      	MOVF        _State, 0, 1
0x3F50	0x0A06      	XORLW       6
0x3F52	0xE001      	BZ          L__State7653
0x3F54	0xD04C      	BRA         L_State7229
L__State7653:
;FirmV_0_7_0.c,1057 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S7 Autoclose Renewed");memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;}}
0x3F56	0x0103      	MOVLB       3
0x3F58	0x6B4F      	CLRF        FARG_ClearTasks_except, 1
0x3F5A	0xF006EC91  	CALL        _ClearTasks, 0
0x3F5E	0x0E00      	MOVLW       0
0x3F60	0x0102      	MOVLB       2
0x3F62	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x3F64	0xE102      	BNZ         L__State7727
0x3F66	0x0E00      	MOVLW       0
0x3F68	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State7727:
0x3F6A	0xE041      	BZ          L_State7230
0x3F6C	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x3F6E	0x0100      	MOVLB       0
0x3F70	0x25EE      	ADDWF       _ms500, 0, 1
0x3F72	0x0103      	MOVLB       3
0x3F74	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x3F76	0x0102      	MOVLB       2
0x3F78	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x3F7A	0x0100      	MOVLB       0
0x3F7C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x3F7E	0x0103      	MOVLB       3
0x3F80	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3F82	0x0E00      	MOVLW       0
0x3F84	0x0100      	MOVLB       0
0x3F86	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x3F88	0x0103      	MOVLB       3
0x3F8A	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3F8C	0x0E00      	MOVLW       0
0x3F8E	0x0100      	MOVLB       0
0x3F90	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x3F92	0x0103      	MOVLB       3
0x3F94	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3F96	0x0E09      	MOVLW       9
0x3F98	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x3F9A	0xF00DEC7B  	CALL        _AddTask, 0
0x3F9E	0x0E59      	MOVLW       ?ICS?lstr55_FirmV_0_7_0
0x3FA0	0x6EF6      	MOVWF       4086 
0x3FA2	0x0E74      	MOVLW       hi_addr(?ICS?lstr55_FirmV_0_7_0)
0x3FA4	0x6EF7      	MOVWF       TBLPTRH 
0x3FA6	0x0E00      	MOVLW       higher_addr(?ICS?lstr55_FirmV_0_7_0)
0x3FA8	0x6EF8      	MOVWF       TBLPTRU 
0x3FAA	0x0EED      	MOVLW       ?lstr55_FirmV_0_7_0
0x3FAC	0x6EE1      	MOVWF       FSR1L 
0x3FAE	0x0E02      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x3FB0	0x6EE2      	MOVWF       FSR1H 
0x3FB2	0x0E15      	MOVLW       21
0x3FB4	0x6E00      	MOVWF       R0 
0x3FB6	0x0E01      	MOVLW       1
0x3FB8	0x6E01      	MOVWF       R1 
0x3FBA	0xF004EC95  	CALL        ___CC2DW, 0
0x3FBE	0x0EED      	MOVLW       ?lstr55_FirmV_0_7_0
0x3FC0	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x3FC2	0x0E02      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x3FC4	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x3FC6	0xF00BECFA  	CALL        _Logger, 0
0x3FCA	0x0E04      	MOVLW       _LCDLine2
0x3FCC	0x0105      	MOVLB       5
0x3FCE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x3FD0	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x3FD2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x3FD4	0x0E84      	MOVLW       __autoclose
0x3FD6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x3FD8	0x0E00      	MOVLW       hi_addr(__autoclose)
0x3FDA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x3FDC	0x0E10      	MOVLW       16
0x3FDE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x3FE0	0x0E00      	MOVLW       0
0x3FE2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x3FE4	0xF000ECFC  	CALL        _memcpy, 0
0x3FE8	0x0E01      	MOVLW       1
0x3FEA	0x0101      	MOVLB       1
0x3FEC	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State7230:
L_State7229:
;FirmV_0_7_0.c,1060 :: 		}
0x3FEE	0x0012      	RETURN      0
; end of _State7
_State5:
;FirmV_0_7_0.c,835 :: 		void State5()
;FirmV_0_7_0.c,837 :: 		char delay=2;
0x3FF0	0x0E02      	MOVLW       2
0x3FF2	0x0102      	MOVLB       2
0x3FF4	0x6F6B      	MOVWF       State5_delay_L0, 1
;FirmV_0_7_0.c,838 :: 		Flasher=0;
0x3FF6	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,839 :: 		if((Events.Remote!=0)||(CheckTask(9)==1))
0x3FF8	0x0101      	MOVLB       1
0x3FFA	0x5175      	MOVF        _Events+4, 0, 1
0x3FFC	0x0A00      	XORLW       0
0x3FFE	0xE109      	BNZ         L__State5647
0x4000	0x0E09      	MOVLW       9
0x4002	0x0103      	MOVLB       3
0x4004	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4006	0xF007EC58  	CALL        _CheckTask, 0
0x400A	0x5000      	MOVF        R0, 0 
0x400C	0x0A01      	XORLW       1
0x400E	0xE001      	BZ          L__State5647
0x4010	0xD1DC      	BRA         L_State5165
L__State5647:
;FirmV_0_7_0.c,841 :: 		if((Door2CloseTime==0)||(ActiveDoors==1))
0x4012	0x0102      	MOVLB       2
0x4014	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x4016	0x0A00      	XORLW       0
0x4018	0xE005      	BZ          L__State5646
0x401A	0x0100      	MOVLB       0
0x401C	0x519A      	MOVF        _ActiveDoors, 0, 1
0x401E	0x0A01      	XORLW       1
0x4020	0xE001      	BZ          L__State5646
0x4022	0xD088      	BRA         L_State5168
L__State5646:
;FirmV_0_7_0.c,843 :: 		ClearTasks(9);
0x4024	0x0E09      	MOVLW       9
0x4026	0x0103      	MOVLB       3
0x4028	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x402A	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,844 :: 		temp=ms500+delay;
0x402E	0x0102      	MOVLB       2
0x4030	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4032	0x0100      	MOVLB       0
0x4034	0x25EE      	ADDWF       _ms500, 0, 1
0x4036	0x6E00      	MOVWF       R0 
0x4038	0x0E00      	MOVLW       0
0x403A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x403C	0x6E01      	MOVWF       R1 
0x403E	0x0E00      	MOVLW       0
0x4040	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4042	0x6E02      	MOVWF       R2 
0x4044	0x0E00      	MOVLW       0
0x4046	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4048	0x6E03      	MOVWF       R3 
0x404A	0xF11FC000  	MOVFF       R0, _temp
0x404E	0xF120C001  	MOVFF       R1, _temp+1
0x4052	0xF121C002  	MOVFF       R2, _temp+2
0x4056	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,845 :: 		AddTask(temp,1);
0x405A	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x405E	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4062	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4066	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x406A	0x0E01      	MOVLW       1
0x406C	0x0103      	MOVLB       3
0x406E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4070	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,846 :: 		AddTask(temp,5);
0x4074	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x4078	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x407C	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4080	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4084	0x0E05      	MOVLW       5
0x4086	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4088	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,847 :: 		M1isSlow=0;//speed up
0x408C	0x0100      	MOVLB       0
0x408E	0x6B97      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,848 :: 		temp=ms500+OverloadDelay+delay;
0x4090	0x0E02      	MOVLW       2
0x4092	0x25EE      	ADDWF       _ms500, 0, 1
0x4094	0x6E00      	MOVWF       R0 
0x4096	0x0E00      	MOVLW       0
0x4098	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x409A	0x6E01      	MOVWF       R1 
0x409C	0x0E00      	MOVLW       0
0x409E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x40A0	0x6E02      	MOVWF       R2 
0x40A2	0x0E00      	MOVLW       0
0x40A4	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x40A6	0x6E03      	MOVWF       R3 
0x40A8	0x0102      	MOVLB       2
0x40AA	0x516B      	MOVF        State5_delay_L0, 0, 1
0x40AC	0x2600      	ADDWF       R0, 1 
0x40AE	0x0E00      	MOVLW       0
0x40B0	0x2201      	ADDWFC      R1, 1 
0x40B2	0x2202      	ADDWFC      R2, 1 
0x40B4	0x2203      	ADDWFC      R3, 1 
0x40B6	0xF11FC000  	MOVFF       R0, _temp
0x40BA	0xF120C001  	MOVFF       R1, _temp+1
0x40BE	0xF121C002  	MOVFF       R2, _temp+2
0x40C2	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,849 :: 		AddTask(temp,10); //overload check
0x40C6	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x40CA	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x40CE	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x40D2	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x40D6	0x0E0A      	MOVLW       10
0x40D8	0x0103      	MOVLB       3
0x40DA	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x40DC	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,850 :: 		temp=ms500+Door1CloseTime+delay;
0x40E0	0x0102      	MOVLB       2
0x40E2	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x40E4	0x0100      	MOVLB       0
0x40E6	0x25EE      	ADDWF       _ms500, 0, 1
0x40E8	0x6E00      	MOVWF       R0 
0x40EA	0x0E00      	MOVLW       0
0x40EC	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x40EE	0x6E01      	MOVWF       R1 
0x40F0	0x0E00      	MOVLW       0
0x40F2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x40F4	0x6E02      	MOVWF       R2 
0x40F6	0x0E00      	MOVLW       0
0x40F8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x40FA	0x6E03      	MOVWF       R3 
0x40FC	0x0102      	MOVLB       2
0x40FE	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4100	0x2600      	ADDWF       R0, 1 
0x4102	0x0E00      	MOVLW       0
0x4104	0x2201      	ADDWFC      R1, 1 
0x4106	0x2202      	ADDWFC      R2, 1 
0x4108	0x2203      	ADDWFC      R3, 1 
0x410A	0xF11FC000  	MOVFF       R0, _temp
0x410E	0xF120C001  	MOVFF       R1, _temp+1
0x4112	0xF121C002  	MOVFF       R2, _temp+2
0x4116	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,851 :: 		AddTask(temp,3);//Stop motor
0x411A	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x411E	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4122	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4126	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x412A	0x0E03      	MOVLW       3
0x412C	0x0103      	MOVLB       3
0x412E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4130	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,852 :: 		}
L_State5168:
;FirmV_0_7_0.c,853 :: 		if((Door2CloseTime!=0)&&(ActiveDoors==2))
0x4134	0x0102      	MOVLB       2
0x4136	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x4138	0x0A00      	XORLW       0
0x413A	0xB4D8      	BTFSC       STATUS, 2 
0x413C	0xD13D      	BRA         L_State5171
0x413E	0x0100      	MOVLB       0
0x4140	0x519A      	MOVF        _ActiveDoors, 0, 1
0x4142	0x0A02      	XORLW       2
0x4144	0xA4D8      	BTFSS       STATUS, 2 
0x4146	0xD138      	BRA         L_State5171
L__State5645:
;FirmV_0_7_0.c,855 :: 		ClearTasks(9);
0x4148	0x0E09      	MOVLW       9
0x414A	0x0103      	MOVLB       3
0x414C	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x414E	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,856 :: 		temp=ms500+delay;
0x4152	0x0102      	MOVLB       2
0x4154	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4156	0x0100      	MOVLB       0
0x4158	0x25EE      	ADDWF       _ms500, 0, 1
0x415A	0x6E00      	MOVWF       R0 
0x415C	0x0E00      	MOVLW       0
0x415E	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4160	0x6E01      	MOVWF       R1 
0x4162	0x0E00      	MOVLW       0
0x4164	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4166	0x6E02      	MOVWF       R2 
0x4168	0x0E00      	MOVLW       0
0x416A	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x416C	0x6E03      	MOVWF       R3 
0x416E	0xF11FC000  	MOVFF       R0, _temp
0x4172	0xF120C001  	MOVFF       R1, _temp+1
0x4176	0xF121C002  	MOVFF       R2, _temp+2
0x417A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,857 :: 		AddTask(temp,2);
0x417E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4182	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4186	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x418A	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x418E	0x0E02      	MOVLW       2
0x4190	0x0103      	MOVLB       3
0x4192	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4194	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,858 :: 		AddTask(temp,6);
0x4198	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x419C	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x41A0	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x41A4	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x41A8	0x0E06      	MOVLW       6
0x41AA	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x41AC	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,859 :: 		M1isSlow=0;//speed up
0x41B0	0x0100      	MOVLB       0
0x41B2	0x6B97      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,860 :: 		temp=ms500+OverloadDelay+delay;
0x41B4	0x0E02      	MOVLW       2
0x41B6	0x25EE      	ADDWF       _ms500, 0, 1
0x41B8	0x6E00      	MOVWF       R0 
0x41BA	0x0E00      	MOVLW       0
0x41BC	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x41BE	0x6E01      	MOVWF       R1 
0x41C0	0x0E00      	MOVLW       0
0x41C2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x41C4	0x6E02      	MOVWF       R2 
0x41C6	0x0E00      	MOVLW       0
0x41C8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x41CA	0x6E03      	MOVWF       R3 
0x41CC	0x0102      	MOVLB       2
0x41CE	0x516B      	MOVF        State5_delay_L0, 0, 1
0x41D0	0x2600      	ADDWF       R0, 1 
0x41D2	0x0E00      	MOVLW       0
0x41D4	0x2201      	ADDWFC      R1, 1 
0x41D6	0x2202      	ADDWFC      R2, 1 
0x41D8	0x2203      	ADDWFC      R3, 1 
0x41DA	0xF11FC000  	MOVFF       R0, _temp
0x41DE	0xF120C001  	MOVFF       R1, _temp+1
0x41E2	0xF121C002  	MOVFF       R2, _temp+2
0x41E6	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,861 :: 		AddTask(temp,11); //overload check
0x41EA	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x41EE	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x41F2	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x41F6	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x41FA	0x0E0B      	MOVLW       11
0x41FC	0x0103      	MOVLB       3
0x41FE	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4200	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,862 :: 		temp=ms500+Door1CloseTime+delay;
0x4204	0x0102      	MOVLB       2
0x4206	0x5115      	MOVF        _Door1CloseTime, 0, 1
0x4208	0x0100      	MOVLB       0
0x420A	0x25EE      	ADDWF       _ms500, 0, 1
0x420C	0x6E00      	MOVWF       R0 
0x420E	0x0E00      	MOVLW       0
0x4210	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4212	0x6E01      	MOVWF       R1 
0x4214	0x0E00      	MOVLW       0
0x4216	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4218	0x6E02      	MOVWF       R2 
0x421A	0x0E00      	MOVLW       0
0x421C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x421E	0x6E03      	MOVWF       R3 
0x4220	0x0102      	MOVLB       2
0x4222	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4224	0x2600      	ADDWF       R0, 1 
0x4226	0x0E00      	MOVLW       0
0x4228	0x2201      	ADDWFC      R1, 1 
0x422A	0x2202      	ADDWFC      R2, 1 
0x422C	0x2203      	ADDWFC      R3, 1 
0x422E	0xF11FC000  	MOVFF       R0, _temp
0x4232	0xF120C001  	MOVFF       R1, _temp+1
0x4236	0xF121C002  	MOVFF       R2, _temp+2
0x423A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,863 :: 		AddTask(temp,4);//Stop motor
0x423E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4242	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4246	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x424A	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x424E	0x0E04      	MOVLW       4
0x4250	0x0103      	MOVLB       3
0x4252	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4254	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,868 :: 		temp=ms500+ActionTimeDiff+delay;
0x4258	0x0102      	MOVLB       2
0x425A	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x425C	0x0100      	MOVLB       0
0x425E	0x25EE      	ADDWF       _ms500, 0, 1
0x4260	0x6E00      	MOVWF       R0 
0x4262	0x0E00      	MOVLW       0
0x4264	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4266	0x6E01      	MOVWF       R1 
0x4268	0x0E00      	MOVLW       0
0x426A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x426C	0x6E02      	MOVWF       R2 
0x426E	0x0E00      	MOVLW       0
0x4270	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4272	0x6E03      	MOVWF       R3 
0x4274	0x0102      	MOVLB       2
0x4276	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4278	0x2600      	ADDWF       R0, 1 
0x427A	0x0E00      	MOVLW       0
0x427C	0x2201      	ADDWFC      R1, 1 
0x427E	0x2202      	ADDWFC      R2, 1 
0x4280	0x2203      	ADDWFC      R3, 1 
0x4282	0xF11FC000  	MOVFF       R0, _temp
0x4286	0xF120C001  	MOVFF       R1, _temp+1
0x428A	0xF121C002  	MOVFF       R2, _temp+2
0x428E	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,869 :: 		AddTask(temp,1);
0x4292	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4296	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x429A	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x429E	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x42A2	0x0E01      	MOVLW       1
0x42A4	0x0103      	MOVLB       3
0x42A6	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x42A8	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,870 :: 		temp=ms500+ActionTimeDiff+delay;
0x42AC	0x0102      	MOVLB       2
0x42AE	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x42B0	0x0100      	MOVLB       0
0x42B2	0x25EE      	ADDWF       _ms500, 0, 1
0x42B4	0x6E00      	MOVWF       R0 
0x42B6	0x0E00      	MOVLW       0
0x42B8	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x42BA	0x6E01      	MOVWF       R1 
0x42BC	0x0E00      	MOVLW       0
0x42BE	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x42C0	0x6E02      	MOVWF       R2 
0x42C2	0x0E00      	MOVLW       0
0x42C4	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x42C6	0x6E03      	MOVWF       R3 
0x42C8	0x0102      	MOVLB       2
0x42CA	0x516B      	MOVF        State5_delay_L0, 0, 1
0x42CC	0x2600      	ADDWF       R0, 1 
0x42CE	0x0E00      	MOVLW       0
0x42D0	0x2201      	ADDWFC      R1, 1 
0x42D2	0x2202      	ADDWFC      R2, 1 
0x42D4	0x2203      	ADDWFC      R3, 1 
0x42D6	0xF11FC000  	MOVFF       R0, _temp
0x42DA	0xF120C001  	MOVFF       R1, _temp+1
0x42DE	0xF121C002  	MOVFF       R2, _temp+2
0x42E2	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,871 :: 		AddTask(temp,5);
0x42E6	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x42EA	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x42EE	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x42F2	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x42F6	0x0E05      	MOVLW       5
0x42F8	0x0103      	MOVLB       3
0x42FA	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x42FC	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,872 :: 		M2isSlow=0;//speed up
0x4300	0x0100      	MOVLB       0
0x4302	0x6B98      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,873 :: 		temp=ms500+ActionTimeDiff+OverloadDelay+delay;
0x4304	0x0102      	MOVLB       2
0x4306	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4308	0x0100      	MOVLB       0
0x430A	0x25EE      	ADDWF       _ms500, 0, 1
0x430C	0x6E00      	MOVWF       R0 
0x430E	0x0E00      	MOVLW       0
0x4310	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4312	0x6E01      	MOVWF       R1 
0x4314	0x0E00      	MOVLW       0
0x4316	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4318	0x6E02      	MOVWF       R2 
0x431A	0x0E00      	MOVLW       0
0x431C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x431E	0x6E03      	MOVWF       R3 
0x4320	0x0E02      	MOVLW       2
0x4322	0x2600      	ADDWF       R0, 1 
0x4324	0x0E00      	MOVLW       0
0x4326	0x2201      	ADDWFC      R1, 1 
0x4328	0x2202      	ADDWFC      R2, 1 
0x432A	0x2203      	ADDWFC      R3, 1 
0x432C	0x0102      	MOVLB       2
0x432E	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4330	0x2600      	ADDWF       R0, 1 
0x4332	0x0E00      	MOVLW       0
0x4334	0x2201      	ADDWFC      R1, 1 
0x4336	0x2202      	ADDWFC      R2, 1 
0x4338	0x2203      	ADDWFC      R3, 1 
0x433A	0xF11FC000  	MOVFF       R0, _temp
0x433E	0xF120C001  	MOVFF       R1, _temp+1
0x4342	0xF121C002  	MOVFF       R2, _temp+2
0x4346	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,874 :: 		AddTask(temp,10); //overload check
0x434A	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x434E	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4352	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4356	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x435A	0x0E0A      	MOVLW       10
0x435C	0x0103      	MOVLB       3
0x435E	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4360	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,875 :: 		temp=ms500+Door2CloseTime+delay;
0x4364	0x0102      	MOVLB       2
0x4366	0x5114      	MOVF        _Door2CloseTime, 0, 1
0x4368	0x0100      	MOVLB       0
0x436A	0x25EE      	ADDWF       _ms500, 0, 1
0x436C	0x6E00      	MOVWF       R0 
0x436E	0x0E00      	MOVLW       0
0x4370	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4372	0x6E01      	MOVWF       R1 
0x4374	0x0E00      	MOVLW       0
0x4376	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4378	0x6E02      	MOVWF       R2 
0x437A	0x0E00      	MOVLW       0
0x437C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x437E	0x6E03      	MOVWF       R3 
0x4380	0x0102      	MOVLB       2
0x4382	0x516B      	MOVF        State5_delay_L0, 0, 1
0x4384	0x2600      	ADDWF       R0, 1 
0x4386	0x0E00      	MOVLW       0
0x4388	0x2201      	ADDWFC      R1, 1 
0x438A	0x2202      	ADDWFC      R2, 1 
0x438C	0x2203      	ADDWFC      R3, 1 
0x438E	0xF11FC000  	MOVFF       R0, _temp
0x4392	0xF120C001  	MOVFF       R1, _temp+1
0x4396	0xF121C002  	MOVFF       R2, _temp+2
0x439A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,876 :: 		AddTask(temp,3);//Stop motor
0x439E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x43A2	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x43A6	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x43AA	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x43AE	0x0E03      	MOVLW       3
0x43B0	0x0103      	MOVLB       3
0x43B2	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x43B4	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,877 :: 		}
L_State5171:
;FirmV_0_7_0.c,878 :: 		CloseDone=3;
0x43B8	0x0E03      	MOVLW       3
0x43BA	0x0100      	MOVLB       0
0x43BC	0x6F99      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,879 :: 		OverloadCheckFlag1=0;
0x43BE	0x0101      	MOVLB       1
0x43C0	0x6B16      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,880 :: 		OverloadCheckFlag2=0;
0x43C2	0x6B15      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,881 :: 		State=7;
0x43C4	0x0E07      	MOVLW       7
0x43C6	0x0100      	MOVLB       0
0x43C8	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,882 :: 		}
L_State5165:
;FirmV_0_7_0.c,884 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x43CA	0x0101      	MOVLB       1
0x43CC	0xA177      	BTFSS       _Events+6, 0, 1
0x43CE	0xD027      	BRA         L_State5174
0x43D0	0x0E00      	MOVLW       0
0x43D2	0x0102      	MOVLB       2
0x43D4	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x43D6	0xE102      	BNZ         L__State5723
0x43D8	0x0E00      	MOVLW       0
0x43DA	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State5723:
0x43DC	0xE020      	BZ          L_State5174
0x43DE	0x0100      	MOVLB       0
0x43E0	0x51BE      	MOVF        _PassFlag, 0, 1
0x43E2	0x0A00      	XORLW       0
0x43E4	0xE11C      	BNZ         L_State5174
L__State5644:
;FirmV_0_7_0.c,885 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S5 Auto Close Deleted");}
0x43E6	0x0E01      	MOVLW       1
0x43E8	0x6FBE      	MOVWF       _PassFlag, 1
0x43EA	0xF006EC28  	CALL        _GetAutocloseTime, 0
0x43EE	0xF0BFC000  	MOVFF       R0, __AC
0x43F2	0x0E42      	MOVLW       ?ICS?lstr38_FirmV_0_7_0
0x43F4	0x6EF6      	MOVWF       4086 
0x43F6	0x0E75      	MOVLW       hi_addr(?ICS?lstr38_FirmV_0_7_0)
0x43F8	0x6EF7      	MOVWF       TBLPTRH 
0x43FA	0x0E00      	MOVLW       higher_addr(?ICS?lstr38_FirmV_0_7_0)
0x43FC	0x6EF8      	MOVWF       TBLPTRU 
0x43FE	0x0E35      	MOVLW       ?lstr38_FirmV_0_7_0
0x4400	0x6EE1      	MOVWF       FSR1L 
0x4402	0x0E02      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x4404	0x6EE2      	MOVWF       FSR1H 
0x4406	0x0E16      	MOVLW       22
0x4408	0x6E00      	MOVWF       R0 
0x440A	0x0E01      	MOVLW       1
0x440C	0x6E01      	MOVWF       R1 
0x440E	0xF004EC95  	CALL        ___CC2DW, 0
0x4412	0x0E35      	MOVLW       ?lstr38_FirmV_0_7_0
0x4414	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4416	0x0E02      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x4418	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x441A	0xF00BECFA  	CALL        _Logger, 0
L_State5174:
;FirmV_0_7_0.c,887 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x441E	0x0100      	MOVLB       0
0x4420	0x51BE      	MOVF        _PassFlag, 0, 1
0x4422	0x0A01      	XORLW       1
0x4424	0xE15B      	BNZ         L_State5177
0x4426	0x0101      	MOVLB       1
0x4428	0xB177      	BTFSC       _Events+6, 0, 1
0x442A	0xD058      	BRA         L_State5177
0x442C	0x0E00      	MOVLW       0
0x442E	0x0102      	MOVLB       2
0x4430	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x4432	0xE102      	BNZ         L__State5724
0x4434	0x0E00      	MOVLW       0
0x4436	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State5724:
0x4438	0xE051      	BZ          L_State5177
L__State5643:
;FirmV_0_7_0.c,890 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:");Logger(t);}
0x443A	0x0100      	MOVLB       0
0x443C	0x51BF      	MOVF        __AC, 0, 1
0x443E	0x25EE      	ADDWF       _ms500, 0, 1
0x4440	0x6E00      	MOVWF       R0 
0x4442	0x0E00      	MOVLW       0
0x4444	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4446	0x6E01      	MOVWF       R1 
0x4448	0x0E00      	MOVLW       0
0x444A	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x444C	0x6E02      	MOVWF       R2 
0x444E	0x0E00      	MOVLW       0
0x4450	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4452	0x6E03      	MOVWF       R3 
0x4454	0xF11FC000  	MOVFF       R0, _temp
0x4458	0xF120C001  	MOVFF       R1, _temp+1
0x445C	0xF121C002  	MOVFF       R2, _temp+2
0x4460	0xF122C003  	MOVFF       R3, _temp+3
0x4464	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4468	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x446C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4470	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4474	0x0E09      	MOVLW       9
0x4476	0x0103      	MOVLB       3
0x4478	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x447A	0xF00DEC7B  	CALL        _AddTask, 0
0x447E	0x0100      	MOVLB       0
0x4480	0x6BBE      	CLRF        _PassFlag, 1
0x4482	0xF4F8C11F  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x4486	0xF4F9C120  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x448A	0xF4FAC121  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x448E	0xF4FBC122  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x4492	0x0E23      	MOVLW       _t
0x4494	0x0104      	MOVLB       4
0x4496	0x6FFC      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x4498	0x0E01      	MOVLW       hi_addr(_t)
0x449A	0x6FFD      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x449C	0xF003ECC7  	CALL        _LongWordToStrWithZeros, 0
0x44A0	0x0E58      	MOVLW       ?ICS?lstr39_FirmV_0_7_0
0x44A2	0x6EF6      	MOVWF       4086 
0x44A4	0x0E75      	MOVLW       hi_addr(?ICS?lstr39_FirmV_0_7_0)
0x44A6	0x6EF7      	MOVWF       TBLPTRH 
0x44A8	0x0E00      	MOVLW       higher_addr(?ICS?lstr39_FirmV_0_7_0)
0x44AA	0x6EF8      	MOVWF       TBLPTRU 
0x44AC	0x0E4B      	MOVLW       ?lstr39_FirmV_0_7_0
0x44AE	0x6EE1      	MOVWF       FSR1L 
0x44B0	0x0E02      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x44B2	0x6EE2      	MOVWF       FSR1H 
0x44B4	0x0E10      	MOVLW       16
0x44B6	0x6E00      	MOVWF       R0 
0x44B8	0x0E01      	MOVLW       1
0x44BA	0x6E01      	MOVWF       R1 
0x44BC	0xF004EC95  	CALL        ___CC2DW, 0
0x44C0	0x0E4B      	MOVLW       ?lstr39_FirmV_0_7_0
0x44C2	0x0103      	MOVLB       3
0x44C4	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x44C6	0x0E02      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x44C8	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x44CA	0xF00BECFA  	CALL        _Logger, 0
0x44CE	0x0E23      	MOVLW       _t
0x44D0	0x0103      	MOVLB       3
0x44D2	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x44D4	0x0E01      	MOVLW       hi_addr(_t)
0x44D6	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x44D8	0xF00BECFA  	CALL        _Logger, 0
;FirmV_0_7_0.c,892 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:");Logger(t);}
L_State5179:
;FirmV_0_7_0.c,893 :: 		}
L_State5177:
;FirmV_0_7_0.c,895 :: 		}
0x44DC	0x0012      	RETURN      0
; end of _State5
_State3:
;FirmV_0_7_0.c,673 :: 		void State3()
;FirmV_0_7_0.c,675 :: 		Flasher=1;
0x44DE	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,677 :: 		if(CheckTask(1))
0x44E0	0x0E01      	MOVLW       1
0x44E2	0x0103      	MOVLB       3
0x44E4	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x44E6	0xF007EC58  	CALL        _CheckTask, 0
0x44EA	0x5200      	MOVF        R0, 1 
0x44EC	0xE04D      	BZ          L_State3102
;FirmV_0_7_0.c,678 :: 		{StartMotor(1,_Open);Logger("S3 Motor1Start"); Lock=0;memcpy(LCDLine1,_opening,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x44EE	0x0E01      	MOVLW       1
0x44F0	0x0103      	MOVLB       3
0x44F2	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x44F4	0x0E01      	MOVLW       1
0x44F6	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x44F8	0xF006EC0E  	CALL        _StartMotor, 0
0x44FC	0x0E53      	MOVLW       83
0x44FE	0x0102      	MOVLB       2
0x4500	0x6F35      	MOVWF       ?lstr6_FirmV_0_7_0, 1
0x4502	0x0E33      	MOVLW       51
0x4504	0x6F36      	MOVWF       ?lstr6_FirmV_0_7_0+1, 1
0x4506	0x0E20      	MOVLW       32
0x4508	0x6F37      	MOVWF       ?lstr6_FirmV_0_7_0+2, 1
0x450A	0x0E4D      	MOVLW       77
0x450C	0x6F38      	MOVWF       ?lstr6_FirmV_0_7_0+3, 1
0x450E	0x0E6F      	MOVLW       111
0x4510	0x6F39      	MOVWF       ?lstr6_FirmV_0_7_0+4, 1
0x4512	0x0E74      	MOVLW       116
0x4514	0x6F3A      	MOVWF       ?lstr6_FirmV_0_7_0+5, 1
0x4516	0x0E6F      	MOVLW       111
0x4518	0x6F3B      	MOVWF       ?lstr6_FirmV_0_7_0+6, 1
0x451A	0x0E72      	MOVLW       114
0x451C	0x6F3C      	MOVWF       ?lstr6_FirmV_0_7_0+7, 1
0x451E	0x0E31      	MOVLW       49
0x4520	0x6F3D      	MOVWF       ?lstr6_FirmV_0_7_0+8, 1
0x4522	0x0E53      	MOVLW       83
0x4524	0x6F3E      	MOVWF       ?lstr6_FirmV_0_7_0+9, 1
0x4526	0x0E74      	MOVLW       116
0x4528	0x6F3F      	MOVWF       ?lstr6_FirmV_0_7_0+10, 1
0x452A	0x0E61      	MOVLW       97
0x452C	0x6F40      	MOVWF       ?lstr6_FirmV_0_7_0+11, 1
0x452E	0x0E72      	MOVLW       114
0x4530	0x6F41      	MOVWF       ?lstr6_FirmV_0_7_0+12, 1
0x4532	0x0E74      	MOVLW       116
0x4534	0x6F42      	MOVWF       ?lstr6_FirmV_0_7_0+13, 1
0x4536	0x6B43      	CLRF        ?lstr6_FirmV_0_7_0+14, 1
0x4538	0x0E35      	MOVLW       ?lstr6_FirmV_0_7_0
0x453A	0x0103      	MOVLB       3
0x453C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x453E	0x0E02      	MOVLW       hi_addr(?lstr6_FirmV_0_7_0)
0x4540	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4542	0xF00BECFA  	CALL        _Logger, 0
0x4546	0x9E83      	BCF         PORTD, 7 
0x4548	0x0EF3      	MOVLW       _LCDLine1
0x454A	0x0105      	MOVLB       5
0x454C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x454E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4550	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4552	0x0ECA      	MOVLW       __opening
0x4554	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4556	0x0E00      	MOVLW       hi_addr(__opening)
0x4558	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x455A	0x0E10      	MOVLW       16
0x455C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x455E	0x0E00      	MOVLW       0
0x4560	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4562	0xF000ECFC  	CALL        _memcpy, 0
0x4566	0x0E04      	MOVLW       _LCDLine2
0x4568	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x456A	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x456C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x456E	0x0EAC      	MOVLW       __Blank
0x4570	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4572	0x0E00      	MOVLW       hi_addr(__Blank)
0x4574	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4576	0x0E10      	MOVLW       16
0x4578	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x457A	0x0E00      	MOVLW       0
0x457C	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x457E	0xF000ECFC  	CALL        _memcpy, 0
0x4582	0x0E01      	MOVLW       1
0x4584	0x0101      	MOVLB       1
0x4586	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3102:
;FirmV_0_7_0.c,680 :: 		if(CheckTask(2))
0x4588	0x0E02      	MOVLW       2
0x458A	0x0103      	MOVLB       3
0x458C	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x458E	0xF007EC58  	CALL        _CheckTask, 0
0x4592	0x5200      	MOVF        R0, 1 
0x4594	0xE02D      	BZ          L_State3103
;FirmV_0_7_0.c,681 :: 		{StartMotor(2,_Open);Logger("S3 Motor2Start"); Lock=0;}
0x4596	0x0E02      	MOVLW       2
0x4598	0x0103      	MOVLB       3
0x459A	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x459C	0x0E01      	MOVLW       1
0x459E	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x45A0	0xF006EC0E  	CALL        _StartMotor, 0
0x45A4	0x0E53      	MOVLW       83
0x45A6	0x0102      	MOVLB       2
0x45A8	0x6F44      	MOVWF       ?lstr7_FirmV_0_7_0, 1
0x45AA	0x0E33      	MOVLW       51
0x45AC	0x6F45      	MOVWF       ?lstr7_FirmV_0_7_0+1, 1
0x45AE	0x0E20      	MOVLW       32
0x45B0	0x6F46      	MOVWF       ?lstr7_FirmV_0_7_0+2, 1
0x45B2	0x0E4D      	MOVLW       77
0x45B4	0x6F47      	MOVWF       ?lstr7_FirmV_0_7_0+3, 1
0x45B6	0x0E6F      	MOVLW       111
0x45B8	0x6F48      	MOVWF       ?lstr7_FirmV_0_7_0+4, 1
0x45BA	0x0E74      	MOVLW       116
0x45BC	0x6F49      	MOVWF       ?lstr7_FirmV_0_7_0+5, 1
0x45BE	0x0E6F      	MOVLW       111
0x45C0	0x6F4A      	MOVWF       ?lstr7_FirmV_0_7_0+6, 1
0x45C2	0x0E72      	MOVLW       114
0x45C4	0x6F4B      	MOVWF       ?lstr7_FirmV_0_7_0+7, 1
0x45C6	0x0E32      	MOVLW       50
0x45C8	0x6F4C      	MOVWF       ?lstr7_FirmV_0_7_0+8, 1
0x45CA	0x0E53      	MOVLW       83
0x45CC	0x6F4D      	MOVWF       ?lstr7_FirmV_0_7_0+9, 1
0x45CE	0x0E74      	MOVLW       116
0x45D0	0x6F4E      	MOVWF       ?lstr7_FirmV_0_7_0+10, 1
0x45D2	0x0E61      	MOVLW       97
0x45D4	0x6F4F      	MOVWF       ?lstr7_FirmV_0_7_0+11, 1
0x45D6	0x0E72      	MOVLW       114
0x45D8	0x6F50      	MOVWF       ?lstr7_FirmV_0_7_0+12, 1
0x45DA	0x0E74      	MOVLW       116
0x45DC	0x6F51      	MOVWF       ?lstr7_FirmV_0_7_0+13, 1
0x45DE	0x6B52      	CLRF        ?lstr7_FirmV_0_7_0+14, 1
0x45E0	0x0E44      	MOVLW       ?lstr7_FirmV_0_7_0
0x45E2	0x0103      	MOVLB       3
0x45E4	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x45E6	0x0E02      	MOVLW       hi_addr(?lstr7_FirmV_0_7_0)
0x45E8	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x45EA	0xF00BECFA  	CALL        _Logger, 0
0x45EE	0x9E83      	BCF         PORTD, 7 
L_State3103:
;FirmV_0_7_0.c,683 :: 		if(CheckTask(5))
0x45F0	0x0E05      	MOVLW       5
0x45F2	0x0103      	MOVLB       3
0x45F4	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x45F6	0xF007EC58  	CALL        _CheckTask, 0
0x45FA	0x5200      	MOVF        R0, 1 
0x45FC	0xE030      	BZ          L_State3104
;FirmV_0_7_0.c,684 :: 		{SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;Logger("S3 Motor1 Fast");}
0x45FE	0x0E01      	MOVLW       1
0x4600	0x0103      	MOVLB       3
0x4602	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x4604	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x4608	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x460C	0x0101      	MOVLB       1
0x460E	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4610	0x0100      	MOVLB       0
0x4612	0x6B97      	CLRF        _M1isSlow, 1
0x4614	0x0E53      	MOVLW       83
0x4616	0x0102      	MOVLB       2
0x4618	0x6F53      	MOVWF       ?lstr8_FirmV_0_7_0, 1
0x461A	0x0E33      	MOVLW       51
0x461C	0x6F54      	MOVWF       ?lstr8_FirmV_0_7_0+1, 1
0x461E	0x0E20      	MOVLW       32
0x4620	0x6F55      	MOVWF       ?lstr8_FirmV_0_7_0+2, 1
0x4622	0x0E4D      	MOVLW       77
0x4624	0x6F56      	MOVWF       ?lstr8_FirmV_0_7_0+3, 1
0x4626	0x0E6F      	MOVLW       111
0x4628	0x6F57      	MOVWF       ?lstr8_FirmV_0_7_0+4, 1
0x462A	0x0E74      	MOVLW       116
0x462C	0x6F58      	MOVWF       ?lstr8_FirmV_0_7_0+5, 1
0x462E	0x0E6F      	MOVLW       111
0x4630	0x6F59      	MOVWF       ?lstr8_FirmV_0_7_0+6, 1
0x4632	0x0E72      	MOVLW       114
0x4634	0x6F5A      	MOVWF       ?lstr8_FirmV_0_7_0+7, 1
0x4636	0x0E31      	MOVLW       49
0x4638	0x6F5B      	MOVWF       ?lstr8_FirmV_0_7_0+8, 1
0x463A	0x0E20      	MOVLW       32
0x463C	0x6F5C      	MOVWF       ?lstr8_FirmV_0_7_0+9, 1
0x463E	0x0E46      	MOVLW       70
0x4640	0x6F5D      	MOVWF       ?lstr8_FirmV_0_7_0+10, 1
0x4642	0x0E61      	MOVLW       97
0x4644	0x6F5E      	MOVWF       ?lstr8_FirmV_0_7_0+11, 1
0x4646	0x0E73      	MOVLW       115
0x4648	0x6F5F      	MOVWF       ?lstr8_FirmV_0_7_0+12, 1
0x464A	0x0E74      	MOVLW       116
0x464C	0x6F60      	MOVWF       ?lstr8_FirmV_0_7_0+13, 1
0x464E	0x6B61      	CLRF        ?lstr8_FirmV_0_7_0+14, 1
0x4650	0x0E53      	MOVLW       ?lstr8_FirmV_0_7_0
0x4652	0x0103      	MOVLB       3
0x4654	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4656	0x0E02      	MOVLW       hi_addr(?lstr8_FirmV_0_7_0)
0x4658	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x465A	0xF00BECFA  	CALL        _Logger, 0
L_State3104:
;FirmV_0_7_0.c,686 :: 		if(CheckTask(7))
0x465E	0x0E07      	MOVLW       7
0x4660	0x0103      	MOVLB       3
0x4662	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4664	0xF007EC58  	CALL        _CheckTask, 0
0x4668	0x5200      	MOVF        R0, 1 
0x466A	0xE02E      	BZ          L_State3105
;FirmV_0_7_0.c,687 :: 		{SetMotorSpeed(0,Motor2FullSpeed); M1isSlow=1;Logger("S3 Motor1 Slow");}
0x466C	0x0103      	MOVLB       3
0x466E	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x4670	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x4674	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4678	0x0E01      	MOVLW       1
0x467A	0x0100      	MOVLB       0
0x467C	0x6F97      	MOVWF       _M1isSlow, 1
0x467E	0x0E53      	MOVLW       83
0x4680	0x0102      	MOVLB       2
0x4682	0x6F62      	MOVWF       ?lstr9_FirmV_0_7_0, 1
0x4684	0x0E33      	MOVLW       51
0x4686	0x6F63      	MOVWF       ?lstr9_FirmV_0_7_0+1, 1
0x4688	0x0E20      	MOVLW       32
0x468A	0x6F64      	MOVWF       ?lstr9_FirmV_0_7_0+2, 1
0x468C	0x0E4D      	MOVLW       77
0x468E	0x6F65      	MOVWF       ?lstr9_FirmV_0_7_0+3, 1
0x4690	0x0E6F      	MOVLW       111
0x4692	0x6F66      	MOVWF       ?lstr9_FirmV_0_7_0+4, 1
0x4694	0x0E74      	MOVLW       116
0x4696	0x6F67      	MOVWF       ?lstr9_FirmV_0_7_0+5, 1
0x4698	0x0E6F      	MOVLW       111
0x469A	0x6F68      	MOVWF       ?lstr9_FirmV_0_7_0+6, 1
0x469C	0x0E72      	MOVLW       114
0x469E	0x6F69      	MOVWF       ?lstr9_FirmV_0_7_0+7, 1
0x46A0	0x0E31      	MOVLW       49
0x46A2	0x6F6A      	MOVWF       ?lstr9_FirmV_0_7_0+8, 1
0x46A4	0x0E20      	MOVLW       32
0x46A6	0x6F6B      	MOVWF       ?lstr9_FirmV_0_7_0+9, 1
0x46A8	0x0E53      	MOVLW       83
0x46AA	0x6F6C      	MOVWF       ?lstr9_FirmV_0_7_0+10, 1
0x46AC	0x0E6C      	MOVLW       108
0x46AE	0x6F6D      	MOVWF       ?lstr9_FirmV_0_7_0+11, 1
0x46B0	0x0E6F      	MOVLW       111
0x46B2	0x6F6E      	MOVWF       ?lstr9_FirmV_0_7_0+12, 1
0x46B4	0x0E77      	MOVLW       119
0x46B6	0x6F6F      	MOVWF       ?lstr9_FirmV_0_7_0+13, 1
0x46B8	0x6B70      	CLRF        ?lstr9_FirmV_0_7_0+14, 1
0x46BA	0x0E62      	MOVLW       ?lstr9_FirmV_0_7_0
0x46BC	0x0103      	MOVLB       3
0x46BE	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x46C0	0x0E02      	MOVLW       hi_addr(?lstr9_FirmV_0_7_0)
0x46C2	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x46C4	0xF00BECFA  	CALL        _Logger, 0
L_State3105:
;FirmV_0_7_0.c,689 :: 		if(CheckTask(6))
0x46C8	0x0E06      	MOVLW       6
0x46CA	0x0103      	MOVLB       3
0x46CC	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x46CE	0xF007EC58  	CALL        _CheckTask, 0
0x46D2	0x5200      	MOVF        R0, 1 
0x46D4	0xE030      	BZ          L_State3106
;FirmV_0_7_0.c,690 :: 		{SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;Logger("S3 Motor2 Fast");}
0x46D6	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x46DA	0x0E01      	MOVLW       1
0x46DC	0x0103      	MOVLB       3
0x46DE	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x46E0	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x46E4	0x0101      	MOVLB       1
0x46E6	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x46E8	0x0100      	MOVLB       0
0x46EA	0x6B98      	CLRF        _M2isSlow, 1
0x46EC	0x0E53      	MOVLW       83
0x46EE	0x0102      	MOVLB       2
0x46F0	0x6F71      	MOVWF       ?lstr10_FirmV_0_7_0, 1
0x46F2	0x0E33      	MOVLW       51
0x46F4	0x6F72      	MOVWF       ?lstr10_FirmV_0_7_0+1, 1
0x46F6	0x0E20      	MOVLW       32
0x46F8	0x6F73      	MOVWF       ?lstr10_FirmV_0_7_0+2, 1
0x46FA	0x0E4D      	MOVLW       77
0x46FC	0x6F74      	MOVWF       ?lstr10_FirmV_0_7_0+3, 1
0x46FE	0x0E6F      	MOVLW       111
0x4700	0x6F75      	MOVWF       ?lstr10_FirmV_0_7_0+4, 1
0x4702	0x0E74      	MOVLW       116
0x4704	0x6F76      	MOVWF       ?lstr10_FirmV_0_7_0+5, 1
0x4706	0x0E6F      	MOVLW       111
0x4708	0x6F77      	MOVWF       ?lstr10_FirmV_0_7_0+6, 1
0x470A	0x0E72      	MOVLW       114
0x470C	0x6F78      	MOVWF       ?lstr10_FirmV_0_7_0+7, 1
0x470E	0x0E32      	MOVLW       50
0x4710	0x6F79      	MOVWF       ?lstr10_FirmV_0_7_0+8, 1
0x4712	0x0E20      	MOVLW       32
0x4714	0x6F7A      	MOVWF       ?lstr10_FirmV_0_7_0+9, 1
0x4716	0x0E46      	MOVLW       70
0x4718	0x6F7B      	MOVWF       ?lstr10_FirmV_0_7_0+10, 1
0x471A	0x0E61      	MOVLW       97
0x471C	0x6F7C      	MOVWF       ?lstr10_FirmV_0_7_0+11, 1
0x471E	0x0E73      	MOVLW       115
0x4720	0x6F7D      	MOVWF       ?lstr10_FirmV_0_7_0+12, 1
0x4722	0x0E74      	MOVLW       116
0x4724	0x6F7E      	MOVWF       ?lstr10_FirmV_0_7_0+13, 1
0x4726	0x6B7F      	CLRF        ?lstr10_FirmV_0_7_0+14, 1
0x4728	0x0E71      	MOVLW       ?lstr10_FirmV_0_7_0
0x472A	0x0103      	MOVLB       3
0x472C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x472E	0x0E02      	MOVLW       hi_addr(?lstr10_FirmV_0_7_0)
0x4730	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4732	0xF00BECFA  	CALL        _Logger, 0
L_State3106:
;FirmV_0_7_0.c,692 :: 		if(CheckTask(8))
0x4736	0x0E08      	MOVLW       8
0x4738	0x0103      	MOVLB       3
0x473A	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x473C	0xF007EC58  	CALL        _CheckTask, 0
0x4740	0x5200      	MOVF        R0, 1 
0x4742	0xE02E      	BZ          L_State3107
;FirmV_0_7_0.c,693 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S3 Motor2 Slow");}
0x4744	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x4748	0x0103      	MOVLB       3
0x474A	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x474C	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4750	0x0E01      	MOVLW       1
0x4752	0x0100      	MOVLB       0
0x4754	0x6F98      	MOVWF       _M2isSlow, 1
0x4756	0x0E53      	MOVLW       83
0x4758	0x0102      	MOVLB       2
0x475A	0x6F80      	MOVWF       ?lstr11_FirmV_0_7_0, 1
0x475C	0x0E33      	MOVLW       51
0x475E	0x6F81      	MOVWF       ?lstr11_FirmV_0_7_0+1, 1
0x4760	0x0E20      	MOVLW       32
0x4762	0x6F82      	MOVWF       ?lstr11_FirmV_0_7_0+2, 1
0x4764	0x0E4D      	MOVLW       77
0x4766	0x6F83      	MOVWF       ?lstr11_FirmV_0_7_0+3, 1
0x4768	0x0E6F      	MOVLW       111
0x476A	0x6F84      	MOVWF       ?lstr11_FirmV_0_7_0+4, 1
0x476C	0x0E74      	MOVLW       116
0x476E	0x6F85      	MOVWF       ?lstr11_FirmV_0_7_0+5, 1
0x4770	0x0E6F      	MOVLW       111
0x4772	0x6F86      	MOVWF       ?lstr11_FirmV_0_7_0+6, 1
0x4774	0x0E72      	MOVLW       114
0x4776	0x6F87      	MOVWF       ?lstr11_FirmV_0_7_0+7, 1
0x4778	0x0E32      	MOVLW       50
0x477A	0x6F88      	MOVWF       ?lstr11_FirmV_0_7_0+8, 1
0x477C	0x0E20      	MOVLW       32
0x477E	0x6F89      	MOVWF       ?lstr11_FirmV_0_7_0+9, 1
0x4780	0x0E53      	MOVLW       83
0x4782	0x6F8A      	MOVWF       ?lstr11_FirmV_0_7_0+10, 1
0x4784	0x0E6C      	MOVLW       108
0x4786	0x6F8B      	MOVWF       ?lstr11_FirmV_0_7_0+11, 1
0x4788	0x0E6F      	MOVLW       111
0x478A	0x6F8C      	MOVWF       ?lstr11_FirmV_0_7_0+12, 1
0x478C	0x0E77      	MOVLW       119
0x478E	0x6F8D      	MOVWF       ?lstr11_FirmV_0_7_0+13, 1
0x4790	0x6B8E      	CLRF        ?lstr11_FirmV_0_7_0+14, 1
0x4792	0x0E80      	MOVLW       ?lstr11_FirmV_0_7_0
0x4794	0x0103      	MOVLB       3
0x4796	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4798	0x0E02      	MOVLW       hi_addr(?lstr11_FirmV_0_7_0)
0x479A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x479C	0xF00BECFA  	CALL        _Logger, 0
L_State3107:
;FirmV_0_7_0.c,695 :: 		if(CheckTask(10))
0x47A0	0x0E0A      	MOVLW       10
0x47A2	0x0103      	MOVLB       3
0x47A4	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x47A6	0xF007EC58  	CALL        _CheckTask, 0
0x47AA	0x5200      	MOVF        R0, 1 
0x47AC	0xE01F      	BZ          L_State3108
;FirmV_0_7_0.c,696 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S3 Overflow Flag1 Set");}
0x47AE	0x0E01      	MOVLW       1
0x47B0	0x0101      	MOVLB       1
0x47B2	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
0x47B4	0x0E01      	MOVLW       1
0x47B6	0x0103      	MOVLB       3
0x47B8	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x47BA	0xF007EC49  	CALL        _OverloadInit, 0
0x47BE	0x0EF1      	MOVLW       ?ICS?lstr12_FirmV_0_7_0
0x47C0	0x6EF6      	MOVWF       4086 
0x47C2	0x0E6F      	MOVLW       hi_addr(?ICS?lstr12_FirmV_0_7_0)
0x47C4	0x6EF7      	MOVWF       TBLPTRH 
0x47C6	0x0E00      	MOVLW       higher_addr(?ICS?lstr12_FirmV_0_7_0)
0x47C8	0x6EF8      	MOVWF       TBLPTRU 
0x47CA	0x0E8F      	MOVLW       ?lstr12_FirmV_0_7_0
0x47CC	0x6EE1      	MOVWF       FSR1L 
0x47CE	0x0E02      	MOVLW       hi_addr(?lstr12_FirmV_0_7_0)
0x47D0	0x6EE2      	MOVWF       FSR1H 
0x47D2	0x0E16      	MOVLW       22
0x47D4	0x6E00      	MOVWF       R0 
0x47D6	0x0E01      	MOVLW       1
0x47D8	0x6E01      	MOVWF       R1 
0x47DA	0xF004EC95  	CALL        ___CC2DW, 0
0x47DE	0x0E8F      	MOVLW       ?lstr12_FirmV_0_7_0
0x47E0	0x0103      	MOVLB       3
0x47E2	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x47E4	0x0E02      	MOVLW       hi_addr(?lstr12_FirmV_0_7_0)
0x47E6	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x47E8	0xF00BECFA  	CALL        _Logger, 0
L_State3108:
;FirmV_0_7_0.c,698 :: 		if(CheckTask(11))
0x47EC	0x0E0B      	MOVLW       11
0x47EE	0x0103      	MOVLB       3
0x47F0	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x47F2	0xF007EC58  	CALL        _CheckTask, 0
0x47F6	0x5200      	MOVF        R0, 1 
0x47F8	0xE01F      	BZ          L_State3109
;FirmV_0_7_0.c,699 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S3 Overflow Flag2 Set");}
0x47FA	0x0E01      	MOVLW       1
0x47FC	0x0101      	MOVLB       1
0x47FE	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
0x4800	0x0E02      	MOVLW       2
0x4802	0x0103      	MOVLB       3
0x4804	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x4806	0xF007EC49  	CALL        _OverloadInit, 0
0x480A	0x0E07      	MOVLW       ?ICS?lstr13_FirmV_0_7_0
0x480C	0x6EF6      	MOVWF       4086 
0x480E	0x0E70      	MOVLW       hi_addr(?ICS?lstr13_FirmV_0_7_0)
0x4810	0x6EF7      	MOVWF       TBLPTRH 
0x4812	0x0E00      	MOVLW       higher_addr(?ICS?lstr13_FirmV_0_7_0)
0x4814	0x6EF8      	MOVWF       TBLPTRU 
0x4816	0x0EA5      	MOVLW       ?lstr13_FirmV_0_7_0
0x4818	0x6EE1      	MOVWF       FSR1L 
0x481A	0x0E02      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x481C	0x6EE2      	MOVWF       FSR1H 
0x481E	0x0E16      	MOVLW       22
0x4820	0x6E00      	MOVWF       R0 
0x4822	0x0E01      	MOVLW       1
0x4824	0x6E01      	MOVWF       R1 
0x4826	0xF004EC95  	CALL        ___CC2DW, 0
0x482A	0x0EA5      	MOVLW       ?lstr13_FirmV_0_7_0
0x482C	0x0103      	MOVLB       3
0x482E	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4830	0x0E02      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x4832	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4834	0xF00BECFA  	CALL        _Logger, 0
L_State3109:
;FirmV_0_7_0.c,701 :: 		if(CheckTask(3))
0x4838	0x0E03      	MOVLW       3
0x483A	0x0103      	MOVLB       3
0x483C	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x483E	0xF007EC58  	CALL        _CheckTask, 0
0x4842	0x5200      	MOVF        R0, 1 
0x4844	0xE02C      	BZ          L_State3110
;FirmV_0_7_0.c,702 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S3 Motor1 Stop");}
0x4846	0x0100      	MOVLB       0
0x4848	0x91C0      	BCF         _OpenDone, 0, 1
0x484A	0x0E01      	MOVLW       1
0x484C	0x0103      	MOVLB       3
0x484E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4850	0xF007EC3B  	CALL        _StopMotor, 0
0x4854	0x0E53      	MOVLW       83
0x4856	0x0102      	MOVLB       2
0x4858	0x6FBB      	MOVWF       ?lstr14_FirmV_0_7_0, 1
0x485A	0x0E33      	MOVLW       51
0x485C	0x6FBC      	MOVWF       ?lstr14_FirmV_0_7_0+1, 1
0x485E	0x0E20      	MOVLW       32
0x4860	0x6FBD      	MOVWF       ?lstr14_FirmV_0_7_0+2, 1
0x4862	0x0E4D      	MOVLW       77
0x4864	0x6FBE      	MOVWF       ?lstr14_FirmV_0_7_0+3, 1
0x4866	0x0E6F      	MOVLW       111
0x4868	0x6FBF      	MOVWF       ?lstr14_FirmV_0_7_0+4, 1
0x486A	0x0E74      	MOVLW       116
0x486C	0x6FC0      	MOVWF       ?lstr14_FirmV_0_7_0+5, 1
0x486E	0x0E6F      	MOVLW       111
0x4870	0x6FC1      	MOVWF       ?lstr14_FirmV_0_7_0+6, 1
0x4872	0x0E72      	MOVLW       114
0x4874	0x6FC2      	MOVWF       ?lstr14_FirmV_0_7_0+7, 1
0x4876	0x0E31      	MOVLW       49
0x4878	0x6FC3      	MOVWF       ?lstr14_FirmV_0_7_0+8, 1
0x487A	0x0E20      	MOVLW       32
0x487C	0x6FC4      	MOVWF       ?lstr14_FirmV_0_7_0+9, 1
0x487E	0x0E53      	MOVLW       83
0x4880	0x6FC5      	MOVWF       ?lstr14_FirmV_0_7_0+10, 1
0x4882	0x0E74      	MOVLW       116
0x4884	0x6FC6      	MOVWF       ?lstr14_FirmV_0_7_0+11, 1
0x4886	0x0E6F      	MOVLW       111
0x4888	0x6FC7      	MOVWF       ?lstr14_FirmV_0_7_0+12, 1
0x488A	0x0E70      	MOVLW       112
0x488C	0x6FC8      	MOVWF       ?lstr14_FirmV_0_7_0+13, 1
0x488E	0x6BC9      	CLRF        ?lstr14_FirmV_0_7_0+14, 1
0x4890	0x0EBB      	MOVLW       ?lstr14_FirmV_0_7_0
0x4892	0x0103      	MOVLB       3
0x4894	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4896	0x0E02      	MOVLW       hi_addr(?lstr14_FirmV_0_7_0)
0x4898	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x489A	0xF00BECFA  	CALL        _Logger, 0
L_State3110:
;FirmV_0_7_0.c,704 :: 		if(CheckTask(4))
0x489E	0x0E04      	MOVLW       4
0x48A0	0x0103      	MOVLB       3
0x48A2	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x48A4	0xF007EC58  	CALL        _CheckTask, 0
0x48A8	0x5200      	MOVF        R0, 1 
0x48AA	0xE02C      	BZ          L_State3111
;FirmV_0_7_0.c,705 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S3 Motor2 Stop");}
0x48AC	0x0100      	MOVLB       0
0x48AE	0x93C0      	BCF         _OpenDone, 1, 1
0x48B0	0x0E02      	MOVLW       2
0x48B2	0x0103      	MOVLB       3
0x48B4	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x48B6	0xF007EC3B  	CALL        _StopMotor, 0
0x48BA	0x0E53      	MOVLW       83
0x48BC	0x0102      	MOVLB       2
0x48BE	0x6FCA      	MOVWF       ?lstr15_FirmV_0_7_0, 1
0x48C0	0x0E33      	MOVLW       51
0x48C2	0x6FCB      	MOVWF       ?lstr15_FirmV_0_7_0+1, 1
0x48C4	0x0E20      	MOVLW       32
0x48C6	0x6FCC      	MOVWF       ?lstr15_FirmV_0_7_0+2, 1
0x48C8	0x0E4D      	MOVLW       77
0x48CA	0x6FCD      	MOVWF       ?lstr15_FirmV_0_7_0+3, 1
0x48CC	0x0E6F      	MOVLW       111
0x48CE	0x6FCE      	MOVWF       ?lstr15_FirmV_0_7_0+4, 1
0x48D0	0x0E74      	MOVLW       116
0x48D2	0x6FCF      	MOVWF       ?lstr15_FirmV_0_7_0+5, 1
0x48D4	0x0E6F      	MOVLW       111
0x48D6	0x6FD0      	MOVWF       ?lstr15_FirmV_0_7_0+6, 1
0x48D8	0x0E72      	MOVLW       114
0x48DA	0x6FD1      	MOVWF       ?lstr15_FirmV_0_7_0+7, 1
0x48DC	0x0E32      	MOVLW       50
0x48DE	0x6FD2      	MOVWF       ?lstr15_FirmV_0_7_0+8, 1
0x48E0	0x0E20      	MOVLW       32
0x48E2	0x6FD3      	MOVWF       ?lstr15_FirmV_0_7_0+9, 1
0x48E4	0x0E53      	MOVLW       83
0x48E6	0x6FD4      	MOVWF       ?lstr15_FirmV_0_7_0+10, 1
0x48E8	0x0E74      	MOVLW       116
0x48EA	0x6FD5      	MOVWF       ?lstr15_FirmV_0_7_0+11, 1
0x48EC	0x0E6F      	MOVLW       111
0x48EE	0x6FD6      	MOVWF       ?lstr15_FirmV_0_7_0+12, 1
0x48F0	0x0E70      	MOVLW       112
0x48F2	0x6FD7      	MOVWF       ?lstr15_FirmV_0_7_0+13, 1
0x48F4	0x6BD8      	CLRF        ?lstr15_FirmV_0_7_0+14, 1
0x48F6	0x0ECA      	MOVLW       ?lstr15_FirmV_0_7_0
0x48F8	0x0103      	MOVLB       3
0x48FA	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x48FC	0x0E02      	MOVLW       hi_addr(?lstr15_FirmV_0_7_0)
0x48FE	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4900	0xF00BECFA  	CALL        _Logger, 0
L_State3111:
;FirmV_0_7_0.c,707 :: 		if(CheckTask(12))
0x4904	0x0E0C      	MOVLW       12
0x4906	0x0103      	MOVLB       3
0x4908	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x490A	0xF007EC58  	CALL        _CheckTask, 0
0x490E	0x5200      	MOVF        R0, 1 
0x4910	0xE001      	BZ          L_State3112
;FirmV_0_7_0.c,708 :: 		{Lock=1;}
0x4912	0x8E83      	BSF         PORTD, 7 
L_State3112:
;FirmV_0_7_0.c,710 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x4914	0x0101      	MOVLB       1
0x4916	0x5116      	MOVF        _OverloadCheckFlag1, 0, 1
0x4918	0x0A01      	XORLW       1
0x491A	0xE151      	BNZ         L_State3115
0x491C	0xA176      	BTFSS       _Events+5, 0, 1
0x491E	0xD04F      	BRA         L_State3115
0x4920	0x0100      	MOVLB       0
0x4922	0x5197      	MOVF        _M1isSlow, 0, 1
0x4924	0x0A00      	XORLW       0
0x4926	0xE14B      	BNZ         L_State3115
L__State3637:
;FirmV_0_7_0.c,711 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor1 Collision");ClearTasks(9);
0x4928	0x0E01      	MOVLW       1
0x492A	0x0103      	MOVLB       3
0x492C	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x492E	0xF007EC3B  	CALL        _StopMotor, 0
0x4932	0x0E02      	MOVLW       2
0x4934	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4936	0xF007EC3B  	CALL        _StopMotor, 0
0x493A	0x0E05      	MOVLW       5
0x493C	0x0100      	MOVLB       0
0x493E	0x6FF2      	MOVWF       _State, 1
0x4940	0x0101      	MOVLB       1
0x4942	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4944	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x4946	0x0E3B      	MOVLW       ?ICS?lstr16_FirmV_0_7_0
0x4948	0x6EF6      	MOVWF       4086 
0x494A	0x0E70      	MOVLW       hi_addr(?ICS?lstr16_FirmV_0_7_0)
0x494C	0x6EF7      	MOVWF       TBLPTRH 
0x494E	0x0E00      	MOVLW       higher_addr(?ICS?lstr16_FirmV_0_7_0)
0x4950	0x6EF8      	MOVWF       TBLPTRU 
0x4952	0x0ED9      	MOVLW       ?lstr16_FirmV_0_7_0
0x4954	0x6EE1      	MOVWF       FSR1L 
0x4956	0x0E02      	MOVLW       hi_addr(?lstr16_FirmV_0_7_0)
0x4958	0x6EE2      	MOVWF       FSR1H 
0x495A	0x0E14      	MOVLW       20
0x495C	0x6E00      	MOVWF       R0 
0x495E	0x0E01      	MOVLW       1
0x4960	0x6E01      	MOVWF       R1 
0x4962	0xF004EC95  	CALL        ___CC2DW, 0
0x4966	0x0ED9      	MOVLW       ?lstr16_FirmV_0_7_0
0x4968	0x0103      	MOVLB       3
0x496A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x496C	0x0E02      	MOVLW       hi_addr(?lstr16_FirmV_0_7_0)
0x496E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4970	0xF00BECFA  	CALL        _Logger, 0
0x4974	0x0E09      	MOVLW       9
0x4976	0x0103      	MOVLB       3
0x4978	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x497A	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,712 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;}
0x497E	0x0EF3      	MOVLW       _LCDLine1
0x4980	0x0105      	MOVLB       5
0x4982	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4984	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4986	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4988	0x0E4D      	MOVLW       __stop
0x498A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x498C	0x0E00      	MOVLW       hi_addr(__stop)
0x498E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4990	0x0E10      	MOVLW       16
0x4992	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4994	0x0E00      	MOVLW       0
0x4996	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4998	0xF000ECFC  	CALL        _memcpy, 0
0x499C	0x0E04      	MOVLW       _LCDLine2
0x499E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x49A0	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x49A2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x49A4	0x0E5E      	MOVLW       __errOverload
0x49A6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x49A8	0x0E00      	MOVLW       hi_addr(__errOverload)
0x49AA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x49AC	0x0E10      	MOVLW       16
0x49AE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x49B0	0x0E00      	MOVLW       0
0x49B2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x49B4	0xF000ECFC  	CALL        _memcpy, 0
0x49B8	0x0E01      	MOVLW       1
0x49BA	0x0101      	MOVLB       1
0x49BC	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3115:
0x49BE	0x0101      	MOVLB       1
;FirmV_0_7_0.c,714 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x49C0	0x5115      	MOVF        _OverloadCheckFlag2, 0, 1
0x49C2	0x0A01      	XORLW       1
0x49C4	0xE151      	BNZ         L_State3118
0x49C6	0xA376      	BTFSS       _Events+5, 1, 1
0x49C8	0xD04F      	BRA         L_State3118
0x49CA	0x0100      	MOVLB       0
0x49CC	0x5198      	MOVF        _M2isSlow, 0, 1
0x49CE	0x0A00      	XORLW       0
0x49D0	0xE14B      	BNZ         L_State3118
L__State3636:
;FirmV_0_7_0.c,715 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor2 Collision");ClearTasks(9);
0x49D2	0x0E01      	MOVLW       1
0x49D4	0x0103      	MOVLB       3
0x49D6	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x49D8	0xF007EC3B  	CALL        _StopMotor, 0
0x49DC	0x0E02      	MOVLW       2
0x49DE	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x49E0	0xF007EC3B  	CALL        _StopMotor, 0
0x49E4	0x0E05      	MOVLW       5
0x49E6	0x0100      	MOVLB       0
0x49E8	0x6FF2      	MOVWF       _State, 1
0x49EA	0x0101      	MOVLB       1
0x49EC	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x49EE	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x49F0	0x0E4F      	MOVLW       ?ICS?lstr17_FirmV_0_7_0
0x49F2	0x6EF6      	MOVWF       4086 
0x49F4	0x0E70      	MOVLW       hi_addr(?ICS?lstr17_FirmV_0_7_0)
0x49F6	0x6EF7      	MOVWF       TBLPTRH 
0x49F8	0x0E00      	MOVLW       higher_addr(?ICS?lstr17_FirmV_0_7_0)
0x49FA	0x6EF8      	MOVWF       TBLPTRU 
0x49FC	0x0EED      	MOVLW       ?lstr17_FirmV_0_7_0
0x49FE	0x6EE1      	MOVWF       FSR1L 
0x4A00	0x0E02      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x4A02	0x6EE2      	MOVWF       FSR1H 
0x4A04	0x0E14      	MOVLW       20
0x4A06	0x6E00      	MOVWF       R0 
0x4A08	0x0E01      	MOVLW       1
0x4A0A	0x6E01      	MOVWF       R1 
0x4A0C	0xF004EC95  	CALL        ___CC2DW, 0
0x4A10	0x0EED      	MOVLW       ?lstr17_FirmV_0_7_0
0x4A12	0x0103      	MOVLB       3
0x4A14	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4A16	0x0E02      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x4A18	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4A1A	0xF00BECFA  	CALL        _Logger, 0
0x4A1E	0x0E09      	MOVLW       9
0x4A20	0x0103      	MOVLB       3
0x4A22	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x4A24	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,716 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;}
0x4A28	0x0EF3      	MOVLW       _LCDLine1
0x4A2A	0x0105      	MOVLB       5
0x4A2C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4A2E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4A30	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4A32	0x0E4D      	MOVLW       __stop
0x4A34	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4A36	0x0E00      	MOVLW       hi_addr(__stop)
0x4A38	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4A3A	0x0E10      	MOVLW       16
0x4A3C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4A3E	0x0E00      	MOVLW       0
0x4A40	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4A42	0xF000ECFC  	CALL        _memcpy, 0
0x4A46	0x0E04      	MOVLW       _LCDLine2
0x4A48	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4A4A	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4A4C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4A4E	0x0E5E      	MOVLW       __errOverload
0x4A50	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4A52	0x0E00      	MOVLW       hi_addr(__errOverload)
0x4A54	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4A56	0x0E10      	MOVLW       16
0x4A58	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4A5A	0x0E00      	MOVLW       0
0x4A5C	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4A5E	0xF000ECFC  	CALL        _memcpy, 0
0x4A62	0x0E01      	MOVLW       1
0x4A64	0x0101      	MOVLB       1
0x4A66	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3118:
;FirmV_0_7_0.c,718 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x4A68	0x0102      	MOVLB       2
0x4A6A	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x4A6C	0x0A00      	XORLW       0
0x4A6E	0xE005      	BZ          L__State3635
0x4A70	0x0100      	MOVLB       0
0x4A72	0x519A      	MOVF        _ActiveDoors, 0, 1
0x4A74	0x0A01      	XORLW       1
0x4A76	0xE001      	BZ          L__State3635
0x4A78	0xD002      	BRA         L_State3121
L__State3635:
0x4A7A	0x0100      	MOVLB       0
;FirmV_0_7_0.c,719 :: 		OpenDone.b1=0;
0x4A7C	0x93C0      	BCF         _OpenDone, 1, 1
L_State3121:
;FirmV_0_7_0.c,721 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x4A7E	0x0101      	MOVLB       1
0x4A80	0xA177      	BTFSS       _Events+6, 0, 1
0x4A82	0xD04E      	BRA         L_State3124
0x4A84	0x0102      	MOVLB       2
0x4A86	0x530E      	MOVF        _OpenPhEnable, 1, 1
0x4A88	0xE04B      	BZ          L_State3124
L__State3634:
;FirmV_0_7_0.c,722 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Photocell Int");ClearTasks(9);
0x4A8A	0x0E01      	MOVLW       1
0x4A8C	0x0103      	MOVLB       3
0x4A8E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4A90	0xF007EC3B  	CALL        _StopMotor, 0
0x4A94	0x0E02      	MOVLW       2
0x4A96	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4A98	0xF007EC3B  	CALL        _StopMotor, 0
0x4A9C	0x0101      	MOVLB       1
0x4A9E	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4AA0	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x4AA2	0x0E05      	MOVLW       5
0x4AA4	0x0100      	MOVLB       0
0x4AA6	0x6FF2      	MOVWF       _State, 1
0x4AA8	0x0E63      	MOVLW       ?ICS?lstr18_FirmV_0_7_0
0x4AAA	0x6EF6      	MOVWF       4086 
0x4AAC	0x0E70      	MOVLW       hi_addr(?ICS?lstr18_FirmV_0_7_0)
0x4AAE	0x6EF7      	MOVWF       TBLPTRH 
0x4AB0	0x0E00      	MOVLW       higher_addr(?ICS?lstr18_FirmV_0_7_0)
0x4AB2	0x6EF8      	MOVWF       TBLPTRU 
0x4AB4	0x0E01      	MOVLW       ?lstr18_FirmV_0_7_0
0x4AB6	0x6EE1      	MOVWF       FSR1L 
0x4AB8	0x0E03      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x4ABA	0x6EE2      	MOVWF       FSR1H 
0x4ABC	0x0E11      	MOVLW       17
0x4ABE	0x6E00      	MOVWF       R0 
0x4AC0	0x0E01      	MOVLW       1
0x4AC2	0x6E01      	MOVWF       R1 
0x4AC4	0xF004EC95  	CALL        ___CC2DW, 0
0x4AC8	0x0E01      	MOVLW       ?lstr18_FirmV_0_7_0
0x4ACA	0x0103      	MOVLB       3
0x4ACC	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4ACE	0x0E03      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x4AD0	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4AD2	0xF00BECFA  	CALL        _Logger, 0
0x4AD6	0x0E09      	MOVLW       9
0x4AD8	0x0103      	MOVLB       3
0x4ADA	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x4ADC	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,723 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;}
0x4AE0	0x0EF3      	MOVLW       _LCDLine1
0x4AE2	0x0105      	MOVLB       5
0x4AE4	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4AE6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4AE8	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4AEA	0x0E4D      	MOVLW       __stop
0x4AEC	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4AEE	0x0E00      	MOVLW       hi_addr(__stop)
0x4AF0	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4AF2	0x0E10      	MOVLW       16
0x4AF4	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4AF6	0x0E00      	MOVLW       0
0x4AF8	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4AFA	0xF000ECFC  	CALL        _memcpy, 0
0x4AFE	0x0E04      	MOVLW       _LCDLine2
0x4B00	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4B02	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4B04	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4B06	0x0E1A      	MOVLW       __errPhoto
0x4B08	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4B0A	0x0E00      	MOVLW       hi_addr(__errPhoto)
0x4B0C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4B0E	0x0E10      	MOVLW       16
0x4B10	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4B12	0x0E00      	MOVLW       0
0x4B14	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4B16	0xF000ECFC  	CALL        _memcpy, 0
0x4B1A	0x0E01      	MOVLW       1
0x4B1C	0x0101      	MOVLB       1
0x4B1E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3124:
0x4B20	0x0101      	MOVLB       1
;FirmV_0_7_0.c,725 :: 		if(Events.Remote!=0)
0x4B22	0x5175      	MOVF        _Events+4, 0, 1
0x4B24	0x0A00      	XORLW       0
0x4B26	0xE04B      	BZ          L_State3125
;FirmV_0_7_0.c,726 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Remote Stoped");ClearTasks(9);
0x4B28	0x0E01      	MOVLW       1
0x4B2A	0x0103      	MOVLB       3
0x4B2C	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4B2E	0xF007EC3B  	CALL        _StopMotor, 0
0x4B32	0x0E02      	MOVLW       2
0x4B34	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4B36	0xF007EC3B  	CALL        _StopMotor, 0
0x4B3A	0x0101      	MOVLB       1
0x4B3C	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4B3E	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x4B40	0x0E05      	MOVLW       5
0x4B42	0x0100      	MOVLB       0
0x4B44	0x6FF2      	MOVWF       _State, 1
0x4B46	0x0E74      	MOVLW       ?ICS?lstr19_FirmV_0_7_0
0x4B48	0x6EF6      	MOVWF       4086 
0x4B4A	0x0E70      	MOVLW       hi_addr(?ICS?lstr19_FirmV_0_7_0)
0x4B4C	0x6EF7      	MOVWF       TBLPTRH 
0x4B4E	0x0E00      	MOVLW       higher_addr(?ICS?lstr19_FirmV_0_7_0)
0x4B50	0x6EF8      	MOVWF       TBLPTRU 
0x4B52	0x0E12      	MOVLW       ?lstr19_FirmV_0_7_0
0x4B54	0x6EE1      	MOVWF       FSR1L 
0x4B56	0x0E03      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x4B58	0x6EE2      	MOVWF       FSR1H 
0x4B5A	0x0E11      	MOVLW       17
0x4B5C	0x6E00      	MOVWF       R0 
0x4B5E	0x0E01      	MOVLW       1
0x4B60	0x6E01      	MOVWF       R1 
0x4B62	0xF004EC95  	CALL        ___CC2DW, 0
0x4B66	0x0E12      	MOVLW       ?lstr19_FirmV_0_7_0
0x4B68	0x0103      	MOVLB       3
0x4B6A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4B6C	0x0E03      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x4B6E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4B70	0xF00BECFA  	CALL        _Logger, 0
0x4B74	0x0E09      	MOVLW       9
0x4B76	0x0103      	MOVLB       3
0x4B78	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x4B7A	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,727 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;}
0x4B7E	0x0EF3      	MOVLW       _LCDLine1
0x4B80	0x0105      	MOVLB       5
0x4B82	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4B84	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4B86	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4B88	0x0E4D      	MOVLW       __stop
0x4B8A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4B8C	0x0E00      	MOVLW       hi_addr(__stop)
0x4B8E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4B90	0x0E10      	MOVLW       16
0x4B92	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4B94	0x0E00      	MOVLW       0
0x4B96	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4B98	0xF000ECFC  	CALL        _memcpy, 0
0x4B9C	0x0E04      	MOVLW       _LCDLine2
0x4B9E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4BA0	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4BA2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4BA4	0x0E3C      	MOVLW       __errRemote
0x4BA6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4BA8	0x0E00      	MOVLW       hi_addr(__errRemote)
0x4BAA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4BAC	0x0E10      	MOVLW       16
0x4BAE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4BB0	0x0E00      	MOVLW       0
0x4BB2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4BB4	0xF000ECFC  	CALL        _memcpy, 0
0x4BB8	0x0E01      	MOVLW       1
0x4BBA	0x0101      	MOVLB       1
0x4BBC	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3125:
;FirmV_0_7_0.c,729 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x4BBE	0x5178      	MOVF        _Events+7, 0, 1
0x4BC0	0x0A01      	XORLW       1
0x4BC2	0xE14E      	BNZ         L_State3128
0x4BC4	0x0102      	MOVLB       2
0x4BC6	0x530F      	MOVF        _LimiterEnable, 1, 1
0x4BC8	0xE04B      	BZ          L_State3128
L__State3633:
;FirmV_0_7_0.c,730 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Limit Switch Stoped");ClearTasks(9);
0x4BCA	0x0E01      	MOVLW       1
0x4BCC	0x0103      	MOVLB       3
0x4BCE	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4BD0	0xF007EC3B  	CALL        _StopMotor, 0
0x4BD4	0x0E02      	MOVLW       2
0x4BD6	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4BD8	0xF007EC3B  	CALL        _StopMotor, 0
0x4BDC	0x0101      	MOVLB       1
0x4BDE	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4BE0	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x4BE2	0x0E05      	MOVLW       5
0x4BE4	0x0100      	MOVLB       0
0x4BE6	0x6FF2      	MOVWF       _State, 1
0x4BE8	0x0E85      	MOVLW       ?ICS?lstr20_FirmV_0_7_0
0x4BEA	0x6EF6      	MOVWF       4086 
0x4BEC	0x0E70      	MOVLW       hi_addr(?ICS?lstr20_FirmV_0_7_0)
0x4BEE	0x6EF7      	MOVWF       TBLPTRH 
0x4BF0	0x0E00      	MOVLW       higher_addr(?ICS?lstr20_FirmV_0_7_0)
0x4BF2	0x6EF8      	MOVWF       TBLPTRU 
0x4BF4	0x0E23      	MOVLW       ?lstr20_FirmV_0_7_0
0x4BF6	0x6EE1      	MOVWF       FSR1L 
0x4BF8	0x0E03      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x4BFA	0x6EE2      	MOVWF       FSR1H 
0x4BFC	0x0E17      	MOVLW       23
0x4BFE	0x6E00      	MOVWF       R0 
0x4C00	0x0E01      	MOVLW       1
0x4C02	0x6E01      	MOVWF       R1 
0x4C04	0xF004EC95  	CALL        ___CC2DW, 0
0x4C08	0x0E23      	MOVLW       ?lstr20_FirmV_0_7_0
0x4C0A	0x0103      	MOVLB       3
0x4C0C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4C0E	0x0E03      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x4C10	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4C12	0xF00BECFA  	CALL        _Logger, 0
0x4C16	0x0E09      	MOVLW       9
0x4C18	0x0103      	MOVLB       3
0x4C1A	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x4C1C	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,731 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;}
0x4C20	0x0EF3      	MOVLW       _LCDLine1
0x4C22	0x0105      	MOVLB       5
0x4C24	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4C26	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4C28	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4C2A	0x0E4D      	MOVLW       __stop
0x4C2C	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4C2E	0x0E00      	MOVLW       hi_addr(__stop)
0x4C30	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4C32	0x0E10      	MOVLW       16
0x4C34	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4C36	0x0E00      	MOVLW       0
0x4C38	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4C3A	0xF000ECFC  	CALL        _memcpy, 0
0x4C3E	0x0E04      	MOVLW       _LCDLine2
0x4C40	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4C42	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4C44	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4C46	0x0E2B      	MOVLW       __errLimit
0x4C48	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4C4A	0x0E00      	MOVLW       hi_addr(__errLimit)
0x4C4C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4C4E	0x0E10      	MOVLW       16
0x4C50	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4C52	0x0E00      	MOVLW       0
0x4C54	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4C56	0xF000ECFC  	CALL        _memcpy, 0
0x4C5A	0x0E01      	MOVLW       1
0x4C5C	0x0101      	MOVLB       1
0x4C5E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3128:
;FirmV_0_7_0.c,733 :: 		if(OpenDone==0)
0x4C60	0x0100      	MOVLB       0
0x4C62	0x51C0      	MOVF        _OpenDone, 0, 1
0x4C64	0x0A00      	XORLW       0
0x4C66	0xE128      	BNZ         L_State3129
;FirmV_0_7_0.c,734 :: 		{State=2; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_open,16);memcpy(LCDLine2,_blank,16);LCDUpdateFlag=1;}
0x4C68	0x0E02      	MOVLW       2
0x4C6A	0x6FF2      	MOVWF       _State, 1
0x4C6C	0x6BBE      	CLRF        _PassFlag, 1
0x4C6E	0x0E09      	MOVLW       9
0x4C70	0x0103      	MOVLB       3
0x4C72	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x4C74	0xF006EC91  	CALL        _ClearTasks, 0
0x4C78	0x0EF3      	MOVLW       _LCDLine1
0x4C7A	0x0105      	MOVLB       5
0x4C7C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4C7E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4C80	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4C82	0x0EDB      	MOVLW       __open
0x4C84	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4C86	0x0E00      	MOVLW       hi_addr(__open)
0x4C88	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4C8A	0x0E10      	MOVLW       16
0x4C8C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4C8E	0x0E00      	MOVLW       0
0x4C90	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4C92	0xF000ECFC  	CALL        _memcpy, 0
0x4C96	0x0E04      	MOVLW       _LCDLine2
0x4C98	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4C9A	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4C9C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4C9E	0x0EAC      	MOVLW       __Blank
0x4CA0	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4CA2	0x0E00      	MOVLW       hi_addr(__Blank)
0x4CA4	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4CA6	0x0E10      	MOVLW       16
0x4CA8	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4CAA	0x0E00      	MOVLW       0
0x4CAC	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4CAE	0xF000ECFC  	CALL        _memcpy, 0
0x4CB2	0x0E01      	MOVLW       1
0x4CB4	0x0101      	MOVLB       1
0x4CB6	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3129:
;FirmV_0_7_0.c,736 :: 		if((State==5)||(State==6))
0x4CB8	0x0100      	MOVLB       0
0x4CBA	0x51F2      	MOVF        _State, 0, 1
0x4CBC	0x0A05      	XORLW       5
0x4CBE	0xE004      	BZ          L__State3632
0x4CC0	0x51F2      	MOVF        _State, 0, 1
0x4CC2	0x0A06      	XORLW       6
0x4CC4	0xE001      	BZ          L__State3632
0x4CC6	0xD04C      	BRA         L_State3132
L__State3632:
;FirmV_0_7_0.c,737 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S3 Autoclose Renewed");memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;}}
0x4CC8	0x0103      	MOVLB       3
0x4CCA	0x6B4F      	CLRF        FARG_ClearTasks_except, 1
0x4CCC	0xF006EC91  	CALL        _ClearTasks, 0
0x4CD0	0x0E00      	MOVLW       0
0x4CD2	0x0102      	MOVLB       2
0x4CD4	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x4CD6	0xE102      	BNZ         L__State3721
0x4CD8	0x0E00      	MOVLW       0
0x4CDA	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State3721:
0x4CDC	0xE041      	BZ          L_State3133
0x4CDE	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x4CE0	0x0100      	MOVLB       0
0x4CE2	0x25EE      	ADDWF       _ms500, 0, 1
0x4CE4	0x0103      	MOVLB       3
0x4CE6	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x4CE8	0x0102      	MOVLB       2
0x4CEA	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x4CEC	0x0100      	MOVLB       0
0x4CEE	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4CF0	0x0103      	MOVLB       3
0x4CF2	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4CF4	0x0E00      	MOVLW       0
0x4CF6	0x0100      	MOVLB       0
0x4CF8	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4CFA	0x0103      	MOVLB       3
0x4CFC	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4CFE	0x0E00      	MOVLW       0
0x4D00	0x0100      	MOVLB       0
0x4D02	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4D04	0x0103      	MOVLB       3
0x4D06	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4D08	0x0E09      	MOVLW       9
0x4D0A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4D0C	0xF00DEC7B  	CALL        _AddTask, 0
0x4D10	0x0E9C      	MOVLW       ?ICS?lstr21_FirmV_0_7_0
0x4D12	0x6EF6      	MOVWF       4086 
0x4D14	0x0E70      	MOVLW       hi_addr(?ICS?lstr21_FirmV_0_7_0)
0x4D16	0x6EF7      	MOVWF       TBLPTRH 
0x4D18	0x0E00      	MOVLW       higher_addr(?ICS?lstr21_FirmV_0_7_0)
0x4D1A	0x6EF8      	MOVWF       TBLPTRU 
0x4D1C	0x0E3A      	MOVLW       ?lstr21_FirmV_0_7_0
0x4D1E	0x6EE1      	MOVWF       FSR1L 
0x4D20	0x0E03      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x4D22	0x6EE2      	MOVWF       FSR1H 
0x4D24	0x0E15      	MOVLW       21
0x4D26	0x6E00      	MOVWF       R0 
0x4D28	0x0E01      	MOVLW       1
0x4D2A	0x6E01      	MOVWF       R1 
0x4D2C	0xF004EC95  	CALL        ___CC2DW, 0
0x4D30	0x0E3A      	MOVLW       ?lstr21_FirmV_0_7_0
0x4D32	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x4D34	0x0E03      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x4D36	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x4D38	0xF00BECFA  	CALL        _Logger, 0
0x4D3C	0x0E04      	MOVLW       _LCDLine2
0x4D3E	0x0105      	MOVLB       5
0x4D40	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x4D42	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x4D44	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x4D46	0x0E84      	MOVLW       __autoclose
0x4D48	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x4D4A	0x0E00      	MOVLW       hi_addr(__autoclose)
0x4D4C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x4D4E	0x0E10      	MOVLW       16
0x4D50	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x4D52	0x0E00      	MOVLW       0
0x4D54	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x4D56	0xF000ECFC  	CALL        _memcpy, 0
0x4D5A	0x0E01      	MOVLW       1
0x4D5C	0x0101      	MOVLB       1
0x4D5E	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State3133:
L_State3132:
;FirmV_0_7_0.c,739 :: 		}
0x4D60	0x0012      	RETURN      0
; end of _State3
_LearnManual:
;FirmV_0_7_0.c,2267 :: 		void LearnManual()
;FirmV_0_7_0.c,2274 :: 		switch(LearnPhase)
0x4D62	0xD27D      	BRA         L_LearnManual560
;FirmV_0_7_0.c,2276 :: 		case 0:
L_LearnManual562:
;FirmV_0_7_0.c,2277 :: 		if(Events.Remote.b0==1){LearnPhase=LearnPhase+1; DoorNo=2;}if(Events.Remote.b1==1){LearnPhase=3; DoorNo=1;}
0x4D64	0x0101      	MOVLB       1
0x4D66	0xA175      	BTFSS       _Events+4, 0, 1
0x4D68	0xD003      	BRA         L_LearnManual563
0x4D6A	0x2B63      	INCF        _LearnPhase, 1, 1
0x4D6C	0x0E02      	MOVLW       2
0x4D6E	0x6F64      	MOVWF       LearnManual_DoorNo_L0, 1
L_LearnManual563:
0x4D70	0xA375      	BTFSS       _Events+4, 1, 1
0x4D72	0xD004      	BRA         L_LearnManual564
0x4D74	0x0E03      	MOVLW       3
0x4D76	0x6F63      	MOVWF       _LearnPhase, 1
0x4D78	0x0E01      	MOVLW       1
0x4D7A	0x6F64      	MOVWF       LearnManual_DoorNo_L0, 1
L_LearnManual564:
;FirmV_0_7_0.c,2278 :: 		break;
0x4D7C	0xD2C9      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2280 :: 		case 1: //Start D2 and enable overload sensing after 1s
L_LearnManual565:
;FirmV_0_7_0.c,2281 :: 		StartMotor(2,_Close);AddTask(ms500+2,21);LearnPhase=LearnPhase+1;
0x4D7E	0x0E02      	MOVLW       2
0x4D80	0x0103      	MOVLB       3
0x4D82	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x4D84	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x4D86	0xF006EC0E  	CALL        _StartMotor, 0
0x4D8A	0x0E02      	MOVLW       2
0x4D8C	0x0100      	MOVLB       0
0x4D8E	0x25EE      	ADDWF       _ms500, 0, 1
0x4D90	0x0103      	MOVLB       3
0x4D92	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x4D94	0x0E00      	MOVLW       0
0x4D96	0x0100      	MOVLB       0
0x4D98	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4D9A	0x0103      	MOVLB       3
0x4D9C	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4D9E	0x0E00      	MOVLW       0
0x4DA0	0x0100      	MOVLB       0
0x4DA2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4DA4	0x0103      	MOVLB       3
0x4DA6	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4DA8	0x0E00      	MOVLW       0
0x4DAA	0x0100      	MOVLB       0
0x4DAC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4DAE	0x0103      	MOVLB       3
0x4DB0	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4DB2	0x0E15      	MOVLW       21
0x4DB4	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4DB6	0xF00DEC7B  	CALL        _AddTask, 0
0x4DBA	0x0101      	MOVLB       1
0x4DBC	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2282 :: 		break;
0x4DBE	0xD2A8      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2284 :: 		case 2: //Check if D2 reaches end of its course
L_LearnManual566:
;FirmV_0_7_0.c,2285 :: 		if(Events.Overload.b1==1){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;}
0x4DC0	0xA376      	BTFSS       _Events+5, 1, 1
0x4DC2	0xD008      	BRA         L_LearnManual567
0x4DC4	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x4DC6	0x0E02      	MOVLW       2
0x4DC8	0x0103      	MOVLB       3
0x4DCA	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4DCC	0xF007EC3B  	CALL        _StopMotor, 0
0x4DD0	0x0101      	MOVLB       1
0x4DD2	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual567:
;FirmV_0_7_0.c,2286 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x4DD4	0x0E15      	MOVLW       21
0x4DD6	0x0103      	MOVLB       3
0x4DD8	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4DDA	0xF007EC58  	CALL        _CheckTask, 0
0x4DDE	0x5200      	MOVF        R0, 1 
0x4DE0	0xE003      	BZ          L_LearnManual568
0x4DE2	0x0E01      	MOVLW       1
0x4DE4	0x0101      	MOVLB       1
0x4DE6	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
L_LearnManual568:
;FirmV_0_7_0.c,2287 :: 		break;
0x4DE8	0xD293      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2289 :: 		case 3: //Start D1 and enable overload sensin after 1 s
L_LearnManual569:
;FirmV_0_7_0.c,2290 :: 		StartMotor(1,_Close);AddTask(ms500+2,20);LearnPhase=LearnPhase+1;;
0x4DEA	0x0E01      	MOVLW       1
0x4DEC	0x0103      	MOVLB       3
0x4DEE	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x4DF0	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x4DF2	0xF006EC0E  	CALL        _StartMotor, 0
0x4DF6	0x0E02      	MOVLW       2
0x4DF8	0x0100      	MOVLB       0
0x4DFA	0x25EE      	ADDWF       _ms500, 0, 1
0x4DFC	0x0103      	MOVLB       3
0x4DFE	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x4E00	0x0E00      	MOVLW       0
0x4E02	0x0100      	MOVLB       0
0x4E04	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x4E06	0x0103      	MOVLB       3
0x4E08	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4E0A	0x0E00      	MOVLW       0
0x4E0C	0x0100      	MOVLB       0
0x4E0E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x4E10	0x0103      	MOVLB       3
0x4E12	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4E14	0x0E00      	MOVLW       0
0x4E16	0x0100      	MOVLB       0
0x4E18	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x4E1A	0x0103      	MOVLB       3
0x4E1C	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4E1E	0x0E14      	MOVLW       20
0x4E20	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x4E22	0xF00DEC7B  	CALL        _AddTask, 0
0x4E26	0x0101      	MOVLB       1
0x4E28	0x2B63      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2292 :: 		case 4: //Check if D1 reaches end of its course
L_LearnManual570:
;FirmV_0_7_0.c,2293 :: 		if(Events.Overload.b0==1){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;}
0x4E2A	0xA176      	BTFSS       _Events+5, 0, 1
0x4E2C	0xD008      	BRA         L_LearnManual571
0x4E2E	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x4E30	0x0E01      	MOVLW       1
0x4E32	0x0103      	MOVLB       3
0x4E34	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4E36	0xF007EC3B  	CALL        _StopMotor, 0
0x4E3A	0x0101      	MOVLB       1
0x4E3C	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual571:
;FirmV_0_7_0.c,2294 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x4E3E	0x0E14      	MOVLW       20
0x4E40	0x0103      	MOVLB       3
0x4E42	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4E44	0xF007EC58  	CALL        _CheckTask, 0
0x4E48	0x5200      	MOVF        R0, 1 
0x4E4A	0xE003      	BZ          L_LearnManual572
0x4E4C	0x0E01      	MOVLW       1
0x4E4E	0x0101      	MOVLB       1
0x4E50	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
L_LearnManual572:
;FirmV_0_7_0.c,2295 :: 		break;
0x4E52	0xD25E      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2297 :: 		case 5: //Wait for remote to start D1 and slow down
L_LearnManual573:
0x4E54	0x0101      	MOVLB       1
;FirmV_0_7_0.c,2298 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(1,_Open);SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;LearnPhase=LearnPhase+1;}
0x4E56	0x5175      	MOVF        _Events+4, 0, 1
0x4E58	0x0A00      	XORLW       0
0x4E5A	0xE019      	BZ          L_LearnManual574
0x4E5C	0xF159C0EE  	MOVFF       _ms500, LearnManual_t1_L0
0x4E60	0xF15AC0EF  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x4E64	0xF15BC0F0  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x4E68	0xF15CC0F1  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x4E6C	0x0E01      	MOVLW       1
0x4E6E	0x0103      	MOVLB       3
0x4E70	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x4E72	0x0E01      	MOVLW       1
0x4E74	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x4E76	0xF006EC0E  	CALL        _StartMotor, 0
0x4E7A	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x4E7C	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x4E80	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4E84	0x0E01      	MOVLW       1
0x4E86	0x0100      	MOVLB       0
0x4E88	0x6F97      	MOVWF       _M1isSlow, 1
0x4E8A	0x0101      	MOVLB       1
0x4E8C	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual574:
;FirmV_0_7_0.c,2299 :: 		break;
0x4E8E	0xD240      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2301 :: 		case 6: //check for Remote press and fast up
L_LearnManual575:
;FirmV_0_7_0.c,2302 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(1,Motor2FullSpeed);M1isSlow=0;}
0x4E90	0x5175      	MOVF        _Events+4, 0, 1
0x4E92	0x0A00      	XORLW       0
0x4E94	0xE012      	BZ          L_LearnManual576
0x4E96	0x2B63      	INCF        _LearnPhase, 1, 1
0x4E98	0xF147C0EE  	MOVFF       _ms500, LearnManual_t2_L0
0x4E9C	0xF148C0EF  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x4EA0	0xF149C0F0  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x4EA4	0xF14AC0F1  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x4EA8	0x0E01      	MOVLW       1
0x4EAA	0x0103      	MOVLB       3
0x4EAC	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x4EAE	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x4EB2	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4EB6	0x0100      	MOVLB       0
0x4EB8	0x6B97      	CLRF        _M1isSlow, 1
L_LearnManual576:
;FirmV_0_7_0.c,2303 :: 		break;
0x4EBA	0xD22A      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2305 :: 		case 7: //check for Remote press and slow down
L_LearnManual577:
;FirmV_0_7_0.c,2306 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;}
0x4EBC	0x0101      	MOVLB       1
0x4EBE	0x5175      	MOVF        _Events+4, 0, 1
0x4EC0	0x0A00      	XORLW       0
0x4EC2	0xE012      	BZ          L_LearnManual578
0x4EC4	0x2B63      	INCF        _LearnPhase, 1, 1
0x4EC6	0xF169C0EE  	MOVFF       _ms500, LearnManual_t3_L0
0x4ECA	0xF16AC0EF  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x4ECE	0xF16BC0F0  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x4ED2	0xF16CC0F1  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x4ED6	0x0103      	MOVLB       3
0x4ED8	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x4EDA	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x4EDE	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4EE2	0x0E01      	MOVLW       1
0x4EE4	0x0100      	MOVLB       0
0x4EE6	0x6F97      	MOVWF       _M1isSlow, 1
L_LearnManual578:
;FirmV_0_7_0.c,2307 :: 		break;
0x4EE8	0xD213      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2309 :: 		case 8: //check for Remote press and stop
L_LearnManual579:
;FirmV_0_7_0.c,2310 :: 		if(Events.Remote!=0){if(DoorNo==2)LearnPhase=LearnPhase+1;else LearnPhase=17;t4=ms500;StopMotor(1);
0x4EEA	0x0101      	MOVLB       1
0x4EEC	0x5175      	MOVF        _Events+4, 0, 1
0x4EEE	0x0A00      	XORLW       0
0x4EF0	0xE024      	BZ          L_LearnManual580
0x4EF2	0x5164      	MOVF        LearnManual_DoorNo_L0, 0, 1
0x4EF4	0x0A02      	XORLW       2
0x4EF6	0xE102      	BNZ         L_LearnManual581
0x4EF8	0x2B63      	INCF        _LearnPhase, 1, 1
0x4EFA	0xD002      	BRA         L_LearnManual582
L_LearnManual581:
0x4EFC	0x0E11      	MOVLW       17
0x4EFE	0x6F63      	MOVWF       _LearnPhase, 1
L_LearnManual582:
0x4F00	0xF165C0EE  	MOVFF       _ms500, LearnManual_t4_L0
0x4F04	0xF166C0EF  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x4F08	0xF167C0F0  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x4F0C	0xF168C0F1  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x4F10	0x0E01      	MOVLW       1
0x4F12	0x0103      	MOVLB       3
0x4F14	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4F16	0xF007EC3B  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2311 :: 		RawData.D1OpenTime=(char)(t4-t1);
0x4F1A	0x0101      	MOVLB       1
0x4F1C	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x4F1E	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x4F20	0x6E00      	MOVWF       R0 
0x4F22	0xF14CC000  	MOVFF       R0, LearnManual_RawData_L0+1
;FirmV_0_7_0.c,2312 :: 		RawData.D1OpenSoftStart=(char)(t2-t1);
0x4F26	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x4F28	0x5D47      	SUBWF       LearnManual_t2_L0, 0, 1
0x4F2A	0x6E00      	MOVWF       R0 
0x4F2C	0xF14FC000  	MOVFF       R0, LearnManual_RawData_L0+4
;FirmV_0_7_0.c,2313 :: 		RawData.D1OpenSoftStop=(char)(t4-t3);
0x4F30	0x5169      	MOVF        LearnManual_t3_L0, 0, 1
0x4F32	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x4F34	0x6E00      	MOVWF       R0 
0x4F36	0xF150C000  	MOVFF       R0, LearnManual_RawData_L0+5
;FirmV_0_7_0.c,2314 :: 		}
L_LearnManual580:
;FirmV_0_7_0.c,2315 :: 		break;
0x4F3A	0xD1EA      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2317 :: 		case 9: //Wait for remote to start D2 and slow down
L_LearnManual583:
;FirmV_0_7_0.c,2318 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(2,_Open);SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;LearnPhase=LearnPhase+1;}
0x4F3C	0x5175      	MOVF        _Events+4, 0, 1
0x4F3E	0x0A00      	XORLW       0
0x4F40	0xE019      	BZ          L_LearnManual584
0x4F42	0xF159C0EE  	MOVFF       _ms500, LearnManual_t1_L0
0x4F46	0xF15AC0EF  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x4F4A	0xF15BC0F0  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x4F4E	0xF15CC0F1  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x4F52	0x0E02      	MOVLW       2
0x4F54	0x0103      	MOVLB       3
0x4F56	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x4F58	0x0E01      	MOVLW       1
0x4F5A	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x4F5C	0xF006EC0E  	CALL        _StartMotor, 0
0x4F60	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x4F64	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x4F66	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4F6A	0x0E01      	MOVLW       1
0x4F6C	0x0100      	MOVLB       0
0x4F6E	0x6F98      	MOVWF       _M2isSlow, 1
0x4F70	0x0101      	MOVLB       1
0x4F72	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual584:
;FirmV_0_7_0.c,2319 :: 		break;
0x4F74	0xD1CD      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2321 :: 		case 10: //check for Remote press and fast up
L_LearnManual585:
;FirmV_0_7_0.c,2322 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(Motor1FullSpeed,1);M2isSlow=0;}
0x4F76	0x5175      	MOVF        _Events+4, 0, 1
0x4F78	0x0A00      	XORLW       0
0x4F7A	0xE012      	BZ          L_LearnManual586
0x4F7C	0x2B63      	INCF        _LearnPhase, 1, 1
0x4F7E	0xF147C0EE  	MOVFF       _ms500, LearnManual_t2_L0
0x4F82	0xF148C0EF  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x4F86	0xF149C0F0  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x4F8A	0xF14AC0F1  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x4F8E	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x4F92	0x0E01      	MOVLW       1
0x4F94	0x0103      	MOVLB       3
0x4F96	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x4F98	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4F9C	0x0100      	MOVLB       0
0x4F9E	0x6B98      	CLRF        _M2isSlow, 1
L_LearnManual586:
;FirmV_0_7_0.c,2323 :: 		break;
0x4FA0	0xD1B7      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2325 :: 		case 11: //check for Remote press and slow down
L_LearnManual587:
;FirmV_0_7_0.c,2326 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;}
0x4FA2	0x0101      	MOVLB       1
0x4FA4	0x5175      	MOVF        _Events+4, 0, 1
0x4FA6	0x0A00      	XORLW       0
0x4FA8	0xE012      	BZ          L_LearnManual588
0x4FAA	0x2B63      	INCF        _LearnPhase, 1, 1
0x4FAC	0xF169C0EE  	MOVFF       _ms500, LearnManual_t3_L0
0x4FB0	0xF16AC0EF  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x4FB4	0xF16BC0F0  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x4FB8	0xF16CC0F1  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x4FBC	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x4FC0	0x0103      	MOVLB       3
0x4FC2	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x4FC4	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x4FC8	0x0E01      	MOVLW       1
0x4FCA	0x0100      	MOVLB       0
0x4FCC	0x6F98      	MOVWF       _M2isSlow, 1
L_LearnManual588:
;FirmV_0_7_0.c,2327 :: 		break;
0x4FCE	0xD1A0      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2329 :: 		case 12: //check for Remote press and stop
L_LearnManual589:
;FirmV_0_7_0.c,2330 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(2);
0x4FD0	0x0101      	MOVLB       1
0x4FD2	0x5175      	MOVF        _Events+4, 0, 1
0x4FD4	0x0A00      	XORLW       0
0x4FD6	0xE01E      	BZ          L_LearnManual590
0x4FD8	0x2B63      	INCF        _LearnPhase, 1, 1
0x4FDA	0xF165C0EE  	MOVFF       _ms500, LearnManual_t4_L0
0x4FDE	0xF166C0EF  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x4FE2	0xF167C0F0  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x4FE6	0xF168C0F1  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x4FEA	0x0E02      	MOVLW       2
0x4FEC	0x0103      	MOVLB       3
0x4FEE	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x4FF0	0xF007EC3B  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2331 :: 		RawData.D2OpenTime=(char)(t4-t1);
0x4FF4	0x0101      	MOVLB       1
0x4FF6	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x4FF8	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x4FFA	0x6E00      	MOVWF       R0 
0x4FFC	0xF14EC000  	MOVFF       R0, LearnManual_RawData_L0+3
;FirmV_0_7_0.c,2332 :: 		RawData.D2OpenSoftStart=(char)(t2-t1);
0x5000	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x5002	0x5D47      	SUBWF       LearnManual_t2_L0, 0, 1
0x5004	0x6E00      	MOVWF       R0 
0x5006	0xF153C000  	MOVFF       R0, LearnManual_RawData_L0+8
;FirmV_0_7_0.c,2333 :: 		RawData.D2OpenSoftStop=(char)(t4-t3);
0x500A	0x5169      	MOVF        LearnManual_t3_L0, 0, 1
0x500C	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x500E	0x6E00      	MOVWF       R0 
0x5010	0xF154C000  	MOVFF       R0, LearnManual_RawData_L0+9
;FirmV_0_7_0.c,2334 :: 		}
L_LearnManual590:
;FirmV_0_7_0.c,2335 :: 		break;
0x5014	0xD17D      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2337 :: 		case 13: //Wait for remote to start D2 and slow down
L_LearnManual591:
;FirmV_0_7_0.c,2338 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(2,_Close);SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;LearnPhase=LearnPhase+1;}
0x5016	0x5175      	MOVF        _Events+4, 0, 1
0x5018	0x0A00      	XORLW       0
0x501A	0xE018      	BZ          L_LearnManual592
0x501C	0xF159C0EE  	MOVFF       _ms500, LearnManual_t1_L0
0x5020	0xF15AC0EF  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x5024	0xF15BC0F0  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x5028	0xF15CC0F1  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x502C	0x0E02      	MOVLW       2
0x502E	0x0103      	MOVLB       3
0x5030	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x5032	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x5034	0xF006EC0E  	CALL        _StartMotor, 0
0x5038	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x503C	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x503E	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x5042	0x0E01      	MOVLW       1
0x5044	0x0100      	MOVLB       0
0x5046	0x6F98      	MOVWF       _M2isSlow, 1
0x5048	0x0101      	MOVLB       1
0x504A	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual592:
;FirmV_0_7_0.c,2339 :: 		break;
0x504C	0xD161      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2341 :: 		case 14: //check for Remote press and fast up
L_LearnManual593:
;FirmV_0_7_0.c,2342 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(Motor1FullSpeed,1);M2isSlow=0;}
0x504E	0x5175      	MOVF        _Events+4, 0, 1
0x5050	0x0A00      	XORLW       0
0x5052	0xE012      	BZ          L_LearnManual594
0x5054	0x2B63      	INCF        _LearnPhase, 1, 1
0x5056	0xF147C0EE  	MOVFF       _ms500, LearnManual_t2_L0
0x505A	0xF148C0EF  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x505E	0xF149C0F0  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x5062	0xF14AC0F1  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x5066	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x506A	0x0E01      	MOVLW       1
0x506C	0x0103      	MOVLB       3
0x506E	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x5070	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x5074	0x0100      	MOVLB       0
0x5076	0x6B98      	CLRF        _M2isSlow, 1
L_LearnManual594:
;FirmV_0_7_0.c,2343 :: 		break;
0x5078	0xD14B      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2345 :: 		case 15: //check for Remote press and slow down
L_LearnManual595:
;FirmV_0_7_0.c,2346 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;}
0x507A	0x0101      	MOVLB       1
0x507C	0x5175      	MOVF        _Events+4, 0, 1
0x507E	0x0A00      	XORLW       0
0x5080	0xE012      	BZ          L_LearnManual596
0x5082	0x2B63      	INCF        _LearnPhase, 1, 1
0x5084	0xF169C0EE  	MOVFF       _ms500, LearnManual_t3_L0
0x5088	0xF16AC0EF  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x508C	0xF16BC0F0  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x5090	0xF16CC0F1  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x5094	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x5098	0x0103      	MOVLB       3
0x509A	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x509C	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x50A0	0x0E01      	MOVLW       1
0x50A2	0x0100      	MOVLB       0
0x50A4	0x6F98      	MOVWF       _M2isSlow, 1
L_LearnManual596:
;FirmV_0_7_0.c,2347 :: 		break;
0x50A6	0xD134      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2349 :: 		case 16: //check for Remote press and stop
L_LearnManual597:
;FirmV_0_7_0.c,2350 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(2);
0x50A8	0x0101      	MOVLB       1
0x50AA	0x5175      	MOVF        _Events+4, 0, 1
0x50AC	0x0A00      	XORLW       0
0x50AE	0xE01E      	BZ          L_LearnManual598
0x50B0	0x2B63      	INCF        _LearnPhase, 1, 1
0x50B2	0xF165C0EE  	MOVFF       _ms500, LearnManual_t4_L0
0x50B6	0xF166C0EF  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x50BA	0xF167C0F0  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x50BE	0xF168C0F1  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x50C2	0x0E02      	MOVLW       2
0x50C4	0x0103      	MOVLB       3
0x50C6	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x50C8	0xF007EC3B  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2351 :: 		RawData.D2CloseTime=(char)(t4-t1);
0x50CC	0x0101      	MOVLB       1
0x50CE	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x50D0	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x50D2	0x6E00      	MOVWF       R0 
0x50D4	0xF14DC000  	MOVFF       R0, LearnManual_RawData_L0+2
;FirmV_0_7_0.c,2352 :: 		RawData.D2CloseSoftStart=(char)(t2-t1);
0x50D8	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x50DA	0x5D47      	SUBWF       LearnManual_t2_L0, 0, 1
0x50DC	0x6E00      	MOVWF       R0 
0x50DE	0xF155C000  	MOVFF       R0, LearnManual_RawData_L0+10
;FirmV_0_7_0.c,2353 :: 		RawData.D2CloseSoftStop=(char)(t4-t3);
0x50E2	0x5169      	MOVF        LearnManual_t3_L0, 0, 1
0x50E4	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x50E6	0x6E00      	MOVWF       R0 
0x50E8	0xF156C000  	MOVFF       R0, LearnManual_RawData_L0+11
;FirmV_0_7_0.c,2354 :: 		}
L_LearnManual598:
;FirmV_0_7_0.c,2355 :: 		break;
0x50EC	0xD111      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2357 :: 		case 17: //Wait for remote to start D1 and slow down
L_LearnManual599:
;FirmV_0_7_0.c,2358 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(1,_Close);SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;LearnPhase=LearnPhase+1;}
0x50EE	0x5175      	MOVF        _Events+4, 0, 1
0x50F0	0x0A00      	XORLW       0
0x50F2	0xE018      	BZ          L_LearnManual600
0x50F4	0xF159C0EE  	MOVFF       _ms500, LearnManual_t1_L0
0x50F8	0xF15AC0EF  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x50FC	0xF15BC0F0  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x5100	0xF15CC0F1  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x5104	0x0E01      	MOVLW       1
0x5106	0x0103      	MOVLB       3
0x5108	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x510A	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x510C	0xF006EC0E  	CALL        _StartMotor, 0
0x5110	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x5112	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x5116	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x511A	0x0E01      	MOVLW       1
0x511C	0x0100      	MOVLB       0
0x511E	0x6F97      	MOVWF       _M1isSlow, 1
0x5120	0x0101      	MOVLB       1
0x5122	0x2B63      	INCF        _LearnPhase, 1, 1
L_LearnManual600:
;FirmV_0_7_0.c,2359 :: 		break;
0x5124	0xD0F5      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2361 :: 		case 18: //check for Remote press and fast up
L_LearnManual601:
;FirmV_0_7_0.c,2362 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(1,Motor2FullSpeed);M1isSlow=0;}
0x5126	0x5175      	MOVF        _Events+4, 0, 1
0x5128	0x0A00      	XORLW       0
0x512A	0xE012      	BZ          L_LearnManual602
0x512C	0x2B63      	INCF        _LearnPhase, 1, 1
0x512E	0xF147C0EE  	MOVFF       _ms500, LearnManual_t2_L0
0x5132	0xF148C0EF  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x5136	0xF149C0F0  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x513A	0xF14AC0F1  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x513E	0x0E01      	MOVLW       1
0x5140	0x0103      	MOVLB       3
0x5142	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x5144	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x5148	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x514C	0x0100      	MOVLB       0
0x514E	0x6B97      	CLRF        _M1isSlow, 1
L_LearnManual602:
;FirmV_0_7_0.c,2363 :: 		break;
0x5150	0xD0DF      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2365 :: 		case 19: //check for Remote press and slow down
L_LearnManual603:
;FirmV_0_7_0.c,2366 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;}
0x5152	0x0101      	MOVLB       1
0x5154	0x5175      	MOVF        _Events+4, 0, 1
0x5156	0x0A00      	XORLW       0
0x5158	0xE012      	BZ          L_LearnManual604
0x515A	0x2B63      	INCF        _LearnPhase, 1, 1
0x515C	0xF169C0EE  	MOVFF       _ms500, LearnManual_t3_L0
0x5160	0xF16AC0EF  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x5164	0xF16BC0F0  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x5168	0xF16CC0F1  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x516C	0x0103      	MOVLB       3
0x516E	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x5170	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x5174	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x5178	0x0E01      	MOVLW       1
0x517A	0x0100      	MOVLB       0
0x517C	0x6F97      	MOVWF       _M1isSlow, 1
L_LearnManual604:
;FirmV_0_7_0.c,2367 :: 		break;
0x517E	0xD0C8      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2369 :: 		case 20: //check for Remote press and stop
L_LearnManual605:
;FirmV_0_7_0.c,2370 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(1);
0x5180	0x0101      	MOVLB       1
0x5182	0x5175      	MOVF        _Events+4, 0, 1
0x5184	0x0A00      	XORLW       0
0x5186	0xE01E      	BZ          L_LearnManual606
0x5188	0x2B63      	INCF        _LearnPhase, 1, 1
0x518A	0xF165C0EE  	MOVFF       _ms500, LearnManual_t4_L0
0x518E	0xF166C0EF  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x5192	0xF167C0F0  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x5196	0xF168C0F1  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x519A	0x0E01      	MOVLW       1
0x519C	0x0103      	MOVLB       3
0x519E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x51A0	0xF007EC3B  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2371 :: 		RawData.D1CloseTime=(char)(t4-t1);
0x51A4	0x0101      	MOVLB       1
0x51A6	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x51A8	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x51AA	0x6E00      	MOVWF       R0 
0x51AC	0xF14BC000  	MOVFF       R0, LearnManual_RawData_L0
;FirmV_0_7_0.c,2372 :: 		RawData.D1CloseSoftStart=(char)(t2-t1);
0x51B0	0x5159      	MOVF        LearnManual_t1_L0, 0, 1
0x51B2	0x5D47      	SUBWF       LearnManual_t2_L0, 0, 1
0x51B4	0x6E00      	MOVWF       R0 
0x51B6	0xF151C000  	MOVFF       R0, LearnManual_RawData_L0+6
;FirmV_0_7_0.c,2373 :: 		RawData.D1CloseSoftStop=(char)(t4-t3);
0x51BA	0x5169      	MOVF        LearnManual_t3_L0, 0, 1
0x51BC	0x5D65      	SUBWF       LearnManual_t4_L0, 0, 1
0x51BE	0x6E00      	MOVWF       R0 
0x51C0	0xF152C000  	MOVFF       R0, LearnManual_RawData_L0+7
;FirmV_0_7_0.c,2374 :: 		}
L_LearnManual606:
;FirmV_0_7_0.c,2375 :: 		break;
0x51C4	0xD0A5      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2377 :: 		case 21:
L_LearnManual607:
;FirmV_0_7_0.c,2378 :: 		SaveLearnData(&RawData,DoorNo);
0x51C6	0x0E4B      	MOVLW       LearnManual_RawData_L0
0x51C8	0x0103      	MOVLB       3
0x51CA	0x6F4F      	MOVWF       FARG_SaveLearnData_d, 1
0x51CC	0x0E01      	MOVLW       hi_addr(LearnManual_RawData_L0)
0x51CE	0x6F50      	MOVWF       FARG_SaveLearnData_d+1, 1
0x51D0	0xF351C164  	MOVFF       LearnManual_DoorNo_L0, FARG_SaveLearnData_DCount
0x51D4	0xF00CECBC  	CALL        _SaveLearnData, 0
;FirmV_0_7_0.c,2379 :: 		memcpy(LCDLine1,"Learn Complete  ",16);
0x51D8	0x0EF3      	MOVLW       _LCDLine1
0x51DA	0x0105      	MOVLB       5
0x51DC	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x51DE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x51E0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x51E2	0x0E9B      	MOVLW       ?ICS?lstr105_FirmV_0_7_0
0x51E4	0x6EF6      	MOVWF       4086 
0x51E6	0x0E75      	MOVLW       hi_addr(?ICS?lstr105_FirmV_0_7_0)
0x51E8	0x6EF7      	MOVWF       TBLPTRH 
0x51EA	0x0E00      	MOVLW       higher_addr(?ICS?lstr105_FirmV_0_7_0)
0x51EC	0x6EF8      	MOVWF       TBLPTRU 
0x51EE	0x0E35      	MOVLW       ?lstr105_FirmV_0_7_0
0x51F0	0x6EE1      	MOVWF       FSR1L 
0x51F2	0x0E02      	MOVLW       hi_addr(?lstr105_FirmV_0_7_0)
0x51F4	0x6EE2      	MOVWF       FSR1H 
0x51F6	0x0E11      	MOVLW       17
0x51F8	0x6E00      	MOVWF       R0 
0x51FA	0x0E01      	MOVLW       1
0x51FC	0x6E01      	MOVWF       R1 
0x51FE	0xF004EC95  	CALL        ___CC2DW, 0
0x5202	0x0E35      	MOVLW       ?lstr105_FirmV_0_7_0
0x5204	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5206	0x0E02      	MOVLW       hi_addr(?lstr105_FirmV_0_7_0)
0x5208	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x520A	0x0E10      	MOVLW       16
0x520C	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x520E	0x0E00      	MOVLW       0
0x5210	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5212	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2380 :: 		memcpy(LCDLine2,"     Ready      ",16);
0x5216	0x0E04      	MOVLW       _LCDLine2
0x5218	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x521A	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x521C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x521E	0x0EAC      	MOVLW       ?ICS?lstr106_FirmV_0_7_0
0x5220	0x6EF6      	MOVWF       4086 
0x5222	0x0E75      	MOVLW       hi_addr(?ICS?lstr106_FirmV_0_7_0)
0x5224	0x6EF7      	MOVWF       TBLPTRH 
0x5226	0x0E00      	MOVLW       higher_addr(?ICS?lstr106_FirmV_0_7_0)
0x5228	0x6EF8      	MOVWF       TBLPTRU 
0x522A	0x0E46      	MOVLW       ?lstr106_FirmV_0_7_0
0x522C	0x6EE1      	MOVWF       FSR1L 
0x522E	0x0E02      	MOVLW       hi_addr(?lstr106_FirmV_0_7_0)
0x5230	0x6EE2      	MOVWF       FSR1H 
0x5232	0x0E11      	MOVLW       17
0x5234	0x6E00      	MOVWF       R0 
0x5236	0x0E01      	MOVLW       1
0x5238	0x6E01      	MOVWF       R1 
0x523A	0xF004EC95  	CALL        ___CC2DW, 0
0x523E	0x0E46      	MOVLW       ?lstr106_FirmV_0_7_0
0x5240	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5242	0x0E02      	MOVLW       hi_addr(?lstr106_FirmV_0_7_0)
0x5244	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5246	0x0E10      	MOVLW       16
0x5248	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x524A	0x0E00      	MOVLW       0
0x524C	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x524E	0xF000ECFC  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2381 :: 		LCDUpdateFlag=1;
0x5252	0x0E01      	MOVLW       1
0x5254	0x0101      	MOVLB       1
0x5256	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2382 :: 		State=0;
0x5258	0x0100      	MOVLB       0
0x525A	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,2383 :: 		break;
0x525C	0xD059      	BRA         L_LearnManual561
;FirmV_0_7_0.c,2384 :: 		}
L_LearnManual560:
0x525E	0x0101      	MOVLB       1
0x5260	0x5163      	MOVF        _LearnPhase, 0, 1
0x5262	0x0A00      	XORLW       0
0x5264	0xB4D8      	BTFSC       STATUS, 2 
0x5266	0xD57E      	BRA         L_LearnManual562
0x5268	0x5163      	MOVF        _LearnPhase, 0, 1
0x526A	0x0A01      	XORLW       1
0x526C	0xB4D8      	BTFSC       STATUS, 2 
0x526E	0xD587      	BRA         L_LearnManual565
0x5270	0x5163      	MOVF        _LearnPhase, 0, 1
0x5272	0x0A02      	XORLW       2
0x5274	0xB4D8      	BTFSC       STATUS, 2 
0x5276	0xD5A4      	BRA         L_LearnManual566
0x5278	0x5163      	MOVF        _LearnPhase, 0, 1
0x527A	0x0A03      	XORLW       3
0x527C	0xB4D8      	BTFSC       STATUS, 2 
0x527E	0xD5B5      	BRA         L_LearnManual569
0x5280	0x5163      	MOVF        _LearnPhase, 0, 1
0x5282	0x0A04      	XORLW       4
0x5284	0xB4D8      	BTFSC       STATUS, 2 
0x5286	0xD5D1      	BRA         L_LearnManual570
0x5288	0x5163      	MOVF        _LearnPhase, 0, 1
0x528A	0x0A05      	XORLW       5
0x528C	0xB4D8      	BTFSC       STATUS, 2 
0x528E	0xD5E2      	BRA         L_LearnManual573
0x5290	0x5163      	MOVF        _LearnPhase, 0, 1
0x5292	0x0A06      	XORLW       6
0x5294	0xB4D8      	BTFSC       STATUS, 2 
0x5296	0xD5FC      	BRA         L_LearnManual575
0x5298	0x5163      	MOVF        _LearnPhase, 0, 1
0x529A	0x0A07      	XORLW       7
0x529C	0xB4D8      	BTFSC       STATUS, 2 
0x529E	0xD60E      	BRA         L_LearnManual577
0x52A0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52A2	0x0A08      	XORLW       8
0x52A4	0xB4D8      	BTFSC       STATUS, 2 
0x52A6	0xD621      	BRA         L_LearnManual579
0x52A8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52AA	0x0A09      	XORLW       9
0x52AC	0xB4D8      	BTFSC       STATUS, 2 
0x52AE	0xD646      	BRA         L_LearnManual583
0x52B0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52B2	0x0A0A      	XORLW       10
0x52B4	0xB4D8      	BTFSC       STATUS, 2 
0x52B6	0xD65F      	BRA         L_LearnManual585
0x52B8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52BA	0x0A0B      	XORLW       11
0x52BC	0xB4D8      	BTFSC       STATUS, 2 
0x52BE	0xD671      	BRA         L_LearnManual587
0x52C0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52C2	0x0A0C      	XORLW       12
0x52C4	0xB4D8      	BTFSC       STATUS, 2 
0x52C6	0xD684      	BRA         L_LearnManual589
0x52C8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52CA	0x0A0D      	XORLW       13
0x52CC	0xB4D8      	BTFSC       STATUS, 2 
0x52CE	0xD6A3      	BRA         L_LearnManual591
0x52D0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52D2	0x0A0E      	XORLW       14
0x52D4	0xB4D8      	BTFSC       STATUS, 2 
0x52D6	0xD6BB      	BRA         L_LearnManual593
0x52D8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52DA	0x0A0F      	XORLW       15
0x52DC	0xB4D8      	BTFSC       STATUS, 2 
0x52DE	0xD6CD      	BRA         L_LearnManual595
0x52E0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52E2	0x0A10      	XORLW       16
0x52E4	0xB4D8      	BTFSC       STATUS, 2 
0x52E6	0xD6E0      	BRA         L_LearnManual597
0x52E8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52EA	0x0A11      	XORLW       17
0x52EC	0xB4D8      	BTFSC       STATUS, 2 
0x52EE	0xD6FF      	BRA         L_LearnManual599
0x52F0	0x5163      	MOVF        _LearnPhase, 0, 1
0x52F2	0x0A12      	XORLW       18
0x52F4	0xB4D8      	BTFSC       STATUS, 2 
0x52F6	0xD717      	BRA         L_LearnManual601
0x52F8	0x5163      	MOVF        _LearnPhase, 0, 1
0x52FA	0x0A13      	XORLW       19
0x52FC	0xB4D8      	BTFSC       STATUS, 2 
0x52FE	0xD729      	BRA         L_LearnManual603
0x5300	0x5163      	MOVF        _LearnPhase, 0, 1
0x5302	0x0A14      	XORLW       20
0x5304	0xB4D8      	BTFSC       STATUS, 2 
0x5306	0xD73C      	BRA         L_LearnManual605
0x5308	0x5163      	MOVF        _LearnPhase, 0, 1
0x530A	0x0A15      	XORLW       21
0x530C	0xB4D8      	BTFSC       STATUS, 2 
0x530E	0xD75B      	BRA         L_LearnManual607
L_LearnManual561:
;FirmV_0_7_0.c,2385 :: 		}
0x5310	0x0012      	RETURN      0
; end of _LearnManual
_State4:
;FirmV_0_7_0.c,753 :: 		void State4()
;FirmV_0_7_0.c,755 :: 		Flasher=1;
0x5312	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,757 :: 		bytetostr(Events.Task1,LCDLine1);
0x5314	0xF504C172  	MOVFF       _Events+1, FARG_ByteToStr_input
0x5318	0x0EF3      	MOVLW       _LCDLine1
0x531A	0x0105      	MOVLB       5
0x531C	0x6F05      	MOVWF       FARG_ByteToStr_output, 1
0x531E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5320	0x6F06      	MOVWF       FARG_ByteToStr_output+1, 1
0x5322	0xF001EC24  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,758 :: 		bytetostr(Events.Task2,LCDLine2);
0x5326	0xF504C173  	MOVFF       _Events+2, FARG_ByteToStr_input
0x532A	0x0E04      	MOVLW       _LCDLine2
0x532C	0x6F05      	MOVWF       FARG_ByteToStr_output, 1
0x532E	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x5330	0x6F06      	MOVWF       FARG_ByteToStr_output+1, 1
0x5332	0xF001EC24  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,759 :: 		LCDUpdateFlag=1;
0x5336	0x0E01      	MOVLW       1
0x5338	0x0101      	MOVLB       1
0x533A	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,761 :: 		if(CheckTask(1))
0x533C	0x0E01      	MOVLW       1
0x533E	0x0103      	MOVLB       3
0x5340	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x5342	0xF007EC58  	CALL        _CheckTask, 0
0x5346	0x5200      	MOVF        R0, 1 
0x5348	0xE04B      	BZ          L_State4134
;FirmV_0_7_0.c,762 :: 		{StartMotor(1,_Close);Logger("S4 Motor1Start");memcpy(LCDLine1,_closing,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x534A	0x0E01      	MOVLW       1
0x534C	0x0103      	MOVLB       3
0x534E	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x5350	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x5352	0xF006EC0E  	CALL        _StartMotor, 0
0x5356	0x0E53      	MOVLW       83
0x5358	0x0102      	MOVLB       2
0x535A	0x6F35      	MOVWF       ?lstr22_FirmV_0_7_0, 1
0x535C	0x0E34      	MOVLW       52
0x535E	0x6F36      	MOVWF       ?lstr22_FirmV_0_7_0+1, 1
0x5360	0x0E20      	MOVLW       32
0x5362	0x6F37      	MOVWF       ?lstr22_FirmV_0_7_0+2, 1
0x5364	0x0E4D      	MOVLW       77
0x5366	0x6F38      	MOVWF       ?lstr22_FirmV_0_7_0+3, 1
0x5368	0x0E6F      	MOVLW       111
0x536A	0x6F39      	MOVWF       ?lstr22_FirmV_0_7_0+4, 1
0x536C	0x0E74      	MOVLW       116
0x536E	0x6F3A      	MOVWF       ?lstr22_FirmV_0_7_0+5, 1
0x5370	0x0E6F      	MOVLW       111
0x5372	0x6F3B      	MOVWF       ?lstr22_FirmV_0_7_0+6, 1
0x5374	0x0E72      	MOVLW       114
0x5376	0x6F3C      	MOVWF       ?lstr22_FirmV_0_7_0+7, 1
0x5378	0x0E31      	MOVLW       49
0x537A	0x6F3D      	MOVWF       ?lstr22_FirmV_0_7_0+8, 1
0x537C	0x0E53      	MOVLW       83
0x537E	0x6F3E      	MOVWF       ?lstr22_FirmV_0_7_0+9, 1
0x5380	0x0E74      	MOVLW       116
0x5382	0x6F3F      	MOVWF       ?lstr22_FirmV_0_7_0+10, 1
0x5384	0x0E61      	MOVLW       97
0x5386	0x6F40      	MOVWF       ?lstr22_FirmV_0_7_0+11, 1
0x5388	0x0E72      	MOVLW       114
0x538A	0x6F41      	MOVWF       ?lstr22_FirmV_0_7_0+12, 1
0x538C	0x0E74      	MOVLW       116
0x538E	0x6F42      	MOVWF       ?lstr22_FirmV_0_7_0+13, 1
0x5390	0x6B43      	CLRF        ?lstr22_FirmV_0_7_0+14, 1
0x5392	0x0E35      	MOVLW       ?lstr22_FirmV_0_7_0
0x5394	0x0103      	MOVLB       3
0x5396	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5398	0x0E02      	MOVLW       hi_addr(?lstr22_FirmV_0_7_0)
0x539A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x539C	0xF00BECFA  	CALL        _Logger, 0
0x53A0	0x0EF3      	MOVLW       _LCDLine1
0x53A2	0x0105      	MOVLB       5
0x53A4	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x53A6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x53A8	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x53AA	0x0E9B      	MOVLW       __closing
0x53AC	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x53AE	0x0E00      	MOVLW       hi_addr(__closing)
0x53B0	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x53B2	0x0E10      	MOVLW       16
0x53B4	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x53B6	0x0E00      	MOVLW       0
0x53B8	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x53BA	0xF000ECFC  	CALL        _memcpy, 0
0x53BE	0x0E04      	MOVLW       _LCDLine2
0x53C0	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x53C2	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x53C4	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x53C6	0x0EAC      	MOVLW       __Blank
0x53C8	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x53CA	0x0E00      	MOVLW       hi_addr(__Blank)
0x53CC	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x53CE	0x0E10      	MOVLW       16
0x53D0	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x53D2	0x0E00      	MOVLW       0
0x53D4	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x53D6	0xF000ECFC  	CALL        _memcpy, 0
0x53DA	0x0E01      	MOVLW       1
0x53DC	0x0101      	MOVLB       1
0x53DE	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4134:
;FirmV_0_7_0.c,764 :: 		if(CheckTask(2))
0x53E0	0x0E02      	MOVLW       2
0x53E2	0x0103      	MOVLB       3
0x53E4	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x53E6	0xF007EC58  	CALL        _CheckTask, 0
0x53EA	0x5200      	MOVF        R0, 1 
0x53EC	0xE02B      	BZ          L_State4135
;FirmV_0_7_0.c,765 :: 		{StartMotor(2,_Close);Logger("S4 Motor2Start");}
0x53EE	0x0E02      	MOVLW       2
0x53F0	0x0103      	MOVLB       3
0x53F2	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x53F4	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x53F6	0xF006EC0E  	CALL        _StartMotor, 0
0x53FA	0x0E53      	MOVLW       83
0x53FC	0x0102      	MOVLB       2
0x53FE	0x6F44      	MOVWF       ?lstr23_FirmV_0_7_0, 1
0x5400	0x0E34      	MOVLW       52
0x5402	0x6F45      	MOVWF       ?lstr23_FirmV_0_7_0+1, 1
0x5404	0x0E20      	MOVLW       32
0x5406	0x6F46      	MOVWF       ?lstr23_FirmV_0_7_0+2, 1
0x5408	0x0E4D      	MOVLW       77
0x540A	0x6F47      	MOVWF       ?lstr23_FirmV_0_7_0+3, 1
0x540C	0x0E6F      	MOVLW       111
0x540E	0x6F48      	MOVWF       ?lstr23_FirmV_0_7_0+4, 1
0x5410	0x0E74      	MOVLW       116
0x5412	0x6F49      	MOVWF       ?lstr23_FirmV_0_7_0+5, 1
0x5414	0x0E6F      	MOVLW       111
0x5416	0x6F4A      	MOVWF       ?lstr23_FirmV_0_7_0+6, 1
0x5418	0x0E72      	MOVLW       114
0x541A	0x6F4B      	MOVWF       ?lstr23_FirmV_0_7_0+7, 1
0x541C	0x0E32      	MOVLW       50
0x541E	0x6F4C      	MOVWF       ?lstr23_FirmV_0_7_0+8, 1
0x5420	0x0E53      	MOVLW       83
0x5422	0x6F4D      	MOVWF       ?lstr23_FirmV_0_7_0+9, 1
0x5424	0x0E74      	MOVLW       116
0x5426	0x6F4E      	MOVWF       ?lstr23_FirmV_0_7_0+10, 1
0x5428	0x0E61      	MOVLW       97
0x542A	0x6F4F      	MOVWF       ?lstr23_FirmV_0_7_0+11, 1
0x542C	0x0E72      	MOVLW       114
0x542E	0x6F50      	MOVWF       ?lstr23_FirmV_0_7_0+12, 1
0x5430	0x0E74      	MOVLW       116
0x5432	0x6F51      	MOVWF       ?lstr23_FirmV_0_7_0+13, 1
0x5434	0x6B52      	CLRF        ?lstr23_FirmV_0_7_0+14, 1
0x5436	0x0E44      	MOVLW       ?lstr23_FirmV_0_7_0
0x5438	0x0103      	MOVLB       3
0x543A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x543C	0x0E02      	MOVLW       hi_addr(?lstr23_FirmV_0_7_0)
0x543E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5440	0xF00BECFA  	CALL        _Logger, 0
L_State4135:
;FirmV_0_7_0.c,767 :: 		if(CheckTask(10))
0x5444	0x0E0A      	MOVLW       10
0x5446	0x0103      	MOVLB       3
0x5448	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x544A	0xF007EC58  	CALL        _CheckTask, 0
0x544E	0x5200      	MOVF        R0, 1 
0x5450	0xE01F      	BZ          L_State4136
;FirmV_0_7_0.c,768 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S4 M1 Overload Check");}
0x5452	0x0E01      	MOVLW       1
0x5454	0x0101      	MOVLB       1
0x5456	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
0x5458	0x0E01      	MOVLW       1
0x545A	0x0103      	MOVLB       3
0x545C	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x545E	0xF007EC49  	CALL        _OverloadInit, 0
0x5462	0x0ECF      	MOVLW       ?ICS?lstr24_FirmV_0_7_0
0x5464	0x6EF6      	MOVWF       4086 
0x5466	0x0E70      	MOVLW       hi_addr(?ICS?lstr24_FirmV_0_7_0)
0x5468	0x6EF7      	MOVWF       TBLPTRH 
0x546A	0x0E00      	MOVLW       higher_addr(?ICS?lstr24_FirmV_0_7_0)
0x546C	0x6EF8      	MOVWF       TBLPTRU 
0x546E	0x0E53      	MOVLW       ?lstr24_FirmV_0_7_0
0x5470	0x6EE1      	MOVWF       FSR1L 
0x5472	0x0E02      	MOVLW       hi_addr(?lstr24_FirmV_0_7_0)
0x5474	0x6EE2      	MOVWF       FSR1H 
0x5476	0x0E15      	MOVLW       21
0x5478	0x6E00      	MOVWF       R0 
0x547A	0x0E01      	MOVLW       1
0x547C	0x6E01      	MOVWF       R1 
0x547E	0xF004EC95  	CALL        ___CC2DW, 0
0x5482	0x0E53      	MOVLW       ?lstr24_FirmV_0_7_0
0x5484	0x0103      	MOVLB       3
0x5486	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5488	0x0E02      	MOVLW       hi_addr(?lstr24_FirmV_0_7_0)
0x548A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x548C	0xF00BECFA  	CALL        _Logger, 0
L_State4136:
;FirmV_0_7_0.c,770 :: 		if(CheckTask(11))
0x5490	0x0E0B      	MOVLW       11
0x5492	0x0103      	MOVLB       3
0x5494	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x5496	0xF007EC58  	CALL        _CheckTask, 0
0x549A	0x5200      	MOVF        R0, 1 
0x549C	0xE01F      	BZ          L_State4137
;FirmV_0_7_0.c,771 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S4 M2 Overload Check");}
0x549E	0x0E01      	MOVLW       1
0x54A0	0x0101      	MOVLB       1
0x54A2	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
0x54A4	0x0E02      	MOVLW       2
0x54A6	0x0103      	MOVLB       3
0x54A8	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x54AA	0xF007EC49  	CALL        _OverloadInit, 0
0x54AE	0x0EE4      	MOVLW       ?ICS?lstr25_FirmV_0_7_0
0x54B0	0x6EF6      	MOVWF       4086 
0x54B2	0x0E70      	MOVLW       hi_addr(?ICS?lstr25_FirmV_0_7_0)
0x54B4	0x6EF7      	MOVWF       TBLPTRH 
0x54B6	0x0E00      	MOVLW       higher_addr(?ICS?lstr25_FirmV_0_7_0)
0x54B8	0x6EF8      	MOVWF       TBLPTRU 
0x54BA	0x0E68      	MOVLW       ?lstr25_FirmV_0_7_0
0x54BC	0x6EE1      	MOVWF       FSR1L 
0x54BE	0x0E02      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x54C0	0x6EE2      	MOVWF       FSR1H 
0x54C2	0x0E15      	MOVLW       21
0x54C4	0x6E00      	MOVWF       R0 
0x54C6	0x0E01      	MOVLW       1
0x54C8	0x6E01      	MOVWF       R1 
0x54CA	0xF004EC95  	CALL        ___CC2DW, 0
0x54CE	0x0E68      	MOVLW       ?lstr25_FirmV_0_7_0
0x54D0	0x0103      	MOVLB       3
0x54D2	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x54D4	0x0E02      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x54D6	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x54D8	0xF00BECFA  	CALL        _Logger, 0
L_State4137:
;FirmV_0_7_0.c,773 :: 		if(CheckTask(5))
0x54DC	0x0E05      	MOVLW       5
0x54DE	0x0103      	MOVLB       3
0x54E0	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x54E2	0xF007EC58  	CALL        _CheckTask, 0
0x54E6	0x5200      	MOVF        R0, 1 
0x54E8	0xE030      	BZ          L_State4138
;FirmV_0_7_0.c,774 :: 		{SetMotorSpeed(1,Motor2FullSpeed); OverloadCheckFlag1=0; M1isSlow=0;Logger("S4 M1 Speed UP");}
0x54EA	0x0E01      	MOVLW       1
0x54EC	0x0103      	MOVLB       3
0x54EE	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x54F0	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x54F4	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x54F8	0x0101      	MOVLB       1
0x54FA	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x54FC	0x0100      	MOVLB       0
0x54FE	0x6B97      	CLRF        _M1isSlow, 1
0x5500	0x0E53      	MOVLW       83
0x5502	0x0102      	MOVLB       2
0x5504	0x6F7D      	MOVWF       ?lstr26_FirmV_0_7_0, 1
0x5506	0x0E34      	MOVLW       52
0x5508	0x6F7E      	MOVWF       ?lstr26_FirmV_0_7_0+1, 1
0x550A	0x0E20      	MOVLW       32
0x550C	0x6F7F      	MOVWF       ?lstr26_FirmV_0_7_0+2, 1
0x550E	0x0E4D      	MOVLW       77
0x5510	0x6F80      	MOVWF       ?lstr26_FirmV_0_7_0+3, 1
0x5512	0x0E31      	MOVLW       49
0x5514	0x6F81      	MOVWF       ?lstr26_FirmV_0_7_0+4, 1
0x5516	0x0E20      	MOVLW       32
0x5518	0x6F82      	MOVWF       ?lstr26_FirmV_0_7_0+5, 1
0x551A	0x0E53      	MOVLW       83
0x551C	0x6F83      	MOVWF       ?lstr26_FirmV_0_7_0+6, 1
0x551E	0x0E70      	MOVLW       112
0x5520	0x6F84      	MOVWF       ?lstr26_FirmV_0_7_0+7, 1
0x5522	0x0E65      	MOVLW       101
0x5524	0x6F85      	MOVWF       ?lstr26_FirmV_0_7_0+8, 1
0x5526	0x0E65      	MOVLW       101
0x5528	0x6F86      	MOVWF       ?lstr26_FirmV_0_7_0+9, 1
0x552A	0x0E64      	MOVLW       100
0x552C	0x6F87      	MOVWF       ?lstr26_FirmV_0_7_0+10, 1
0x552E	0x0E20      	MOVLW       32
0x5530	0x6F88      	MOVWF       ?lstr26_FirmV_0_7_0+11, 1
0x5532	0x0E55      	MOVLW       85
0x5534	0x6F89      	MOVWF       ?lstr26_FirmV_0_7_0+12, 1
0x5536	0x0E50      	MOVLW       80
0x5538	0x6F8A      	MOVWF       ?lstr26_FirmV_0_7_0+13, 1
0x553A	0x6B8B      	CLRF        ?lstr26_FirmV_0_7_0+14, 1
0x553C	0x0E7D      	MOVLW       ?lstr26_FirmV_0_7_0
0x553E	0x0103      	MOVLB       3
0x5540	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5542	0x0E02      	MOVLW       hi_addr(?lstr26_FirmV_0_7_0)
0x5544	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5546	0xF00BECFA  	CALL        _Logger, 0
L_State4138:
;FirmV_0_7_0.c,776 :: 		if(CheckTask(7))
0x554A	0x0E07      	MOVLW       7
0x554C	0x0103      	MOVLB       3
0x554E	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x5550	0xF007EC58  	CALL        _CheckTask, 0
0x5554	0x5200      	MOVF        R0, 1 
0x5556	0xE022      	BZ          L_State4139
;FirmV_0_7_0.c,777 :: 		{SetMotorSpeed(0,Motor2FullSpeed); OverloadCheckFlag2=0; M1isSlow=1;Logger("S4 M1 Speed Down");}
0x5558	0x0103      	MOVLB       3
0x555A	0x6B4F      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x555C	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x5560	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x5564	0x0101      	MOVLB       1
0x5566	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x5568	0x0E01      	MOVLW       1
0x556A	0x0100      	MOVLB       0
0x556C	0x6F97      	MOVWF       _M1isSlow, 1
0x556E	0x0E08      	MOVLW       ?ICS?lstr27_FirmV_0_7_0
0x5570	0x6EF6      	MOVWF       4086 
0x5572	0x0E71      	MOVLW       hi_addr(?ICS?lstr27_FirmV_0_7_0)
0x5574	0x6EF7      	MOVWF       TBLPTRH 
0x5576	0x0E00      	MOVLW       higher_addr(?ICS?lstr27_FirmV_0_7_0)
0x5578	0x6EF8      	MOVWF       TBLPTRU 
0x557A	0x0E8C      	MOVLW       ?lstr27_FirmV_0_7_0
0x557C	0x6EE1      	MOVWF       FSR1L 
0x557E	0x0E02      	MOVLW       hi_addr(?lstr27_FirmV_0_7_0)
0x5580	0x6EE2      	MOVWF       FSR1H 
0x5582	0x0E11      	MOVLW       17
0x5584	0x6E00      	MOVWF       R0 
0x5586	0x0E01      	MOVLW       1
0x5588	0x6E01      	MOVWF       R1 
0x558A	0xF004EC95  	CALL        ___CC2DW, 0
0x558E	0x0E8C      	MOVLW       ?lstr27_FirmV_0_7_0
0x5590	0x0103      	MOVLB       3
0x5592	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5594	0x0E02      	MOVLW       hi_addr(?lstr27_FirmV_0_7_0)
0x5596	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5598	0xF00BECFA  	CALL        _Logger, 0
L_State4139:
;FirmV_0_7_0.c,779 :: 		if(CheckTask(6))
0x559C	0x0E06      	MOVLW       6
0x559E	0x0103      	MOVLB       3
0x55A0	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x55A2	0xF007EC58  	CALL        _CheckTask, 0
0x55A6	0x5200      	MOVF        R0, 1 
0x55A8	0xE02E      	BZ          L_State4140
;FirmV_0_7_0.c,780 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S4 M2 Speed UP");}
0x55AA	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x55AE	0x0E01      	MOVLW       1
0x55B0	0x0103      	MOVLB       3
0x55B2	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x55B4	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x55B8	0x0100      	MOVLB       0
0x55BA	0x6B98      	CLRF        _M2isSlow, 1
0x55BC	0x0E53      	MOVLW       83
0x55BE	0x0102      	MOVLB       2
0x55C0	0x6F9D      	MOVWF       ?lstr28_FirmV_0_7_0, 1
0x55C2	0x0E34      	MOVLW       52
0x55C4	0x6F9E      	MOVWF       ?lstr28_FirmV_0_7_0+1, 1
0x55C6	0x0E20      	MOVLW       32
0x55C8	0x6F9F      	MOVWF       ?lstr28_FirmV_0_7_0+2, 1
0x55CA	0x0E4D      	MOVLW       77
0x55CC	0x6FA0      	MOVWF       ?lstr28_FirmV_0_7_0+3, 1
0x55CE	0x0E32      	MOVLW       50
0x55D0	0x6FA1      	MOVWF       ?lstr28_FirmV_0_7_0+4, 1
0x55D2	0x0E20      	MOVLW       32
0x55D4	0x6FA2      	MOVWF       ?lstr28_FirmV_0_7_0+5, 1
0x55D6	0x0E53      	MOVLW       83
0x55D8	0x6FA3      	MOVWF       ?lstr28_FirmV_0_7_0+6, 1
0x55DA	0x0E70      	MOVLW       112
0x55DC	0x6FA4      	MOVWF       ?lstr28_FirmV_0_7_0+7, 1
0x55DE	0x0E65      	MOVLW       101
0x55E0	0x6FA5      	MOVWF       ?lstr28_FirmV_0_7_0+8, 1
0x55E2	0x0E65      	MOVLW       101
0x55E4	0x6FA6      	MOVWF       ?lstr28_FirmV_0_7_0+9, 1
0x55E6	0x0E64      	MOVLW       100
0x55E8	0x6FA7      	MOVWF       ?lstr28_FirmV_0_7_0+10, 1
0x55EA	0x0E20      	MOVLW       32
0x55EC	0x6FA8      	MOVWF       ?lstr28_FirmV_0_7_0+11, 1
0x55EE	0x0E55      	MOVLW       85
0x55F0	0x6FA9      	MOVWF       ?lstr28_FirmV_0_7_0+12, 1
0x55F2	0x0E50      	MOVLW       80
0x55F4	0x6FAA      	MOVWF       ?lstr28_FirmV_0_7_0+13, 1
0x55F6	0x6BAB      	CLRF        ?lstr28_FirmV_0_7_0+14, 1
0x55F8	0x0E9D      	MOVLW       ?lstr28_FirmV_0_7_0
0x55FA	0x0103      	MOVLB       3
0x55FC	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x55FE	0x0E02      	MOVLW       hi_addr(?lstr28_FirmV_0_7_0)
0x5600	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5602	0xF00BECFA  	CALL        _Logger, 0
L_State4140:
;FirmV_0_7_0.c,782 :: 		if(CheckTask(8))
0x5606	0x0E08      	MOVLW       8
0x5608	0x0103      	MOVLB       3
0x560A	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x560C	0xF007EC58  	CALL        _CheckTask, 0
0x5610	0x5200      	MOVF        R0, 1 
0x5612	0xE020      	BZ          L_State4141
;FirmV_0_7_0.c,783 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S4 M2 Speed Down");}
0x5614	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x5618	0x0103      	MOVLB       3
0x561A	0x6B50      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x561C	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x5620	0x0E01      	MOVLW       1
0x5622	0x0100      	MOVLB       0
0x5624	0x6F98      	MOVWF       _M2isSlow, 1
0x5626	0x0E28      	MOVLW       ?ICS?lstr29_FirmV_0_7_0
0x5628	0x6EF6      	MOVWF       4086 
0x562A	0x0E71      	MOVLW       hi_addr(?ICS?lstr29_FirmV_0_7_0)
0x562C	0x6EF7      	MOVWF       TBLPTRH 
0x562E	0x0E00      	MOVLW       higher_addr(?ICS?lstr29_FirmV_0_7_0)
0x5630	0x6EF8      	MOVWF       TBLPTRU 
0x5632	0x0EAC      	MOVLW       ?lstr29_FirmV_0_7_0
0x5634	0x6EE1      	MOVWF       FSR1L 
0x5636	0x0E02      	MOVLW       hi_addr(?lstr29_FirmV_0_7_0)
0x5638	0x6EE2      	MOVWF       FSR1H 
0x563A	0x0E11      	MOVLW       17
0x563C	0x6E00      	MOVWF       R0 
0x563E	0x0E01      	MOVLW       1
0x5640	0x6E01      	MOVWF       R1 
0x5642	0xF004EC95  	CALL        ___CC2DW, 0
0x5646	0x0EAC      	MOVLW       ?lstr29_FirmV_0_7_0
0x5648	0x0103      	MOVLB       3
0x564A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x564C	0x0E02      	MOVLW       hi_addr(?lstr29_FirmV_0_7_0)
0x564E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5650	0xF00BECFA  	CALL        _Logger, 0
L_State4141:
;FirmV_0_7_0.c,785 :: 		if(CheckTask(3))
0x5654	0x0E03      	MOVLW       3
0x5656	0x0103      	MOVLB       3
0x5658	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x565A	0xF007EC58  	CALL        _CheckTask, 0
0x565E	0x5200      	MOVF        R0, 1 
0x5660	0xE028      	BZ          L_State4142
;FirmV_0_7_0.c,786 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S4 M1 Stoped");}
0x5662	0x0100      	MOVLB       0
0x5664	0x9199      	BCF         _CloseDone, 0, 1
0x5666	0x0E01      	MOVLW       1
0x5668	0x0103      	MOVLB       3
0x566A	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x566C	0xF007EC3B  	CALL        _StopMotor, 0
0x5670	0x0E53      	MOVLW       83
0x5672	0x0102      	MOVLB       2
0x5674	0x6FBD      	MOVWF       ?lstr30_FirmV_0_7_0, 1
0x5676	0x0E34      	MOVLW       52
0x5678	0x6FBE      	MOVWF       ?lstr30_FirmV_0_7_0+1, 1
0x567A	0x0E20      	MOVLW       32
0x567C	0x6FBF      	MOVWF       ?lstr30_FirmV_0_7_0+2, 1
0x567E	0x0E4D      	MOVLW       77
0x5680	0x6FC0      	MOVWF       ?lstr30_FirmV_0_7_0+3, 1
0x5682	0x0E31      	MOVLW       49
0x5684	0x6FC1      	MOVWF       ?lstr30_FirmV_0_7_0+4, 1
0x5686	0x0E20      	MOVLW       32
0x5688	0x6FC2      	MOVWF       ?lstr30_FirmV_0_7_0+5, 1
0x568A	0x0E53      	MOVLW       83
0x568C	0x6FC3      	MOVWF       ?lstr30_FirmV_0_7_0+6, 1
0x568E	0x0E74      	MOVLW       116
0x5690	0x6FC4      	MOVWF       ?lstr30_FirmV_0_7_0+7, 1
0x5692	0x0E6F      	MOVLW       111
0x5694	0x6FC5      	MOVWF       ?lstr30_FirmV_0_7_0+8, 1
0x5696	0x0E70      	MOVLW       112
0x5698	0x6FC6      	MOVWF       ?lstr30_FirmV_0_7_0+9, 1
0x569A	0x0E65      	MOVLW       101
0x569C	0x6FC7      	MOVWF       ?lstr30_FirmV_0_7_0+10, 1
0x569E	0x0E64      	MOVLW       100
0x56A0	0x6FC8      	MOVWF       ?lstr30_FirmV_0_7_0+11, 1
0x56A2	0x6BC9      	CLRF        ?lstr30_FirmV_0_7_0+12, 1
0x56A4	0x0EBD      	MOVLW       ?lstr30_FirmV_0_7_0
0x56A6	0x0103      	MOVLB       3
0x56A8	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x56AA	0x0E02      	MOVLW       hi_addr(?lstr30_FirmV_0_7_0)
0x56AC	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x56AE	0xF00BECFA  	CALL        _Logger, 0
L_State4142:
;FirmV_0_7_0.c,788 :: 		if(CheckTask(4))
0x56B2	0x0E04      	MOVLW       4
0x56B4	0x0103      	MOVLB       3
0x56B6	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x56B8	0xF007EC58  	CALL        _CheckTask, 0
0x56BC	0x5200      	MOVF        R0, 1 
0x56BE	0xE028      	BZ          L_State4143
;FirmV_0_7_0.c,789 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S4 M2 Stoped");}
0x56C0	0x0100      	MOVLB       0
0x56C2	0x9399      	BCF         _CloseDone, 1, 1
0x56C4	0x0E02      	MOVLW       2
0x56C6	0x0103      	MOVLB       3
0x56C8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x56CA	0xF007EC3B  	CALL        _StopMotor, 0
0x56CE	0x0E53      	MOVLW       83
0x56D0	0x0102      	MOVLB       2
0x56D2	0x6FCA      	MOVWF       ?lstr31_FirmV_0_7_0, 1
0x56D4	0x0E34      	MOVLW       52
0x56D6	0x6FCB      	MOVWF       ?lstr31_FirmV_0_7_0+1, 1
0x56D8	0x0E20      	MOVLW       32
0x56DA	0x6FCC      	MOVWF       ?lstr31_FirmV_0_7_0+2, 1
0x56DC	0x0E4D      	MOVLW       77
0x56DE	0x6FCD      	MOVWF       ?lstr31_FirmV_0_7_0+3, 1
0x56E0	0x0E32      	MOVLW       50
0x56E2	0x6FCE      	MOVWF       ?lstr31_FirmV_0_7_0+4, 1
0x56E4	0x0E20      	MOVLW       32
0x56E6	0x6FCF      	MOVWF       ?lstr31_FirmV_0_7_0+5, 1
0x56E8	0x0E53      	MOVLW       83
0x56EA	0x6FD0      	MOVWF       ?lstr31_FirmV_0_7_0+6, 1
0x56EC	0x0E74      	MOVLW       116
0x56EE	0x6FD1      	MOVWF       ?lstr31_FirmV_0_7_0+7, 1
0x56F0	0x0E6F      	MOVLW       111
0x56F2	0x6FD2      	MOVWF       ?lstr31_FirmV_0_7_0+8, 1
0x56F4	0x0E70      	MOVLW       112
0x56F6	0x6FD3      	MOVWF       ?lstr31_FirmV_0_7_0+9, 1
0x56F8	0x0E65      	MOVLW       101
0x56FA	0x6FD4      	MOVWF       ?lstr31_FirmV_0_7_0+10, 1
0x56FC	0x0E64      	MOVLW       100
0x56FE	0x6FD5      	MOVWF       ?lstr31_FirmV_0_7_0+11, 1
0x5700	0x6BD6      	CLRF        ?lstr31_FirmV_0_7_0+12, 1
0x5702	0x0ECA      	MOVLW       ?lstr31_FirmV_0_7_0
0x5704	0x0103      	MOVLB       3
0x5706	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5708	0x0E02      	MOVLW       hi_addr(?lstr31_FirmV_0_7_0)
0x570A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x570C	0xF00BECFA  	CALL        _Logger, 0
L_State4143:
;FirmV_0_7_0.c,791 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x5710	0x0101      	MOVLB       1
0x5712	0x5116      	MOVF        _OverloadCheckFlag1, 0, 1
0x5714	0x0A01      	XORLW       1
0x5716	0xE151      	BNZ         L_State4146
0x5718	0xA176      	BTFSS       _Events+5, 0, 1
0x571A	0xD04F      	BRA         L_State4146
0x571C	0x0100      	MOVLB       0
0x571E	0x5197      	MOVF        _M1isSlow, 0, 1
0x5720	0x0A00      	XORLW       0
0x5722	0xE14B      	BNZ         L_State4146
L__State4642:
;FirmV_0_7_0.c,792 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M1 Overloaded");ClearTasks(9);
0x5724	0x0E01      	MOVLW       1
0x5726	0x0103      	MOVLB       3
0x5728	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x572A	0xF007EC3B  	CALL        _StopMotor, 0
0x572E	0x0E02      	MOVLW       2
0x5730	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x5732	0xF007EC3B  	CALL        _StopMotor, 0
0x5736	0x0E06      	MOVLW       6
0x5738	0x0100      	MOVLB       0
0x573A	0x6FF2      	MOVWF       _State, 1
0x573C	0x0101      	MOVLB       1
0x573E	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x5740	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x5742	0x0E53      	MOVLW       ?ICS?lstr32_FirmV_0_7_0
0x5744	0x6EF6      	MOVWF       4086 
0x5746	0x0E71      	MOVLW       hi_addr(?ICS?lstr32_FirmV_0_7_0)
0x5748	0x6EF7      	MOVWF       TBLPTRH 
0x574A	0x0E00      	MOVLW       higher_addr(?ICS?lstr32_FirmV_0_7_0)
0x574C	0x6EF8      	MOVWF       TBLPTRU 
0x574E	0x0ED7      	MOVLW       ?lstr32_FirmV_0_7_0
0x5750	0x6EE1      	MOVWF       FSR1L 
0x5752	0x0E02      	MOVLW       hi_addr(?lstr32_FirmV_0_7_0)
0x5754	0x6EE2      	MOVWF       FSR1H 
0x5756	0x0E11      	MOVLW       17
0x5758	0x6E00      	MOVWF       R0 
0x575A	0x0E01      	MOVLW       1
0x575C	0x6E01      	MOVWF       R1 
0x575E	0xF004EC95  	CALL        ___CC2DW, 0
0x5762	0x0ED7      	MOVLW       ?lstr32_FirmV_0_7_0
0x5764	0x0103      	MOVLB       3
0x5766	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5768	0x0E02      	MOVLW       hi_addr(?lstr32_FirmV_0_7_0)
0x576A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x576C	0xF00BECFA  	CALL        _Logger, 0
0x5770	0x0E09      	MOVLW       9
0x5772	0x0103      	MOVLB       3
0x5774	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5776	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,793 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;}
0x577A	0x0EF3      	MOVLW       _LCDLine1
0x577C	0x0105      	MOVLB       5
0x577E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5780	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5782	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5784	0x0E4D      	MOVLW       __stop
0x5786	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5788	0x0E00      	MOVLW       hi_addr(__stop)
0x578A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x578C	0x0E10      	MOVLW       16
0x578E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5790	0x0E00      	MOVLW       0
0x5792	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5794	0xF000ECFC  	CALL        _memcpy, 0
0x5798	0x0E04      	MOVLW       _LCDLine2
0x579A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x579C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x579E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x57A0	0x0E5E      	MOVLW       __errOverload
0x57A2	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x57A4	0x0E00      	MOVLW       hi_addr(__errOverload)
0x57A6	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x57A8	0x0E10      	MOVLW       16
0x57AA	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x57AC	0x0E00      	MOVLW       0
0x57AE	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x57B0	0xF000ECFC  	CALL        _memcpy, 0
0x57B4	0x0E01      	MOVLW       1
0x57B6	0x0101      	MOVLB       1
0x57B8	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4146:
0x57BA	0x0101      	MOVLB       1
;FirmV_0_7_0.c,795 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x57BC	0x5115      	MOVF        _OverloadCheckFlag2, 0, 1
0x57BE	0x0A01      	XORLW       1
0x57C0	0xE151      	BNZ         L_State4149
0x57C2	0xA376      	BTFSS       _Events+5, 1, 1
0x57C4	0xD04F      	BRA         L_State4149
0x57C6	0x0100      	MOVLB       0
0x57C8	0x5198      	MOVF        _M2isSlow, 0, 1
0x57CA	0x0A00      	XORLW       0
0x57CC	0xE14B      	BNZ         L_State4149
L__State4641:
;FirmV_0_7_0.c,796 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M2 Overloaded");ClearTasks(9);
0x57CE	0x0E01      	MOVLW       1
0x57D0	0x0103      	MOVLB       3
0x57D2	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x57D4	0xF007EC3B  	CALL        _StopMotor, 0
0x57D8	0x0E02      	MOVLW       2
0x57DA	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x57DC	0xF007EC3B  	CALL        _StopMotor, 0
0x57E0	0x0E06      	MOVLW       6
0x57E2	0x0100      	MOVLB       0
0x57E4	0x6FF2      	MOVWF       _State, 1
0x57E6	0x0101      	MOVLB       1
0x57E8	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x57EA	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x57EC	0x0E64      	MOVLW       ?ICS?lstr33_FirmV_0_7_0
0x57EE	0x6EF6      	MOVWF       4086 
0x57F0	0x0E71      	MOVLW       hi_addr(?ICS?lstr33_FirmV_0_7_0)
0x57F2	0x6EF7      	MOVWF       TBLPTRH 
0x57F4	0x0E00      	MOVLW       higher_addr(?ICS?lstr33_FirmV_0_7_0)
0x57F6	0x6EF8      	MOVWF       TBLPTRU 
0x57F8	0x0EE8      	MOVLW       ?lstr33_FirmV_0_7_0
0x57FA	0x6EE1      	MOVWF       FSR1L 
0x57FC	0x0E02      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x57FE	0x6EE2      	MOVWF       FSR1H 
0x5800	0x0E11      	MOVLW       17
0x5802	0x6E00      	MOVWF       R0 
0x5804	0x0E01      	MOVLW       1
0x5806	0x6E01      	MOVWF       R1 
0x5808	0xF004EC95  	CALL        ___CC2DW, 0
0x580C	0x0EE8      	MOVLW       ?lstr33_FirmV_0_7_0
0x580E	0x0103      	MOVLB       3
0x5810	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5812	0x0E02      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x5814	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5816	0xF00BECFA  	CALL        _Logger, 0
0x581A	0x0E09      	MOVLW       9
0x581C	0x0103      	MOVLB       3
0x581E	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5820	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,797 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;}
0x5824	0x0EF3      	MOVLW       _LCDLine1
0x5826	0x0105      	MOVLB       5
0x5828	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x582A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x582C	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x582E	0x0E4D      	MOVLW       __stop
0x5830	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5832	0x0E00      	MOVLW       hi_addr(__stop)
0x5834	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5836	0x0E10      	MOVLW       16
0x5838	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x583A	0x0E00      	MOVLW       0
0x583C	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x583E	0xF000ECFC  	CALL        _memcpy, 0
0x5842	0x0E04      	MOVLW       _LCDLine2
0x5844	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5846	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x5848	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x584A	0x0E5E      	MOVLW       __errOverload
0x584C	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x584E	0x0E00      	MOVLW       hi_addr(__errOverload)
0x5850	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5852	0x0E10      	MOVLW       16
0x5854	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5856	0x0E00      	MOVLW       0
0x5858	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x585A	0xF000ECFC  	CALL        _memcpy, 0
0x585E	0x0E01      	MOVLW       1
0x5860	0x0101      	MOVLB       1
0x5862	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4149:
;FirmV_0_7_0.c,799 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x5864	0x0102      	MOVLB       2
0x5866	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x5868	0x0A00      	XORLW       0
0x586A	0xE005      	BZ          L__State4640
0x586C	0x0100      	MOVLB       0
0x586E	0x519A      	MOVF        _ActiveDoors, 0, 1
0x5870	0x0A01      	XORLW       1
0x5872	0xE001      	BZ          L__State4640
0x5874	0xD002      	BRA         L_State4152
L__State4640:
0x5876	0x0100      	MOVLB       0
;FirmV_0_7_0.c,800 :: 		CloseDone.b1=0;
0x5878	0x9399      	BCF         _CloseDone, 1, 1
L_State4152:
;FirmV_0_7_0.c,802 :: 		if((Events.Photocell.b0==1))
0x587A	0x0101      	MOVLB       1
0x587C	0xA177      	BTFSS       _Events+6, 0, 1
0x587E	0xD04D      	BRA         L_State4153
;FirmV_0_7_0.c,803 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S4 Photocell Int");ClearTasks(9);
0x5880	0x0E01      	MOVLW       1
0x5882	0x0103      	MOVLB       3
0x5884	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x5886	0xF007EC3B  	CALL        _StopMotor, 0
0x588A	0x0E02      	MOVLW       2
0x588C	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x588E	0xF007EC3B  	CALL        _StopMotor, 0
0x5892	0x0101      	MOVLB       1
0x5894	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x5896	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x5898	0x0E06      	MOVLW       6
0x589A	0x0100      	MOVLB       0
0x589C	0x6FF2      	MOVWF       _State, 1
0x589E	0x0E01      	MOVLW       1
0x58A0	0x6E6F      	MOVWF       _PhotocellOpenFlag 
0x58A2	0x0E75      	MOVLW       ?ICS?lstr34_FirmV_0_7_0
0x58A4	0x6EF6      	MOVWF       4086 
0x58A6	0x0E71      	MOVLW       hi_addr(?ICS?lstr34_FirmV_0_7_0)
0x58A8	0x6EF7      	MOVWF       TBLPTRH 
0x58AA	0x0E00      	MOVLW       higher_addr(?ICS?lstr34_FirmV_0_7_0)
0x58AC	0x6EF8      	MOVWF       TBLPTRU 
0x58AE	0x0EF9      	MOVLW       ?lstr34_FirmV_0_7_0
0x58B0	0x6EE1      	MOVWF       FSR1L 
0x58B2	0x0E02      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x58B4	0x6EE2      	MOVWF       FSR1H 
0x58B6	0x0E11      	MOVLW       17
0x58B8	0x6E00      	MOVWF       R0 
0x58BA	0x0E01      	MOVLW       1
0x58BC	0x6E01      	MOVWF       R1 
0x58BE	0xF004EC95  	CALL        ___CC2DW, 0
0x58C2	0x0EF9      	MOVLW       ?lstr34_FirmV_0_7_0
0x58C4	0x0103      	MOVLB       3
0x58C6	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x58C8	0x0E02      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x58CA	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x58CC	0xF00BECFA  	CALL        _Logger, 0
0x58D0	0x0E09      	MOVLW       9
0x58D2	0x0103      	MOVLB       3
0x58D4	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x58D6	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,804 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;}
0x58DA	0x0EF3      	MOVLW       _LCDLine1
0x58DC	0x0105      	MOVLB       5
0x58DE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x58E0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x58E2	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x58E4	0x0E4D      	MOVLW       __stop
0x58E6	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x58E8	0x0E00      	MOVLW       hi_addr(__stop)
0x58EA	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x58EC	0x0E10      	MOVLW       16
0x58EE	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x58F0	0x0E00      	MOVLW       0
0x58F2	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x58F4	0xF000ECFC  	CALL        _memcpy, 0
0x58F8	0x0E04      	MOVLW       _LCDLine2
0x58FA	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x58FC	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x58FE	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5900	0x0E1A      	MOVLW       __errPhoto
0x5902	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5904	0x0E00      	MOVLW       hi_addr(__errPhoto)
0x5906	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5908	0x0E10      	MOVLW       16
0x590A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x590C	0x0E00      	MOVLW       0
0x590E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5910	0xF000ECFC  	CALL        _memcpy, 0
0x5914	0x0E01      	MOVLW       1
0x5916	0x0101      	MOVLB       1
0x5918	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4153:
;FirmV_0_7_0.c,806 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x591A	0x5178      	MOVF        _Events+7, 0, 1
0x591C	0x0A01      	XORLW       1
0x591E	0xE14E      	BNZ         L_State4156
0x5920	0x0102      	MOVLB       2
0x5922	0x530F      	MOVF        _LimiterEnable, 1, 1
0x5924	0xE04B      	BZ          L_State4156
L__State4639:
;FirmV_0_7_0.c,807 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Limit Switch Stop");ClearTasks(9);
0x5926	0x0E01      	MOVLW       1
0x5928	0x0103      	MOVLB       3
0x592A	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x592C	0xF007EC3B  	CALL        _StopMotor, 0
0x5930	0x0E02      	MOVLW       2
0x5932	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x5934	0xF007EC3B  	CALL        _StopMotor, 0
0x5938	0x0E06      	MOVLW       6
0x593A	0x0100      	MOVLB       0
0x593C	0x6FF2      	MOVWF       _State, 1
0x593E	0x0101      	MOVLB       1
0x5940	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x5942	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x5944	0x0E86      	MOVLW       ?ICS?lstr35_FirmV_0_7_0
0x5946	0x6EF6      	MOVWF       4086 
0x5948	0x0E71      	MOVLW       hi_addr(?ICS?lstr35_FirmV_0_7_0)
0x594A	0x6EF7      	MOVWF       TBLPTRH 
0x594C	0x0E00      	MOVLW       higher_addr(?ICS?lstr35_FirmV_0_7_0)
0x594E	0x6EF8      	MOVWF       TBLPTRU 
0x5950	0x0E0A      	MOVLW       ?lstr35_FirmV_0_7_0
0x5952	0x6EE1      	MOVWF       FSR1L 
0x5954	0x0E03      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x5956	0x6EE2      	MOVWF       FSR1H 
0x5958	0x0E15      	MOVLW       21
0x595A	0x6E00      	MOVWF       R0 
0x595C	0x0E01      	MOVLW       1
0x595E	0x6E01      	MOVWF       R1 
0x5960	0xF004EC95  	CALL        ___CC2DW, 0
0x5964	0x0E0A      	MOVLW       ?lstr35_FirmV_0_7_0
0x5966	0x0103      	MOVLB       3
0x5968	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x596A	0x0E03      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x596C	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x596E	0xF00BECFA  	CALL        _Logger, 0
0x5972	0x0E09      	MOVLW       9
0x5974	0x0103      	MOVLB       3
0x5976	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5978	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,808 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;}
0x597C	0x0EF3      	MOVLW       _LCDLine1
0x597E	0x0105      	MOVLB       5
0x5980	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5982	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5984	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5986	0x0E4D      	MOVLW       __stop
0x5988	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x598A	0x0E00      	MOVLW       hi_addr(__stop)
0x598C	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x598E	0x0E10      	MOVLW       16
0x5990	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5992	0x0E00      	MOVLW       0
0x5994	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5996	0xF000ECFC  	CALL        _memcpy, 0
0x599A	0x0E04      	MOVLW       _LCDLine2
0x599C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x599E	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x59A0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x59A2	0x0E2B      	MOVLW       __errLimit
0x59A4	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x59A6	0x0E00      	MOVLW       hi_addr(__errLimit)
0x59A8	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x59AA	0x0E10      	MOVLW       16
0x59AC	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x59AE	0x0E00      	MOVLW       0
0x59B0	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x59B2	0xF000ECFC  	CALL        _memcpy, 0
0x59B6	0x0E01      	MOVLW       1
0x59B8	0x0101      	MOVLB       1
0x59BA	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4156:
0x59BC	0x0101      	MOVLB       1
;FirmV_0_7_0.c,810 :: 		if((Events.Remote!=0))
0x59BE	0x5175      	MOVF        _Events+4, 0, 1
0x59C0	0x0A00      	XORLW       0
0x59C2	0xE04B      	BZ          L_State4157
;FirmV_0_7_0.c,811 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Remote Pressed");ClearTasks(9);
0x59C4	0x0E01      	MOVLW       1
0x59C6	0x0103      	MOVLB       3
0x59C8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x59CA	0xF007EC3B  	CALL        _StopMotor, 0
0x59CE	0x0E02      	MOVLW       2
0x59D0	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x59D2	0xF007EC3B  	CALL        _StopMotor, 0
0x59D6	0x0E06      	MOVLW       6
0x59D8	0x0100      	MOVLB       0
0x59DA	0x6FF2      	MOVWF       _State, 1
0x59DC	0x0101      	MOVLB       1
0x59DE	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x59E0	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x59E2	0x0E9B      	MOVLW       ?ICS?lstr36_FirmV_0_7_0
0x59E4	0x6EF6      	MOVWF       4086 
0x59E6	0x0E71      	MOVLW       hi_addr(?ICS?lstr36_FirmV_0_7_0)
0x59E8	0x6EF7      	MOVWF       TBLPTRH 
0x59EA	0x0E00      	MOVLW       higher_addr(?ICS?lstr36_FirmV_0_7_0)
0x59EC	0x6EF8      	MOVWF       TBLPTRU 
0x59EE	0x0E1F      	MOVLW       ?lstr36_FirmV_0_7_0
0x59F0	0x6EE1      	MOVWF       FSR1L 
0x59F2	0x0E03      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x59F4	0x6EE2      	MOVWF       FSR1H 
0x59F6	0x0E12      	MOVLW       18
0x59F8	0x6E00      	MOVWF       R0 
0x59FA	0x0E01      	MOVLW       1
0x59FC	0x6E01      	MOVWF       R1 
0x59FE	0xF004EC95  	CALL        ___CC2DW, 0
0x5A02	0x0E1F      	MOVLW       ?lstr36_FirmV_0_7_0
0x5A04	0x0103      	MOVLB       3
0x5A06	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5A08	0x0E03      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x5A0A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5A0C	0xF00BECFA  	CALL        _Logger, 0
0x5A10	0x0E09      	MOVLW       9
0x5A12	0x0103      	MOVLB       3
0x5A14	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5A16	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,812 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;}
0x5A1A	0x0EF3      	MOVLW       _LCDLine1
0x5A1C	0x0105      	MOVLB       5
0x5A1E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5A20	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5A22	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5A24	0x0E4D      	MOVLW       __stop
0x5A26	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5A28	0x0E00      	MOVLW       hi_addr(__stop)
0x5A2A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5A2C	0x0E10      	MOVLW       16
0x5A2E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5A30	0x0E00      	MOVLW       0
0x5A32	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5A34	0xF000ECFC  	CALL        _memcpy, 0
0x5A38	0x0E04      	MOVLW       _LCDLine2
0x5A3A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5A3C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x5A3E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5A40	0x0E3C      	MOVLW       __errRemote
0x5A42	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5A44	0x0E00      	MOVLW       hi_addr(__errRemote)
0x5A46	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5A48	0x0E10      	MOVLW       16
0x5A4A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5A4C	0x0E00      	MOVLW       0
0x5A4E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5A50	0xF000ECFC  	CALL        _memcpy, 0
0x5A54	0x0E01      	MOVLW       1
0x5A56	0x0101      	MOVLB       1
0x5A58	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4157:
;FirmV_0_7_0.c,814 :: 		if(CloseDone==0)
0x5A5A	0x0100      	MOVLB       0
0x5A5C	0x5199      	MOVF        _CloseDone, 0, 1
0x5A5E	0x0A00      	XORLW       0
0x5A60	0xE128      	BNZ         L_State4158
;FirmV_0_7_0.c,815 :: 		{State=1; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_close,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x5A62	0x0E01      	MOVLW       1
0x5A64	0x6FF2      	MOVWF       _State, 1
0x5A66	0x6BBE      	CLRF        _PassFlag, 1
0x5A68	0x0E09      	MOVLW       9
0x5A6A	0x0103      	MOVLB       3
0x5A6C	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5A6E	0xF006EC91  	CALL        _ClearTasks, 0
0x5A72	0x0EF3      	MOVLW       _LCDLine1
0x5A74	0x0105      	MOVLB       5
0x5A76	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5A78	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5A7A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5A7C	0x0E73      	MOVLW       __close
0x5A7E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5A80	0x0E00      	MOVLW       hi_addr(__close)
0x5A82	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5A84	0x0E10      	MOVLW       16
0x5A86	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5A88	0x0E00      	MOVLW       0
0x5A8A	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5A8C	0xF000ECFC  	CALL        _memcpy, 0
0x5A90	0x0E04      	MOVLW       _LCDLine2
0x5A92	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5A94	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x5A96	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5A98	0x0EAC      	MOVLW       __Blank
0x5A9A	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5A9C	0x0E00      	MOVLW       hi_addr(__Blank)
0x5A9E	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5AA0	0x0E10      	MOVLW       16
0x5AA2	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5AA4	0x0E00      	MOVLW       0
0x5AA6	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5AA8	0xF000ECFC  	CALL        _memcpy, 0
0x5AAC	0x0E01      	MOVLW       1
0x5AAE	0x0101      	MOVLB       1
0x5AB0	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4158:
;FirmV_0_7_0.c,817 :: 		if((State==5)||(State==6))
0x5AB2	0x0100      	MOVLB       0
0x5AB4	0x51F2      	MOVF        _State, 0, 1
0x5AB6	0x0A05      	XORLW       5
0x5AB8	0xE004      	BZ          L__State4638
0x5ABA	0x51F2      	MOVF        _State, 0, 1
0x5ABC	0x0A06      	XORLW       6
0x5ABE	0xE001      	BZ          L__State4638
0x5AC0	0xD04C      	BRA         L_State4161
L__State4638:
;FirmV_0_7_0.c,818 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S4 Autoclose Renewed");memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;}}
0x5AC2	0x0103      	MOVLB       3
0x5AC4	0x6B4F      	CLRF        FARG_ClearTasks_except, 1
0x5AC6	0xF006EC91  	CALL        _ClearTasks, 0
0x5ACA	0x0E00      	MOVLW       0
0x5ACC	0x0102      	MOVLB       2
0x5ACE	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x5AD0	0xE102      	BNZ         L__State4722
0x5AD2	0x0E00      	MOVLW       0
0x5AD4	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State4722:
0x5AD6	0xE041      	BZ          L_State4162
0x5AD8	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x5ADA	0x0100      	MOVLB       0
0x5ADC	0x25EE      	ADDWF       _ms500, 0, 1
0x5ADE	0x0103      	MOVLB       3
0x5AE0	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x5AE2	0x0102      	MOVLB       2
0x5AE4	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x5AE6	0x0100      	MOVLB       0
0x5AE8	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5AEA	0x0103      	MOVLB       3
0x5AEC	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x5AEE	0x0E00      	MOVLW       0
0x5AF0	0x0100      	MOVLB       0
0x5AF2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5AF4	0x0103      	MOVLB       3
0x5AF6	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x5AF8	0x0E00      	MOVLW       0
0x5AFA	0x0100      	MOVLB       0
0x5AFC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5AFE	0x0103      	MOVLB       3
0x5B00	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x5B02	0x0E09      	MOVLW       9
0x5B04	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5B06	0xF00DEC7B  	CALL        _AddTask, 0
0x5B0A	0x0EAD      	MOVLW       ?ICS?lstr37_FirmV_0_7_0
0x5B0C	0x6EF6      	MOVWF       4086 
0x5B0E	0x0E71      	MOVLW       hi_addr(?ICS?lstr37_FirmV_0_7_0)
0x5B10	0x6EF7      	MOVWF       TBLPTRH 
0x5B12	0x0E00      	MOVLW       higher_addr(?ICS?lstr37_FirmV_0_7_0)
0x5B14	0x6EF8      	MOVWF       TBLPTRU 
0x5B16	0x0E31      	MOVLW       ?lstr37_FirmV_0_7_0
0x5B18	0x6EE1      	MOVWF       FSR1L 
0x5B1A	0x0E03      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x5B1C	0x6EE2      	MOVWF       FSR1H 
0x5B1E	0x0E15      	MOVLW       21
0x5B20	0x6E00      	MOVWF       R0 
0x5B22	0x0E01      	MOVLW       1
0x5B24	0x6E01      	MOVWF       R1 
0x5B26	0xF004EC95  	CALL        ___CC2DW, 0
0x5B2A	0x0E31      	MOVLW       ?lstr37_FirmV_0_7_0
0x5B2C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x5B2E	0x0E03      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x5B30	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x5B32	0xF00BECFA  	CALL        _Logger, 0
0x5B36	0x0E04      	MOVLW       _LCDLine2
0x5B38	0x0105      	MOVLB       5
0x5B3A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x5B3C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x5B3E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x5B40	0x0E84      	MOVLW       __autoclose
0x5B42	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x5B44	0x0E00      	MOVLW       hi_addr(__autoclose)
0x5B46	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x5B48	0x0E10      	MOVLW       16
0x5B4A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x5B4C	0x0E00      	MOVLW       0
0x5B4E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x5B50	0xF000ECFC  	CALL        _memcpy, 0
0x5B54	0x0E01      	MOVLW       1
0x5B56	0x0101      	MOVLB       1
0x5B58	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State4162:
L_State4161:
;FirmV_0_7_0.c,820 :: 		}
0x5B5A	0x0012      	RETURN      0
; end of _State4
_State1:
;FirmV_0_7_0.c,496 :: 		void State1()
;FirmV_0_7_0.c,498 :: 		char delay=3;
0x5B5C	0x0E03      	MOVLW       3
0x5B5E	0x0102      	MOVLB       2
0x5B60	0x6F35      	MOVWF       State1_delay_L0, 1
;FirmV_0_7_0.c,501 :: 		Flasher=0;
0x5B62	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,503 :: 		if(Events.Keys==2)
0x5B64	0x0101      	MOVLB       1
0x5B66	0x5171      	MOVF        _Events, 0, 1
0x5B68	0x0A02      	XORLW       2
0x5B6A	0xE104      	BNZ         L_State160
;FirmV_0_7_0.c,504 :: 		{State=100;MenuPointer=0;}
0x5B6C	0x0E64      	MOVLW       100
0x5B6E	0x0100      	MOVLB       0
0x5B70	0x6FF2      	MOVWF       _State, 1
0x5B72	0x6BED      	CLRF        _MenuPointer, 1
L_State160:
;FirmV_0_7_0.c,506 :: 		ActiveDoors=3-Events.Remote;
0x5B74	0x0101      	MOVLB       1
0x5B76	0x5175      	MOVF        _Events+4, 0, 1
0x5B78	0x0803      	SUBLW       3
0x5B7A	0x0100      	MOVLB       0
0x5B7C	0x6F9A      	MOVWF       _ActiveDoors, 1
;FirmV_0_7_0.c,510 :: 		if(Events.Remote!=0)
0x5B7E	0x0101      	MOVLB       1
0x5B80	0x5175      	MOVF        _Events+4, 0, 1
0x5B82	0x0A00      	XORLW       0
0x5B84	0xB4D8      	BTFSC       STATUS, 2 
0x5B86	0xD2B8      	BRA         L_State161
;FirmV_0_7_0.c,513 :: 		ClearTasks(9);
0x5B88	0x0E09      	MOVLW       9
0x5B8A	0x0103      	MOVLB       3
0x5B8C	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x5B8E	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,514 :: 		Flasher=1;
0x5B92	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,515 :: 		AddTask(ms500+1,12);
0x5B94	0x0E01      	MOVLW       1
0x5B96	0x0100      	MOVLB       0
0x5B98	0x25EE      	ADDWF       _ms500, 0, 1
0x5B9A	0x0103      	MOVLB       3
0x5B9C	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x5B9E	0x0E00      	MOVLW       0
0x5BA0	0x0100      	MOVLB       0
0x5BA2	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5BA4	0x0103      	MOVLB       3
0x5BA6	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x5BA8	0x0E00      	MOVLW       0
0x5BAA	0x0100      	MOVLB       0
0x5BAC	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5BAE	0x0103      	MOVLB       3
0x5BB0	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x5BB2	0x0E00      	MOVLW       0
0x5BB4	0x0100      	MOVLB       0
0x5BB6	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5BB8	0x0103      	MOVLB       3
0x5BBA	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x5BBC	0x0E0C      	MOVLW       12
0x5BBE	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5BC0	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,516 :: 		temp=ms500+delay;
0x5BC4	0x0102      	MOVLB       2
0x5BC6	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5BC8	0x0100      	MOVLB       0
0x5BCA	0x25EE      	ADDWF       _ms500, 0, 1
0x5BCC	0x6E00      	MOVWF       R0 
0x5BCE	0x0E00      	MOVLW       0
0x5BD0	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5BD2	0x6E01      	MOVWF       R1 
0x5BD4	0x0E00      	MOVLW       0
0x5BD6	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5BD8	0x6E02      	MOVWF       R2 
0x5BDA	0x0E00      	MOVLW       0
0x5BDC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5BDE	0x6E03      	MOVWF       R3 
0x5BE0	0xF11FC000  	MOVFF       R0, _temp
0x5BE4	0xF120C001  	MOVFF       R1, _temp+1
0x5BE8	0xF121C002  	MOVFF       R2, _temp+2
0x5BEC	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,517 :: 		AddTask(temp,1);
0x5BF0	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5BF4	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5BF8	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5BFC	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5C00	0x0E01      	MOVLW       1
0x5C02	0x0103      	MOVLB       3
0x5C04	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5C06	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,518 :: 		if(OpenSoftStartTime!=0)
0x5C0A	0x0102      	MOVLB       2
0x5C0C	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5C0E	0x0A00      	XORLW       0
0x5C10	0xE011      	BZ          L_State162
;FirmV_0_7_0.c,519 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x5C12	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x5C16	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x5C1A	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x5C1E	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x5C22	0x0E07      	MOVLW       7
0x5C24	0x0103      	MOVLB       3
0x5C26	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5C28	0xF00DEC7B  	CALL        _AddTask, 0
0x5C2C	0x0E01      	MOVLW       1
0x5C2E	0x0100      	MOVLB       0
0x5C30	0x6F97      	MOVWF       _M1isSlow, 1
0x5C32	0xD00F      	BRA         L_State163
L_State162:
;FirmV_0_7_0.c,521 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x5C34	0xF34FC11F  	MOVFF       _temp, FARG_AddTask_OccTime
0x5C38	0xF350C120  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x5C3C	0xF351C121  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x5C40	0xF352C122  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x5C44	0x0E05      	MOVLW       5
0x5C46	0x0103      	MOVLB       3
0x5C48	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5C4A	0xF00DEC7B  	CALL        _AddTask, 0
0x5C4E	0x0100      	MOVLB       0
0x5C50	0x6B97      	CLRF        _M1isSlow, 1
L_State163:
;FirmV_0_7_0.c,522 :: 		temp=ms500+OpenSoftStartTime+OverloadDelay+delay;
0x5C52	0x0102      	MOVLB       2
0x5C54	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5C56	0x0100      	MOVLB       0
0x5C58	0x25EE      	ADDWF       _ms500, 0, 1
0x5C5A	0x6E00      	MOVWF       R0 
0x5C5C	0x0E00      	MOVLW       0
0x5C5E	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5C60	0x6E01      	MOVWF       R1 
0x5C62	0x0E00      	MOVLW       0
0x5C64	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5C66	0x6E02      	MOVWF       R2 
0x5C68	0x0E00      	MOVLW       0
0x5C6A	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5C6C	0x6E03      	MOVWF       R3 
0x5C6E	0x0E02      	MOVLW       2
0x5C70	0x2600      	ADDWF       R0, 1 
0x5C72	0x0E00      	MOVLW       0
0x5C74	0x2201      	ADDWFC      R1, 1 
0x5C76	0x2202      	ADDWFC      R2, 1 
0x5C78	0x2203      	ADDWFC      R3, 1 
0x5C7A	0x0102      	MOVLB       2
0x5C7C	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5C7E	0x2600      	ADDWF       R0, 1 
0x5C80	0x0E00      	MOVLW       0
0x5C82	0x2201      	ADDWFC      R1, 1 
0x5C84	0x2202      	ADDWFC      R2, 1 
0x5C86	0x2203      	ADDWFC      R3, 1 
0x5C88	0xF11FC000  	MOVFF       R0, _temp
0x5C8C	0xF120C001  	MOVFF       R1, _temp+1
0x5C90	0xF121C002  	MOVFF       R2, _temp+2
0x5C94	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,523 :: 		AddTask(temp,10); //overload check
0x5C98	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5C9C	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5CA0	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5CA4	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5CA8	0x0E0A      	MOVLW       10
0x5CAA	0x0103      	MOVLB       3
0x5CAC	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5CAE	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,524 :: 		temp=ms500+OpenSoftStartTime+delay;
0x5CB2	0x0102      	MOVLB       2
0x5CB4	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5CB6	0x0100      	MOVLB       0
0x5CB8	0x25EE      	ADDWF       _ms500, 0, 1
0x5CBA	0x6E00      	MOVWF       R0 
0x5CBC	0x0E00      	MOVLW       0
0x5CBE	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5CC0	0x6E01      	MOVWF       R1 
0x5CC2	0x0E00      	MOVLW       0
0x5CC4	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5CC6	0x6E02      	MOVWF       R2 
0x5CC8	0x0E00      	MOVLW       0
0x5CCA	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5CCC	0x6E03      	MOVWF       R3 
0x5CCE	0x0102      	MOVLB       2
0x5CD0	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5CD2	0x2600      	ADDWF       R0, 1 
0x5CD4	0x0E00      	MOVLW       0
0x5CD6	0x2201      	ADDWFC      R1, 1 
0x5CD8	0x2202      	ADDWFC      R2, 1 
0x5CDA	0x2203      	ADDWFC      R3, 1 
0x5CDC	0xF11FC000  	MOVFF       R0, _temp
0x5CE0	0xF120C001  	MOVFF       R1, _temp+1
0x5CE4	0xF121C002  	MOVFF       R2, _temp+2
0x5CE8	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,525 :: 		AddTask(temp,5);//Speed up after soft start
0x5CEC	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5CF0	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5CF4	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5CF8	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5CFC	0x0E05      	MOVLW       5
0x5CFE	0x0103      	MOVLB       3
0x5D00	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5D02	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,526 :: 		if(OpenSoftStopTime!=0)
0x5D06	0x0102      	MOVLB       2
0x5D08	0x5119      	MOVF        _OpenSoftStopTime, 0, 1
0x5D0A	0x0A00      	XORLW       0
0x5D0C	0xE02F      	BZ          L_State164
;FirmV_0_7_0.c,527 :: 		{temp=ms500+Door1OpenTime-OpenSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x5D0E	0x5116      	MOVF        _Door1OpenTime, 0, 1
0x5D10	0x0100      	MOVLB       0
0x5D12	0x25EE      	ADDWF       _ms500, 0, 1
0x5D14	0x6E00      	MOVWF       R0 
0x5D16	0x0E00      	MOVLW       0
0x5D18	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5D1A	0x6E01      	MOVWF       R1 
0x5D1C	0x0E00      	MOVLW       0
0x5D1E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5D20	0x6E02      	MOVWF       R2 
0x5D22	0x0E00      	MOVLW       0
0x5D24	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5D26	0x6E03      	MOVWF       R3 
0x5D28	0x0102      	MOVLB       2
0x5D2A	0x5119      	MOVF        _OpenSoftStopTime, 0, 1
0x5D2C	0x5E00      	SUBWF       R0, 1 
0x5D2E	0x0E00      	MOVLW       0
0x5D30	0x5A01      	SUBWFB      R1, 1 
0x5D32	0x5A02      	SUBWFB      R2, 1 
0x5D34	0x5A03      	SUBWFB      R3, 1 
0x5D36	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5D38	0x2600      	ADDWF       R0, 1 
0x5D3A	0x0E00      	MOVLW       0
0x5D3C	0x2201      	ADDWFC      R1, 1 
0x5D3E	0x2202      	ADDWFC      R2, 1 
0x5D40	0x2203      	ADDWFC      R3, 1 
0x5D42	0xF11FC000  	MOVFF       R0, _temp
0x5D46	0xF120C001  	MOVFF       R1, _temp+1
0x5D4A	0xF121C002  	MOVFF       R2, _temp+2
0x5D4E	0xF122C003  	MOVFF       R3, _temp+3
0x5D52	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5D56	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5D5A	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5D5E	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5D62	0x0E07      	MOVLW       7
0x5D64	0x0103      	MOVLB       3
0x5D66	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5D68	0xF00DEC7B  	CALL        _AddTask, 0
L_State164:
;FirmV_0_7_0.c,528 :: 		temp=ms500+Door1OpenTime+delay;
0x5D6C	0x0102      	MOVLB       2
0x5D6E	0x5116      	MOVF        _Door1OpenTime, 0, 1
0x5D70	0x0100      	MOVLB       0
0x5D72	0x25EE      	ADDWF       _ms500, 0, 1
0x5D74	0x6E00      	MOVWF       R0 
0x5D76	0x0E00      	MOVLW       0
0x5D78	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5D7A	0x6E01      	MOVWF       R1 
0x5D7C	0x0E00      	MOVLW       0
0x5D7E	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5D80	0x6E02      	MOVWF       R2 
0x5D82	0x0E00      	MOVLW       0
0x5D84	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5D86	0x6E03      	MOVWF       R3 
0x5D88	0x0102      	MOVLB       2
0x5D8A	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5D8C	0x2600      	ADDWF       R0, 1 
0x5D8E	0x0E00      	MOVLW       0
0x5D90	0x2201      	ADDWFC      R1, 1 
0x5D92	0x2202      	ADDWFC      R2, 1 
0x5D94	0x2203      	ADDWFC      R3, 1 
0x5D96	0xF11FC000  	MOVFF       R0, _temp
0x5D9A	0xF120C001  	MOVFF       R1, _temp+1
0x5D9E	0xF121C002  	MOVFF       R2, _temp+2
0x5DA2	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,529 :: 		AddTask(temp,3);//Stop motor
0x5DA6	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5DAA	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5DAE	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5DB2	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5DB6	0x0E03      	MOVLW       3
0x5DB8	0x0103      	MOVLB       3
0x5DBA	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5DBC	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,531 :: 		if((Door2OpenTime!=0)&&(ActiveDoors==2))
0x5DC0	0x0102      	MOVLB       2
0x5DC2	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x5DC4	0x0A00      	XORLW       0
0x5DC6	0xB4D8      	BTFSC       STATUS, 2 
0x5DC8	0xD15B      	BRA         L_State167
0x5DCA	0x0100      	MOVLB       0
0x5DCC	0x519A      	MOVF        _ActiveDoors, 0, 1
0x5DCE	0x0A02      	XORLW       2
0x5DD0	0xA4D8      	BTFSS       STATUS, 2 
0x5DD2	0xD156      	BRA         L_State167
L__State1626:
;FirmV_0_7_0.c,533 :: 		temp=ms500+ActionTimeDiff+delay;
0x5DD4	0x0102      	MOVLB       2
0x5DD6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5DD8	0x0100      	MOVLB       0
0x5DDA	0x25EE      	ADDWF       _ms500, 0, 1
0x5DDC	0x6E00      	MOVWF       R0 
0x5DDE	0x0E00      	MOVLW       0
0x5DE0	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5DE2	0x6E01      	MOVWF       R1 
0x5DE4	0x0E00      	MOVLW       0
0x5DE6	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5DE8	0x6E02      	MOVWF       R2 
0x5DEA	0x0E00      	MOVLW       0
0x5DEC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5DEE	0x6E03      	MOVWF       R3 
0x5DF0	0x0102      	MOVLB       2
0x5DF2	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5DF4	0x2600      	ADDWF       R0, 1 
0x5DF6	0x0E00      	MOVLW       0
0x5DF8	0x2201      	ADDWFC      R1, 1 
0x5DFA	0x2202      	ADDWFC      R2, 1 
0x5DFC	0x2203      	ADDWFC      R3, 1 
0x5DFE	0xF11FC000  	MOVFF       R0, _temp
0x5E02	0xF120C001  	MOVFF       R1, _temp+1
0x5E06	0xF121C002  	MOVFF       R2, _temp+2
0x5E0A	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,534 :: 		AddTask(temp,2);
0x5E0E	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5E12	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5E16	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5E1A	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5E1E	0x0E02      	MOVLW       2
0x5E20	0x0103      	MOVLB       3
0x5E22	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5E24	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,535 :: 		if(OpenSoftStartTime!=0)
0x5E28	0x0102      	MOVLB       2
0x5E2A	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5E2C	0x0A00      	XORLW       0
0x5E2E	0xE02D      	BZ          L_State168
;FirmV_0_7_0.c,536 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,8); M2isSlow=1;}//speed down
0x5E30	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5E32	0x0100      	MOVLB       0
0x5E34	0x25EE      	ADDWF       _ms500, 0, 1
0x5E36	0x6E00      	MOVWF       R0 
0x5E38	0x0E00      	MOVLW       0
0x5E3A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5E3C	0x6E01      	MOVWF       R1 
0x5E3E	0x0E00      	MOVLW       0
0x5E40	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5E42	0x6E02      	MOVWF       R2 
0x5E44	0x0E00      	MOVLW       0
0x5E46	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5E48	0x6E03      	MOVWF       R3 
0x5E4A	0x0102      	MOVLB       2
0x5E4C	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5E4E	0x2600      	ADDWF       R0, 1 
0x5E50	0x0E00      	MOVLW       0
0x5E52	0x2201      	ADDWFC      R1, 1 
0x5E54	0x2202      	ADDWFC      R2, 1 
0x5E56	0x2203      	ADDWFC      R3, 1 
0x5E58	0xF11FC000  	MOVFF       R0, _temp
0x5E5C	0xF120C001  	MOVFF       R1, _temp+1
0x5E60	0xF121C002  	MOVFF       R2, _temp+2
0x5E64	0xF122C003  	MOVFF       R3, _temp+3
0x5E68	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5E6C	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5E70	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5E74	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5E78	0x0E08      	MOVLW       8
0x5E7A	0x0103      	MOVLB       3
0x5E7C	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5E7E	0xF00DEC7B  	CALL        _AddTask, 0
0x5E82	0x0E01      	MOVLW       1
0x5E84	0x0100      	MOVLB       0
0x5E86	0x6F98      	MOVWF       _M2isSlow, 1
0x5E88	0xD02C      	BRA         L_State169
L_State168:
;FirmV_0_7_0.c,538 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,6); M2isSlow=0;}//speed up
0x5E8A	0x0102      	MOVLB       2
0x5E8C	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5E8E	0x0100      	MOVLB       0
0x5E90	0x25EE      	ADDWF       _ms500, 0, 1
0x5E92	0x6E00      	MOVWF       R0 
0x5E94	0x0E00      	MOVLW       0
0x5E96	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5E98	0x6E01      	MOVWF       R1 
0x5E9A	0x0E00      	MOVLW       0
0x5E9C	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5E9E	0x6E02      	MOVWF       R2 
0x5EA0	0x0E00      	MOVLW       0
0x5EA2	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5EA4	0x6E03      	MOVWF       R3 
0x5EA6	0x0102      	MOVLB       2
0x5EA8	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5EAA	0x2600      	ADDWF       R0, 1 
0x5EAC	0x0E00      	MOVLW       0
0x5EAE	0x2201      	ADDWFC      R1, 1 
0x5EB0	0x2202      	ADDWFC      R2, 1 
0x5EB2	0x2203      	ADDWFC      R3, 1 
0x5EB4	0xF11FC000  	MOVFF       R0, _temp
0x5EB8	0xF120C001  	MOVFF       R1, _temp+1
0x5EBC	0xF121C002  	MOVFF       R2, _temp+2
0x5EC0	0xF122C003  	MOVFF       R3, _temp+3
0x5EC4	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5EC8	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5ECC	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5ED0	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5ED4	0x0E06      	MOVLW       6
0x5ED6	0x0103      	MOVLB       3
0x5ED8	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5EDA	0xF00DEC7B  	CALL        _AddTask, 0
0x5EDE	0x0100      	MOVLB       0
0x5EE0	0x6B98      	CLRF        _M2isSlow, 1
L_State169:
;FirmV_0_7_0.c,539 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+OverloadDelay+delay;
0x5EE2	0x0102      	MOVLB       2
0x5EE4	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5EE6	0x0100      	MOVLB       0
0x5EE8	0x25EE      	ADDWF       _ms500, 0, 1
0x5EEA	0x6E00      	MOVWF       R0 
0x5EEC	0x0E00      	MOVLW       0
0x5EEE	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5EF0	0x6E01      	MOVWF       R1 
0x5EF2	0x0E00      	MOVLW       0
0x5EF4	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5EF6	0x6E02      	MOVWF       R2 
0x5EF8	0x0E00      	MOVLW       0
0x5EFA	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5EFC	0x6E03      	MOVWF       R3 
0x5EFE	0x0102      	MOVLB       2
0x5F00	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5F02	0x2600      	ADDWF       R0, 1 
0x5F04	0x0E00      	MOVLW       0
0x5F06	0x2201      	ADDWFC      R1, 1 
0x5F08	0x2202      	ADDWFC      R2, 1 
0x5F0A	0x2203      	ADDWFC      R3, 1 
0x5F0C	0x0E02      	MOVLW       2
0x5F0E	0x2600      	ADDWF       R0, 1 
0x5F10	0x0E00      	MOVLW       0
0x5F12	0x2201      	ADDWFC      R1, 1 
0x5F14	0x2202      	ADDWFC      R2, 1 
0x5F16	0x2203      	ADDWFC      R3, 1 
0x5F18	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5F1A	0x2600      	ADDWF       R0, 1 
0x5F1C	0x0E00      	MOVLW       0
0x5F1E	0x2201      	ADDWFC      R1, 1 
0x5F20	0x2202      	ADDWFC      R2, 1 
0x5F22	0x2203      	ADDWFC      R3, 1 
0x5F24	0xF11FC000  	MOVFF       R0, _temp
0x5F28	0xF120C001  	MOVFF       R1, _temp+1
0x5F2C	0xF121C002  	MOVFF       R2, _temp+2
0x5F30	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,540 :: 		AddTask(temp,11); //overload check
0x5F34	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5F38	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5F3C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5F40	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5F44	0x0E0B      	MOVLW       11
0x5F46	0x0103      	MOVLB       3
0x5F48	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5F4A	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,541 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+delay;
0x5F4E	0x0102      	MOVLB       2
0x5F50	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5F52	0x0100      	MOVLB       0
0x5F54	0x25EE      	ADDWF       _ms500, 0, 1
0x5F56	0x6E00      	MOVWF       R0 
0x5F58	0x0E00      	MOVLW       0
0x5F5A	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5F5C	0x6E01      	MOVWF       R1 
0x5F5E	0x0E00      	MOVLW       0
0x5F60	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5F62	0x6E02      	MOVWF       R2 
0x5F64	0x0E00      	MOVLW       0
0x5F66	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5F68	0x6E03      	MOVWF       R3 
0x5F6A	0x0102      	MOVLB       2
0x5F6C	0x511A      	MOVF        _OpenSoftStartTime, 0, 1
0x5F6E	0x2600      	ADDWF       R0, 1 
0x5F70	0x0E00      	MOVLW       0
0x5F72	0x2201      	ADDWFC      R1, 1 
0x5F74	0x2202      	ADDWFC      R2, 1 
0x5F76	0x2203      	ADDWFC      R3, 1 
0x5F78	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5F7A	0x2600      	ADDWF       R0, 1 
0x5F7C	0x0E00      	MOVLW       0
0x5F7E	0x2201      	ADDWFC      R1, 1 
0x5F80	0x2202      	ADDWFC      R2, 1 
0x5F82	0x2203      	ADDWFC      R3, 1 
0x5F84	0xF11FC000  	MOVFF       R0, _temp
0x5F88	0xF120C001  	MOVFF       R1, _temp+1
0x5F8C	0xF121C002  	MOVFF       R2, _temp+2
0x5F90	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,542 :: 		AddTask(temp,6);//Speed up after soft start
0x5F94	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5F98	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5F9C	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5FA0	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5FA4	0x0E06      	MOVLW       6
0x5FA6	0x0103      	MOVLB       3
0x5FA8	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x5FAA	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,543 :: 		if(OpenSoftStopTime!=0)
0x5FAE	0x0102      	MOVLB       2
0x5FB0	0x5119      	MOVF        _OpenSoftStopTime, 0, 1
0x5FB2	0x0A00      	XORLW       0
0x5FB4	0xE035      	BZ          L_State170
;FirmV_0_7_0.c,544 :: 		{temp=ms500+ActionTimeDiff+Door2OpenTime-OpenSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x5FB6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x5FB8	0x0100      	MOVLB       0
0x5FBA	0x25EE      	ADDWF       _ms500, 0, 1
0x5FBC	0x6E00      	MOVWF       R0 
0x5FBE	0x0E00      	MOVLW       0
0x5FC0	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x5FC2	0x6E01      	MOVWF       R1 
0x5FC4	0x0E00      	MOVLW       0
0x5FC6	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x5FC8	0x6E02      	MOVWF       R2 
0x5FCA	0x0E00      	MOVLW       0
0x5FCC	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x5FCE	0x6E03      	MOVWF       R3 
0x5FD0	0x0102      	MOVLB       2
0x5FD2	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x5FD4	0x2600      	ADDWF       R0, 1 
0x5FD6	0x0E00      	MOVLW       0
0x5FD8	0x2201      	ADDWFC      R1, 1 
0x5FDA	0x2202      	ADDWFC      R2, 1 
0x5FDC	0x2203      	ADDWFC      R3, 1 
0x5FDE	0x5119      	MOVF        _OpenSoftStopTime, 0, 1
0x5FE0	0x5E00      	SUBWF       R0, 1 
0x5FE2	0x0E00      	MOVLW       0
0x5FE4	0x5A01      	SUBWFB      R1, 1 
0x5FE6	0x5A02      	SUBWFB      R2, 1 
0x5FE8	0x5A03      	SUBWFB      R3, 1 
0x5FEA	0x5135      	MOVF        State1_delay_L0, 0, 1
0x5FEC	0x2600      	ADDWF       R0, 1 
0x5FEE	0x0E00      	MOVLW       0
0x5FF0	0x2201      	ADDWFC      R1, 1 
0x5FF2	0x2202      	ADDWFC      R2, 1 
0x5FF4	0x2203      	ADDWFC      R3, 1 
0x5FF6	0xF11FC000  	MOVFF       R0, _temp
0x5FFA	0xF120C001  	MOVFF       R1, _temp+1
0x5FFE	0xF121C002  	MOVFF       R2, _temp+2
0x6002	0xF122C003  	MOVFF       R3, _temp+3
0x6006	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x600A	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x600E	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x6012	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6016	0x0E08      	MOVLW       8
0x6018	0x0103      	MOVLB       3
0x601A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x601C	0xF00DEC7B  	CALL        _AddTask, 0
L_State170:
;FirmV_0_7_0.c,545 :: 		temp=ms500+Door2OpenTime+ActionTimeDiff+delay;
0x6020	0x0102      	MOVLB       2
0x6022	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x6024	0x0100      	MOVLB       0
0x6026	0x25EE      	ADDWF       _ms500, 0, 1
0x6028	0x6E00      	MOVWF       R0 
0x602A	0x0E00      	MOVLW       0
0x602C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x602E	0x6E01      	MOVWF       R1 
0x6030	0x0E00      	MOVLW       0
0x6032	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x6034	0x6E02      	MOVWF       R2 
0x6036	0x0E00      	MOVLW       0
0x6038	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x603A	0x6E03      	MOVWF       R3 
0x603C	0x0102      	MOVLB       2
0x603E	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x6040	0x2600      	ADDWF       R0, 1 
0x6042	0x0E00      	MOVLW       0
0x6044	0x2201      	ADDWFC      R1, 1 
0x6046	0x2202      	ADDWFC      R2, 1 
0x6048	0x2203      	ADDWFC      R3, 1 
0x604A	0x5135      	MOVF        State1_delay_L0, 0, 1
0x604C	0x2600      	ADDWF       R0, 1 
0x604E	0x0E00      	MOVLW       0
0x6050	0x2201      	ADDWFC      R1, 1 
0x6052	0x2202      	ADDWFC      R2, 1 
0x6054	0x2203      	ADDWFC      R3, 1 
0x6056	0xF11FC000  	MOVFF       R0, _temp
0x605A	0xF120C001  	MOVFF       R1, _temp+1
0x605E	0xF121C002  	MOVFF       R2, _temp+2
0x6062	0xF122C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,546 :: 		AddTask(temp,4);//Stop motor
0x6066	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x606A	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x606E	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x6072	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6076	0x0E04      	MOVLW       4
0x6078	0x0103      	MOVLB       3
0x607A	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x607C	0xF00DEC7B  	CALL        _AddTask, 0
;FirmV_0_7_0.c,547 :: 		}
L_State167:
;FirmV_0_7_0.c,549 :: 		if(AutoCloseTime!=0)
0x6080	0x0E00      	MOVLW       0
0x6082	0x0102      	MOVLB       2
0x6084	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x6086	0xE102      	BNZ         L__State1718
0x6088	0x0E00      	MOVLW       0
0x608A	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State1718:
0x608C	0xE02B      	BZ          L_State171
;FirmV_0_7_0.c,550 :: 		{temp=ms500+AutoCloseTime+delay;AddTask(ms500+AutoCloseTime+delay,9);}
0x608E	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x6090	0x0100      	MOVLB       0
0x6092	0x25EE      	ADDWF       _ms500, 0, 1
0x6094	0x6E00      	MOVWF       R0 
0x6096	0x0102      	MOVLB       2
0x6098	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x609A	0x0100      	MOVLB       0
0x609C	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x609E	0x6E01      	MOVWF       R1 
0x60A0	0x0E00      	MOVLW       0
0x60A2	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x60A4	0x6E02      	MOVWF       R2 
0x60A6	0x0E00      	MOVLW       0
0x60A8	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x60AA	0x6E03      	MOVWF       R3 
0x60AC	0x0102      	MOVLB       2
0x60AE	0x5135      	MOVF        State1_delay_L0, 0, 1
0x60B0	0x2600      	ADDWF       R0, 1 
0x60B2	0x0E00      	MOVLW       0
0x60B4	0x2201      	ADDWFC      R1, 1 
0x60B6	0x2202      	ADDWFC      R2, 1 
0x60B8	0x2203      	ADDWFC      R3, 1 
0x60BA	0xF11FC000  	MOVFF       R0, _temp
0x60BE	0xF120C001  	MOVFF       R1, _temp+1
0x60C2	0xF121C002  	MOVFF       R2, _temp+2
0x60C6	0xF122C003  	MOVFF       R3, _temp+3
0x60CA	0xF34FC000  	MOVFF       R0, FARG_AddTask_OccTime
0x60CE	0xF350C001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x60D2	0xF351C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x60D6	0xF352C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x60DA	0x0E09      	MOVLW       9
0x60DC	0x0103      	MOVLB       3
0x60DE	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x60E0	0xF00DEC7B  	CALL        _AddTask, 0
L_State171:
;FirmV_0_7_0.c,552 :: 		OpenDone=3;
0x60E4	0x0E03      	MOVLW       3
0x60E6	0x0100      	MOVLB       0
0x60E8	0x6FC0      	MOVWF       _OpenDone, 1
;FirmV_0_7_0.c,553 :: 		OverloadCheckFlag1=0;
0x60EA	0x0101      	MOVLB       1
0x60EC	0x6B16      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,554 :: 		OverloadCheckFlag2=0;
0x60EE	0x6B15      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,555 :: 		State=3;
0x60F0	0x0E03      	MOVLW       3
0x60F2	0x0100      	MOVLB       0
0x60F4	0x6FF2      	MOVWF       _State, 1
;FirmV_0_7_0.c,556 :: 		PassFlag=0;
0x60F6	0x6BBE      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,557 :: 		}
L_State161:
;FirmV_0_7_0.c,558 :: 		}
0x60F8	0x0012      	RETURN      0
; end of _State1
_State00:
;FirmV_0_7_0.c,473 :: 		void State00()
;FirmV_0_7_0.c,478 :: 		Flasher=1;
0x60FA	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,479 :: 		StartMotor(1,_Close);
0x60FC	0x0E01      	MOVLW       1
0x60FE	0x0103      	MOVLB       3
0x6100	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x6102	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x6104	0xF006EC0E  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,480 :: 		StartMotor(2,_Close);
0x6108	0x0E02      	MOVLW       2
0x610A	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x610C	0x6B50      	CLRF        FARG_StartMotor_Dir, 1
0x610E	0xF006EC0E  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,484 :: 		if(Events.Remote.b0==1)
0x6112	0x0101      	MOVLB       1
0x6114	0xA175      	BTFSS       _Events+4, 0, 1
0x6116	0xD00D      	BRA         L_State0059
;FirmV_0_7_0.c,485 :: 		{Flasher=0;StopMotor(1);StopMotor(2);
0x6118	0x9482      	BCF         PORTC, 2 
0x611A	0x0E01      	MOVLW       1
0x611C	0x0103      	MOVLB       3
0x611E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x6120	0xF007EC3B  	CALL        _StopMotor, 0
0x6124	0x0E02      	MOVLW       2
0x6126	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x6128	0xF007EC3B  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,486 :: 		State=1;                }
0x612C	0x0E01      	MOVLW       1
0x612E	0x0100      	MOVLB       0
0x6130	0x6FF2      	MOVWF       _State, 1
L_State0059:
;FirmV_0_7_0.c,487 :: 		}
0x6132	0x0012      	RETURN      0
; end of _State00
_GetOverloadState:
;FirmV_0_7_0.c,1434 :: 		char GetOverloadState()
;FirmV_0_7_0.c,1436 :: 		char res=0;
0x6134	0x0102      	MOVLB       2
0x6136	0x6B39      	CLRF        GetOverloadState_res_L0, 1
;FirmV_0_7_0.c,1438 :: 		VCapM1=ADC_Read(0);
0x6138	0x0103      	MOVLB       3
0x613A	0x6B4F      	CLRF        FARG_ADC_Read_channel, 1
0x613C	0xF00CEC95  	CALL        _ADC_Read, 0
0x6140	0xF235C000  	MOVFF       R0, GetOverloadState_VCapM1_L0
0x6144	0xF236C001  	MOVFF       R1, GetOverloadState_VCapM1_L0+1
;FirmV_0_7_0.c,1439 :: 		VCapM2=ADC_Read(1);
0x6148	0x0E01      	MOVLW       1
0x614A	0x0103      	MOVLB       3
0x614C	0x6F4F      	MOVWF       FARG_ADC_Read_channel, 1
0x614E	0xF00CEC95  	CALL        _ADC_Read, 0
0x6152	0xF237C000  	MOVFF       R0, GetOverloadState_VCapM2_L0
0x6156	0xF238C001  	MOVFF       R1, GetOverloadState_VCapM2_L0+1
;FirmV_0_7_0.c,1440 :: 		if(Motor1FullSpeed!=0)
0x615A	0x0100      	MOVLB       0
0x615C	0x5196      	MOVF        _Motor1FullSpeed, 0, 1
0x615E	0x0A00      	XORLW       0
0x6160	0xE014      	BZ          L_GetOverloadState327
;FirmV_0_7_0.c,1442 :: 		if(VCapM1<OverloadTreshold)
0x6162	0x0101      	MOVLB       1
0x6164	0x5144      	MOVF        _OverloadTreshold+1, 0, 1
0x6166	0x0102      	MOVLB       2
0x6168	0x5D36      	SUBWF       GetOverloadState_VCapM1_L0+1, 0, 1
0x616A	0xE104      	BNZ         L__GetOverloadState748
0x616C	0x0101      	MOVLB       1
0x616E	0x5143      	MOVF        _OverloadTreshold, 0, 1
0x6170	0x0102      	MOVLB       2
0x6172	0x5D35      	SUBWF       GetOverloadState_VCapM1_L0, 0, 1
L__GetOverloadState748:
0x6174	0xE205      	BC          L_GetOverloadState328
;FirmV_0_7_0.c,1444 :: 		if(OverloadCounter1<255)
0x6176	0x0EFF      	MOVLW       255
0x6178	0x5C71      	SUBWF       _OverloadCounter1, 0 
0x617A	0xE201      	BC          L_GetOverloadState329
;FirmV_0_7_0.c,1445 :: 		OverloadCounter1=OverloadCounter1+1;
0x617C	0x2A71      	INCF        _OverloadCounter1, 1 
L_GetOverloadState329:
;FirmV_0_7_0.c,1446 :: 		}
0x617E	0xD004      	BRA         L_GetOverloadState330
L_GetOverloadState328:
;FirmV_0_7_0.c,1449 :: 		if(OverloadCounter1>0)
0x6180	0x5071      	MOVF        _OverloadCounter1, 0 
0x6182	0x0800      	SUBLW       0
0x6184	0xE201      	BC          L_GetOverloadState331
;FirmV_0_7_0.c,1450 :: 		OverloadCounter1=OverloadCounter1-1;
0x6186	0x0671      	DECF        _OverloadCounter1, 1 
L_GetOverloadState331:
;FirmV_0_7_0.c,1451 :: 		}
L_GetOverloadState330:
;FirmV_0_7_0.c,1452 :: 		}
0x6188	0xD001      	BRA         L_GetOverloadState332
L_GetOverloadState327:
;FirmV_0_7_0.c,1454 :: 		{OverloadCounter1=0;}
0x618A	0x6A71      	CLRF        _OverloadCounter1 
L_GetOverloadState332:
;FirmV_0_7_0.c,1456 :: 		if (OverloadCounter1>OverloadDuration)
0x618C	0x5071      	MOVF        _OverloadCounter1, 0 
0x618E	0x0101      	MOVLB       1
0x6190	0x5D45      	SUBWF       _OverloadDuration, 0, 1
0x6192	0xE202      	BC          L_GetOverloadState333
;FirmV_0_7_0.c,1457 :: 		res.b0=1;
0x6194	0x0102      	MOVLB       2
0x6196	0x8139      	BSF         GetOverloadState_res_L0, 0, 1
L_GetOverloadState333:
;FirmV_0_7_0.c,1462 :: 		if(Motor2FullSpeed!=0)
0x6198	0x0100      	MOVLB       0
0x619A	0x51BD      	MOVF        _Motor2FullSpeed, 0, 1
0x619C	0x0A00      	XORLW       0
0x619E	0xE014      	BZ          L_GetOverloadState334
;FirmV_0_7_0.c,1464 :: 		if(VCapM2<OverloadTreshold)
0x61A0	0x0101      	MOVLB       1
0x61A2	0x5144      	MOVF        _OverloadTreshold+1, 0, 1
0x61A4	0x0102      	MOVLB       2
0x61A6	0x5D38      	SUBWF       GetOverloadState_VCapM2_L0+1, 0, 1
0x61A8	0xE104      	BNZ         L__GetOverloadState749
0x61AA	0x0101      	MOVLB       1
0x61AC	0x5143      	MOVF        _OverloadTreshold, 0, 1
0x61AE	0x0102      	MOVLB       2
0x61B0	0x5D37      	SUBWF       GetOverloadState_VCapM2_L0, 0, 1
L__GetOverloadState749:
0x61B2	0xE205      	BC          L_GetOverloadState335
;FirmV_0_7_0.c,1466 :: 		if(OverloadCounter2<255)
0x61B4	0x0EFF      	MOVLW       255
0x61B6	0x5C72      	SUBWF       _OverloadCounter2, 0 
0x61B8	0xE201      	BC          L_GetOverloadState336
;FirmV_0_7_0.c,1467 :: 		OverloadCounter2=OverloadCounter2+1;
0x61BA	0x2A72      	INCF        _OverloadCounter2, 1 
L_GetOverloadState336:
;FirmV_0_7_0.c,1468 :: 		}
0x61BC	0xD004      	BRA         L_GetOverloadState337
L_GetOverloadState335:
;FirmV_0_7_0.c,1471 :: 		if(OverloadCounter2>0)
0x61BE	0x5072      	MOVF        _OverloadCounter2, 0 
0x61C0	0x0800      	SUBLW       0
0x61C2	0xE201      	BC          L_GetOverloadState338
;FirmV_0_7_0.c,1472 :: 		OverloadCounter2=OverloadCounter2-1;
0x61C4	0x0672      	DECF        _OverloadCounter2, 1 
L_GetOverloadState338:
;FirmV_0_7_0.c,1473 :: 		}
L_GetOverloadState337:
;FirmV_0_7_0.c,1474 :: 		}
0x61C6	0xD001      	BRA         L_GetOverloadState339
L_GetOverloadState334:
;FirmV_0_7_0.c,1476 :: 		{OverloadCounter2=0;}
0x61C8	0x6A72      	CLRF        _OverloadCounter2 
L_GetOverloadState339:
;FirmV_0_7_0.c,1479 :: 		if (OverloadCounter2>OverloadDuration)
0x61CA	0x5072      	MOVF        _OverloadCounter2, 0 
0x61CC	0x0101      	MOVLB       1
0x61CE	0x5D45      	SUBWF       _OverloadDuration, 0, 1
0x61D0	0xE202      	BC          L_GetOverloadState340
;FirmV_0_7_0.c,1480 :: 		res.b1=1;
0x61D2	0x0102      	MOVLB       2
0x61D4	0x8339      	BSF         GetOverloadState_res_L0, 1, 1
L_GetOverloadState340:
;FirmV_0_7_0.c,1482 :: 		return res;
0x61D6	0xF000C239  	MOVFF       GetOverloadState_res_L0, R0
;FirmV_0_7_0.c,1483 :: 		}
0x61DA	0x0012      	RETURN      0
; end of _GetOverloadState
_GetPhotocellState:
;FirmV_0_7_0.c,1496 :: 		char GetPhotocellState()
;FirmV_0_7_0.c,1498 :: 		if(Phcell==0)
0x61DC	0xB083      	BTFSC       PORTD, 0 
0x61DE	0xD006      	BRA         L_GetPhotocellState341
;FirmV_0_7_0.c,1499 :: 		{if(PhotocellCount<=20)PhotocellCount=PhotocellCount+1;}
0x61E0	0x0100      	MOVLB       0
0x61E2	0x51C8      	MOVF        _PhotocellCount, 0, 1
0x61E4	0x0814      	SUBLW       20
0x61E6	0xE301      	BNC         L_GetPhotocellState342
0x61E8	0x2BC8      	INCF        _PhotocellCount, 1, 1
L_GetPhotocellState342:
0x61EA	0xD002      	BRA         L_GetPhotocellState343
L_GetPhotocellState341:
0x61EC	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1501 :: 		{PhotocellCount=0;}
0x61EE	0x6BC8      	CLRF        _PhotocellCount, 1
L_GetPhotocellState343:
;FirmV_0_7_0.c,1502 :: 		if(PhotocellCount>=20)
0x61F0	0x0E14      	MOVLW       20
0x61F2	0x5DC8      	SUBWF       _PhotocellCount, 0, 1
0x61F4	0xE303      	BNC         L_GetPhotocellState344
;FirmV_0_7_0.c,1503 :: 		return 1;
0x61F6	0x0E01      	MOVLW       1
0x61F8	0x6E00      	MOVWF       R0 
0x61FA	0x0012      	RETURN      0
L_GetPhotocellState344:
;FirmV_0_7_0.c,1505 :: 		return 0;
0x61FC	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1506 :: 		}
0x61FE	0x0012      	RETURN      0
; end of _GetPhotocellState
_State8:
;FirmV_0_7_0.c,1077 :: 		void State8()
;FirmV_0_7_0.c,1079 :: 		Flasher=1;
0x6200	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,1081 :: 		if(CheckTask(1))
0x6202	0x0E01      	MOVLW       1
0x6204	0x0103      	MOVLB       3
0x6206	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6208	0xF007EC58  	CALL        _CheckTask, 0
0x620C	0x5200      	MOVF        R0, 1 
0x620E	0xE04D      	BZ          L_State8231
;FirmV_0_7_0.c,1082 :: 		{StartMotor(1,_Open);Logger("S8 Motor1Start"); Lock=0;memcpy(LCDLine1,_opening,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x6210	0x0E01      	MOVLW       1
0x6212	0x0103      	MOVLB       3
0x6214	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x6216	0x0E01      	MOVLW       1
0x6218	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x621A	0xF006EC0E  	CALL        _StartMotor, 0
0x621E	0x0E53      	MOVLW       83
0x6220	0x0102      	MOVLB       2
0x6222	0x6F35      	MOVWF       ?lstr56_FirmV_0_7_0, 1
0x6224	0x0E38      	MOVLW       56
0x6226	0x6F36      	MOVWF       ?lstr56_FirmV_0_7_0+1, 1
0x6228	0x0E20      	MOVLW       32
0x622A	0x6F37      	MOVWF       ?lstr56_FirmV_0_7_0+2, 1
0x622C	0x0E4D      	MOVLW       77
0x622E	0x6F38      	MOVWF       ?lstr56_FirmV_0_7_0+3, 1
0x6230	0x0E6F      	MOVLW       111
0x6232	0x6F39      	MOVWF       ?lstr56_FirmV_0_7_0+4, 1
0x6234	0x0E74      	MOVLW       116
0x6236	0x6F3A      	MOVWF       ?lstr56_FirmV_0_7_0+5, 1
0x6238	0x0E6F      	MOVLW       111
0x623A	0x6F3B      	MOVWF       ?lstr56_FirmV_0_7_0+6, 1
0x623C	0x0E72      	MOVLW       114
0x623E	0x6F3C      	MOVWF       ?lstr56_FirmV_0_7_0+7, 1
0x6240	0x0E31      	MOVLW       49
0x6242	0x6F3D      	MOVWF       ?lstr56_FirmV_0_7_0+8, 1
0x6244	0x0E53      	MOVLW       83
0x6246	0x6F3E      	MOVWF       ?lstr56_FirmV_0_7_0+9, 1
0x6248	0x0E74      	MOVLW       116
0x624A	0x6F3F      	MOVWF       ?lstr56_FirmV_0_7_0+10, 1
0x624C	0x0E61      	MOVLW       97
0x624E	0x6F40      	MOVWF       ?lstr56_FirmV_0_7_0+11, 1
0x6250	0x0E72      	MOVLW       114
0x6252	0x6F41      	MOVWF       ?lstr56_FirmV_0_7_0+12, 1
0x6254	0x0E74      	MOVLW       116
0x6256	0x6F42      	MOVWF       ?lstr56_FirmV_0_7_0+13, 1
0x6258	0x6B43      	CLRF        ?lstr56_FirmV_0_7_0+14, 1
0x625A	0x0E35      	MOVLW       ?lstr56_FirmV_0_7_0
0x625C	0x0103      	MOVLB       3
0x625E	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6260	0x0E02      	MOVLW       hi_addr(?lstr56_FirmV_0_7_0)
0x6262	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x6264	0xF00BECFA  	CALL        _Logger, 0
0x6268	0x9E83      	BCF         PORTD, 7 
0x626A	0x0EF3      	MOVLW       _LCDLine1
0x626C	0x0105      	MOVLB       5
0x626E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x6270	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6272	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6274	0x0ECA      	MOVLW       __opening
0x6276	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6278	0x0E00      	MOVLW       hi_addr(__opening)
0x627A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x627C	0x0E10      	MOVLW       16
0x627E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x6280	0x0E00      	MOVLW       0
0x6282	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6284	0xF000ECFC  	CALL        _memcpy, 0
0x6288	0x0E04      	MOVLW       _LCDLine2
0x628A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x628C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x628E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6290	0x0EAC      	MOVLW       __Blank
0x6292	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6294	0x0E00      	MOVLW       hi_addr(__Blank)
0x6296	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x6298	0x0E10      	MOVLW       16
0x629A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x629C	0x0E00      	MOVLW       0
0x629E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x62A0	0xF000ECFC  	CALL        _memcpy, 0
0x62A4	0x0E01      	MOVLW       1
0x62A6	0x0101      	MOVLB       1
0x62A8	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8231:
;FirmV_0_7_0.c,1084 :: 		if(CheckTask(2))
0x62AA	0x0E02      	MOVLW       2
0x62AC	0x0103      	MOVLB       3
0x62AE	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x62B0	0xF007EC58  	CALL        _CheckTask, 0
0x62B4	0x5200      	MOVF        R0, 1 
0x62B6	0xE02D      	BZ          L_State8232
;FirmV_0_7_0.c,1085 :: 		{StartMotor(2,_Open);Logger("S8 Motor2Start"); Lock=0;}
0x62B8	0x0E02      	MOVLW       2
0x62BA	0x0103      	MOVLB       3
0x62BC	0x6F4F      	MOVWF       FARG_StartMotor_Mx, 1
0x62BE	0x0E01      	MOVLW       1
0x62C0	0x6F50      	MOVWF       FARG_StartMotor_Dir, 1
0x62C2	0xF006EC0E  	CALL        _StartMotor, 0
0x62C6	0x0E53      	MOVLW       83
0x62C8	0x0102      	MOVLB       2
0x62CA	0x6F44      	MOVWF       ?lstr57_FirmV_0_7_0, 1
0x62CC	0x0E38      	MOVLW       56
0x62CE	0x6F45      	MOVWF       ?lstr57_FirmV_0_7_0+1, 1
0x62D0	0x0E20      	MOVLW       32
0x62D2	0x6F46      	MOVWF       ?lstr57_FirmV_0_7_0+2, 1
0x62D4	0x0E4D      	MOVLW       77
0x62D6	0x6F47      	MOVWF       ?lstr57_FirmV_0_7_0+3, 1
0x62D8	0x0E6F      	MOVLW       111
0x62DA	0x6F48      	MOVWF       ?lstr57_FirmV_0_7_0+4, 1
0x62DC	0x0E74      	MOVLW       116
0x62DE	0x6F49      	MOVWF       ?lstr57_FirmV_0_7_0+5, 1
0x62E0	0x0E6F      	MOVLW       111
0x62E2	0x6F4A      	MOVWF       ?lstr57_FirmV_0_7_0+6, 1
0x62E4	0x0E72      	MOVLW       114
0x62E6	0x6F4B      	MOVWF       ?lstr57_FirmV_0_7_0+7, 1
0x62E8	0x0E32      	MOVLW       50
0x62EA	0x6F4C      	MOVWF       ?lstr57_FirmV_0_7_0+8, 1
0x62EC	0x0E53      	MOVLW       83
0x62EE	0x6F4D      	MOVWF       ?lstr57_FirmV_0_7_0+9, 1
0x62F0	0x0E74      	MOVLW       116
0x62F2	0x6F4E      	MOVWF       ?lstr57_FirmV_0_7_0+10, 1
0x62F4	0x0E61      	MOVLW       97
0x62F6	0x6F4F      	MOVWF       ?lstr57_FirmV_0_7_0+11, 1
0x62F8	0x0E72      	MOVLW       114
0x62FA	0x6F50      	MOVWF       ?lstr57_FirmV_0_7_0+12, 1
0x62FC	0x0E74      	MOVLW       116
0x62FE	0x6F51      	MOVWF       ?lstr57_FirmV_0_7_0+13, 1
0x6300	0x6B52      	CLRF        ?lstr57_FirmV_0_7_0+14, 1
0x6302	0x0E44      	MOVLW       ?lstr57_FirmV_0_7_0
0x6304	0x0103      	MOVLB       3
0x6306	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6308	0x0E02      	MOVLW       hi_addr(?lstr57_FirmV_0_7_0)
0x630A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x630C	0xF00BECFA  	CALL        _Logger, 0
0x6310	0x9E83      	BCF         PORTD, 7 
L_State8232:
;FirmV_0_7_0.c,1087 :: 		if(CheckTask(10))
0x6312	0x0E0A      	MOVLW       10
0x6314	0x0103      	MOVLB       3
0x6316	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6318	0xF007EC58  	CALL        _CheckTask, 0
0x631C	0x5200      	MOVF        R0, 1 
0x631E	0xE01F      	BZ          L_State8233
;FirmV_0_7_0.c,1088 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S8 Overflow Flag1 Set");}
0x6320	0x0E01      	MOVLW       1
0x6322	0x0101      	MOVLB       1
0x6324	0x6F16      	MOVWF       _OverloadCheckFlag1, 1
0x6326	0x0E01      	MOVLW       1
0x6328	0x0103      	MOVLB       3
0x632A	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x632C	0xF007EC49  	CALL        _OverloadInit, 0
0x6330	0x0EE4      	MOVLW       ?ICS?lstr58_FirmV_0_7_0
0x6332	0x6EF6      	MOVWF       4086 
0x6334	0x0E72      	MOVLW       hi_addr(?ICS?lstr58_FirmV_0_7_0)
0x6336	0x6EF7      	MOVWF       TBLPTRH 
0x6338	0x0E00      	MOVLW       higher_addr(?ICS?lstr58_FirmV_0_7_0)
0x633A	0x6EF8      	MOVWF       TBLPTRU 
0x633C	0x0E53      	MOVLW       ?lstr58_FirmV_0_7_0
0x633E	0x6EE1      	MOVWF       FSR1L 
0x6340	0x0E02      	MOVLW       hi_addr(?lstr58_FirmV_0_7_0)
0x6342	0x6EE2      	MOVWF       FSR1H 
0x6344	0x0E16      	MOVLW       22
0x6346	0x6E00      	MOVWF       R0 
0x6348	0x0E01      	MOVLW       1
0x634A	0x6E01      	MOVWF       R1 
0x634C	0xF004EC95  	CALL        ___CC2DW, 0
0x6350	0x0E53      	MOVLW       ?lstr58_FirmV_0_7_0
0x6352	0x0103      	MOVLB       3
0x6354	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6356	0x0E02      	MOVLW       hi_addr(?lstr58_FirmV_0_7_0)
0x6358	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x635A	0xF00BECFA  	CALL        _Logger, 0
L_State8233:
;FirmV_0_7_0.c,1090 :: 		if(CheckTask(11))
0x635E	0x0E0B      	MOVLW       11
0x6360	0x0103      	MOVLB       3
0x6362	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6364	0xF007EC58  	CALL        _CheckTask, 0
0x6368	0x5200      	MOVF        R0, 1 
0x636A	0xE01F      	BZ          L_State8234
;FirmV_0_7_0.c,1091 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S8 Overflow Flag2 Set");}
0x636C	0x0E01      	MOVLW       1
0x636E	0x0101      	MOVLB       1
0x6370	0x6F15      	MOVWF       _OverloadCheckFlag2, 1
0x6372	0x0E02      	MOVLW       2
0x6374	0x0103      	MOVLB       3
0x6376	0x6F4F      	MOVWF       FARG_OverloadInit_ch, 1
0x6378	0xF007EC49  	CALL        _OverloadInit, 0
0x637C	0x0EFA      	MOVLW       ?ICS?lstr59_FirmV_0_7_0
0x637E	0x6EF6      	MOVWF       4086 
0x6380	0x0E72      	MOVLW       hi_addr(?ICS?lstr59_FirmV_0_7_0)
0x6382	0x6EF7      	MOVWF       TBLPTRH 
0x6384	0x0E00      	MOVLW       higher_addr(?ICS?lstr59_FirmV_0_7_0)
0x6386	0x6EF8      	MOVWF       TBLPTRU 
0x6388	0x0E69      	MOVLW       ?lstr59_FirmV_0_7_0
0x638A	0x6EE1      	MOVWF       FSR1L 
0x638C	0x0E02      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x638E	0x6EE2      	MOVWF       FSR1H 
0x6390	0x0E16      	MOVLW       22
0x6392	0x6E00      	MOVWF       R0 
0x6394	0x0E01      	MOVLW       1
0x6396	0x6E01      	MOVWF       R1 
0x6398	0xF004EC95  	CALL        ___CC2DW, 0
0x639C	0x0E69      	MOVLW       ?lstr59_FirmV_0_7_0
0x639E	0x0103      	MOVLB       3
0x63A0	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x63A2	0x0E02      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x63A4	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x63A6	0xF00BECFA  	CALL        _Logger, 0
L_State8234:
;FirmV_0_7_0.c,1093 :: 		if(CheckTask(5))
0x63AA	0x0E05      	MOVLW       5
0x63AC	0x0103      	MOVLB       3
0x63AE	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x63B0	0xF007EC58  	CALL        _CheckTask, 0
0x63B4	0x5200      	MOVF        R0, 1 
0x63B6	0xE02E      	BZ          L_State8235
;FirmV_0_7_0.c,1094 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S8 Motor1 Fast");}
0x63B8	0x0E01      	MOVLW       1
0x63BA	0x0103      	MOVLB       3
0x63BC	0x6F4F      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x63BE	0xF350C0BD  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x63C2	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x63C6	0x0100      	MOVLB       0
0x63C8	0x6B97      	CLRF        _M1isSlow, 1
0x63CA	0x0E53      	MOVLW       83
0x63CC	0x0102      	MOVLB       2
0x63CE	0x6F7F      	MOVWF       ?lstr60_FirmV_0_7_0, 1
0x63D0	0x0E38      	MOVLW       56
0x63D2	0x6F80      	MOVWF       ?lstr60_FirmV_0_7_0+1, 1
0x63D4	0x0E20      	MOVLW       32
0x63D6	0x6F81      	MOVWF       ?lstr60_FirmV_0_7_0+2, 1
0x63D8	0x0E4D      	MOVLW       77
0x63DA	0x6F82      	MOVWF       ?lstr60_FirmV_0_7_0+3, 1
0x63DC	0x0E6F      	MOVLW       111
0x63DE	0x6F83      	MOVWF       ?lstr60_FirmV_0_7_0+4, 1
0x63E0	0x0E74      	MOVLW       116
0x63E2	0x6F84      	MOVWF       ?lstr60_FirmV_0_7_0+5, 1
0x63E4	0x0E6F      	MOVLW       111
0x63E6	0x6F85      	MOVWF       ?lstr60_FirmV_0_7_0+6, 1
0x63E8	0x0E72      	MOVLW       114
0x63EA	0x6F86      	MOVWF       ?lstr60_FirmV_0_7_0+7, 1
0x63EC	0x0E31      	MOVLW       49
0x63EE	0x6F87      	MOVWF       ?lstr60_FirmV_0_7_0+8, 1
0x63F0	0x0E20      	MOVLW       32
0x63F2	0x6F88      	MOVWF       ?lstr60_FirmV_0_7_0+9, 1
0x63F4	0x0E46      	MOVLW       70
0x63F6	0x6F89      	MOVWF       ?lstr60_FirmV_0_7_0+10, 1
0x63F8	0x0E61      	MOVLW       97
0x63FA	0x6F8A      	MOVWF       ?lstr60_FirmV_0_7_0+11, 1
0x63FC	0x0E73      	MOVLW       115
0x63FE	0x6F8B      	MOVWF       ?lstr60_FirmV_0_7_0+12, 1
0x6400	0x0E74      	MOVLW       116
0x6402	0x6F8C      	MOVWF       ?lstr60_FirmV_0_7_0+13, 1
0x6404	0x6B8D      	CLRF        ?lstr60_FirmV_0_7_0+14, 1
0x6406	0x0E7F      	MOVLW       ?lstr60_FirmV_0_7_0
0x6408	0x0103      	MOVLB       3
0x640A	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x640C	0x0E02      	MOVLW       hi_addr(?lstr60_FirmV_0_7_0)
0x640E	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x6410	0xF00BECFA  	CALL        _Logger, 0
L_State8235:
;FirmV_0_7_0.c,1096 :: 		if(CheckTask(6))
0x6414	0x0E06      	MOVLW       6
0x6416	0x0103      	MOVLB       3
0x6418	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x641A	0xF007EC58  	CALL        _CheckTask, 0
0x641E	0x5200      	MOVF        R0, 1 
0x6420	0xE02E      	BZ          L_State8236
;FirmV_0_7_0.c,1097 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S8 Motor2 Fast");}
0x6422	0xF34FC096  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x6426	0x0E01      	MOVLW       1
0x6428	0x0103      	MOVLB       3
0x642A	0x6F50      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x642C	0xF007EC78  	CALL        _SetMotorSpeed, 0
0x6430	0x0100      	MOVLB       0
0x6432	0x6B98      	CLRF        _M2isSlow, 1
0x6434	0x0E53      	MOVLW       83
0x6436	0x0102      	MOVLB       2
0x6438	0x6F8E      	MOVWF       ?lstr61_FirmV_0_7_0, 1
0x643A	0x0E38      	MOVLW       56
0x643C	0x6F8F      	MOVWF       ?lstr61_FirmV_0_7_0+1, 1
0x643E	0x0E20      	MOVLW       32
0x6440	0x6F90      	MOVWF       ?lstr61_FirmV_0_7_0+2, 1
0x6442	0x0E4D      	MOVLW       77
0x6444	0x6F91      	MOVWF       ?lstr61_FirmV_0_7_0+3, 1
0x6446	0x0E6F      	MOVLW       111
0x6448	0x6F92      	MOVWF       ?lstr61_FirmV_0_7_0+4, 1
0x644A	0x0E74      	MOVLW       116
0x644C	0x6F93      	MOVWF       ?lstr61_FirmV_0_7_0+5, 1
0x644E	0x0E6F      	MOVLW       111
0x6450	0x6F94      	MOVWF       ?lstr61_FirmV_0_7_0+6, 1
0x6452	0x0E72      	MOVLW       114
0x6454	0x6F95      	MOVWF       ?lstr61_FirmV_0_7_0+7, 1
0x6456	0x0E32      	MOVLW       50
0x6458	0x6F96      	MOVWF       ?lstr61_FirmV_0_7_0+8, 1
0x645A	0x0E20      	MOVLW       32
0x645C	0x6F97      	MOVWF       ?lstr61_FirmV_0_7_0+9, 1
0x645E	0x0E46      	MOVLW       70
0x6460	0x6F98      	MOVWF       ?lstr61_FirmV_0_7_0+10, 1
0x6462	0x0E61      	MOVLW       97
0x6464	0x6F99      	MOVWF       ?lstr61_FirmV_0_7_0+11, 1
0x6466	0x0E73      	MOVLW       115
0x6468	0x6F9A      	MOVWF       ?lstr61_FirmV_0_7_0+12, 1
0x646A	0x0E74      	MOVLW       116
0x646C	0x6F9B      	MOVWF       ?lstr61_FirmV_0_7_0+13, 1
0x646E	0x6B9C      	CLRF        ?lstr61_FirmV_0_7_0+14, 1
0x6470	0x0E8E      	MOVLW       ?lstr61_FirmV_0_7_0
0x6472	0x0103      	MOVLB       3
0x6474	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6476	0x0E02      	MOVLW       hi_addr(?lstr61_FirmV_0_7_0)
0x6478	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x647A	0xF00BECFA  	CALL        _Logger, 0
L_State8236:
;FirmV_0_7_0.c,1099 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(OpenDone.b0))
0x647E	0x0E03      	MOVLW       3
0x6480	0x0103      	MOVLB       3
0x6482	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6484	0xF007EC58  	CALL        _CheckTask, 0
0x6488	0x5200      	MOVF        R0, 1 
0x648A	0xE108      	BNZ         L__State8670
0x648C	0x0101      	MOVLB       1
0x648E	0x5116      	MOVF        _OverloadCheckFlag1, 0, 1
0x6490	0x0A01      	XORLW       1
0x6492	0xE103      	BNZ         L__State8671
0x6494	0xA176      	BTFSS       _Events+5, 0, 1
0x6496	0xD001      	BRA         L__State8671
0x6498	0xD001      	BRA         L__State8670
L__State8671:
0x649A	0xD02E      	BRA         L_State8243
L__State8670:
0x649C	0x0100      	MOVLB       0
0x649E	0xA1C0      	BTFSS       _OpenDone, 0, 1
0x64A0	0xD02B      	BRA         L_State8243
L__State8669:
;FirmV_0_7_0.c,1100 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S8 Motor1 Stop");}
0x64A2	0x91C0      	BCF         _OpenDone, 0, 1
0x64A4	0x0E01      	MOVLW       1
0x64A6	0x0103      	MOVLB       3
0x64A8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x64AA	0xF007EC3B  	CALL        _StopMotor, 0
0x64AE	0x0E53      	MOVLW       83
0x64B0	0x0102      	MOVLB       2
0x64B2	0x6F9D      	MOVWF       ?lstr62_FirmV_0_7_0, 1
0x64B4	0x0E38      	MOVLW       56
0x64B6	0x6F9E      	MOVWF       ?lstr62_FirmV_0_7_0+1, 1
0x64B8	0x0E20      	MOVLW       32
0x64BA	0x6F9F      	MOVWF       ?lstr62_FirmV_0_7_0+2, 1
0x64BC	0x0E4D      	MOVLW       77
0x64BE	0x6FA0      	MOVWF       ?lstr62_FirmV_0_7_0+3, 1
0x64C0	0x0E6F      	MOVLW       111
0x64C2	0x6FA1      	MOVWF       ?lstr62_FirmV_0_7_0+4, 1
0x64C4	0x0E74      	MOVLW       116
0x64C6	0x6FA2      	MOVWF       ?lstr62_FirmV_0_7_0+5, 1
0x64C8	0x0E6F      	MOVLW       111
0x64CA	0x6FA3      	MOVWF       ?lstr62_FirmV_0_7_0+6, 1
0x64CC	0x0E72      	MOVLW       114
0x64CE	0x6FA4      	MOVWF       ?lstr62_FirmV_0_7_0+7, 1
0x64D0	0x0E31      	MOVLW       49
0x64D2	0x6FA5      	MOVWF       ?lstr62_FirmV_0_7_0+8, 1
0x64D4	0x0E20      	MOVLW       32
0x64D6	0x6FA6      	MOVWF       ?lstr62_FirmV_0_7_0+9, 1
0x64D8	0x0E53      	MOVLW       83
0x64DA	0x6FA7      	MOVWF       ?lstr62_FirmV_0_7_0+10, 1
0x64DC	0x0E74      	MOVLW       116
0x64DE	0x6FA8      	MOVWF       ?lstr62_FirmV_0_7_0+11, 1
0x64E0	0x0E6F      	MOVLW       111
0x64E2	0x6FA9      	MOVWF       ?lstr62_FirmV_0_7_0+12, 1
0x64E4	0x0E70      	MOVLW       112
0x64E6	0x6FAA      	MOVWF       ?lstr62_FirmV_0_7_0+13, 1
0x64E8	0x6BAB      	CLRF        ?lstr62_FirmV_0_7_0+14, 1
0x64EA	0x0E9D      	MOVLW       ?lstr62_FirmV_0_7_0
0x64EC	0x0103      	MOVLB       3
0x64EE	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x64F0	0x0E02      	MOVLW       hi_addr(?lstr62_FirmV_0_7_0)
0x64F2	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x64F4	0xF00BECFA  	CALL        _Logger, 0
L_State8243:
;FirmV_0_7_0.c,1102 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(OpenDone.b1))
0x64F8	0x0E04      	MOVLW       4
0x64FA	0x0103      	MOVLB       3
0x64FC	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x64FE	0xF007EC58  	CALL        _CheckTask, 0
0x6502	0x5200      	MOVF        R0, 1 
0x6504	0xE108      	BNZ         L__State8667
0x6506	0x0101      	MOVLB       1
0x6508	0x5115      	MOVF        _OverloadCheckFlag2, 0, 1
0x650A	0x0A01      	XORLW       1
0x650C	0xE103      	BNZ         L__State8668
0x650E	0xA376      	BTFSS       _Events+5, 1, 1
0x6510	0xD001      	BRA         L__State8668
0x6512	0xD001      	BRA         L__State8667
L__State8668:
0x6514	0xD02E      	BRA         L_State8250
L__State8667:
0x6516	0x0100      	MOVLB       0
0x6518	0xA3C0      	BTFSS       _OpenDone, 1, 1
0x651A	0xD02B      	BRA         L_State8250
L__State8666:
;FirmV_0_7_0.c,1103 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S8 Motor2 Stop");}
0x651C	0x93C0      	BCF         _OpenDone, 1, 1
0x651E	0x0E02      	MOVLW       2
0x6520	0x0103      	MOVLB       3
0x6522	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x6524	0xF007EC3B  	CALL        _StopMotor, 0
0x6528	0x0E53      	MOVLW       83
0x652A	0x0102      	MOVLB       2
0x652C	0x6FAC      	MOVWF       ?lstr63_FirmV_0_7_0, 1
0x652E	0x0E38      	MOVLW       56
0x6530	0x6FAD      	MOVWF       ?lstr63_FirmV_0_7_0+1, 1
0x6532	0x0E20      	MOVLW       32
0x6534	0x6FAE      	MOVWF       ?lstr63_FirmV_0_7_0+2, 1
0x6536	0x0E4D      	MOVLW       77
0x6538	0x6FAF      	MOVWF       ?lstr63_FirmV_0_7_0+3, 1
0x653A	0x0E6F      	MOVLW       111
0x653C	0x6FB0      	MOVWF       ?lstr63_FirmV_0_7_0+4, 1
0x653E	0x0E74      	MOVLW       116
0x6540	0x6FB1      	MOVWF       ?lstr63_FirmV_0_7_0+5, 1
0x6542	0x0E6F      	MOVLW       111
0x6544	0x6FB2      	MOVWF       ?lstr63_FirmV_0_7_0+6, 1
0x6546	0x0E72      	MOVLW       114
0x6548	0x6FB3      	MOVWF       ?lstr63_FirmV_0_7_0+7, 1
0x654A	0x0E32      	MOVLW       50
0x654C	0x6FB4      	MOVWF       ?lstr63_FirmV_0_7_0+8, 1
0x654E	0x0E20      	MOVLW       32
0x6550	0x6FB5      	MOVWF       ?lstr63_FirmV_0_7_0+9, 1
0x6552	0x0E53      	MOVLW       83
0x6554	0x6FB6      	MOVWF       ?lstr63_FirmV_0_7_0+10, 1
0x6556	0x0E74      	MOVLW       116
0x6558	0x6FB7      	MOVWF       ?lstr63_FirmV_0_7_0+11, 1
0x655A	0x0E6F      	MOVLW       111
0x655C	0x6FB8      	MOVWF       ?lstr63_FirmV_0_7_0+12, 1
0x655E	0x0E70      	MOVLW       112
0x6560	0x6FB9      	MOVWF       ?lstr63_FirmV_0_7_0+13, 1
0x6562	0x6BBA      	CLRF        ?lstr63_FirmV_0_7_0+14, 1
0x6564	0x0EAC      	MOVLW       ?lstr63_FirmV_0_7_0
0x6566	0x0103      	MOVLB       3
0x6568	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x656A	0x0E02      	MOVLW       hi_addr(?lstr63_FirmV_0_7_0)
0x656C	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x656E	0xF00BECFA  	CALL        _Logger, 0
L_State8250:
;FirmV_0_7_0.c,1105 :: 		if(CheckTask(12))
0x6572	0x0E0C      	MOVLW       12
0x6574	0x0103      	MOVLB       3
0x6576	0x6F4F      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6578	0xF007EC58  	CALL        _CheckTask, 0
0x657C	0x5200      	MOVF        R0, 1 
0x657E	0xE001      	BZ          L_State8251
;FirmV_0_7_0.c,1106 :: 		{Lock=1;}
0x6580	0x8E83      	BSF         PORTD, 7 
L_State8251:
;FirmV_0_7_0.c,1108 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x6582	0x0102      	MOVLB       2
0x6584	0x5113      	MOVF        _Door2OpenTime, 0, 1
0x6586	0x0A00      	XORLW       0
0x6588	0xE005      	BZ          L__State8665
0x658A	0x0100      	MOVLB       0
0x658C	0x519A      	MOVF        _ActiveDoors, 0, 1
0x658E	0x0A01      	XORLW       1
0x6590	0xE001      	BZ          L__State8665
0x6592	0xD002      	BRA         L_State8254
L__State8665:
0x6594	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1109 :: 		OpenDone.b1=0;
0x6596	0x93C0      	BCF         _OpenDone, 1, 1
L_State8254:
;FirmV_0_7_0.c,1111 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x6598	0x0101      	MOVLB       1
0x659A	0xA177      	BTFSS       _Events+6, 0, 1
0x659C	0xD04E      	BRA         L_State8257
0x659E	0x0102      	MOVLB       2
0x65A0	0x530E      	MOVF        _OpenPhEnable, 1, 1
0x65A2	0xE04B      	BZ          L_State8257
L__State8664:
;FirmV_0_7_0.c,1112 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S8 Photocell Int");ClearTasks(9);
0x65A4	0x0E01      	MOVLW       1
0x65A6	0x0103      	MOVLB       3
0x65A8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x65AA	0xF007EC3B  	CALL        _StopMotor, 0
0x65AE	0x0E02      	MOVLW       2
0x65B0	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x65B2	0xF007EC3B  	CALL        _StopMotor, 0
0x65B6	0x0101      	MOVLB       1
0x65B8	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x65BA	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x65BC	0x0E05      	MOVLW       5
0x65BE	0x0100      	MOVLB       0
0x65C0	0x6FF2      	MOVWF       _State, 1
0x65C2	0x0E4C      	MOVLW       ?ICS?lstr64_FirmV_0_7_0
0x65C4	0x6EF6      	MOVWF       4086 
0x65C6	0x0E73      	MOVLW       hi_addr(?ICS?lstr64_FirmV_0_7_0)
0x65C8	0x6EF7      	MOVWF       TBLPTRH 
0x65CA	0x0E00      	MOVLW       higher_addr(?ICS?lstr64_FirmV_0_7_0)
0x65CC	0x6EF8      	MOVWF       TBLPTRU 
0x65CE	0x0EBB      	MOVLW       ?lstr64_FirmV_0_7_0
0x65D0	0x6EE1      	MOVWF       FSR1L 
0x65D2	0x0E02      	MOVLW       hi_addr(?lstr64_FirmV_0_7_0)
0x65D4	0x6EE2      	MOVWF       FSR1H 
0x65D6	0x0E11      	MOVLW       17
0x65D8	0x6E00      	MOVWF       R0 
0x65DA	0x0E01      	MOVLW       1
0x65DC	0x6E01      	MOVWF       R1 
0x65DE	0xF004EC95  	CALL        ___CC2DW, 0
0x65E2	0x0EBB      	MOVLW       ?lstr64_FirmV_0_7_0
0x65E4	0x0103      	MOVLB       3
0x65E6	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x65E8	0x0E02      	MOVLW       hi_addr(?lstr64_FirmV_0_7_0)
0x65EA	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x65EC	0xF00BECFA  	CALL        _Logger, 0
0x65F0	0x0E09      	MOVLW       9
0x65F2	0x0103      	MOVLB       3
0x65F4	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x65F6	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1113 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;}
0x65FA	0x0EF3      	MOVLW       _LCDLine1
0x65FC	0x0105      	MOVLB       5
0x65FE	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x6600	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6602	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6604	0x0E4D      	MOVLW       __stop
0x6606	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6608	0x0E00      	MOVLW       hi_addr(__stop)
0x660A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x660C	0x0E10      	MOVLW       16
0x660E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x6610	0x0E00      	MOVLW       0
0x6612	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6614	0xF000ECFC  	CALL        _memcpy, 0
0x6618	0x0E04      	MOVLW       _LCDLine2
0x661A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x661C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x661E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6620	0x0E1A      	MOVLW       __errPhoto
0x6622	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6624	0x0E00      	MOVLW       hi_addr(__errPhoto)
0x6626	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x6628	0x0E10      	MOVLW       16
0x662A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x662C	0x0E00      	MOVLW       0
0x662E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6630	0xF000ECFC  	CALL        _memcpy, 0
0x6634	0x0E01      	MOVLW       1
0x6636	0x0101      	MOVLB       1
0x6638	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8257:
0x663A	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1115 :: 		if((Events.Remote!=0))
0x663C	0x5175      	MOVF        _Events+4, 0, 1
0x663E	0x0A00      	XORLW       0
0x6640	0xE04B      	BZ          L_State8258
;FirmV_0_7_0.c,1116 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Motors Stoped (Remote)");ClearTasks(9);
0x6642	0x0E01      	MOVLW       1
0x6644	0x0103      	MOVLB       3
0x6646	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x6648	0xF007EC3B  	CALL        _StopMotor, 0
0x664C	0x0E02      	MOVLW       2
0x664E	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x6650	0xF007EC3B  	CALL        _StopMotor, 0
0x6654	0x0E05      	MOVLW       5
0x6656	0x0100      	MOVLB       0
0x6658	0x6FF2      	MOVWF       _State, 1
0x665A	0x0101      	MOVLB       1
0x665C	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x665E	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x6660	0x0E5D      	MOVLW       ?ICS?lstr65_FirmV_0_7_0
0x6662	0x6EF6      	MOVWF       4086 
0x6664	0x0E73      	MOVLW       hi_addr(?ICS?lstr65_FirmV_0_7_0)
0x6666	0x6EF7      	MOVWF       TBLPTRH 
0x6668	0x0E00      	MOVLW       higher_addr(?ICS?lstr65_FirmV_0_7_0)
0x666A	0x6EF8      	MOVWF       TBLPTRU 
0x666C	0x0ECC      	MOVLW       ?lstr65_FirmV_0_7_0
0x666E	0x6EE1      	MOVWF       FSR1L 
0x6670	0x0E02      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x6672	0x6EE2      	MOVWF       FSR1H 
0x6674	0x0E1A      	MOVLW       26
0x6676	0x6E00      	MOVWF       R0 
0x6678	0x0E01      	MOVLW       1
0x667A	0x6E01      	MOVWF       R1 
0x667C	0xF004EC95  	CALL        ___CC2DW, 0
0x6680	0x0ECC      	MOVLW       ?lstr65_FirmV_0_7_0
0x6682	0x0103      	MOVLB       3
0x6684	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6686	0x0E02      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x6688	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x668A	0xF00BECFA  	CALL        _Logger, 0
0x668E	0x0E09      	MOVLW       9
0x6690	0x0103      	MOVLB       3
0x6692	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x6694	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1117 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;}
0x6698	0x0EF3      	MOVLW       _LCDLine1
0x669A	0x0105      	MOVLB       5
0x669C	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x669E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x66A0	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x66A2	0x0E4D      	MOVLW       __stop
0x66A4	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x66A6	0x0E00      	MOVLW       hi_addr(__stop)
0x66A8	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x66AA	0x0E10      	MOVLW       16
0x66AC	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x66AE	0x0E00      	MOVLW       0
0x66B0	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x66B2	0xF000ECFC  	CALL        _memcpy, 0
0x66B6	0x0E04      	MOVLW       _LCDLine2
0x66B8	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x66BA	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x66BC	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x66BE	0x0E3C      	MOVLW       __errRemote
0x66C0	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x66C2	0x0E00      	MOVLW       hi_addr(__errRemote)
0x66C4	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x66C6	0x0E10      	MOVLW       16
0x66C8	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x66CA	0x0E00      	MOVLW       0
0x66CC	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x66CE	0xF000ECFC  	CALL        _memcpy, 0
0x66D2	0x0E01      	MOVLW       1
0x66D4	0x0101      	MOVLB       1
0x66D6	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8258:
;FirmV_0_7_0.c,1119 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x66D8	0x5178      	MOVF        _Events+7, 0, 1
0x66DA	0x0A01      	XORLW       1
0x66DC	0xE14E      	BNZ         L_State8261
0x66DE	0x0102      	MOVLB       2
0x66E0	0x530F      	MOVF        _LimiterEnable, 1, 1
0x66E2	0xE04B      	BZ          L_State8261
L__State8663:
;FirmV_0_7_0.c,1120 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Limit Switch Stop");ClearTasks(9);
0x66E4	0x0E01      	MOVLW       1
0x66E6	0x0103      	MOVLB       3
0x66E8	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x66EA	0xF007EC3B  	CALL        _StopMotor, 0
0x66EE	0x0E02      	MOVLW       2
0x66F0	0x6F4F      	MOVWF       FARG_StopMotor_Mx, 1
0x66F2	0xF007EC3B  	CALL        _StopMotor, 0
0x66F6	0x0E05      	MOVLW       5
0x66F8	0x0100      	MOVLB       0
0x66FA	0x6FF2      	MOVWF       _State, 1
0x66FC	0x0101      	MOVLB       1
0x66FE	0x6B16      	CLRF        _OverloadCheckFlag1, 1
0x6700	0x6B15      	CLRF        _OverloadCheckFlag2, 1
0x6702	0x0E77      	MOVLW       ?ICS?lstr66_FirmV_0_7_0
0x6704	0x6EF6      	MOVWF       4086 
0x6706	0x0E73      	MOVLW       hi_addr(?ICS?lstr66_FirmV_0_7_0)
0x6708	0x6EF7      	MOVWF       TBLPTRH 
0x670A	0x0E00      	MOVLW       higher_addr(?ICS?lstr66_FirmV_0_7_0)
0x670C	0x6EF8      	MOVWF       TBLPTRU 
0x670E	0x0EE6      	MOVLW       ?lstr66_FirmV_0_7_0
0x6710	0x6EE1      	MOVWF       FSR1L 
0x6712	0x0E02      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x6714	0x6EE2      	MOVWF       FSR1H 
0x6716	0x0E15      	MOVLW       21
0x6718	0x6E00      	MOVWF       R0 
0x671A	0x0E01      	MOVLW       1
0x671C	0x6E01      	MOVWF       R1 
0x671E	0xF004EC95  	CALL        ___CC2DW, 0
0x6722	0x0EE6      	MOVLW       ?lstr66_FirmV_0_7_0
0x6724	0x0103      	MOVLB       3
0x6726	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6728	0x0E02      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x672A	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x672C	0xF00BECFA  	CALL        _Logger, 0
0x6730	0x0E09      	MOVLW       9
0x6732	0x0103      	MOVLB       3
0x6734	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x6736	0xF006EC91  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1121 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;}
0x673A	0x0EF3      	MOVLW       _LCDLine1
0x673C	0x0105      	MOVLB       5
0x673E	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x6740	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6742	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6744	0x0E4D      	MOVLW       __stop
0x6746	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6748	0x0E00      	MOVLW       hi_addr(__stop)
0x674A	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x674C	0x0E10      	MOVLW       16
0x674E	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x6750	0x0E00      	MOVLW       0
0x6752	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6754	0xF000ECFC  	CALL        _memcpy, 0
0x6758	0x0E04      	MOVLW       _LCDLine2
0x675A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x675C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x675E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6760	0x0E2B      	MOVLW       __errLimit
0x6762	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6764	0x0E00      	MOVLW       hi_addr(__errLimit)
0x6766	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x6768	0x0E10      	MOVLW       16
0x676A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x676C	0x0E00      	MOVLW       0
0x676E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6770	0xF000ECFC  	CALL        _memcpy, 0
0x6774	0x0E01      	MOVLW       1
0x6776	0x0101      	MOVLB       1
0x6778	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8261:
;FirmV_0_7_0.c,1123 :: 		if(OpenDone==0)
0x677A	0x0100      	MOVLB       0
0x677C	0x51C0      	MOVF        _OpenDone, 0, 1
0x677E	0x0A00      	XORLW       0
0x6780	0xE128      	BNZ         L_State8262
;FirmV_0_7_0.c,1124 :: 		{State=2; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_open,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;}
0x6782	0x0E02      	MOVLW       2
0x6784	0x6FF2      	MOVWF       _State, 1
0x6786	0x6BBE      	CLRF        _PassFlag, 1
0x6788	0x0E09      	MOVLW       9
0x678A	0x0103      	MOVLB       3
0x678C	0x6F4F      	MOVWF       FARG_ClearTasks_except, 1
0x678E	0xF006EC91  	CALL        _ClearTasks, 0
0x6792	0x0EF3      	MOVLW       _LCDLine1
0x6794	0x0105      	MOVLB       5
0x6796	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x6798	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x679A	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x679C	0x0EDB      	MOVLW       __open
0x679E	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x67A0	0x0E00      	MOVLW       hi_addr(__open)
0x67A2	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x67A4	0x0E10      	MOVLW       16
0x67A6	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x67A8	0x0E00      	MOVLW       0
0x67AA	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x67AC	0xF000ECFC  	CALL        _memcpy, 0
0x67B0	0x0E04      	MOVLW       _LCDLine2
0x67B2	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x67B4	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x67B6	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x67B8	0x0EAC      	MOVLW       __Blank
0x67BA	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x67BC	0x0E00      	MOVLW       hi_addr(__Blank)
0x67BE	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x67C0	0x0E10      	MOVLW       16
0x67C2	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x67C4	0x0E00      	MOVLW       0
0x67C6	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x67C8	0xF000ECFC  	CALL        _memcpy, 0
0x67CC	0x0E01      	MOVLW       1
0x67CE	0x0101      	MOVLB       1
0x67D0	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8262:
;FirmV_0_7_0.c,1126 :: 		if((State==5)||(State==6))
0x67D2	0x0100      	MOVLB       0
0x67D4	0x51F2      	MOVF        _State, 0, 1
0x67D6	0x0A05      	XORLW       5
0x67D8	0xE004      	BZ          L__State8662
0x67DA	0x51F2      	MOVF        _State, 0, 1
0x67DC	0x0A06      	XORLW       6
0x67DE	0xE001      	BZ          L__State8662
0x67E0	0xD04C      	BRA         L_State8265
L__State8662:
;FirmV_0_7_0.c,1127 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S8 Autoclose Renewed");memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;}}
0x67E2	0x0103      	MOVLB       3
0x67E4	0x6B4F      	CLRF        FARG_ClearTasks_except, 1
0x67E6	0xF006EC91  	CALL        _ClearTasks, 0
0x67EA	0x0E00      	MOVLW       0
0x67EC	0x0102      	MOVLB       2
0x67EE	0x1912      	XORWF       _AutoCloseTime+1, 0, 1
0x67F0	0xE102      	BNZ         L__State8728
0x67F2	0x0E00      	MOVLW       0
0x67F4	0x1911      	XORWF       _AutoCloseTime, 0, 1
L__State8728:
0x67F6	0xE041      	BZ          L_State8266
0x67F8	0x5111      	MOVF        _AutoCloseTime, 0, 1
0x67FA	0x0100      	MOVLB       0
0x67FC	0x25EE      	ADDWF       _ms500, 0, 1
0x67FE	0x0103      	MOVLB       3
0x6800	0x6F4F      	MOVWF       FARG_AddTask_OccTime, 1
0x6802	0x0102      	MOVLB       2
0x6804	0x5112      	MOVF        _AutoCloseTime+1, 0, 1
0x6806	0x0100      	MOVLB       0
0x6808	0x21EF      	ADDWFC      _ms500+1, 0, 1
0x680A	0x0103      	MOVLB       3
0x680C	0x6F50      	MOVWF       FARG_AddTask_OccTime+1, 1
0x680E	0x0E00      	MOVLW       0
0x6810	0x0100      	MOVLB       0
0x6812	0x21F0      	ADDWFC      _ms500+2, 0, 1
0x6814	0x0103      	MOVLB       3
0x6816	0x6F51      	MOVWF       FARG_AddTask_OccTime+2, 1
0x6818	0x0E00      	MOVLW       0
0x681A	0x0100      	MOVLB       0
0x681C	0x21F1      	ADDWFC      _ms500+3, 0, 1
0x681E	0x0103      	MOVLB       3
0x6820	0x6F52      	MOVWF       FARG_AddTask_OccTime+3, 1
0x6822	0x0E09      	MOVLW       9
0x6824	0x6F53      	MOVWF       FARG_AddTask_tcode, 1
0x6826	0xF00DEC7B  	CALL        _AddTask, 0
0x682A	0x0E8C      	MOVLW       ?ICS?lstr67_FirmV_0_7_0
0x682C	0x6EF6      	MOVWF       4086 
0x682E	0x0E73      	MOVLW       hi_addr(?ICS?lstr67_FirmV_0_7_0)
0x6830	0x6EF7      	MOVWF       TBLPTRH 
0x6832	0x0E00      	MOVLW       higher_addr(?ICS?lstr67_FirmV_0_7_0)
0x6834	0x6EF8      	MOVWF       TBLPTRU 
0x6836	0x0EFB      	MOVLW       ?lstr67_FirmV_0_7_0
0x6838	0x6EE1      	MOVWF       FSR1L 
0x683A	0x0E02      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x683C	0x6EE2      	MOVWF       FSR1H 
0x683E	0x0E15      	MOVLW       21
0x6840	0x6E00      	MOVWF       R0 
0x6842	0x0E01      	MOVLW       1
0x6844	0x6E01      	MOVWF       R1 
0x6846	0xF004EC95  	CALL        ___CC2DW, 0
0x684A	0x0EFB      	MOVLW       ?lstr67_FirmV_0_7_0
0x684C	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x684E	0x0E02      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x6850	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x6852	0xF00BECFA  	CALL        _Logger, 0
0x6856	0x0E04      	MOVLW       _LCDLine2
0x6858	0x0105      	MOVLB       5
0x685A	0x6F04      	MOVWF       FARG_memcpy_d1, 1
0x685C	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x685E	0x6F05      	MOVWF       FARG_memcpy_d1+1, 1
0x6860	0x0E84      	MOVLW       __autoclose
0x6862	0x6F06      	MOVWF       FARG_memcpy_s1, 1
0x6864	0x0E00      	MOVLW       hi_addr(__autoclose)
0x6866	0x6F07      	MOVWF       FARG_memcpy_s1+1, 1
0x6868	0x0E10      	MOVLW       16
0x686A	0x6F08      	MOVWF       FARG_memcpy_n, 1
0x686C	0x0E00      	MOVLW       0
0x686E	0x6F09      	MOVWF       FARG_memcpy_n+1, 1
0x6870	0xF000ECFC  	CALL        _memcpy, 0
0x6874	0x0E01      	MOVLW       1
0x6876	0x0101      	MOVLB       1
0x6878	0x6F1D      	MOVWF       _LCDUpdateFlag, 1
L_State8266:
L_State8265:
;FirmV_0_7_0.c,1130 :: 		}
0x687A	0x0012      	RETURN      0
; end of _State8
_ResetTaskEvents:
;FirmV_0_7_0.c,316 :: 		void ResetTaskEvents()
;FirmV_0_7_0.c,318 :: 		Events.Task1=0;
0x687C	0x0101      	MOVLB       1
0x687E	0x6B72      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,319 :: 		Events.Task2=0;
0x6880	0x6B73      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,320 :: 		Events.Task3=0;
0x6882	0x6B74      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,321 :: 		}
0x6884	0x0012      	RETURN      0
; end of _ResetTaskEvents
_TaskManager:
;FirmV_0_7_0.c,1258 :: 		void TaskManager()
;FirmV_0_7_0.c,1260 :: 		char i=0;
0x6886	0x0102      	MOVLB       2
0x6888	0x6B25      	CLRF        TaskManager_i_L0, 1
;FirmV_0_7_0.c,1261 :: 		for(i=0;i<20;i++)
0x688A	0x6B25      	CLRF        TaskManager_i_L0, 1
L_TaskManager274:
0x688C	0x0E14      	MOVLW       20
0x688E	0x5D25      	SUBWF       TaskManager_i_L0, 0, 1
0x6890	0xE270      	BC          L_TaskManager275
;FirmV_0_7_0.c,1262 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Time==ms500)&&(Tasks[i].Fired==0))
0x6892	0xF000C225  	MOVFF       TaskManager_i_L0, R0
0x6896	0x0E00      	MOVLW       0
0x6898	0x6E01      	MOVWF       R1 
0x689A	0x0E07      	MOVLW       7
0x689C	0x6E04      	MOVWF       R4 
0x689E	0x0E00      	MOVLW       0
0x68A0	0x6E05      	MOVWF       R5 
0x68A2	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x68A6	0x0E82      	MOVLW       _Tasks
0x68A8	0x2600      	ADDWF       R0, 1 
0x68AA	0x0E01      	MOVLW       hi_addr(_Tasks)
0x68AC	0x2201      	ADDWFC      R1, 1 
0x68AE	0x0E05      	MOVLW       5
0x68B0	0x2400      	ADDWF       R0, 0 
0x68B2	0x6EE9      	MOVWF       FSR0L 
0x68B4	0x0E00      	MOVLW       0
0x68B6	0x2001      	ADDWFC      R1, 0 
0x68B8	0x6EEA      	MOVWF       FSR0H 
0x68BA	0x50EE      	MOVF        POSTINC0, 0 
0x68BC	0x0A00      	XORLW       0
0x68BE	0xE156      	BNZ         L_TaskManager279
0x68C0	0xF000C225  	MOVFF       TaskManager_i_L0, R0
0x68C4	0x0E00      	MOVLW       0
0x68C6	0x6E01      	MOVWF       R1 
0x68C8	0x0E07      	MOVLW       7
0x68CA	0x6E04      	MOVWF       R4 
0x68CC	0x0E00      	MOVLW       0
0x68CE	0x6E05      	MOVWF       R5 
0x68D0	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x68D4	0x0E82      	MOVLW       _Tasks
0x68D6	0x2600      	ADDWF       R0, 1 
0x68D8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x68DA	0x2201      	ADDWFC      R1, 1 
0x68DC	0x0E01      	MOVLW       1
0x68DE	0x2400      	ADDWF       R0, 0 
0x68E0	0x6EE9      	MOVWF       FSR0L 
0x68E2	0x0E00      	MOVLW       0
0x68E4	0x2001      	ADDWFC      R1, 0 
0x68E6	0x6EEA      	MOVWF       FSR0H 
0x68E8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x68EC	0xF002CFEE  	MOVFF       POSTINC0, R2
0x68F0	0xF003CFEE  	MOVFF       POSTINC0, R3
0x68F4	0xF004CFEE  	MOVFF       POSTINC0, R4
0x68F8	0x5004      	MOVF        R4, 0 
0x68FA	0x0100      	MOVLB       0
0x68FC	0x19F1      	XORWF       _ms500+3, 0, 1
0x68FE	0xE108      	BNZ         L__TaskManager729
0x6900	0x5003      	MOVF        R3, 0 
0x6902	0x19F0      	XORWF       _ms500+2, 0, 1
0x6904	0xE105      	BNZ         L__TaskManager729
0x6906	0x5002      	MOVF        R2, 0 
0x6908	0x19EF      	XORWF       _ms500+1, 0, 1
0x690A	0xE102      	BNZ         L__TaskManager729
0x690C	0x5001      	MOVF        R1, 0 
0x690E	0x19EE      	XORWF       _ms500, 0, 1
L__TaskManager729:
0x6910	0xE12D      	BNZ         L_TaskManager279
0x6912	0xF000C225  	MOVFF       TaskManager_i_L0, R0
0x6916	0x0E00      	MOVLW       0
0x6918	0x6E01      	MOVWF       R1 
0x691A	0x0E07      	MOVLW       7
0x691C	0x6E04      	MOVWF       R4 
0x691E	0x0E00      	MOVLW       0
0x6920	0x6E05      	MOVWF       R5 
0x6922	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6926	0x0E82      	MOVLW       _Tasks
0x6928	0x2600      	ADDWF       R0, 1 
0x692A	0x0E01      	MOVLW       hi_addr(_Tasks)
0x692C	0x2201      	ADDWFC      R1, 1 
0x692E	0x0E06      	MOVLW       6
0x6930	0x2400      	ADDWF       R0, 0 
0x6932	0x6EE9      	MOVWF       FSR0L 
0x6934	0x0E00      	MOVLW       0
0x6936	0x2001      	ADDWFC      R1, 0 
0x6938	0x6EEA      	MOVWF       FSR0H 
0x693A	0x50EE      	MOVF        POSTINC0, 0 
0x693C	0x0A00      	XORLW       0
0x693E	0xE116      	BNZ         L_TaskManager279
L__TaskManager672:
;FirmV_0_7_0.c,1263 :: 		Tasks[i].Fired=1;
0x6940	0xF000C225  	MOVFF       TaskManager_i_L0, R0
0x6944	0x0E00      	MOVLW       0
0x6946	0x6E01      	MOVWF       R1 
0x6948	0x0E07      	MOVLW       7
0x694A	0x6E04      	MOVWF       R4 
0x694C	0x0E00      	MOVLW       0
0x694E	0x6E05      	MOVWF       R5 
0x6950	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6954	0x0E82      	MOVLW       _Tasks
0x6956	0x2600      	ADDWF       R0, 1 
0x6958	0x0E01      	MOVLW       hi_addr(_Tasks)
0x695A	0x2201      	ADDWFC      R1, 1 
0x695C	0x0E06      	MOVLW       6
0x695E	0x2400      	ADDWF       R0, 0 
0x6960	0x6EE1      	MOVWF       FSR1L 
0x6962	0x0E00      	MOVLW       0
0x6964	0x2001      	ADDWFC      R1, 0 
0x6966	0x6EE2      	MOVWF       FSR1H 
0x6968	0x0E01      	MOVLW       1
0x696A	0x6EE6      	MOVWF       POSTINC1 
L_TaskManager279:
;FirmV_0_7_0.c,1261 :: 		for(i=0;i<20;i++)
0x696C	0x0102      	MOVLB       2
0x696E	0x2B25      	INCF        TaskManager_i_L0, 1, 1
;FirmV_0_7_0.c,1263 :: 		Tasks[i].Fired=1;
0x6970	0xD78D      	BRA         L_TaskManager274
L_TaskManager275:
;FirmV_0_7_0.c,1264 :: 		}
0x6972	0x0012      	RETURN      0
; end of _TaskManager
_Init:
;FirmV_0_7_0.c,1177 :: 		void Init()
;FirmV_0_7_0.c,1179 :: 		char i=0;
0x6974	0x0102      	MOVLB       2
0x6976	0x6B25      	CLRF        Init_i_L0, 1
;FirmV_0_7_0.c,1181 :: 		porta=0;
0x6978	0x6A80      	CLRF        PORTA 
;FirmV_0_7_0.c,1182 :: 		portb=0;
0x697A	0x6A81      	CLRF        PORTB 
;FirmV_0_7_0.c,1183 :: 		portc=0;
0x697C	0x6A82      	CLRF        PORTC 
;FirmV_0_7_0.c,1184 :: 		portd=0;
0x697E	0x6A83      	CLRF        PORTD 
;FirmV_0_7_0.c,1185 :: 		porte=0;
0x6980	0x6A84      	CLRF        PORTE 
;FirmV_0_7_0.c,1186 :: 		trisa=0b111111;
0x6982	0x0E3F      	MOVLW       63
0x6984	0x6E92      	MOVWF       TRISA 
;FirmV_0_7_0.c,1187 :: 		trisb=0b00000111;
0x6986	0x0E07      	MOVLW       7
0x6988	0x6E93      	MOVWF       TRISB 
;FirmV_0_7_0.c,1188 :: 		trisc=0b10000000;
0x698A	0x0E80      	MOVLW       128
0x698C	0x6E94      	MOVWF       TRISC 
;FirmV_0_7_0.c,1189 :: 		trisd=0b01111111;
0x698E	0x0E7F      	MOVLW       127
0x6990	0x6E95      	MOVWF       TRISD 
;FirmV_0_7_0.c,1190 :: 		trise=0b001;
0x6992	0x0E01      	MOVLW       1
0x6994	0x6E96      	MOVWF       TRISE 
;FirmV_0_7_0.c,1191 :: 		adcon1=0b1001;  // an6 and an7 is digital
0x6996	0x0E09      	MOVLW       9
0x6998	0x6EC1      	MOVWF       ADCON1 
;FirmV_0_7_0.c,1196 :: 		lcd_init();
0x699A	0xF012EC2D  	CALL        _Lcd_Init, 0
;FirmV_0_7_0.c,1197 :: 		lcd_cmd(_LCD_CURSOR_OFF);
0x699E	0x0E0C      	MOVLW       12
0x69A0	0x0104      	MOVLB       4
0x69A2	0x6FF8      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x69A4	0xF005EC04  	CALL        _Lcd_Cmd, 0
;FirmV_0_7_0.c,1200 :: 		ms500=0;
0x69A8	0x0100      	MOVLB       0
0x69AA	0x6BEE      	CLRF        _ms500, 1
0x69AC	0x6BEF      	CLRF        _ms500+1, 1
0x69AE	0x6BF0      	CLRF        _ms500+2, 1
0x69B0	0x6BF1      	CLRF        _ms500+3, 1
;FirmV_0_7_0.c,1201 :: 		t0con=0b10000101; //enable tmr0 and prescalar
0x69B2	0x0E85      	MOVLW       133
0x69B4	0x6ED5      	MOVWF       T0CON 
;FirmV_0_7_0.c,1202 :: 		intcon.b7=1;   //global int enable
0x69B6	0x8EF2      	BSF         INTCON, 7 
;FirmV_0_7_0.c,1203 :: 		intcon.b5=1;  //tmr0 int enable
0x69B8	0x8AF2      	BSF         INTCON, 5 
;FirmV_0_7_0.c,1204 :: 		intcon.b2=0; //tmr0 flag
0x69BA	0x94F2      	BCF         INTCON, 2 
;FirmV_0_7_0.c,1205 :: 		tmr0h=0xF3;
0x69BC	0x0EF3      	MOVLW       243
0x69BE	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,1206 :: 		tmr0l=0xCA;
0x69C0	0x0ECA      	MOVLW       202
0x69C2	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,1209 :: 		INT1IP_bit=1;
0x69C4	0x8CF0      	BSF         INT1IP_bit, 6 
;FirmV_0_7_0.c,1210 :: 		INT1E_bit=1;
0x69C6	0x86F0      	BSF         INT1E_bit, 3 
;FirmV_0_7_0.c,1211 :: 		INT1F_bit=0;
0x69C8	0x90F0      	BCF         INT1F_bit, 0 
;FirmV_0_7_0.c,1212 :: 		INT2IP_bit=1;
0x69CA	0x8EF0      	BSF         INT2IP_bit, 7 
;FirmV_0_7_0.c,1213 :: 		INT2E_bit=1;
0x69CC	0x88F0      	BSF         INT2E_bit, 4 
;FirmV_0_7_0.c,1214 :: 		INT2F_bit=0;
0x69CE	0x92F0      	BCF         INT2F_bit, 1 
;FirmV_0_7_0.c,1215 :: 		INTEDG1_bit=1;
0x69D0	0x8AF1      	BSF         INTEDG1_bit, 5 
;FirmV_0_7_0.c,1216 :: 		INTEDG2_bit=1;
0x69D2	0x88F1      	BSF         INTEDG2_bit, 4 
;FirmV_0_7_0.c,1219 :: 		INT0F_bit=0;
0x69D4	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,1220 :: 		INT0E_bit=0;
0x69D6	0x98F2      	BCF         INT0E_bit, 4 
;FirmV_0_7_0.c,1223 :: 		for(i=0;i<20;i++)
0x69D8	0x0102      	MOVLB       2
0x69DA	0x6B25      	CLRF        Init_i_L0, 1
L_Init271:
0x69DC	0x0E14      	MOVLW       20
0x69DE	0x5D25      	SUBWF       Init_i_L0, 0, 1
0x69E0	0xE218      	BC          L_Init272
;FirmV_0_7_0.c,1224 :: 		Tasks[i].Expired=1;
0x69E2	0xF000C225  	MOVFF       Init_i_L0, R0
0x69E6	0x0E00      	MOVLW       0
0x69E8	0x6E01      	MOVWF       R1 
0x69EA	0x0E07      	MOVLW       7
0x69EC	0x6E04      	MOVWF       R4 
0x69EE	0x0E00      	MOVLW       0
0x69F0	0x6E05      	MOVWF       R5 
0x69F2	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x69F6	0x0E82      	MOVLW       _Tasks
0x69F8	0x2600      	ADDWF       R0, 1 
0x69FA	0x0E01      	MOVLW       hi_addr(_Tasks)
0x69FC	0x2201      	ADDWFC      R1, 1 
0x69FE	0x0E05      	MOVLW       5
0x6A00	0x2400      	ADDWF       R0, 0 
0x6A02	0x6EE1      	MOVWF       FSR1L 
0x6A04	0x0E00      	MOVLW       0
0x6A06	0x2001      	ADDWFC      R1, 0 
0x6A08	0x6EE2      	MOVWF       FSR1H 
0x6A0A	0x0E01      	MOVLW       1
0x6A0C	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,1223 :: 		for(i=0;i<20;i++)
0x6A0E	0x2B25      	INCF        Init_i_L0, 1, 1
;FirmV_0_7_0.c,1224 :: 		Tasks[i].Expired=1;
0x6A10	0xD7E5      	BRA         L_Init271
L_Init272:
;FirmV_0_7_0.c,1227 :: 		Events.Keys=0;
0x6A12	0x0101      	MOVLB       1
0x6A14	0x6B71      	CLRF        _Events, 1
;FirmV_0_7_0.c,1228 :: 		Events.Task1=0;
0x6A16	0x6B72      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,1229 :: 		Events.Task2=0;
0x6A18	0x6B73      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,1230 :: 		Events.Task3=0;
0x6A1A	0x6B74      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,1231 :: 		Events.Remote=0;
0x6A1C	0x6B75      	CLRF        _Events+4, 1
;FirmV_0_7_0.c,1232 :: 		Events.Overload=0;
0x6A1E	0x6B76      	CLRF        _Events+5, 1
;FirmV_0_7_0.c,1233 :: 		Events.Photocell=0;
0x6A20	0x6B77      	CLRF        _Events+6, 1
;FirmV_0_7_0.c,1236 :: 		State=0;
0x6A22	0x0100      	MOVLB       0
0x6A24	0x6BF2      	CLRF        _State, 1
;FirmV_0_7_0.c,1239 :: 		UART1_init(115200);
0x6A26	0x0E15      	MOVLW       21
0x6A28	0x6EAF      	MOVWF       SPBRG 
0x6A2A	0x84AC      	BSF         TXSTA, 2, 0
0x6A2C	0xF012EC90  	CALL        _UART1_Init, 0
;FirmV_0_7_0.c,1242 :: 		LoadConfigs();
0x6A30	0xF006ECD8  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,1244 :: 		}
0x6A34	0x0012      	RETURN      0
; end of _Init
_EventHandler:
;FirmV_0_7_0.c,1298 :: 		void EventHandler()
;FirmV_0_7_0.c,1301 :: 		Events.ExternalKeys=GetExternalKeysState();
0x6A36	0xF011ECD9  	CALL        _GetExternalKeysState, 0
0x6A3A	0xF179C000  	MOVFF       R0, _Events+8
;FirmV_0_7_0.c,1302 :: 		Events.Limiter=GetLimitSwitchState();
0x6A3E	0xF00DECF3  	CALL        _GetLimitSwitchState, 0
0x6A42	0xF178C000  	MOVFF       R0, _Events+7
;FirmV_0_7_0.c,1303 :: 		Events.Keys=GetKeysState();
0x6A46	0xF010ECC1  	CALL        _GetKeysState, 0
0x6A4A	0xF171C000  	MOVFF       R0, _Events
;FirmV_0_7_0.c,1304 :: 		Events.Remote=GetRemoteState();
0x6A4E	0xF017ECE1  	CALL        _GetRemoteState, 0
0x6A52	0xF175C000  	MOVFF       R0, _Events+4
;FirmV_0_7_0.c,1305 :: 		Events.Overload=GetOverloadState();
0x6A56	0xF030EC9A  	CALL        _GetOverloadState, 0
0x6A5A	0xF176C000  	MOVFF       R0, _Events+5
;FirmV_0_7_0.c,1306 :: 		Events.Photocell=GetPhotocellState();
0x6A5E	0xF030ECEE  	CALL        _GetPhotocellState, 0
0x6A62	0xF177C000  	MOVFF       R0, _Events+6
;FirmV_0_7_0.c,1308 :: 		for(i=0;i<20;i++)
0x6A66	0x0102      	MOVLB       2
0x6A68	0x6B25      	CLRF        EventHandler_i_L0, 1
L_EventHandler284:
0x6A6A	0x0E14      	MOVLW       20
0x6A6C	0x5D25      	SUBWF       EventHandler_i_L0, 0, 1
0x6A6E	0xB0D8      	BTFSC       STATUS, 0 
0x6A70	0xD0DE      	BRA         L_EventHandler285
;FirmV_0_7_0.c,1309 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Fired==1))
0x6A72	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6A76	0x0E00      	MOVLW       0
0x6A78	0x6E01      	MOVWF       R1 
0x6A7A	0x0E07      	MOVLW       7
0x6A7C	0x6E04      	MOVWF       R4 
0x6A7E	0x0E00      	MOVLW       0
0x6A80	0x6E05      	MOVWF       R5 
0x6A82	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6A86	0x0E82      	MOVLW       _Tasks
0x6A88	0x2600      	ADDWF       R0, 1 
0x6A8A	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6A8C	0x2201      	ADDWFC      R1, 1 
0x6A8E	0x0E05      	MOVLW       5
0x6A90	0x2400      	ADDWF       R0, 0 
0x6A92	0x6EE9      	MOVWF       FSR0L 
0x6A94	0x0E00      	MOVLW       0
0x6A96	0x2001      	ADDWFC      R1, 0 
0x6A98	0x6EEA      	MOVWF       FSR0H 
0x6A9A	0x50EE      	MOVF        POSTINC0, 0 
0x6A9C	0x0A00      	XORLW       0
0x6A9E	0xA4D8      	BTFSS       STATUS, 2 
0x6AA0	0xD0C3      	BRA         L_EventHandler289
0x6AA2	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6AA6	0x0E00      	MOVLW       0
0x6AA8	0x6E01      	MOVWF       R1 
0x6AAA	0x0E07      	MOVLW       7
0x6AAC	0x6E04      	MOVWF       R4 
0x6AAE	0x0E00      	MOVLW       0
0x6AB0	0x6E05      	MOVWF       R5 
0x6AB2	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6AB6	0x0E82      	MOVLW       _Tasks
0x6AB8	0x2600      	ADDWF       R0, 1 
0x6ABA	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6ABC	0x2201      	ADDWFC      R1, 1 
0x6ABE	0x0E06      	MOVLW       6
0x6AC0	0x2400      	ADDWF       R0, 0 
0x6AC2	0x6EE9      	MOVWF       FSR0L 
0x6AC4	0x0E00      	MOVLW       0
0x6AC6	0x2001      	ADDWFC      R1, 0 
0x6AC8	0x6EEA      	MOVWF       FSR0H 
0x6ACA	0x50EE      	MOVF        POSTINC0, 0 
0x6ACC	0x0A01      	XORLW       1
0x6ACE	0xA4D8      	BTFSS       STATUS, 2 
0x6AD0	0xD0AB      	BRA         L_EventHandler289
L__EventHandler673:
;FirmV_0_7_0.c,1311 :: 		if(Events.Task1==0)
0x6AD2	0x0101      	MOVLB       1
0x6AD4	0x5172      	MOVF        _Events+1, 0, 1
0x6AD6	0x0A00      	XORLW       0
0x6AD8	0xE136      	BNZ         L_EventHandler290
;FirmV_0_7_0.c,1312 :: 		{Events.Task1=Tasks[i].TaskCode; Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x6ADA	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6ADE	0x0E00      	MOVLW       0
0x6AE0	0x6E01      	MOVWF       R1 
0x6AE2	0x0E07      	MOVLW       7
0x6AE4	0x6E04      	MOVWF       R4 
0x6AE6	0x0E00      	MOVLW       0
0x6AE8	0x6E05      	MOVWF       R5 
0x6AEA	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6AEE	0x0E82      	MOVLW       _Tasks
0x6AF0	0x2400      	ADDWF       R0, 0 
0x6AF2	0x6E02      	MOVWF       R2 
0x6AF4	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6AF6	0x2001      	ADDWFC      R1, 0 
0x6AF8	0x6E03      	MOVWF       R3 
0x6AFA	0xFFE9C002  	MOVFF       R2, FSR0L
0x6AFE	0xFFEAC003  	MOVFF       R3, FSR0H
0x6B02	0xF000CFEE  	MOVFF       POSTINC0, R0
0x6B06	0xF172C000  	MOVFF       R0, _Events+1
0x6B0A	0x0E05      	MOVLW       5
0x6B0C	0x2402      	ADDWF       R2, 0 
0x6B0E	0x6EE1      	MOVWF       FSR1L 
0x6B10	0x0E00      	MOVLW       0
0x6B12	0x2003      	ADDWFC      R3, 0 
0x6B14	0x6EE2      	MOVWF       FSR1H 
0x6B16	0x0E01      	MOVLW       1
0x6B18	0x6EE6      	MOVWF       POSTINC1 
0x6B1A	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6B1E	0x0E00      	MOVLW       0
0x6B20	0x6E01      	MOVWF       R1 
0x6B22	0x0E07      	MOVLW       7
0x6B24	0x6E04      	MOVWF       R4 
0x6B26	0x0E00      	MOVLW       0
0x6B28	0x6E05      	MOVWF       R5 
0x6B2A	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6B2E	0x0E82      	MOVLW       _Tasks
0x6B30	0x2600      	ADDWF       R0, 1 
0x6B32	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6B34	0x2201      	ADDWFC      R1, 1 
0x6B36	0x0E06      	MOVLW       6
0x6B38	0x2400      	ADDWF       R0, 0 
0x6B3A	0x6EE1      	MOVWF       FSR1L 
0x6B3C	0x0E00      	MOVLW       0
0x6B3E	0x2001      	ADDWFC      R1, 0 
0x6B40	0x6EE2      	MOVWF       FSR1H 
0x6B42	0x6AE6      	CLRF        POSTINC1 
0x6B44	0xD071      	BRA         L_EventHandler291
L_EventHandler290:
;FirmV_0_7_0.c,1313 :: 		else if(Events.Task2==0)
0x6B46	0x5173      	MOVF        _Events+2, 0, 1
0x6B48	0x0A00      	XORLW       0
0x6B4A	0xE136      	BNZ         L_EventHandler292
;FirmV_0_7_0.c,1314 :: 		{Events.Task2=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x6B4C	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6B50	0x0E00      	MOVLW       0
0x6B52	0x6E01      	MOVWF       R1 
0x6B54	0x0E07      	MOVLW       7
0x6B56	0x6E04      	MOVWF       R4 
0x6B58	0x0E00      	MOVLW       0
0x6B5A	0x6E05      	MOVWF       R5 
0x6B5C	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6B60	0x0E82      	MOVLW       _Tasks
0x6B62	0x2400      	ADDWF       R0, 0 
0x6B64	0x6E02      	MOVWF       R2 
0x6B66	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6B68	0x2001      	ADDWFC      R1, 0 
0x6B6A	0x6E03      	MOVWF       R3 
0x6B6C	0xFFE9C002  	MOVFF       R2, FSR0L
0x6B70	0xFFEAC003  	MOVFF       R3, FSR0H
0x6B74	0xF000CFEE  	MOVFF       POSTINC0, R0
0x6B78	0xF173C000  	MOVFF       R0, _Events+2
0x6B7C	0x0E05      	MOVLW       5
0x6B7E	0x2402      	ADDWF       R2, 0 
0x6B80	0x6EE1      	MOVWF       FSR1L 
0x6B82	0x0E00      	MOVLW       0
0x6B84	0x2003      	ADDWFC      R3, 0 
0x6B86	0x6EE2      	MOVWF       FSR1H 
0x6B88	0x0E01      	MOVLW       1
0x6B8A	0x6EE6      	MOVWF       POSTINC1 
0x6B8C	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6B90	0x0E00      	MOVLW       0
0x6B92	0x6E01      	MOVWF       R1 
0x6B94	0x0E07      	MOVLW       7
0x6B96	0x6E04      	MOVWF       R4 
0x6B98	0x0E00      	MOVLW       0
0x6B9A	0x6E05      	MOVWF       R5 
0x6B9C	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6BA0	0x0E82      	MOVLW       _Tasks
0x6BA2	0x2600      	ADDWF       R0, 1 
0x6BA4	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6BA6	0x2201      	ADDWFC      R1, 1 
0x6BA8	0x0E06      	MOVLW       6
0x6BAA	0x2400      	ADDWF       R0, 0 
0x6BAC	0x6EE1      	MOVWF       FSR1L 
0x6BAE	0x0E00      	MOVLW       0
0x6BB0	0x2001      	ADDWFC      R1, 0 
0x6BB2	0x6EE2      	MOVWF       FSR1H 
0x6BB4	0x6AE6      	CLRF        POSTINC1 
0x6BB6	0xD038      	BRA         L_EventHandler293
L_EventHandler292:
;FirmV_0_7_0.c,1315 :: 		else if(Events.Task3==0)
0x6BB8	0x5174      	MOVF        _Events+3, 0, 1
0x6BBA	0x0A00      	XORLW       0
0x6BBC	0xE135      	BNZ         L_EventHandler294
;FirmV_0_7_0.c,1316 :: 		{Events.Task3=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x6BBE	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6BC2	0x0E00      	MOVLW       0
0x6BC4	0x6E01      	MOVWF       R1 
0x6BC6	0x0E07      	MOVLW       7
0x6BC8	0x6E04      	MOVWF       R4 
0x6BCA	0x0E00      	MOVLW       0
0x6BCC	0x6E05      	MOVWF       R5 
0x6BCE	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6BD2	0x0E82      	MOVLW       _Tasks
0x6BD4	0x2400      	ADDWF       R0, 0 
0x6BD6	0x6E02      	MOVWF       R2 
0x6BD8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6BDA	0x2001      	ADDWFC      R1, 0 
0x6BDC	0x6E03      	MOVWF       R3 
0x6BDE	0xFFE9C002  	MOVFF       R2, FSR0L
0x6BE2	0xFFEAC003  	MOVFF       R3, FSR0H
0x6BE6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x6BEA	0xF174C000  	MOVFF       R0, _Events+3
0x6BEE	0x0E05      	MOVLW       5
0x6BF0	0x2402      	ADDWF       R2, 0 
0x6BF2	0x6EE1      	MOVWF       FSR1L 
0x6BF4	0x0E00      	MOVLW       0
0x6BF6	0x2003      	ADDWFC      R3, 0 
0x6BF8	0x6EE2      	MOVWF       FSR1H 
0x6BFA	0x0E01      	MOVLW       1
0x6BFC	0x6EE6      	MOVWF       POSTINC1 
0x6BFE	0xF000C225  	MOVFF       EventHandler_i_L0, R0
0x6C02	0x0E00      	MOVLW       0
0x6C04	0x6E01      	MOVWF       R1 
0x6C06	0x0E07      	MOVLW       7
0x6C08	0x6E04      	MOVWF       R4 
0x6C0A	0x0E00      	MOVLW       0
0x6C0C	0x6E05      	MOVWF       R5 
0x6C0E	0xF004EC2C  	CALL        _Mul_16x16_U, 0
0x6C12	0x0E82      	MOVLW       _Tasks
0x6C14	0x2600      	ADDWF       R0, 1 
0x6C16	0x0E01      	MOVLW       hi_addr(_Tasks)
0x6C18	0x2201      	ADDWFC      R1, 1 
0x6C1A	0x0E06      	MOVLW       6
0x6C1C	0x2400      	ADDWF       R0, 0 
0x6C1E	0x6EE1      	MOVWF       FSR1L 
0x6C20	0x0E00      	MOVLW       0
0x6C22	0x2001      	ADDWFC      R1, 0 
0x6C24	0x6EE2      	MOVWF       FSR1H 
0x6C26	0x6AE6      	CLRF        POSTINC1 
L_EventHandler294:
L_EventHandler293:
L_EventHandler291:
;FirmV_0_7_0.c,1317 :: 		}
L_EventHandler289:
;FirmV_0_7_0.c,1308 :: 		for(i=0;i<20;i++)
0x6C28	0x0102      	MOVLB       2
0x6C2A	0x2B25      	INCF        EventHandler_i_L0, 1, 1
;FirmV_0_7_0.c,1317 :: 		}
0x6C2C	0xD71E      	BRA         L_EventHandler284
L_EventHandler285:
;FirmV_0_7_0.c,1318 :: 		}
0x6C2E	0x0012      	RETURN      0
; end of _EventHandler
_StateManager:
;FirmV_0_7_0.c,414 :: 		void StateManager()
;FirmV_0_7_0.c,420 :: 		switch(State)
0x6C30	0xD030      	BRA         L_StateManager39
;FirmV_0_7_0.c,423 :: 		case 0: State1(); break;
L_StateManager41:
0x6C32	0xF02DECAE  	CALL        _State1, 0
0x6C36	0xD05E      	BRA         L_StateManager40
;FirmV_0_7_0.c,425 :: 		case 1: State1(); break;
L_StateManager42:
0x6C38	0xF02DECAE  	CALL        _State1, 0
0x6C3C	0xD05B      	BRA         L_StateManager40
;FirmV_0_7_0.c,427 :: 		case 2: State2(); break;
L_StateManager43:
0x6C3E	0xF018EC10  	CALL        _State2, 0
0x6C42	0xD058      	BRA         L_StateManager40
;FirmV_0_7_0.c,429 :: 		case 3: State3(); break;
L_StateManager44:
0x6C44	0xF022EC6F  	CALL        _State3, 0
0x6C48	0xD055      	BRA         L_StateManager40
;FirmV_0_7_0.c,431 :: 		case 4: State4(); break;
L_StateManager45:
0x6C4A	0xF029EC89  	CALL        _State4, 0
0x6C4E	0xD052      	BRA         L_StateManager40
;FirmV_0_7_0.c,433 :: 		case 5: State5(); break;
L_StateManager46:
0x6C50	0xF01FECF8  	CALL        _State5, 0
0x6C54	0xD04F      	BRA         L_StateManager40
;FirmV_0_7_0.c,435 :: 		case 6: State6(); break;
L_StateManager47:
0x6C56	0xF014ECD9  	CALL        _State6, 0
0x6C5A	0xD04C      	BRA         L_StateManager40
;FirmV_0_7_0.c,437 :: 		case 7: State7(); break;
L_StateManager48:
0x6C5C	0xF01CECD0  	CALL        _State7, 0
0x6C60	0xD049      	BRA         L_StateManager40
;FirmV_0_7_0.c,439 :: 		case 8: State8(); break;
L_StateManager49:
0x6C62	0xF031EC00  	CALL        _State8, 0
0x6C66	0xD046      	BRA         L_StateManager40
;FirmV_0_7_0.c,441 :: 		case 10:State00(); break;
L_StateManager50:
0x6C68	0xF030EC7D  	CALL        _State00, 0
0x6C6C	0xD043      	BRA         L_StateManager40
;FirmV_0_7_0.c,443 :: 		case 100:Menu0(); break;
L_StateManager51:
0x6C6E	0xF007EC88  	CALL        _Menu0, 0
0x6C72	0xD040      	BRA         L_StateManager40
;FirmV_0_7_0.c,445 :: 		case 101:Menu1(); break;
L_StateManager52:
0x6C74	0xF011ECB9  	CALL        _Menu1, 0
0x6C78	0xD03D      	BRA         L_StateManager40
;FirmV_0_7_0.c,447 :: 		case 102:Menu2(); break;
L_StateManager53:
0x6C7A	0xF00DECFD  	CALL        _Menu2, 0
0x6C7E	0xD03A      	BRA         L_StateManager40
;FirmV_0_7_0.c,449 :: 		case 103:Menu3(); break;
L_StateManager54:
0x6C80	0xF011ECE4  	CALL        _Menu3, 0
0x6C84	0xD037      	BRA         L_StateManager40
;FirmV_0_7_0.c,451 :: 		case 200:LearnAuto(); break;
L_StateManager55:
0x6C86	0xF012ECBC  	CALL        _LearnAuto, 0
0x6C8A	0xD034      	BRA         L_StateManager40
;FirmV_0_7_0.c,453 :: 		case 201:LearnManual(); break;
L_StateManager56:
0x6C8C	0xF026ECB1  	CALL        _LearnManual, 0
0x6C90	0xD031      	BRA         L_StateManager40
;FirmV_0_7_0.c,455 :: 		}
L_StateManager39:
0x6C92	0x0100      	MOVLB       0
0x6C94	0x51F2      	MOVF        _State, 0, 1
0x6C96	0x0A00      	XORLW       0
0x6C98	0xE0CC      	BZ          L_StateManager41
0x6C9A	0x51F2      	MOVF        _State, 0, 1
0x6C9C	0x0A01      	XORLW       1
0x6C9E	0xE0CC      	BZ          L_StateManager42
0x6CA0	0x51F2      	MOVF        _State, 0, 1
0x6CA2	0x0A02      	XORLW       2
0x6CA4	0xE0CC      	BZ          L_StateManager43
0x6CA6	0x51F2      	MOVF        _State, 0, 1
0x6CA8	0x0A03      	XORLW       3
0x6CAA	0xE0CC      	BZ          L_StateManager44
0x6CAC	0x51F2      	MOVF        _State, 0, 1
0x6CAE	0x0A04      	XORLW       4
0x6CB0	0xE0CC      	BZ          L_StateManager45
0x6CB2	0x51F2      	MOVF        _State, 0, 1
0x6CB4	0x0A05      	XORLW       5
0x6CB6	0xE0CC      	BZ          L_StateManager46
0x6CB8	0x51F2      	MOVF        _State, 0, 1
0x6CBA	0x0A06      	XORLW       6
0x6CBC	0xE0CC      	BZ          L_StateManager47
0x6CBE	0x51F2      	MOVF        _State, 0, 1
0x6CC0	0x0A07      	XORLW       7
0x6CC2	0xE0CC      	BZ          L_StateManager48
0x6CC4	0x51F2      	MOVF        _State, 0, 1
0x6CC6	0x0A08      	XORLW       8
0x6CC8	0xE0CC      	BZ          L_StateManager49
0x6CCA	0x51F2      	MOVF        _State, 0, 1
0x6CCC	0x0A0A      	XORLW       10
0x6CCE	0xE0CC      	BZ          L_StateManager50
0x6CD0	0x51F2      	MOVF        _State, 0, 1
0x6CD2	0x0A64      	XORLW       100
0x6CD4	0xE0CC      	BZ          L_StateManager51
0x6CD6	0x51F2      	MOVF        _State, 0, 1
0x6CD8	0x0A65      	XORLW       101
0x6CDA	0xE0CC      	BZ          L_StateManager52
0x6CDC	0x51F2      	MOVF        _State, 0, 1
0x6CDE	0x0A66      	XORLW       102
0x6CE0	0xE0CC      	BZ          L_StateManager53
0x6CE2	0x51F2      	MOVF        _State, 0, 1
0x6CE4	0x0A67      	XORLW       103
0x6CE6	0xE0CC      	BZ          L_StateManager54
0x6CE8	0x51F2      	MOVF        _State, 0, 1
0x6CEA	0x0AC8      	XORLW       200
0x6CEC	0xE0CC      	BZ          L_StateManager55
0x6CEE	0x51F2      	MOVF        _State, 0, 1
0x6CF0	0x0AC9      	XORLW       201
0x6CF2	0xE0CC      	BZ          L_StateManager56
L_StateManager40:
;FirmV_0_7_0.c,456 :: 		}
0x6CF4	0x0012      	RETURN      0
; end of _StateManager
_LCDUpdater:
;FirmV_0_7_0.c,1139 :: 		void LCDUpdater()
;FirmV_0_7_0.c,1141 :: 		if(LCDUpdateFlag==1)
0x6CF6	0x0101      	MOVLB       1
0x6CF8	0x511D      	MOVF        _LCDUpdateFlag, 0, 1
0x6CFA	0x0A01      	XORLW       1
0x6CFC	0xE117      	BNZ         L_LCDUpdater267
;FirmV_0_7_0.c,1143 :: 		lcd_out(1,1,LCDLine1);
0x6CFE	0x0E01      	MOVLW       1
0x6D00	0x0102      	MOVLB       2
0x6D02	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x6D04	0x0E01      	MOVLW       1
0x6D06	0x6F36      	MOVWF       FARG_Lcd_Out_column, 1
0x6D08	0x0EF3      	MOVLW       _LCDLine1
0x6D0A	0x6F37      	MOVWF       FARG_Lcd_Out_text, 1
0x6D0C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6D0E	0x6F38      	MOVWF       FARG_Lcd_Out_text+1, 1
0x6D10	0xF011ECE9  	CALL        _Lcd_Out, 0
;FirmV_0_7_0.c,1144 :: 		lcd_out(2,1,LCDLine2);
0x6D14	0x0E02      	MOVLW       2
0x6D16	0x0102      	MOVLB       2
0x6D18	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x6D1A	0x0E01      	MOVLW       1
0x6D1C	0x6F36      	MOVWF       FARG_Lcd_Out_column, 1
0x6D1E	0x0E04      	MOVLW       _LCDLine2
0x6D20	0x6F37      	MOVWF       FARG_Lcd_Out_text, 1
0x6D22	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x6D24	0x6F38      	MOVWF       FARG_Lcd_Out_text+1, 1
0x6D26	0xF011ECE9  	CALL        _Lcd_Out, 0
;FirmV_0_7_0.c,1145 :: 		LCDUpdateFlag=0;
0x6D2A	0x6B1D      	CLRF        _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1146 :: 		}
L_LCDUpdater267:
;FirmV_0_7_0.c,1148 :: 		if(LCDFlash)
0x6D2C	0x531B      	MOVF        _LCDFlash, 1, 1
0x6D2E	0xE029      	BZ          L_LCDUpdater268
;FirmV_0_7_0.c,1150 :: 		if(LCDFlashFlag)
0x6D30	0x5319      	MOVF        _LCDFlashFlag, 1, 1
0x6D32	0xE01C      	BZ          L_LCDUpdater269
;FirmV_0_7_0.c,1151 :: 		lcd_out(2,1,"               ");
0x6D34	0x0E02      	MOVLW       2
0x6D36	0x0102      	MOVLB       2
0x6D38	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x6D3A	0x0E01      	MOVLW       1
0x6D3C	0x6F36      	MOVWF       FARG_Lcd_Out_column, 1
0x6D3E	0x0EBD      	MOVLW       ?ICS?lstr68_FirmV_0_7_0
0x6D40	0x6EF6      	MOVWF       4086 
0x6D42	0x0E75      	MOVLW       hi_addr(?ICS?lstr68_FirmV_0_7_0)
0x6D44	0x6EF7      	MOVWF       TBLPTRH 
0x6D46	0x0E00      	MOVLW       higher_addr(?ICS?lstr68_FirmV_0_7_0)
0x6D48	0x6EF8      	MOVWF       TBLPTRU 
0x6D4A	0x0E25      	MOVLW       ?lstr68_FirmV_0_7_0
0x6D4C	0x6EE1      	MOVWF       FSR1L 
0x6D4E	0x0E02      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x6D50	0x6EE2      	MOVWF       FSR1H 
0x6D52	0x0E10      	MOVLW       16
0x6D54	0x6E00      	MOVWF       R0 
0x6D56	0x0E01      	MOVLW       1
0x6D58	0x6E01      	MOVWF       R1 
0x6D5A	0xF004EC95  	CALL        ___CC2DW, 0
0x6D5E	0x0E25      	MOVLW       ?lstr68_FirmV_0_7_0
0x6D60	0x6F37      	MOVWF       FARG_Lcd_Out_text, 1
0x6D62	0x0E02      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x6D64	0x6F38      	MOVWF       FARG_Lcd_Out_text+1, 1
0x6D66	0xF011ECE9  	CALL        _Lcd_Out, 0
0x6D6A	0xD00B      	BRA         L_LCDUpdater270
L_LCDUpdater269:
;FirmV_0_7_0.c,1153 :: 		lcd_out(2,1,LCDLine2);
0x6D6C	0x0E02      	MOVLW       2
0x6D6E	0x0102      	MOVLB       2
0x6D70	0x6F35      	MOVWF       FARG_Lcd_Out_row, 1
0x6D72	0x0E01      	MOVLW       1
0x6D74	0x6F36      	MOVWF       FARG_Lcd_Out_column, 1
0x6D76	0x0E04      	MOVLW       _LCDLine2
0x6D78	0x6F37      	MOVWF       FARG_Lcd_Out_text, 1
0x6D7A	0x0E01      	MOVLW       hi_addr(_LCDLine2)
0x6D7C	0x6F38      	MOVWF       FARG_Lcd_Out_text+1, 1
0x6D7E	0xF011ECE9  	CALL        _Lcd_Out, 0
L_LCDUpdater270:
;FirmV_0_7_0.c,1154 :: 		}
L_LCDUpdater268:
;FirmV_0_7_0.c,1157 :: 		}
0x6D82	0x0012      	RETURN      0
; end of _LCDUpdater
_main:
0x6D84	0xF03AECE7  	CALL        30158, 0
;FirmV_0_7_0.c,359 :: 		void main() {
;FirmV_0_7_0.c,361 :: 		PhotocellRel=1;
0x6D88	0x8A82      	BSF         PORTC, 5 
;FirmV_0_7_0.c,363 :: 		Init();
0x6D8A	0xDDF4      	RCALL       _Init
;FirmV_0_7_0.c,365 :: 		Logger("Start ...");
0x6D8C	0x0E53      	MOVLW       83
0x6D8E	0x0102      	MOVLB       2
0x6D90	0x6F1B      	MOVWF       ?lstr2_FirmV_0_7_0, 1
0x6D92	0x0E74      	MOVLW       116
0x6D94	0x6F1C      	MOVWF       ?lstr2_FirmV_0_7_0+1, 1
0x6D96	0x0E61      	MOVLW       97
0x6D98	0x6F1D      	MOVWF       ?lstr2_FirmV_0_7_0+2, 1
0x6D9A	0x0E72      	MOVLW       114
0x6D9C	0x6F1E      	MOVWF       ?lstr2_FirmV_0_7_0+3, 1
0x6D9E	0x0E74      	MOVLW       116
0x6DA0	0x6F1F      	MOVWF       ?lstr2_FirmV_0_7_0+4, 1
0x6DA2	0x0E20      	MOVLW       32
0x6DA4	0x6F20      	MOVWF       ?lstr2_FirmV_0_7_0+5, 1
0x6DA6	0x0E2E      	MOVLW       46
0x6DA8	0x6F21      	MOVWF       ?lstr2_FirmV_0_7_0+6, 1
0x6DAA	0x0E2E      	MOVLW       46
0x6DAC	0x6F22      	MOVWF       ?lstr2_FirmV_0_7_0+7, 1
0x6DAE	0x0E2E      	MOVLW       46
0x6DB0	0x6F23      	MOVWF       ?lstr2_FirmV_0_7_0+8, 1
0x6DB2	0x6B24      	CLRF        ?lstr2_FirmV_0_7_0+9, 1
0x6DB4	0x0E1B      	MOVLW       ?lstr2_FirmV_0_7_0
0x6DB6	0x0103      	MOVLB       3
0x6DB8	0x6F4F      	MOVWF       FARG_Logger_text, 1
0x6DBA	0x0E02      	MOVLW       hi_addr(?lstr2_FirmV_0_7_0)
0x6DBC	0x6F50      	MOVWF       FARG_Logger_text+1, 1
0x6DBE	0xF00BECFA  	CALL        _Logger, 0
;FirmV_0_7_0.c,369 :: 		while(1)
L_main34:
;FirmV_0_7_0.c,371 :: 		if(Flag20ms==1)
0x6DC2	0x0100      	MOVLB       0
0x6DC4	0x51C2      	MOVF        _Flag20ms, 0, 1
0x6DC6	0x0A01      	XORLW       1
0x6DC8	0xE107      	BNZ         L_main36
;FirmV_0_7_0.c,373 :: 		if(DebouncingDelay<DebouncingFix)
0x6DCA	0x0E05      	MOVLW       5
0x6DCC	0x5DC3      	SUBWF       _DebouncingDelay, 0, 1
0x6DCE	0xE201      	BC          L_main37
;FirmV_0_7_0.c,374 :: 		DebouncingDelay=DebouncingDelay+1;
0x6DD0	0x2BC3      	INCF        _DebouncingDelay, 1, 1
L_main37:
;FirmV_0_7_0.c,375 :: 		LCDUpdater();
0x6DD2	0xDF91      	RCALL       _LCDUpdater
;FirmV_0_7_0.c,376 :: 		Flag20ms=0;
0x6DD4	0x0100      	MOVLB       0
0x6DD6	0x6BC2      	CLRF        _Flag20ms, 1
;FirmV_0_7_0.c,377 :: 		}
L_main36:
;FirmV_0_7_0.c,379 :: 		if(Flag500ms==1)
0x6DD8	0x51C7      	MOVF        _Flag500ms, 0, 1
0x6DDA	0x0A01      	XORLW       1
0x6DDC	0xE104      	BNZ         L_main38
;FirmV_0_7_0.c,381 :: 		ResetTaskEvents();
0x6DDE	0xDD4E      	RCALL       _ResetTaskEvents
;FirmV_0_7_0.c,382 :: 		TaskManager();
0x6DE0	0xDD52      	RCALL       _TaskManager
;FirmV_0_7_0.c,383 :: 		Flag500ms=0;
0x6DE2	0x0100      	MOVLB       0
0x6DE4	0x6BC7      	CLRF        _Flag500ms, 1
;FirmV_0_7_0.c,384 :: 		}
L_main38:
;FirmV_0_7_0.c,385 :: 		EventHandler();
0x6DE6	0xDE27      	RCALL       _EventHandler
;FirmV_0_7_0.c,386 :: 		StateManager();
0x6DE8	0xDF23      	RCALL       _StateManager
;FirmV_0_7_0.c,387 :: 		}
0x6DEA	0xD7EB      	BRA         L_main34
;FirmV_0_7_0.c,389 :: 		}
0x6DEC	0xD7FF      	BRA         $+0
; end of _main
0x75CE	0xF01AEE10  	LFSR        1, 26
0x75D2	0x0E04      	MOVLW       4
0x75D4	0x6E00      	MOVWF       R0 
0x75D6	0x0E02      	MOVLW       2
0x75D8	0x6E01      	MOVWF       R1 
0x75DA	0x0EC2      	MOVLW       194
0x75DC	0x6EF6      	MOVWF       4086 
0x75DE	0x0E71      	MOVLW       113
0x75E0	0x6EF7      	MOVWF       TBLPTRH 
0x75E2	0x0E00      	MOVLW       0
0x75E4	0x6EF8      	MOVWF       TBLPTRU 
0x75E6	0xF004EC95  	CALL        2346, 0
0x75EA	0x0012      	RETURN      0
;FirmV_0_7_0.c,0 :: ?ICS?lstr69_FirmV_0_7_0
0x6DEE	0x2020 ;?ICS?lstr69_FirmV_0_7_0+0
0x6DF0	0x2020 ;?ICS?lstr69_FirmV_0_7_0+2
0x6DF2	0x2020 ;?ICS?lstr69_FirmV_0_7_0+4
0x6DF4	0x2020 ;?ICS?lstr69_FirmV_0_7_0+6
0x6DF6	0x2020 ;?ICS?lstr69_FirmV_0_7_0+8
0x6DF8	0x2020 ;?ICS?lstr69_FirmV_0_7_0+10
0x6DFA	0x2020 ;?ICS?lstr69_FirmV_0_7_0+12
0x6DFC	0x2020 ;?ICS?lstr69_FirmV_0_7_0+14
0x6DFE	0x00 ;?ICS?lstr69_FirmV_0_7_0+16
; end of ?ICS?lstr69_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr70_FirmV_0_7_0
0x6DFF	0x3030 ;?ICS?lstr70_FirmV_0_7_0+0
0x6E01	0x4C20 ;?ICS?lstr70_FirmV_0_7_0+2
0x6E03	0x6165 ;?ICS?lstr70_FirmV_0_7_0+4
0x6E05	0x6E72 ;?ICS?lstr70_FirmV_0_7_0+6
0x6E07	0x6E69 ;?ICS?lstr70_FirmV_0_7_0+8
0x6E09	0x2067 ;?ICS?lstr70_FirmV_0_7_0+10
0x6E0B	0x6F4D ;?ICS?lstr70_FirmV_0_7_0+12
0x6E0D	0x6564 ;?ICS?lstr70_FirmV_0_7_0+14
0x6E0F	0x00 ;?ICS?lstr70_FirmV_0_7_0+16
; end of ?ICS?lstr70_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr71_FirmV_0_7_0
0x6E10	0x2020 ;?ICS?lstr71_FirmV_0_7_0+0
0x6E12	0x2020 ;?ICS?lstr71_FirmV_0_7_0+2
0x6E14	0x2020 ;?ICS?lstr71_FirmV_0_7_0+4
0x6E16	0x7541 ;?ICS?lstr71_FirmV_0_7_0+6
0x6E18	0x6F74 ;?ICS?lstr71_FirmV_0_7_0+8
0x6E1A	0x2020 ;?ICS?lstr71_FirmV_0_7_0+10
0x6E1C	0x2020 ;?ICS?lstr71_FirmV_0_7_0+12
0x6E1E	0x2020 ;?ICS?lstr71_FirmV_0_7_0+14
0x6E20	0x00 ;?ICS?lstr71_FirmV_0_7_0+16
; end of ?ICS?lstr71_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr72_FirmV_0_7_0
0x6E21	0x2020 ;?ICS?lstr72_FirmV_0_7_0+0
0x6E23	0x2020 ;?ICS?lstr72_FirmV_0_7_0+2
0x6E25	0x4D20 ;?ICS?lstr72_FirmV_0_7_0+4
0x6E27	0x6E61 ;?ICS?lstr72_FirmV_0_7_0+6
0x6E29	0x6175 ;?ICS?lstr72_FirmV_0_7_0+8
0x6E2B	0x206C ;?ICS?lstr72_FirmV_0_7_0+10
0x6E2D	0x2020 ;?ICS?lstr72_FirmV_0_7_0+12
0x6E2F	0x2020 ;?ICS?lstr72_FirmV_0_7_0+14
0x6E31	0x00 ;?ICS?lstr72_FirmV_0_7_0+16
; end of ?ICS?lstr72_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr73_FirmV_0_7_0
0x6E32	0x3130 ;?ICS?lstr73_FirmV_0_7_0+0
0x6E34	0x4420 ;?ICS?lstr73_FirmV_0_7_0+2
0x6E36	0x2031 ;?ICS?lstr73_FirmV_0_7_0+4
0x6E38	0x704F ;?ICS?lstr73_FirmV_0_7_0+6
0x6E3A	0x6E65 ;?ICS?lstr73_FirmV_0_7_0+8
0x6E3C	0x5420 ;?ICS?lstr73_FirmV_0_7_0+10
0x6E3E	0x6D69 ;?ICS?lstr73_FirmV_0_7_0+12
0x6E40	0x2065 ;?ICS?lstr73_FirmV_0_7_0+14
0x6E42	0x00 ;?ICS?lstr73_FirmV_0_7_0+16
; end of ?ICS?lstr73_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr74_FirmV_0_7_0
0x6E43	0x3230 ;?ICS?lstr74_FirmV_0_7_0+0
0x6E45	0x4420 ;?ICS?lstr74_FirmV_0_7_0+2
0x6E47	0x2032 ;?ICS?lstr74_FirmV_0_7_0+4
0x6E49	0x704F ;?ICS?lstr74_FirmV_0_7_0+6
0x6E4B	0x6E65 ;?ICS?lstr74_FirmV_0_7_0+8
0x6E4D	0x5420 ;?ICS?lstr74_FirmV_0_7_0+10
0x6E4F	0x6D69 ;?ICS?lstr74_FirmV_0_7_0+12
0x6E51	0x2065 ;?ICS?lstr74_FirmV_0_7_0+14
0x6E53	0x00 ;?ICS?lstr74_FirmV_0_7_0+16
; end of ?ICS?lstr74_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr75_FirmV_0_7_0
0x6E54	0x3330 ;?ICS?lstr75_FirmV_0_7_0+0
0x6E56	0x4420 ;?ICS?lstr75_FirmV_0_7_0+2
0x6E58	0x2031 ;?ICS?lstr75_FirmV_0_7_0+4
0x6E5A	0x6C43 ;?ICS?lstr75_FirmV_0_7_0+6
0x6E5C	0x736F ;?ICS?lstr75_FirmV_0_7_0+8
0x6E5E	0x2065 ;?ICS?lstr75_FirmV_0_7_0+10
0x6E60	0x6954 ;?ICS?lstr75_FirmV_0_7_0+12
0x6E62	0x656D ;?ICS?lstr75_FirmV_0_7_0+14
0x6E64	0x00 ;?ICS?lstr75_FirmV_0_7_0+16
; end of ?ICS?lstr75_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr76_FirmV_0_7_0
0x6E65	0x3430 ;?ICS?lstr76_FirmV_0_7_0+0
0x6E67	0x4420 ;?ICS?lstr76_FirmV_0_7_0+2
0x6E69	0x2032 ;?ICS?lstr76_FirmV_0_7_0+4
0x6E6B	0x6C43 ;?ICS?lstr76_FirmV_0_7_0+6
0x6E6D	0x736F ;?ICS?lstr76_FirmV_0_7_0+8
0x6E6F	0x2065 ;?ICS?lstr76_FirmV_0_7_0+10
0x6E71	0x6954 ;?ICS?lstr76_FirmV_0_7_0+12
0x6E73	0x656D ;?ICS?lstr76_FirmV_0_7_0+14
0x6E75	0x00 ;?ICS?lstr76_FirmV_0_7_0+16
; end of ?ICS?lstr76_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr77_FirmV_0_7_0
0x6E76	0x3530 ;?ICS?lstr77_FirmV_0_7_0+0
0x6E78	0x4F20 ;?ICS?lstr77_FirmV_0_7_0+2
0x6E7A	0x2070 ;?ICS?lstr77_FirmV_0_7_0+4
0x6E7C	0x6F53 ;?ICS?lstr77_FirmV_0_7_0+6
0x6E7E	0x7466 ;?ICS?lstr77_FirmV_0_7_0+8
0x6E80	0x5320 ;?ICS?lstr77_FirmV_0_7_0+10
0x6E82	0x6174 ;?ICS?lstr77_FirmV_0_7_0+12
0x6E84	0x7472 ;?ICS?lstr77_FirmV_0_7_0+14
0x6E86	0x00 ;?ICS?lstr77_FirmV_0_7_0+16
; end of ?ICS?lstr77_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr78_FirmV_0_7_0
0x6E87	0x3630 ;?ICS?lstr78_FirmV_0_7_0+0
0x6E89	0x4F20 ;?ICS?lstr78_FirmV_0_7_0+2
0x6E8B	0x2070 ;?ICS?lstr78_FirmV_0_7_0+4
0x6E8D	0x6F53 ;?ICS?lstr78_FirmV_0_7_0+6
0x6E8F	0x7466 ;?ICS?lstr78_FirmV_0_7_0+8
0x6E91	0x5320 ;?ICS?lstr78_FirmV_0_7_0+10
0x6E93	0x6F74 ;?ICS?lstr78_FirmV_0_7_0+12
0x6E95	0x2070 ;?ICS?lstr78_FirmV_0_7_0+14
0x6E97	0x00 ;?ICS?lstr78_FirmV_0_7_0+16
; end of ?ICS?lstr78_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr79_FirmV_0_7_0
0x6E98	0x3730 ;?ICS?lstr79_FirmV_0_7_0+0
0x6E9A	0x4320 ;?ICS?lstr79_FirmV_0_7_0+2
0x6E9C	0x206C ;?ICS?lstr79_FirmV_0_7_0+4
0x6E9E	0x6F53 ;?ICS?lstr79_FirmV_0_7_0+6
0x6EA0	0x7466 ;?ICS?lstr79_FirmV_0_7_0+8
0x6EA2	0x5320 ;?ICS?lstr79_FirmV_0_7_0+10
0x6EA4	0x6174 ;?ICS?lstr79_FirmV_0_7_0+12
0x6EA6	0x7472 ;?ICS?lstr79_FirmV_0_7_0+14
0x6EA8	0x00 ;?ICS?lstr79_FirmV_0_7_0+16
; end of ?ICS?lstr79_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr80_FirmV_0_7_0
0x6EA9	0x3830 ;?ICS?lstr80_FirmV_0_7_0+0
0x6EAB	0x4320 ;?ICS?lstr80_FirmV_0_7_0+2
0x6EAD	0x206C ;?ICS?lstr80_FirmV_0_7_0+4
0x6EAF	0x6F53 ;?ICS?lstr80_FirmV_0_7_0+6
0x6EB1	0x7466 ;?ICS?lstr80_FirmV_0_7_0+8
0x6EB3	0x5320 ;?ICS?lstr80_FirmV_0_7_0+10
0x6EB5	0x6F74 ;?ICS?lstr80_FirmV_0_7_0+12
0x6EB7	0x2070 ;?ICS?lstr80_FirmV_0_7_0+14
0x6EB9	0x00 ;?ICS?lstr80_FirmV_0_7_0+16
; end of ?ICS?lstr80_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr81_FirmV_0_7_0
0x6EBA	0x3930 ;?ICS?lstr81_FirmV_0_7_0+0
0x6EBC	0x5020 ;?ICS?lstr81_FirmV_0_7_0+2
0x6EBE	0x776F ;?ICS?lstr81_FirmV_0_7_0+4
0x6EC0	0x7265 ;?ICS?lstr81_FirmV_0_7_0+6
0x6EC2	0x2020 ;?ICS?lstr81_FirmV_0_7_0+8
0x6EC4	0x2020 ;?ICS?lstr81_FirmV_0_7_0+10
0x6EC6	0x2020 ;?ICS?lstr81_FirmV_0_7_0+12
0x6EC8	0x2020 ;?ICS?lstr81_FirmV_0_7_0+14
0x6ECA	0x00 ;?ICS?lstr81_FirmV_0_7_0+16
; end of ?ICS?lstr81_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr82_FirmV_0_7_0
0x6ECB	0x3031 ;?ICS?lstr82_FirmV_0_7_0+0
0x6ECD	0x4920 ;?ICS?lstr82_FirmV_0_7_0+2
0x6ECF	0x746E ;?ICS?lstr82_FirmV_0_7_0+4
0x6ED1	0x7265 ;?ICS?lstr82_FirmV_0_7_0+6
0x6ED3	0x6176 ;?ICS?lstr82_FirmV_0_7_0+8
0x6ED5	0x206C ;?ICS?lstr82_FirmV_0_7_0+10
0x6ED7	0x6954 ;?ICS?lstr82_FirmV_0_7_0+12
0x6ED9	0x656D ;?ICS?lstr82_FirmV_0_7_0+14
0x6EDB	0x00 ;?ICS?lstr82_FirmV_0_7_0+16
; end of ?ICS?lstr82_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr83_FirmV_0_7_0
0x6EDC	0x3131 ;?ICS?lstr83_FirmV_0_7_0+0
0x6EDE	0x4120 ;?ICS?lstr83_FirmV_0_7_0+2
0x6EE0	0x7475 ;?ICS?lstr83_FirmV_0_7_0+4
0x6EE2	0x2D6F ;?ICS?lstr83_FirmV_0_7_0+6
0x6EE4	0x6C63 ;?ICS?lstr83_FirmV_0_7_0+8
0x6EE6	0x736F ;?ICS?lstr83_FirmV_0_7_0+10
0x6EE8	0x2065 ;?ICS?lstr83_FirmV_0_7_0+12
0x6EEA	0x2054 ;?ICS?lstr83_FirmV_0_7_0+14
0x6EEC	0x00 ;?ICS?lstr83_FirmV_0_7_0+16
; end of ?ICS?lstr83_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr84_FirmV_0_7_0
0x6EED	0x3231 ;?ICS?lstr84_FirmV_0_7_0+0
0x6EEF	0x4620 ;?ICS?lstr84_FirmV_0_7_0+2
0x6EF1	0x6361 ;?ICS?lstr84_FirmV_0_7_0+4
0x6EF3	0x6F74 ;?ICS?lstr84_FirmV_0_7_0+6
0x6EF5	0x7972 ;?ICS?lstr84_FirmV_0_7_0+8
0x6EF7	0x5220 ;?ICS?lstr84_FirmV_0_7_0+10
0x6EF9	0x7365 ;?ICS?lstr84_FirmV_0_7_0+12
0x6EFB	0x7465 ;?ICS?lstr84_FirmV_0_7_0+14
0x6EFD	0x00 ;?ICS?lstr84_FirmV_0_7_0+16
; end of ?ICS?lstr84_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr85_FirmV_0_7_0
0x6EFE	0x3331 ;?ICS?lstr85_FirmV_0_7_0+0
0x6F00	0x4F20 ;?ICS?lstr85_FirmV_0_7_0+2
0x6F02	0x6570 ;?ICS?lstr85_FirmV_0_7_0+4
0x6F04	0x206E ;?ICS?lstr85_FirmV_0_7_0+6
0x6F06	0x6850 ;?ICS?lstr85_FirmV_0_7_0+8
0x6F08	0x746F ;?ICS?lstr85_FirmV_0_7_0+10
0x6F0A	0x206F ;?ICS?lstr85_FirmV_0_7_0+12
0x6F0C	0x6E45 ;?ICS?lstr85_FirmV_0_7_0+14
0x6F0E	0x00 ;?ICS?lstr85_FirmV_0_7_0+16
; end of ?ICS?lstr85_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr86_FirmV_0_7_0
0x6F0F	0x6F4E ;?ICS?lstr86_FirmV_0_7_0+0
0x6F11	0x2020 ;?ICS?lstr86_FirmV_0_7_0+2
0x6F13	0x2020 ;?ICS?lstr86_FirmV_0_7_0+4
0x6F15	0x0020 ;?ICS?lstr86_FirmV_0_7_0+6
; end of ?ICS?lstr86_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr87_FirmV_0_7_0
0x6F17	0x6559 ;?ICS?lstr87_FirmV_0_7_0+0
0x6F19	0x2073 ;?ICS?lstr87_FirmV_0_7_0+2
0x6F1B	0x2020 ;?ICS?lstr87_FirmV_0_7_0+4
0x6F1D	0x2020 ;?ICS?lstr87_FirmV_0_7_0+6
0x6F1F	0x00 ;?ICS?lstr87_FirmV_0_7_0+8
; end of ?ICS?lstr87_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr88_FirmV_0_7_0
0x6F20	0x3431 ;?ICS?lstr88_FirmV_0_7_0+0
0x6F22	0x4C20 ;?ICS?lstr88_FirmV_0_7_0+2
0x6F24	0x6D69 ;?ICS?lstr88_FirmV_0_7_0+4
0x6F26	0x7469 ;?ICS?lstr88_FirmV_0_7_0+6
0x6F28	0x4520 ;?ICS?lstr88_FirmV_0_7_0+8
0x6F2A	0x616E ;?ICS?lstr88_FirmV_0_7_0+10
0x6F2C	0x6C62 ;?ICS?lstr88_FirmV_0_7_0+12
0x6F2E	0x2065 ;?ICS?lstr88_FirmV_0_7_0+14
0x6F30	0x00 ;?ICS?lstr88_FirmV_0_7_0+16
; end of ?ICS?lstr88_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr89_FirmV_0_7_0
0x6F31	0x6F4E ;?ICS?lstr89_FirmV_0_7_0+0
0x6F33	0x2020 ;?ICS?lstr89_FirmV_0_7_0+2
0x6F35	0x2020 ;?ICS?lstr89_FirmV_0_7_0+4
0x6F37	0x0020 ;?ICS?lstr89_FirmV_0_7_0+6
; end of ?ICS?lstr89_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr90_FirmV_0_7_0
0x6F39	0x6559 ;?ICS?lstr90_FirmV_0_7_0+0
0x6F3B	0x2073 ;?ICS?lstr90_FirmV_0_7_0+2
0x6F3D	0x2020 ;?ICS?lstr90_FirmV_0_7_0+4
0x6F3F	0x2020 ;?ICS?lstr90_FirmV_0_7_0+6
0x6F41	0x00 ;?ICS?lstr90_FirmV_0_7_0+8
; end of ?ICS?lstr90_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr91_FirmV_0_7_0
0x6F42	0x3531 ;?ICS?lstr91_FirmV_0_7_0+0
0x6F44	0x4C20 ;?ICS?lstr91_FirmV_0_7_0+2
0x6F46	0x636F ;?ICS?lstr91_FirmV_0_7_0+4
0x6F48	0x206B ;?ICS?lstr91_FirmV_0_7_0+6
0x6F4A	0x6F46 ;?ICS?lstr91_FirmV_0_7_0+8
0x6F4C	0x6372 ;?ICS?lstr91_FirmV_0_7_0+10
0x6F4E	0x2065 ;?ICS?lstr91_FirmV_0_7_0+12
0x6F50	0x2020 ;?ICS?lstr91_FirmV_0_7_0+14
0x6F52	0x00 ;?ICS?lstr91_FirmV_0_7_0+16
; end of ?ICS?lstr91_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr92_FirmV_0_7_0
0x6F53	0x6F4E ;?ICS?lstr92_FirmV_0_7_0+0
0x6F55	0x2020 ;?ICS?lstr92_FirmV_0_7_0+2
0x6F57	0x2020 ;?ICS?lstr92_FirmV_0_7_0+4
0x6F59	0x0020 ;?ICS?lstr92_FirmV_0_7_0+6
; end of ?ICS?lstr92_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr93_FirmV_0_7_0
0x6F5B	0x6559 ;?ICS?lstr93_FirmV_0_7_0+0
0x6F5D	0x2073 ;?ICS?lstr93_FirmV_0_7_0+2
0x6F5F	0x2020 ;?ICS?lstr93_FirmV_0_7_0+4
0x6F61	0x2020 ;?ICS?lstr93_FirmV_0_7_0+6
0x6F63	0x00 ;?ICS?lstr93_FirmV_0_7_0+8
; end of ?ICS?lstr93_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr94_FirmV_0_7_0
0x6F64	0x3631 ;?ICS?lstr94_FirmV_0_7_0+0
0x6F66	0x4120 ;?ICS?lstr94_FirmV_0_7_0+2
0x6F68	0x2D75 ;?ICS?lstr94_FirmV_0_7_0+4
0x6F6A	0x6C43 ;?ICS?lstr94_FirmV_0_7_0+6
0x6F6C	0x5020 ;?ICS?lstr94_FirmV_0_7_0+8
0x6F6E	0x7361 ;?ICS?lstr94_FirmV_0_7_0+10
0x6F70	0x2073 ;?ICS?lstr94_FirmV_0_7_0+12
0x6F72	0x2020 ;?ICS?lstr94_FirmV_0_7_0+14
0x6F74	0x00 ;?ICS?lstr94_FirmV_0_7_0+16
; end of ?ICS?lstr94_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr95_FirmV_0_7_0
0x6F75	0x3731 ;?ICS?lstr95_FirmV_0_7_0+0
0x6F77	0x5320 ;?ICS?lstr95_FirmV_0_7_0+2
0x6F79	0x7661 ;?ICS?lstr95_FirmV_0_7_0+4
0x6F7B	0x2065 ;?ICS?lstr95_FirmV_0_7_0+6
0x6F7D	0x6843 ;?ICS?lstr95_FirmV_0_7_0+8
0x6F7F	0x6E61 ;?ICS?lstr95_FirmV_0_7_0+10
0x6F81	0x6567 ;?ICS?lstr95_FirmV_0_7_0+12
0x6F83	0x2073 ;?ICS?lstr95_FirmV_0_7_0+14
0x6F85	0x00 ;?ICS?lstr95_FirmV_0_7_0+16
; end of ?ICS?lstr95_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr96_FirmV_0_7_0
0x6F86	0x3831 ;?ICS?lstr96_FirmV_0_7_0+0
0x6F88	0x4420 ;?ICS?lstr96_FirmV_0_7_0+2
0x6F8A	0x7369 ;?ICS?lstr96_FirmV_0_7_0+4
0x6F8C	0x6163 ;?ICS?lstr96_FirmV_0_7_0+6
0x6F8E	0x6472 ;?ICS?lstr96_FirmV_0_7_0+8
0x6F90	0x4520 ;?ICS?lstr96_FirmV_0_7_0+10
0x6F92	0x6978 ;?ICS?lstr96_FirmV_0_7_0+12
0x6F94	0x2074 ;?ICS?lstr96_FirmV_0_7_0+14
0x6F96	0x00 ;?ICS?lstr96_FirmV_0_7_0+16
; end of ?ICS?lstr96_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr6_FirmV_0_7_0
0x6F97	0x3353 ;?ICS?lstr6_FirmV_0_7_0+0
0x6F99	0x4D20 ;?ICS?lstr6_FirmV_0_7_0+2
0x6F9B	0x746F ;?ICS?lstr6_FirmV_0_7_0+4
0x6F9D	0x726F ;?ICS?lstr6_FirmV_0_7_0+6
0x6F9F	0x5331 ;?ICS?lstr6_FirmV_0_7_0+8
0x6FA1	0x6174 ;?ICS?lstr6_FirmV_0_7_0+10
0x6FA3	0x7472 ;?ICS?lstr6_FirmV_0_7_0+12
0x6FA5	0x00 ;?ICS?lstr6_FirmV_0_7_0+14
; end of ?ICS?lstr6_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr7_FirmV_0_7_0
0x6FA6	0x3353 ;?ICS?lstr7_FirmV_0_7_0+0
0x6FA8	0x4D20 ;?ICS?lstr7_FirmV_0_7_0+2
0x6FAA	0x746F ;?ICS?lstr7_FirmV_0_7_0+4
0x6FAC	0x726F ;?ICS?lstr7_FirmV_0_7_0+6
0x6FAE	0x5332 ;?ICS?lstr7_FirmV_0_7_0+8
0x6FB0	0x6174 ;?ICS?lstr7_FirmV_0_7_0+10
0x6FB2	0x7472 ;?ICS?lstr7_FirmV_0_7_0+12
0x6FB4	0x00 ;?ICS?lstr7_FirmV_0_7_0+14
; end of ?ICS?lstr7_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr8_FirmV_0_7_0
0x6FB5	0x3353 ;?ICS?lstr8_FirmV_0_7_0+0
0x6FB7	0x4D20 ;?ICS?lstr8_FirmV_0_7_0+2
0x6FB9	0x746F ;?ICS?lstr8_FirmV_0_7_0+4
0x6FBB	0x726F ;?ICS?lstr8_FirmV_0_7_0+6
0x6FBD	0x2031 ;?ICS?lstr8_FirmV_0_7_0+8
0x6FBF	0x6146 ;?ICS?lstr8_FirmV_0_7_0+10
0x6FC1	0x7473 ;?ICS?lstr8_FirmV_0_7_0+12
0x6FC3	0x00 ;?ICS?lstr8_FirmV_0_7_0+14
; end of ?ICS?lstr8_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr9_FirmV_0_7_0
0x6FC4	0x3353 ;?ICS?lstr9_FirmV_0_7_0+0
0x6FC6	0x4D20 ;?ICS?lstr9_FirmV_0_7_0+2
0x6FC8	0x746F ;?ICS?lstr9_FirmV_0_7_0+4
0x6FCA	0x726F ;?ICS?lstr9_FirmV_0_7_0+6
0x6FCC	0x2031 ;?ICS?lstr9_FirmV_0_7_0+8
0x6FCE	0x6C53 ;?ICS?lstr9_FirmV_0_7_0+10
0x6FD0	0x776F ;?ICS?lstr9_FirmV_0_7_0+12
0x6FD2	0x00 ;?ICS?lstr9_FirmV_0_7_0+14
; end of ?ICS?lstr9_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr10_FirmV_0_7_0
0x6FD3	0x3353 ;?ICS?lstr10_FirmV_0_7_0+0
0x6FD5	0x4D20 ;?ICS?lstr10_FirmV_0_7_0+2
0x6FD7	0x746F ;?ICS?lstr10_FirmV_0_7_0+4
0x6FD9	0x726F ;?ICS?lstr10_FirmV_0_7_0+6
0x6FDB	0x2032 ;?ICS?lstr10_FirmV_0_7_0+8
0x6FDD	0x6146 ;?ICS?lstr10_FirmV_0_7_0+10
0x6FDF	0x7473 ;?ICS?lstr10_FirmV_0_7_0+12
0x6FE1	0x00 ;?ICS?lstr10_FirmV_0_7_0+14
; end of ?ICS?lstr10_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr11_FirmV_0_7_0
0x6FE2	0x3353 ;?ICS?lstr11_FirmV_0_7_0+0
0x6FE4	0x4D20 ;?ICS?lstr11_FirmV_0_7_0+2
0x6FE6	0x746F ;?ICS?lstr11_FirmV_0_7_0+4
0x6FE8	0x726F ;?ICS?lstr11_FirmV_0_7_0+6
0x6FEA	0x2032 ;?ICS?lstr11_FirmV_0_7_0+8
0x6FEC	0x6C53 ;?ICS?lstr11_FirmV_0_7_0+10
0x6FEE	0x776F ;?ICS?lstr11_FirmV_0_7_0+12
0x6FF0	0x00 ;?ICS?lstr11_FirmV_0_7_0+14
; end of ?ICS?lstr11_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr12_FirmV_0_7_0
0x6FF1	0x3353 ;?ICS?lstr12_FirmV_0_7_0+0
0x6FF3	0x4F20 ;?ICS?lstr12_FirmV_0_7_0+2
0x6FF5	0x6576 ;?ICS?lstr12_FirmV_0_7_0+4
0x6FF7	0x6672 ;?ICS?lstr12_FirmV_0_7_0+6
0x6FF9	0x6F6C ;?ICS?lstr12_FirmV_0_7_0+8
0x6FFB	0x2077 ;?ICS?lstr12_FirmV_0_7_0+10
0x6FFD	0x6C46 ;?ICS?lstr12_FirmV_0_7_0+12
0x6FFF	0x6761 ;?ICS?lstr12_FirmV_0_7_0+14
0x7001	0x2031 ;?ICS?lstr12_FirmV_0_7_0+16
0x7003	0x6553 ;?ICS?lstr12_FirmV_0_7_0+18
0x7005	0x0074 ;?ICS?lstr12_FirmV_0_7_0+20
; end of ?ICS?lstr12_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr13_FirmV_0_7_0
0x7007	0x3353 ;?ICS?lstr13_FirmV_0_7_0+0
0x7009	0x4F20 ;?ICS?lstr13_FirmV_0_7_0+2
0x700B	0x6576 ;?ICS?lstr13_FirmV_0_7_0+4
0x700D	0x6672 ;?ICS?lstr13_FirmV_0_7_0+6
0x700F	0x6F6C ;?ICS?lstr13_FirmV_0_7_0+8
0x7011	0x2077 ;?ICS?lstr13_FirmV_0_7_0+10
0x7013	0x6C46 ;?ICS?lstr13_FirmV_0_7_0+12
0x7015	0x6761 ;?ICS?lstr13_FirmV_0_7_0+14
0x7017	0x2032 ;?ICS?lstr13_FirmV_0_7_0+16
0x7019	0x6553 ;?ICS?lstr13_FirmV_0_7_0+18
0x701B	0x0074 ;?ICS?lstr13_FirmV_0_7_0+20
; end of ?ICS?lstr13_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr14_FirmV_0_7_0
0x701D	0x3353 ;?ICS?lstr14_FirmV_0_7_0+0
0x701F	0x4D20 ;?ICS?lstr14_FirmV_0_7_0+2
0x7021	0x746F ;?ICS?lstr14_FirmV_0_7_0+4
0x7023	0x726F ;?ICS?lstr14_FirmV_0_7_0+6
0x7025	0x2031 ;?ICS?lstr14_FirmV_0_7_0+8
0x7027	0x7453 ;?ICS?lstr14_FirmV_0_7_0+10
0x7029	0x706F ;?ICS?lstr14_FirmV_0_7_0+12
0x702B	0x00 ;?ICS?lstr14_FirmV_0_7_0+14
; end of ?ICS?lstr14_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr15_FirmV_0_7_0
0x702C	0x3353 ;?ICS?lstr15_FirmV_0_7_0+0
0x702E	0x4D20 ;?ICS?lstr15_FirmV_0_7_0+2
0x7030	0x746F ;?ICS?lstr15_FirmV_0_7_0+4
0x7032	0x726F ;?ICS?lstr15_FirmV_0_7_0+6
0x7034	0x2032 ;?ICS?lstr15_FirmV_0_7_0+8
0x7036	0x7453 ;?ICS?lstr15_FirmV_0_7_0+10
0x7038	0x706F ;?ICS?lstr15_FirmV_0_7_0+12
0x703A	0x00 ;?ICS?lstr15_FirmV_0_7_0+14
; end of ?ICS?lstr15_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr16_FirmV_0_7_0
0x703B	0x3353 ;?ICS?lstr16_FirmV_0_7_0+0
0x703D	0x4D20 ;?ICS?lstr16_FirmV_0_7_0+2
0x703F	0x746F ;?ICS?lstr16_FirmV_0_7_0+4
0x7041	0x726F ;?ICS?lstr16_FirmV_0_7_0+6
0x7043	0x2031 ;?ICS?lstr16_FirmV_0_7_0+8
0x7045	0x6F43 ;?ICS?lstr16_FirmV_0_7_0+10
0x7047	0x6C6C ;?ICS?lstr16_FirmV_0_7_0+12
0x7049	0x7369 ;?ICS?lstr16_FirmV_0_7_0+14
0x704B	0x6F69 ;?ICS?lstr16_FirmV_0_7_0+16
0x704D	0x006E ;?ICS?lstr16_FirmV_0_7_0+18
; end of ?ICS?lstr16_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr17_FirmV_0_7_0
0x704F	0x3353 ;?ICS?lstr17_FirmV_0_7_0+0
0x7051	0x4D20 ;?ICS?lstr17_FirmV_0_7_0+2
0x7053	0x746F ;?ICS?lstr17_FirmV_0_7_0+4
0x7055	0x726F ;?ICS?lstr17_FirmV_0_7_0+6
0x7057	0x2032 ;?ICS?lstr17_FirmV_0_7_0+8
0x7059	0x6F43 ;?ICS?lstr17_FirmV_0_7_0+10
0x705B	0x6C6C ;?ICS?lstr17_FirmV_0_7_0+12
0x705D	0x7369 ;?ICS?lstr17_FirmV_0_7_0+14
0x705F	0x6F69 ;?ICS?lstr17_FirmV_0_7_0+16
0x7061	0x006E ;?ICS?lstr17_FirmV_0_7_0+18
; end of ?ICS?lstr17_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr18_FirmV_0_7_0
0x7063	0x3353 ;?ICS?lstr18_FirmV_0_7_0+0
0x7065	0x5020 ;?ICS?lstr18_FirmV_0_7_0+2
0x7067	0x6F68 ;?ICS?lstr18_FirmV_0_7_0+4
0x7069	0x6F74 ;?ICS?lstr18_FirmV_0_7_0+6
0x706B	0x6563 ;?ICS?lstr18_FirmV_0_7_0+8
0x706D	0x6C6C ;?ICS?lstr18_FirmV_0_7_0+10
0x706F	0x4920 ;?ICS?lstr18_FirmV_0_7_0+12
0x7071	0x746E ;?ICS?lstr18_FirmV_0_7_0+14
0x7073	0x00 ;?ICS?lstr18_FirmV_0_7_0+16
; end of ?ICS?lstr18_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr19_FirmV_0_7_0
0x7074	0x3353 ;?ICS?lstr19_FirmV_0_7_0+0
0x7076	0x5220 ;?ICS?lstr19_FirmV_0_7_0+2
0x7078	0x6D65 ;?ICS?lstr19_FirmV_0_7_0+4
0x707A	0x746F ;?ICS?lstr19_FirmV_0_7_0+6
0x707C	0x2065 ;?ICS?lstr19_FirmV_0_7_0+8
0x707E	0x7453 ;?ICS?lstr19_FirmV_0_7_0+10
0x7080	0x706F ;?ICS?lstr19_FirmV_0_7_0+12
0x7082	0x6465 ;?ICS?lstr19_FirmV_0_7_0+14
0x7084	0x00 ;?ICS?lstr19_FirmV_0_7_0+16
; end of ?ICS?lstr19_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr20_FirmV_0_7_0
0x7085	0x3353 ;?ICS?lstr20_FirmV_0_7_0+0
0x7087	0x4C20 ;?ICS?lstr20_FirmV_0_7_0+2
0x7089	0x6D69 ;?ICS?lstr20_FirmV_0_7_0+4
0x708B	0x7469 ;?ICS?lstr20_FirmV_0_7_0+6
0x708D	0x5320 ;?ICS?lstr20_FirmV_0_7_0+8
0x708F	0x6977 ;?ICS?lstr20_FirmV_0_7_0+10
0x7091	0x6374 ;?ICS?lstr20_FirmV_0_7_0+12
0x7093	0x2068 ;?ICS?lstr20_FirmV_0_7_0+14
0x7095	0x7453 ;?ICS?lstr20_FirmV_0_7_0+16
0x7097	0x706F ;?ICS?lstr20_FirmV_0_7_0+18
0x7099	0x6465 ;?ICS?lstr20_FirmV_0_7_0+20
0x709B	0x00 ;?ICS?lstr20_FirmV_0_7_0+22
; end of ?ICS?lstr20_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr21_FirmV_0_7_0
0x709C	0x3353 ;?ICS?lstr21_FirmV_0_7_0+0
0x709E	0x4120 ;?ICS?lstr21_FirmV_0_7_0+2
0x70A0	0x7475 ;?ICS?lstr21_FirmV_0_7_0+4
0x70A2	0x636F ;?ICS?lstr21_FirmV_0_7_0+6
0x70A4	0x6F6C ;?ICS?lstr21_FirmV_0_7_0+8
0x70A6	0x6573 ;?ICS?lstr21_FirmV_0_7_0+10
0x70A8	0x5220 ;?ICS?lstr21_FirmV_0_7_0+12
0x70AA	0x6E65 ;?ICS?lstr21_FirmV_0_7_0+14
0x70AC	0x7765 ;?ICS?lstr21_FirmV_0_7_0+16
0x70AE	0x6465 ;?ICS?lstr21_FirmV_0_7_0+18
0x70B0	0x00 ;?ICS?lstr21_FirmV_0_7_0+20
; end of ?ICS?lstr21_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr22_FirmV_0_7_0
0x70B1	0x3453 ;?ICS?lstr22_FirmV_0_7_0+0
0x70B3	0x4D20 ;?ICS?lstr22_FirmV_0_7_0+2
0x70B5	0x746F ;?ICS?lstr22_FirmV_0_7_0+4
0x70B7	0x726F ;?ICS?lstr22_FirmV_0_7_0+6
0x70B9	0x5331 ;?ICS?lstr22_FirmV_0_7_0+8
0x70BB	0x6174 ;?ICS?lstr22_FirmV_0_7_0+10
0x70BD	0x7472 ;?ICS?lstr22_FirmV_0_7_0+12
0x70BF	0x00 ;?ICS?lstr22_FirmV_0_7_0+14
; end of ?ICS?lstr22_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr23_FirmV_0_7_0
0x70C0	0x3453 ;?ICS?lstr23_FirmV_0_7_0+0
0x70C2	0x4D20 ;?ICS?lstr23_FirmV_0_7_0+2
0x70C4	0x746F ;?ICS?lstr23_FirmV_0_7_0+4
0x70C6	0x726F ;?ICS?lstr23_FirmV_0_7_0+6
0x70C8	0x5332 ;?ICS?lstr23_FirmV_0_7_0+8
0x70CA	0x6174 ;?ICS?lstr23_FirmV_0_7_0+10
0x70CC	0x7472 ;?ICS?lstr23_FirmV_0_7_0+12
0x70CE	0x00 ;?ICS?lstr23_FirmV_0_7_0+14
; end of ?ICS?lstr23_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr24_FirmV_0_7_0
0x70CF	0x3453 ;?ICS?lstr24_FirmV_0_7_0+0
0x70D1	0x4D20 ;?ICS?lstr24_FirmV_0_7_0+2
0x70D3	0x2031 ;?ICS?lstr24_FirmV_0_7_0+4
0x70D5	0x764F ;?ICS?lstr24_FirmV_0_7_0+6
0x70D7	0x7265 ;?ICS?lstr24_FirmV_0_7_0+8
0x70D9	0x6F6C ;?ICS?lstr24_FirmV_0_7_0+10
0x70DB	0x6461 ;?ICS?lstr24_FirmV_0_7_0+12
0x70DD	0x4320 ;?ICS?lstr24_FirmV_0_7_0+14
0x70DF	0x6568 ;?ICS?lstr24_FirmV_0_7_0+16
0x70E1	0x6B63 ;?ICS?lstr24_FirmV_0_7_0+18
0x70E3	0x00 ;?ICS?lstr24_FirmV_0_7_0+20
; end of ?ICS?lstr24_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr25_FirmV_0_7_0
0x70E4	0x3453 ;?ICS?lstr25_FirmV_0_7_0+0
0x70E6	0x4D20 ;?ICS?lstr25_FirmV_0_7_0+2
0x70E8	0x2032 ;?ICS?lstr25_FirmV_0_7_0+4
0x70EA	0x764F ;?ICS?lstr25_FirmV_0_7_0+6
0x70EC	0x7265 ;?ICS?lstr25_FirmV_0_7_0+8
0x70EE	0x6F6C ;?ICS?lstr25_FirmV_0_7_0+10
0x70F0	0x6461 ;?ICS?lstr25_FirmV_0_7_0+12
0x70F2	0x4320 ;?ICS?lstr25_FirmV_0_7_0+14
0x70F4	0x6568 ;?ICS?lstr25_FirmV_0_7_0+16
0x70F6	0x6B63 ;?ICS?lstr25_FirmV_0_7_0+18
0x70F8	0x00 ;?ICS?lstr25_FirmV_0_7_0+20
; end of ?ICS?lstr25_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr26_FirmV_0_7_0
0x70F9	0x3453 ;?ICS?lstr26_FirmV_0_7_0+0
0x70FB	0x4D20 ;?ICS?lstr26_FirmV_0_7_0+2
0x70FD	0x2031 ;?ICS?lstr26_FirmV_0_7_0+4
0x70FF	0x7053 ;?ICS?lstr26_FirmV_0_7_0+6
0x7101	0x6565 ;?ICS?lstr26_FirmV_0_7_0+8
0x7103	0x2064 ;?ICS?lstr26_FirmV_0_7_0+10
0x7105	0x5055 ;?ICS?lstr26_FirmV_0_7_0+12
0x7107	0x00 ;?ICS?lstr26_FirmV_0_7_0+14
; end of ?ICS?lstr26_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr27_FirmV_0_7_0
0x7108	0x3453 ;?ICS?lstr27_FirmV_0_7_0+0
0x710A	0x4D20 ;?ICS?lstr27_FirmV_0_7_0+2
0x710C	0x2031 ;?ICS?lstr27_FirmV_0_7_0+4
0x710E	0x7053 ;?ICS?lstr27_FirmV_0_7_0+6
0x7110	0x6565 ;?ICS?lstr27_FirmV_0_7_0+8
0x7112	0x2064 ;?ICS?lstr27_FirmV_0_7_0+10
0x7114	0x6F44 ;?ICS?lstr27_FirmV_0_7_0+12
0x7116	0x6E77 ;?ICS?lstr27_FirmV_0_7_0+14
0x7118	0x00 ;?ICS?lstr27_FirmV_0_7_0+16
; end of ?ICS?lstr27_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr28_FirmV_0_7_0
0x7119	0x3453 ;?ICS?lstr28_FirmV_0_7_0+0
0x711B	0x4D20 ;?ICS?lstr28_FirmV_0_7_0+2
0x711D	0x2032 ;?ICS?lstr28_FirmV_0_7_0+4
0x711F	0x7053 ;?ICS?lstr28_FirmV_0_7_0+6
0x7121	0x6565 ;?ICS?lstr28_FirmV_0_7_0+8
0x7123	0x2064 ;?ICS?lstr28_FirmV_0_7_0+10
0x7125	0x5055 ;?ICS?lstr28_FirmV_0_7_0+12
0x7127	0x00 ;?ICS?lstr28_FirmV_0_7_0+14
; end of ?ICS?lstr28_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr29_FirmV_0_7_0
0x7128	0x3453 ;?ICS?lstr29_FirmV_0_7_0+0
0x712A	0x4D20 ;?ICS?lstr29_FirmV_0_7_0+2
0x712C	0x2032 ;?ICS?lstr29_FirmV_0_7_0+4
0x712E	0x7053 ;?ICS?lstr29_FirmV_0_7_0+6
0x7130	0x6565 ;?ICS?lstr29_FirmV_0_7_0+8
0x7132	0x2064 ;?ICS?lstr29_FirmV_0_7_0+10
0x7134	0x6F44 ;?ICS?lstr29_FirmV_0_7_0+12
0x7136	0x6E77 ;?ICS?lstr29_FirmV_0_7_0+14
0x7138	0x00 ;?ICS?lstr29_FirmV_0_7_0+16
; end of ?ICS?lstr29_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr30_FirmV_0_7_0
0x7139	0x3453 ;?ICS?lstr30_FirmV_0_7_0+0
0x713B	0x4D20 ;?ICS?lstr30_FirmV_0_7_0+2
0x713D	0x2031 ;?ICS?lstr30_FirmV_0_7_0+4
0x713F	0x7453 ;?ICS?lstr30_FirmV_0_7_0+6
0x7141	0x706F ;?ICS?lstr30_FirmV_0_7_0+8
0x7143	0x6465 ;?ICS?lstr30_FirmV_0_7_0+10
0x7145	0x00 ;?ICS?lstr30_FirmV_0_7_0+12
; end of ?ICS?lstr30_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr31_FirmV_0_7_0
0x7146	0x3453 ;?ICS?lstr31_FirmV_0_7_0+0
0x7148	0x4D20 ;?ICS?lstr31_FirmV_0_7_0+2
0x714A	0x2032 ;?ICS?lstr31_FirmV_0_7_0+4
0x714C	0x7453 ;?ICS?lstr31_FirmV_0_7_0+6
0x714E	0x706F ;?ICS?lstr31_FirmV_0_7_0+8
0x7150	0x6465 ;?ICS?lstr31_FirmV_0_7_0+10
0x7152	0x00 ;?ICS?lstr31_FirmV_0_7_0+12
; end of ?ICS?lstr31_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr32_FirmV_0_7_0
0x7153	0x3453 ;?ICS?lstr32_FirmV_0_7_0+0
0x7155	0x4D20 ;?ICS?lstr32_FirmV_0_7_0+2
0x7157	0x2031 ;?ICS?lstr32_FirmV_0_7_0+4
0x7159	0x764F ;?ICS?lstr32_FirmV_0_7_0+6
0x715B	0x7265 ;?ICS?lstr32_FirmV_0_7_0+8
0x715D	0x6F6C ;?ICS?lstr32_FirmV_0_7_0+10
0x715F	0x6461 ;?ICS?lstr32_FirmV_0_7_0+12
0x7161	0x6465 ;?ICS?lstr32_FirmV_0_7_0+14
0x7163	0x00 ;?ICS?lstr32_FirmV_0_7_0+16
; end of ?ICS?lstr32_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr33_FirmV_0_7_0
0x7164	0x3453 ;?ICS?lstr33_FirmV_0_7_0+0
0x7166	0x4D20 ;?ICS?lstr33_FirmV_0_7_0+2
0x7168	0x2032 ;?ICS?lstr33_FirmV_0_7_0+4
0x716A	0x764F ;?ICS?lstr33_FirmV_0_7_0+6
0x716C	0x7265 ;?ICS?lstr33_FirmV_0_7_0+8
0x716E	0x6F6C ;?ICS?lstr33_FirmV_0_7_0+10
0x7170	0x6461 ;?ICS?lstr33_FirmV_0_7_0+12
0x7172	0x6465 ;?ICS?lstr33_FirmV_0_7_0+14
0x7174	0x00 ;?ICS?lstr33_FirmV_0_7_0+16
; end of ?ICS?lstr33_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr34_FirmV_0_7_0
0x7175	0x3453 ;?ICS?lstr34_FirmV_0_7_0+0
0x7177	0x5020 ;?ICS?lstr34_FirmV_0_7_0+2
0x7179	0x6F68 ;?ICS?lstr34_FirmV_0_7_0+4
0x717B	0x6F74 ;?ICS?lstr34_FirmV_0_7_0+6
0x717D	0x6563 ;?ICS?lstr34_FirmV_0_7_0+8
0x717F	0x6C6C ;?ICS?lstr34_FirmV_0_7_0+10
0x7181	0x4920 ;?ICS?lstr34_FirmV_0_7_0+12
0x7183	0x746E ;?ICS?lstr34_FirmV_0_7_0+14
0x7185	0x00 ;?ICS?lstr34_FirmV_0_7_0+16
; end of ?ICS?lstr34_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr35_FirmV_0_7_0
0x7186	0x3453 ;?ICS?lstr35_FirmV_0_7_0+0
0x7188	0x4C20 ;?ICS?lstr35_FirmV_0_7_0+2
0x718A	0x6D69 ;?ICS?lstr35_FirmV_0_7_0+4
0x718C	0x7469 ;?ICS?lstr35_FirmV_0_7_0+6
0x718E	0x5320 ;?ICS?lstr35_FirmV_0_7_0+8
0x7190	0x6977 ;?ICS?lstr35_FirmV_0_7_0+10
0x7192	0x6374 ;?ICS?lstr35_FirmV_0_7_0+12
0x7194	0x2068 ;?ICS?lstr35_FirmV_0_7_0+14
0x7196	0x7453 ;?ICS?lstr35_FirmV_0_7_0+16
0x7198	0x706F ;?ICS?lstr35_FirmV_0_7_0+18
0x719A	0x00 ;?ICS?lstr35_FirmV_0_7_0+20
; end of ?ICS?lstr35_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr36_FirmV_0_7_0
0x719B	0x3453 ;?ICS?lstr36_FirmV_0_7_0+0
0x719D	0x5220 ;?ICS?lstr36_FirmV_0_7_0+2
0x719F	0x6D65 ;?ICS?lstr36_FirmV_0_7_0+4
0x71A1	0x746F ;?ICS?lstr36_FirmV_0_7_0+6
0x71A3	0x2065 ;?ICS?lstr36_FirmV_0_7_0+8
0x71A5	0x7250 ;?ICS?lstr36_FirmV_0_7_0+10
0x71A7	0x7365 ;?ICS?lstr36_FirmV_0_7_0+12
0x71A9	0x6573 ;?ICS?lstr36_FirmV_0_7_0+14
0x71AB	0x0064 ;?ICS?lstr36_FirmV_0_7_0+16
; end of ?ICS?lstr36_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr37_FirmV_0_7_0
0x71AD	0x3453 ;?ICS?lstr37_FirmV_0_7_0+0
0x71AF	0x4120 ;?ICS?lstr37_FirmV_0_7_0+2
0x71B1	0x7475 ;?ICS?lstr37_FirmV_0_7_0+4
0x71B3	0x636F ;?ICS?lstr37_FirmV_0_7_0+6
0x71B5	0x6F6C ;?ICS?lstr37_FirmV_0_7_0+8
0x71B7	0x6573 ;?ICS?lstr37_FirmV_0_7_0+10
0x71B9	0x5220 ;?ICS?lstr37_FirmV_0_7_0+12
0x71BB	0x6E65 ;?ICS?lstr37_FirmV_0_7_0+14
0x71BD	0x7765 ;?ICS?lstr37_FirmV_0_7_0+16
0x71BF	0x6465 ;?ICS?lstr37_FirmV_0_7_0+18
0x71C1	0x00 ;?ICS?lstr37_FirmV_0_7_0+20
; end of ?ICS?lstr37_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS__errPhoto
0x71C2	0x7245 ;?ICS__errPhoto+0
0x71C4	0x2072 ;?ICS__errPhoto+2
0x71C6	0x6850 ;?ICS__errPhoto+4
0x71C8	0x746F ;?ICS__errPhoto+6
0x71CA	0x636F ;?ICS__errPhoto+8
0x71CC	0x6C65 ;?ICS__errPhoto+10
0x71CE	0x206C ;?ICS__errPhoto+12
0x71D0	0x2020 ;?ICS__errPhoto+14
0x71D2	0x00 ;?ICS__errPhoto+16
; end of ?ICS__errPhoto
;FirmV_0_7_0.c,0 :: ?ICS__errLimit
0x71D3	0x7245 ;?ICS__errLimit+0
0x71D5	0x2072 ;?ICS__errLimit+2
0x71D7	0x694C ;?ICS__errLimit+4
0x71D9	0x696D ;?ICS__errLimit+6
0x71DB	0x2074 ;?ICS__errLimit+8
0x71DD	0x7753 ;?ICS__errLimit+10
0x71DF	0x7469 ;?ICS__errLimit+12
0x71E1	0x6863 ;?ICS__errLimit+14
0x71E3	0x00 ;?ICS__errLimit+16
; end of ?ICS__errLimit
;FirmV_0_7_0.c,0 :: ?ICS__errRemote
0x71E4	0x7245 ;?ICS__errRemote+0
0x71E6	0x2072 ;?ICS__errRemote+2
0x71E8	0x6552 ;?ICS__errRemote+4
0x71EA	0x6F6D ;?ICS__errRemote+6
0x71EC	0x6574 ;?ICS__errRemote+8
0x71EE	0x2020 ;?ICS__errRemote+10
0x71F0	0x2020 ;?ICS__errRemote+12
0x71F2	0x2020 ;?ICS__errRemote+14
0x71F4	0x00 ;?ICS__errRemote+16
; end of ?ICS__errRemote
;FirmV_0_7_0.c,0 :: ?ICS__stop
0x71F5	0x6F44 ;?ICS__stop+0
0x71F7	0x726F ;?ICS__stop+2
0x71F9	0x5320 ;?ICS__stop+4
0x71FB	0x6F74 ;?ICS__stop+6
0x71FD	0x6570 ;?ICS__stop+8
0x71FF	0x2064 ;?ICS__stop+10
0x7201	0x2020 ;?ICS__stop+12
0x7203	0x2020 ;?ICS__stop+14
0x7205	0x00 ;?ICS__stop+16
; end of ?ICS__stop
;FirmV_0_7_0.c,0 :: ?ICS__errOverload
0x7206	0x7245 ;?ICS__errOverload+0
0x7208	0x2072 ;?ICS__errOverload+2
0x720A	0x764F ;?ICS__errOverload+4
0x720C	0x7265 ;?ICS__errOverload+6
0x720E	0x6F6C ;?ICS__errOverload+8
0x7210	0x6461 ;?ICS__errOverload+10
0x7212	0x2020 ;?ICS__errOverload+12
0x7214	0x2020 ;?ICS__errOverload+14
0x7216	0x00 ;?ICS__errOverload+16
; end of ?ICS__errOverload
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellOpenFlag
0x7217	0x00 ;?ICS_PhotocellOpenFlag+0
; end of ?ICS_PhotocellOpenFlag
;FirmV_0_7_0.c,0 :: ?ICS_Motor2Start
0x7218	0x00 ;?ICS_Motor2Start+0
; end of ?ICS_Motor2Start
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter1
0x7219	0x00 ;?ICS_OverloadCounter1+0
; end of ?ICS_OverloadCounter1
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter2
0x721A	0x00 ;?ICS_OverloadCounter2+0
; end of ?ICS_OverloadCounter2
;FirmV_0_7_0.c,0 :: ?ICS__close
0x721B	0x6F44 ;?ICS__close+0
0x721D	0x726F ;?ICS__close+2
0x721F	0x6920 ;?ICS__close+4
0x7221	0x2073 ;?ICS__close+6
0x7223	0x6C43 ;?ICS__close+8
0x7225	0x736F ;?ICS__close+10
0x7227	0x2065 ;?ICS__close+12
0x7229	0x2020 ;?ICS__close+14
0x722B	0x00 ;?ICS__close+16
; end of ?ICS__close
;FirmV_0_7_0.c,0 :: ?ICS__autoclose
0x722C	0x7541 ;?ICS__autoclose+0
0x722E	0x6F74 ;?ICS__autoclose+2
0x7230	0x6C63 ;?ICS__autoclose+4
0x7232	0x736F ;?ICS__autoclose+6
0x7234	0x2065 ;?ICS__autoclose+8
0x7236	0x6E45 ;?ICS__autoclose+10
0x7238	0x6261 ;?ICS__autoclose+12
0x723A	0x656C ;?ICS__autoclose+14
0x723C	0x00 ;?ICS__autoclose+16
; end of ?ICS__autoclose
;FirmV_0_7_0.c,0 :: ?ICS_Motor1Start
0x723D	0x00 ;?ICS_Motor1Start+0
; end of ?ICS_Motor1Start
;FirmV_0_7_0.c,0 :: ?ICS_Motor1FullSpeed
0x723E	0x01 ;?ICS_Motor1FullSpeed+0
; end of ?ICS_Motor1FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_M1isSlow
0x723F	0x00 ;?ICS_M1isSlow+0
; end of ?ICS_M1isSlow
;FirmV_0_7_0.c,0 :: ?ICS_M2isSlow
0x7240	0x00 ;?ICS_M2isSlow+0
; end of ?ICS_M2isSlow
;FirmV_0_7_0.c,0 :: ?ICS_CloseDone
0x7241	0x03 ;?ICS_CloseDone+0
; end of ?ICS_CloseDone
;FirmV_0_7_0.c,0 :: ?ICS_ActiveDoors
0x7242	0x00 ;?ICS_ActiveDoors+0
; end of ?ICS_ActiveDoors
;FirmV_0_7_0.c,0 :: ?ICS__closing
0x7243	0x6F44 ;?ICS__closing+0
0x7245	0x726F ;?ICS__closing+2
0x7247	0x4320 ;?ICS__closing+4
0x7249	0x6F6C ;?ICS__closing+6
0x724B	0x6973 ;?ICS__closing+8
0x724D	0x676E ;?ICS__closing+10
0x724F	0x2020 ;?ICS__closing+12
0x7251	0x2020 ;?ICS__closing+14
0x7253	0x00 ;?ICS__closing+16
; end of ?ICS__closing
;FirmV_0_7_0.c,0 :: ?ICS__Blank
0x7254	0x2020 ;?ICS__Blank+0
0x7256	0x2020 ;?ICS__Blank+2
0x7258	0x2020 ;?ICS__Blank+4
0x725A	0x2020 ;?ICS__Blank+6
0x725C	0x2020 ;?ICS__Blank+8
0x725E	0x2020 ;?ICS__Blank+10
0x7260	0x2020 ;?ICS__Blank+12
0x7262	0x2020 ;?ICS__Blank+14
0x7264	0x00 ;?ICS__Blank+16
; end of ?ICS__Blank
;FirmV_0_7_0.c,0 :: ?ICS_Motor2FullSpeed
0x7265	0x01 ;?ICS_Motor2FullSpeed+0
; end of ?ICS_Motor2FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_PassFlag
0x7266	0x00 ;?ICS_PassFlag+0
; end of ?ICS_PassFlag
;FirmV_0_7_0.c,0 :: ?ICS__AC
0x7267	0x00 ;?ICS__AC+0
; end of ?ICS__AC
;FirmV_0_7_0.c,0 :: ?ICS_OpenDone
0x7268	0x03 ;?ICS_OpenDone+0
; end of ?ICS_OpenDone
;FirmV_0_7_0.c,0 :: ?ICS_ZCCounter
0x7269	0x00 ;?ICS_ZCCounter+0
; end of ?ICS_ZCCounter
;FirmV_0_7_0.c,0 :: ?ICS_Flag20ms
0x726A	0x01 ;?ICS_Flag20ms+0
; end of ?ICS_Flag20ms
;FirmV_0_7_0.c,0 :: ?ICS_DebouncingDelay
0x726B	0x00 ;?ICS_DebouncingDelay+0
; end of ?ICS_DebouncingDelay
;FirmV_0_7_0.c,0 :: ?ICS_RemoteBFlag
0x726C	0x00 ;?ICS_RemoteBFlag+0
; end of ?ICS_RemoteBFlag
;FirmV_0_7_0.c,0 :: ?ICS_Pressed
0x726D	0x00 ;?ICS_Pressed+0
; end of ?ICS_Pressed
;FirmV_0_7_0.c,0 :: ?ICS_msCounter
0x726E	0x00 ;?ICS_msCounter+0
; end of ?ICS_msCounter
;FirmV_0_7_0.c,0 :: ?ICS_Flag500ms
0x726F	0x01 ;?ICS_Flag500ms+0
; end of ?ICS_Flag500ms
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellCount
0x7270	0x00 ;?ICS_PhotocellCount+0
; end of ?ICS_PhotocellCount
;FirmV_0_7_0.c,0 :: ?ICS_RemoteAFlag
0x7271	0x00 ;?ICS_RemoteAFlag+0
; end of ?ICS_RemoteAFlag
;FirmV_0_7_0.c,0 :: ?ICS__opening
0x7272	0x6F44 ;?ICS__opening+0
0x7274	0x726F ;?ICS__opening+2
0x7276	0x4F20 ;?ICS__opening+4
0x7278	0x6570 ;?ICS__opening+6
0x727A	0x696E ;?ICS__opening+8
0x727C	0x676E ;?ICS__opening+10
0x727E	0x2020 ;?ICS__opening+12
0x7280	0x2020 ;?ICS__opening+14
0x7282	0x00 ;?ICS__opening+16
; end of ?ICS__opening
;FirmV_0_7_0.c,0 :: ?ICS__open
0x7283	0x6F44 ;?ICS__open+0
0x7285	0x726F ;?ICS__open+2
0x7287	0x6920 ;?ICS__open+4
0x7289	0x2073 ;?ICS__open+6
0x728B	0x704F ;?ICS__open+8
0x728D	0x6E65 ;?ICS__open+10
0x728F	0x2020 ;?ICS__open+12
0x7291	0x2020 ;?ICS__open+14
0x7293	0x00 ;?ICS__open+16
; end of ?ICS__open
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse2
0x7294	0x00 ;?ICS_RemotePulse2+0
; end of ?ICS_RemotePulse2
;FirmV_0_7_0.c,0 :: ?ICS_MenuPointer
0x7295	0x00 ;?ICS_MenuPointer+0
; end of ?ICS_MenuPointer
;FirmV_0_7_0.c,0 :: ?ICS_ms500
0x7296	0x0000 ;?ICS_ms500+0
0x7298	0x0000 ;?ICS_ms500+2
; end of ?ICS_ms500
;FirmV_0_7_0.c,0 :: ?ICS_State
0x729A	0x00 ;?ICS_State+0
; end of ?ICS_State
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine1
0x729B	0x2020 ;?ICS_LCDLine1+0
0x729D	0x2020 ;?ICS_LCDLine1+2
0x729F	0x2020 ;?ICS_LCDLine1+4
0x72A1	0x2020 ;?ICS_LCDLine1+6
0x72A3	0x2020 ;?ICS_LCDLine1+8
0x72A5	0x2020 ;?ICS_LCDLine1+10
0x72A7	0x2020 ;?ICS_LCDLine1+12
0x72A9	0x2020 ;?ICS_LCDLine1+14
0x72AB	0x00 ;?ICS_LCDLine1+16
; end of ?ICS_LCDLine1
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine2
0x72AC	0x2020 ;?ICS_LCDLine2+0
0x72AE	0x2020 ;?ICS_LCDLine2+2
0x72B0	0x2020 ;?ICS_LCDLine2+4
0x72B2	0x2020 ;?ICS_LCDLine2+6
0x72B4	0x2020 ;?ICS_LCDLine2+8
0x72B6	0x2020 ;?ICS_LCDLine2+10
0x72B8	0x2020 ;?ICS_LCDLine2+12
0x72BA	0x2020 ;?ICS_LCDLine2+14
0x72BC	0x00 ;?ICS_LCDLine2+16
; end of ?ICS_LCDLine2
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag2
0x72BD	0x00 ;?ICS_OverloadCheckFlag2+0
; end of ?ICS_OverloadCheckFlag2
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag1
0x72BE	0x00 ;?ICS_OverloadCheckFlag1+0
; end of ?ICS_OverloadCheckFlag1
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse1
0x72BF	0x00 ;?ICS_RemotePulse1+0
; end of ?ICS_RemotePulse1
;FirmV_0_7_0.c,0 :: ?ICS_ms20A
0x72C0	0x00 ;?ICS_ms20A+0
; end of ?ICS_ms20A
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlashFlag
0x72C1	0x00 ;?ICS_LCDFlashFlag+0
; end of ?ICS_LCDFlashFlag
;FirmV_0_7_0.c,0 :: ?ICS_LearningMode
0x72C2	0x00 ;?ICS_LearningMode+0
; end of ?ICS_LearningMode
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlash
0x72C3	0x00 ;?ICS_LCDFlash+0
; end of ?ICS_LCDFlash
;FirmV_0_7_0.c,0 :: ?ICS_OverloadSens
0x72C4	0x05 ;?ICS_OverloadSens+0
; end of ?ICS_OverloadSens
;FirmV_0_7_0.c,0 :: ?ICS_LCDUpdateFlag
0x72C5	0x00 ;?ICS_LCDUpdateFlag+0
; end of ?ICS_LCDUpdateFlag
;FirmV_0_7_0.c,0 :: ?ICS?lstr56_FirmV_0_7_0
0x72C6	0x3853 ;?ICS?lstr56_FirmV_0_7_0+0
0x72C8	0x4D20 ;?ICS?lstr56_FirmV_0_7_0+2
0x72CA	0x746F ;?ICS?lstr56_FirmV_0_7_0+4
0x72CC	0x726F ;?ICS?lstr56_FirmV_0_7_0+6
0x72CE	0x5331 ;?ICS?lstr56_FirmV_0_7_0+8
0x72D0	0x6174 ;?ICS?lstr56_FirmV_0_7_0+10
0x72D2	0x7472 ;?ICS?lstr56_FirmV_0_7_0+12
0x72D4	0x00 ;?ICS?lstr56_FirmV_0_7_0+14
; end of ?ICS?lstr56_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr57_FirmV_0_7_0
0x72D5	0x3853 ;?ICS?lstr57_FirmV_0_7_0+0
0x72D7	0x4D20 ;?ICS?lstr57_FirmV_0_7_0+2
0x72D9	0x746F ;?ICS?lstr57_FirmV_0_7_0+4
0x72DB	0x726F ;?ICS?lstr57_FirmV_0_7_0+6
0x72DD	0x5332 ;?ICS?lstr57_FirmV_0_7_0+8
0x72DF	0x6174 ;?ICS?lstr57_FirmV_0_7_0+10
0x72E1	0x7472 ;?ICS?lstr57_FirmV_0_7_0+12
0x72E3	0x00 ;?ICS?lstr57_FirmV_0_7_0+14
; end of ?ICS?lstr57_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr58_FirmV_0_7_0
0x72E4	0x3853 ;?ICS?lstr58_FirmV_0_7_0+0
0x72E6	0x4F20 ;?ICS?lstr58_FirmV_0_7_0+2
0x72E8	0x6576 ;?ICS?lstr58_FirmV_0_7_0+4
0x72EA	0x6672 ;?ICS?lstr58_FirmV_0_7_0+6
0x72EC	0x6F6C ;?ICS?lstr58_FirmV_0_7_0+8
0x72EE	0x2077 ;?ICS?lstr58_FirmV_0_7_0+10
0x72F0	0x6C46 ;?ICS?lstr58_FirmV_0_7_0+12
0x72F2	0x6761 ;?ICS?lstr58_FirmV_0_7_0+14
0x72F4	0x2031 ;?ICS?lstr58_FirmV_0_7_0+16
0x72F6	0x6553 ;?ICS?lstr58_FirmV_0_7_0+18
0x72F8	0x0074 ;?ICS?lstr58_FirmV_0_7_0+20
; end of ?ICS?lstr58_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr59_FirmV_0_7_0
0x72FA	0x3853 ;?ICS?lstr59_FirmV_0_7_0+0
0x72FC	0x4F20 ;?ICS?lstr59_FirmV_0_7_0+2
0x72FE	0x6576 ;?ICS?lstr59_FirmV_0_7_0+4
0x7300	0x6672 ;?ICS?lstr59_FirmV_0_7_0+6
0x7302	0x6F6C ;?ICS?lstr59_FirmV_0_7_0+8
0x7304	0x2077 ;?ICS?lstr59_FirmV_0_7_0+10
0x7306	0x6C46 ;?ICS?lstr59_FirmV_0_7_0+12
0x7308	0x6761 ;?ICS?lstr59_FirmV_0_7_0+14
0x730A	0x2032 ;?ICS?lstr59_FirmV_0_7_0+16
0x730C	0x6553 ;?ICS?lstr59_FirmV_0_7_0+18
0x730E	0x0074 ;?ICS?lstr59_FirmV_0_7_0+20
; end of ?ICS?lstr59_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr60_FirmV_0_7_0
0x7310	0x3853 ;?ICS?lstr60_FirmV_0_7_0+0
0x7312	0x4D20 ;?ICS?lstr60_FirmV_0_7_0+2
0x7314	0x746F ;?ICS?lstr60_FirmV_0_7_0+4
0x7316	0x726F ;?ICS?lstr60_FirmV_0_7_0+6
0x7318	0x2031 ;?ICS?lstr60_FirmV_0_7_0+8
0x731A	0x6146 ;?ICS?lstr60_FirmV_0_7_0+10
0x731C	0x7473 ;?ICS?lstr60_FirmV_0_7_0+12
0x731E	0x00 ;?ICS?lstr60_FirmV_0_7_0+14
; end of ?ICS?lstr60_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr61_FirmV_0_7_0
0x731F	0x3853 ;?ICS?lstr61_FirmV_0_7_0+0
0x7321	0x4D20 ;?ICS?lstr61_FirmV_0_7_0+2
0x7323	0x746F ;?ICS?lstr61_FirmV_0_7_0+4
0x7325	0x726F ;?ICS?lstr61_FirmV_0_7_0+6
0x7327	0x2032 ;?ICS?lstr61_FirmV_0_7_0+8
0x7329	0x6146 ;?ICS?lstr61_FirmV_0_7_0+10
0x732B	0x7473 ;?ICS?lstr61_FirmV_0_7_0+12
0x732D	0x00 ;?ICS?lstr61_FirmV_0_7_0+14
; end of ?ICS?lstr61_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr62_FirmV_0_7_0
0x732E	0x3853 ;?ICS?lstr62_FirmV_0_7_0+0
0x7330	0x4D20 ;?ICS?lstr62_FirmV_0_7_0+2
0x7332	0x746F ;?ICS?lstr62_FirmV_0_7_0+4
0x7334	0x726F ;?ICS?lstr62_FirmV_0_7_0+6
0x7336	0x2031 ;?ICS?lstr62_FirmV_0_7_0+8
0x7338	0x7453 ;?ICS?lstr62_FirmV_0_7_0+10
0x733A	0x706F ;?ICS?lstr62_FirmV_0_7_0+12
0x733C	0x00 ;?ICS?lstr62_FirmV_0_7_0+14
; end of ?ICS?lstr62_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr63_FirmV_0_7_0
0x733D	0x3853 ;?ICS?lstr63_FirmV_0_7_0+0
0x733F	0x4D20 ;?ICS?lstr63_FirmV_0_7_0+2
0x7341	0x746F ;?ICS?lstr63_FirmV_0_7_0+4
0x7343	0x726F ;?ICS?lstr63_FirmV_0_7_0+6
0x7345	0x2032 ;?ICS?lstr63_FirmV_0_7_0+8
0x7347	0x7453 ;?ICS?lstr63_FirmV_0_7_0+10
0x7349	0x706F ;?ICS?lstr63_FirmV_0_7_0+12
0x734B	0x00 ;?ICS?lstr63_FirmV_0_7_0+14
; end of ?ICS?lstr63_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr64_FirmV_0_7_0
0x734C	0x3853 ;?ICS?lstr64_FirmV_0_7_0+0
0x734E	0x5020 ;?ICS?lstr64_FirmV_0_7_0+2
0x7350	0x6F68 ;?ICS?lstr64_FirmV_0_7_0+4
0x7352	0x6F74 ;?ICS?lstr64_FirmV_0_7_0+6
0x7354	0x6563 ;?ICS?lstr64_FirmV_0_7_0+8
0x7356	0x6C6C ;?ICS?lstr64_FirmV_0_7_0+10
0x7358	0x4920 ;?ICS?lstr64_FirmV_0_7_0+12
0x735A	0x746E ;?ICS?lstr64_FirmV_0_7_0+14
0x735C	0x00 ;?ICS?lstr64_FirmV_0_7_0+16
; end of ?ICS?lstr64_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr65_FirmV_0_7_0
0x735D	0x3853 ;?ICS?lstr65_FirmV_0_7_0+0
0x735F	0x4D20 ;?ICS?lstr65_FirmV_0_7_0+2
0x7361	0x746F ;?ICS?lstr65_FirmV_0_7_0+4
0x7363	0x726F ;?ICS?lstr65_FirmV_0_7_0+6
0x7365	0x2073 ;?ICS?lstr65_FirmV_0_7_0+8
0x7367	0x7453 ;?ICS?lstr65_FirmV_0_7_0+10
0x7369	0x706F ;?ICS?lstr65_FirmV_0_7_0+12
0x736B	0x6465 ;?ICS?lstr65_FirmV_0_7_0+14
0x736D	0x2820 ;?ICS?lstr65_FirmV_0_7_0+16
0x736F	0x6552 ;?ICS?lstr65_FirmV_0_7_0+18
0x7371	0x6F6D ;?ICS?lstr65_FirmV_0_7_0+20
0x7373	0x6574 ;?ICS?lstr65_FirmV_0_7_0+22
0x7375	0x0029 ;?ICS?lstr65_FirmV_0_7_0+24
; end of ?ICS?lstr65_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr66_FirmV_0_7_0
0x7377	0x3853 ;?ICS?lstr66_FirmV_0_7_0+0
0x7379	0x4C20 ;?ICS?lstr66_FirmV_0_7_0+2
0x737B	0x6D69 ;?ICS?lstr66_FirmV_0_7_0+4
0x737D	0x7469 ;?ICS?lstr66_FirmV_0_7_0+6
0x737F	0x5320 ;?ICS?lstr66_FirmV_0_7_0+8
0x7381	0x6977 ;?ICS?lstr66_FirmV_0_7_0+10
0x7383	0x6374 ;?ICS?lstr66_FirmV_0_7_0+12
0x7385	0x2068 ;?ICS?lstr66_FirmV_0_7_0+14
0x7387	0x7453 ;?ICS?lstr66_FirmV_0_7_0+16
0x7389	0x706F ;?ICS?lstr66_FirmV_0_7_0+18
0x738B	0x00 ;?ICS?lstr66_FirmV_0_7_0+20
; end of ?ICS?lstr66_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr67_FirmV_0_7_0
0x738C	0x3853 ;?ICS?lstr67_FirmV_0_7_0+0
0x738E	0x4120 ;?ICS?lstr67_FirmV_0_7_0+2
0x7390	0x7475 ;?ICS?lstr67_FirmV_0_7_0+4
0x7392	0x636F ;?ICS?lstr67_FirmV_0_7_0+6
0x7394	0x6F6C ;?ICS?lstr67_FirmV_0_7_0+8
0x7396	0x6573 ;?ICS?lstr67_FirmV_0_7_0+10
0x7398	0x5220 ;?ICS?lstr67_FirmV_0_7_0+12
0x739A	0x6E65 ;?ICS?lstr67_FirmV_0_7_0+14
0x739C	0x7765 ;?ICS?lstr67_FirmV_0_7_0+16
0x739E	0x6465 ;?ICS?lstr67_FirmV_0_7_0+18
0x73A0	0x00 ;?ICS?lstr67_FirmV_0_7_0+20
; end of ?ICS?lstr67_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr44_FirmV_0_7_0
0x73A1	0x3753 ;?ICS?lstr44_FirmV_0_7_0+0
0x73A3	0x4D20 ;?ICS?lstr44_FirmV_0_7_0+2
0x73A5	0x746F ;?ICS?lstr44_FirmV_0_7_0+4
0x73A7	0x726F ;?ICS?lstr44_FirmV_0_7_0+6
0x73A9	0x5331 ;?ICS?lstr44_FirmV_0_7_0+8
0x73AB	0x6174 ;?ICS?lstr44_FirmV_0_7_0+10
0x73AD	0x7472 ;?ICS?lstr44_FirmV_0_7_0+12
0x73AF	0x00 ;?ICS?lstr44_FirmV_0_7_0+14
; end of ?ICS?lstr44_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr45_FirmV_0_7_0
0x73B0	0x3753 ;?ICS?lstr45_FirmV_0_7_0+0
0x73B2	0x4D20 ;?ICS?lstr45_FirmV_0_7_0+2
0x73B4	0x746F ;?ICS?lstr45_FirmV_0_7_0+4
0x73B6	0x726F ;?ICS?lstr45_FirmV_0_7_0+6
0x73B8	0x5332 ;?ICS?lstr45_FirmV_0_7_0+8
0x73BA	0x6174 ;?ICS?lstr45_FirmV_0_7_0+10
0x73BC	0x7472 ;?ICS?lstr45_FirmV_0_7_0+12
0x73BE	0x00 ;?ICS?lstr45_FirmV_0_7_0+14
; end of ?ICS?lstr45_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr46_FirmV_0_7_0
0x73BF	0x3753 ;?ICS?lstr46_FirmV_0_7_0+0
0x73C1	0x4D20 ;?ICS?lstr46_FirmV_0_7_0+2
0x73C3	0x2031 ;?ICS?lstr46_FirmV_0_7_0+4
0x73C5	0x764F ;?ICS?lstr46_FirmV_0_7_0+6
0x73C7	0x7265 ;?ICS?lstr46_FirmV_0_7_0+8
0x73C9	0x6F6C ;?ICS?lstr46_FirmV_0_7_0+10
0x73CB	0x6461 ;?ICS?lstr46_FirmV_0_7_0+12
0x73CD	0x4320 ;?ICS?lstr46_FirmV_0_7_0+14
0x73CF	0x6568 ;?ICS?lstr46_FirmV_0_7_0+16
0x73D1	0x6B63 ;?ICS?lstr46_FirmV_0_7_0+18
0x73D3	0x00 ;?ICS?lstr46_FirmV_0_7_0+20
; end of ?ICS?lstr46_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr47_FirmV_0_7_0
0x73D4	0x3753 ;?ICS?lstr47_FirmV_0_7_0+0
0x73D6	0x4D20 ;?ICS?lstr47_FirmV_0_7_0+2
0x73D8	0x2032 ;?ICS?lstr47_FirmV_0_7_0+4
0x73DA	0x764F ;?ICS?lstr47_FirmV_0_7_0+6
0x73DC	0x7265 ;?ICS?lstr47_FirmV_0_7_0+8
0x73DE	0x6F6C ;?ICS?lstr47_FirmV_0_7_0+10
0x73E0	0x6461 ;?ICS?lstr47_FirmV_0_7_0+12
0x73E2	0x4320 ;?ICS?lstr47_FirmV_0_7_0+14
0x73E4	0x6568 ;?ICS?lstr47_FirmV_0_7_0+16
0x73E6	0x6B63 ;?ICS?lstr47_FirmV_0_7_0+18
0x73E8	0x00 ;?ICS?lstr47_FirmV_0_7_0+20
; end of ?ICS?lstr47_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr48_FirmV_0_7_0
0x73E9	0x3753 ;?ICS?lstr48_FirmV_0_7_0+0
0x73EB	0x4D20 ;?ICS?lstr48_FirmV_0_7_0+2
0x73ED	0x2031 ;?ICS?lstr48_FirmV_0_7_0+4
0x73EF	0x7053 ;?ICS?lstr48_FirmV_0_7_0+6
0x73F1	0x6565 ;?ICS?lstr48_FirmV_0_7_0+8
0x73F3	0x2064 ;?ICS?lstr48_FirmV_0_7_0+10
0x73F5	0x5055 ;?ICS?lstr48_FirmV_0_7_0+12
0x73F7	0x00 ;?ICS?lstr48_FirmV_0_7_0+14
; end of ?ICS?lstr48_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr49_FirmV_0_7_0
0x73F8	0x3753 ;?ICS?lstr49_FirmV_0_7_0+0
0x73FA	0x4D20 ;?ICS?lstr49_FirmV_0_7_0+2
0x73FC	0x2032 ;?ICS?lstr49_FirmV_0_7_0+4
0x73FE	0x7053 ;?ICS?lstr49_FirmV_0_7_0+6
0x7400	0x6565 ;?ICS?lstr49_FirmV_0_7_0+8
0x7402	0x2064 ;?ICS?lstr49_FirmV_0_7_0+10
0x7404	0x5055 ;?ICS?lstr49_FirmV_0_7_0+12
0x7406	0x00 ;?ICS?lstr49_FirmV_0_7_0+14
; end of ?ICS?lstr49_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr50_FirmV_0_7_0
0x7407	0x3753 ;?ICS?lstr50_FirmV_0_7_0+0
0x7409	0x4D20 ;?ICS?lstr50_FirmV_0_7_0+2
0x740B	0x2031 ;?ICS?lstr50_FirmV_0_7_0+4
0x740D	0x7453 ;?ICS?lstr50_FirmV_0_7_0+6
0x740F	0x706F ;?ICS?lstr50_FirmV_0_7_0+8
0x7411	0x6465 ;?ICS?lstr50_FirmV_0_7_0+10
0x7413	0x00 ;?ICS?lstr50_FirmV_0_7_0+12
; end of ?ICS?lstr50_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr51_FirmV_0_7_0
0x7414	0x3753 ;?ICS?lstr51_FirmV_0_7_0+0
0x7416	0x4D20 ;?ICS?lstr51_FirmV_0_7_0+2
0x7418	0x2032 ;?ICS?lstr51_FirmV_0_7_0+4
0x741A	0x7453 ;?ICS?lstr51_FirmV_0_7_0+6
0x741C	0x706F ;?ICS?lstr51_FirmV_0_7_0+8
0x741E	0x6465 ;?ICS?lstr51_FirmV_0_7_0+10
0x7420	0x00 ;?ICS?lstr51_FirmV_0_7_0+12
; end of ?ICS?lstr51_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr52_FirmV_0_7_0
0x7421	0x3753 ;?ICS?lstr52_FirmV_0_7_0+0
0x7423	0x5020 ;?ICS?lstr52_FirmV_0_7_0+2
0x7425	0x6F68 ;?ICS?lstr52_FirmV_0_7_0+4
0x7427	0x6F74 ;?ICS?lstr52_FirmV_0_7_0+6
0x7429	0x6563 ;?ICS?lstr52_FirmV_0_7_0+8
0x742B	0x6C6C ;?ICS?lstr52_FirmV_0_7_0+10
0x742D	0x4920 ;?ICS?lstr52_FirmV_0_7_0+12
0x742F	0x746E ;?ICS?lstr52_FirmV_0_7_0+14
0x7431	0x00 ;?ICS?lstr52_FirmV_0_7_0+16
; end of ?ICS?lstr52_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr53_FirmV_0_7_0
0x7432	0x3753 ;?ICS?lstr53_FirmV_0_7_0+0
0x7434	0x5220 ;?ICS?lstr53_FirmV_0_7_0+2
0x7436	0x6D65 ;?ICS?lstr53_FirmV_0_7_0+4
0x7438	0x746F ;?ICS?lstr53_FirmV_0_7_0+6
0x743A	0x2065 ;?ICS?lstr53_FirmV_0_7_0+8
0x743C	0x7250 ;?ICS?lstr53_FirmV_0_7_0+10
0x743E	0x7365 ;?ICS?lstr53_FirmV_0_7_0+12
0x7440	0x6573 ;?ICS?lstr53_FirmV_0_7_0+14
0x7442	0x0064 ;?ICS?lstr53_FirmV_0_7_0+16
; end of ?ICS?lstr53_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr54_FirmV_0_7_0
0x7444	0x3753 ;?ICS?lstr54_FirmV_0_7_0+0
0x7446	0x4C20 ;?ICS?lstr54_FirmV_0_7_0+2
0x7448	0x6D69 ;?ICS?lstr54_FirmV_0_7_0+4
0x744A	0x7469 ;?ICS?lstr54_FirmV_0_7_0+6
0x744C	0x5320 ;?ICS?lstr54_FirmV_0_7_0+8
0x744E	0x6977 ;?ICS?lstr54_FirmV_0_7_0+10
0x7450	0x6374 ;?ICS?lstr54_FirmV_0_7_0+12
0x7452	0x2068 ;?ICS?lstr54_FirmV_0_7_0+14
0x7454	0x7453 ;?ICS?lstr54_FirmV_0_7_0+16
0x7456	0x706F ;?ICS?lstr54_FirmV_0_7_0+18
0x7458	0x00 ;?ICS?lstr54_FirmV_0_7_0+20
; end of ?ICS?lstr54_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr55_FirmV_0_7_0
0x7459	0x3753 ;?ICS?lstr55_FirmV_0_7_0+0
0x745B	0x4120 ;?ICS?lstr55_FirmV_0_7_0+2
0x745D	0x7475 ;?ICS?lstr55_FirmV_0_7_0+4
0x745F	0x636F ;?ICS?lstr55_FirmV_0_7_0+6
0x7461	0x6F6C ;?ICS?lstr55_FirmV_0_7_0+8
0x7463	0x6573 ;?ICS?lstr55_FirmV_0_7_0+10
0x7465	0x5220 ;?ICS?lstr55_FirmV_0_7_0+12
0x7467	0x6E65 ;?ICS?lstr55_FirmV_0_7_0+14
0x7469	0x7765 ;?ICS?lstr55_FirmV_0_7_0+16
0x746B	0x6465 ;?ICS?lstr55_FirmV_0_7_0+18
0x746D	0x00 ;?ICS?lstr55_FirmV_0_7_0+20
; end of ?ICS?lstr55_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr97_FirmV_0_7_0
0x746E	0x2020 ;?ICS?lstr97_FirmV_0_7_0+0
0x7470	0x2020 ;?ICS?lstr97_FirmV_0_7_0+2
0x7472	0x2020 ;?ICS?lstr97_FirmV_0_7_0+4
0x7474	0x2020 ;?ICS?lstr97_FirmV_0_7_0+6
0x7476	0x2020 ;?ICS?lstr97_FirmV_0_7_0+8
0x7478	0x2020 ;?ICS?lstr97_FirmV_0_7_0+10
0x747A	0x2020 ;?ICS?lstr97_FirmV_0_7_0+12
0x747C	0x2020 ;?ICS?lstr97_FirmV_0_7_0+14
0x747E	0x00 ;?ICS?lstr97_FirmV_0_7_0+16
; end of ?ICS?lstr97_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr98_FirmV_0_7_0
0x747F	0x2020 ;?ICS?lstr98_FirmV_0_7_0+0
0x7481	0x2020 ;?ICS?lstr98_FirmV_0_7_0+2
0x7483	0x2020 ;?ICS?lstr98_FirmV_0_7_0+4
0x7485	0x2020 ;?ICS?lstr98_FirmV_0_7_0+6
0x7487	0x2020 ;?ICS?lstr98_FirmV_0_7_0+8
0x7489	0x2020 ;?ICS?lstr98_FirmV_0_7_0+10
0x748B	0x2020 ;?ICS?lstr98_FirmV_0_7_0+12
0x748D	0x2020 ;?ICS?lstr98_FirmV_0_7_0+14
0x748F	0x00 ;?ICS?lstr98_FirmV_0_7_0+16
; end of ?ICS?lstr98_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr99_FirmV_0_7_0
0x7490	0x2020 ;?ICS?lstr99_FirmV_0_7_0+0
0x7492	0x2020 ;?ICS?lstr99_FirmV_0_7_0+2
0x7494	0x2020 ;?ICS?lstr99_FirmV_0_7_0+4
0x7496	0x2020 ;?ICS?lstr99_FirmV_0_7_0+6
0x7498	0x2020 ;?ICS?lstr99_FirmV_0_7_0+8
0x749A	0x2020 ;?ICS?lstr99_FirmV_0_7_0+10
0x749C	0x2020 ;?ICS?lstr99_FirmV_0_7_0+12
0x749E	0x2020 ;?ICS?lstr99_FirmV_0_7_0+14
0x74A0	0x00 ;?ICS?lstr99_FirmV_0_7_0+16
; end of ?ICS?lstr99_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr100_FirmV_0_7_0
0x74A1	0x2020 ;?ICS?lstr100_FirmV_0_7_0+0
0x74A3	0x2020 ;?ICS?lstr100_FirmV_0_7_0+2
0x74A5	0x2020 ;?ICS?lstr100_FirmV_0_7_0+4
0x74A7	0x2020 ;?ICS?lstr100_FirmV_0_7_0+6
0x74A9	0x2020 ;?ICS?lstr100_FirmV_0_7_0+8
0x74AB	0x2020 ;?ICS?lstr100_FirmV_0_7_0+10
0x74AD	0x2020 ;?ICS?lstr100_FirmV_0_7_0+12
0x74AF	0x2020 ;?ICS?lstr100_FirmV_0_7_0+14
0x74B1	0x00 ;?ICS?lstr100_FirmV_0_7_0+16
; end of ?ICS?lstr100_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr101_FirmV_0_7_0
0x74B2	0x2020 ;?ICS?lstr101_FirmV_0_7_0+0
0x74B4	0x2020 ;?ICS?lstr101_FirmV_0_7_0+2
0x74B6	0x2020 ;?ICS?lstr101_FirmV_0_7_0+4
0x74B8	0x2020 ;?ICS?lstr101_FirmV_0_7_0+6
0x74BA	0x2020 ;?ICS?lstr101_FirmV_0_7_0+8
0x74BC	0x2020 ;?ICS?lstr101_FirmV_0_7_0+10
0x74BE	0x2020 ;?ICS?lstr101_FirmV_0_7_0+12
0x74C0	0x2020 ;?ICS?lstr101_FirmV_0_7_0+14
0x74C2	0x00 ;?ICS?lstr101_FirmV_0_7_0+16
; end of ?ICS?lstr101_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr102_FirmV_0_7_0
0x74C3	0x2020 ;?ICS?lstr102_FirmV_0_7_0+0
0x74C5	0x2020 ;?ICS?lstr102_FirmV_0_7_0+2
0x74C7	0x2020 ;?ICS?lstr102_FirmV_0_7_0+4
0x74C9	0x2020 ;?ICS?lstr102_FirmV_0_7_0+6
0x74CB	0x2020 ;?ICS?lstr102_FirmV_0_7_0+8
0x74CD	0x2020 ;?ICS?lstr102_FirmV_0_7_0+10
0x74CF	0x2020 ;?ICS?lstr102_FirmV_0_7_0+12
0x74D1	0x2020 ;?ICS?lstr102_FirmV_0_7_0+14
0x74D3	0x00 ;?ICS?lstr102_FirmV_0_7_0+16
; end of ?ICS?lstr102_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr3_FirmV_0_7_0
0x74D4	0x3253 ;?ICS?lstr3_FirmV_0_7_0+0
0x74D6	0x4120 ;?ICS?lstr3_FirmV_0_7_0+2
0x74D8	0x7475 ;?ICS?lstr3_FirmV_0_7_0+4
0x74DA	0x206F ;?ICS?lstr3_FirmV_0_7_0+6
0x74DC	0x6C43 ;?ICS?lstr3_FirmV_0_7_0+8
0x74DE	0x736F ;?ICS?lstr3_FirmV_0_7_0+10
0x74E0	0x2065 ;?ICS?lstr3_FirmV_0_7_0+12
0x74E2	0x6544 ;?ICS?lstr3_FirmV_0_7_0+14
0x74E4	0x656C ;?ICS?lstr3_FirmV_0_7_0+16
0x74E6	0x6574 ;?ICS?lstr3_FirmV_0_7_0+18
0x74E8	0x0064 ;?ICS?lstr3_FirmV_0_7_0+20
; end of ?ICS?lstr3_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr4_FirmV_0_7_0
0x74EA	0x3253 ;?ICS?lstr4_FirmV_0_7_0+0
0x74EC	0x4920 ;?ICS?lstr4_FirmV_0_7_0+2
0x74EE	0x736E ;?ICS?lstr4_FirmV_0_7_0+4
0x74F0	0x7265 ;?ICS?lstr4_FirmV_0_7_0+6
0x74F2	0x2074 ;?ICS?lstr4_FirmV_0_7_0+8
0x74F4	0x2039 ;?ICS?lstr4_FirmV_0_7_0+10
0x74F6	0x7461 ;?ICS?lstr4_FirmV_0_7_0+12
0x74F8	0x003A ;?ICS?lstr4_FirmV_0_7_0+14
; end of ?ICS?lstr4_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr5_FirmV_0_7_0
0x74FA	0x3253 ;?ICS?lstr5_FirmV_0_7_0+0
0x74FC	0x4920 ;?ICS?lstr5_FirmV_0_7_0+2
0x74FE	0x736E ;?ICS?lstr5_FirmV_0_7_0+4
0x7500	0x7265 ;?ICS?lstr5_FirmV_0_7_0+6
0x7502	0x2074 ;?ICS?lstr5_FirmV_0_7_0+8
0x7504	0x2039 ;?ICS?lstr5_FirmV_0_7_0+10
0x7506	0x7461 ;?ICS?lstr5_FirmV_0_7_0+12
0x7508	0x003A ;?ICS?lstr5_FirmV_0_7_0+14
; end of ?ICS?lstr5_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState2_delay_L0
0x750A	0x02 ;?ICSState2_delay_L0+0
; end of ?ICSState2_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr41_FirmV_0_7_0
0x750B	0x3653 ;?ICS?lstr41_FirmV_0_7_0+0
0x750D	0x4120 ;?ICS?lstr41_FirmV_0_7_0+2
0x750F	0x7475 ;?ICS?lstr41_FirmV_0_7_0+4
0x7511	0x206F ;?ICS?lstr41_FirmV_0_7_0+6
0x7513	0x6C43 ;?ICS?lstr41_FirmV_0_7_0+8
0x7515	0x736F ;?ICS?lstr41_FirmV_0_7_0+10
0x7517	0x2065 ;?ICS?lstr41_FirmV_0_7_0+12
0x7519	0x6544 ;?ICS?lstr41_FirmV_0_7_0+14
0x751B	0x656C ;?ICS?lstr41_FirmV_0_7_0+16
0x751D	0x6574 ;?ICS?lstr41_FirmV_0_7_0+18
0x751F	0x0064 ;?ICS?lstr41_FirmV_0_7_0+20
; end of ?ICS?lstr41_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr42_FirmV_0_7_0
0x7521	0x3653 ;?ICS?lstr42_FirmV_0_7_0+0
0x7523	0x4920 ;?ICS?lstr42_FirmV_0_7_0+2
0x7525	0x736E ;?ICS?lstr42_FirmV_0_7_0+4
0x7527	0x7265 ;?ICS?lstr42_FirmV_0_7_0+6
0x7529	0x2074 ;?ICS?lstr42_FirmV_0_7_0+8
0x752B	0x2039 ;?ICS?lstr42_FirmV_0_7_0+10
0x752D	0x7461 ;?ICS?lstr42_FirmV_0_7_0+12
0x752F	0x003A ;?ICS?lstr42_FirmV_0_7_0+14
; end of ?ICS?lstr42_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr43_FirmV_0_7_0
0x7531	0x3653 ;?ICS?lstr43_FirmV_0_7_0+0
0x7533	0x4920 ;?ICS?lstr43_FirmV_0_7_0+2
0x7535	0x736E ;?ICS?lstr43_FirmV_0_7_0+4
0x7537	0x7265 ;?ICS?lstr43_FirmV_0_7_0+6
0x7539	0x2074 ;?ICS?lstr43_FirmV_0_7_0+8
0x753B	0x2039 ;?ICS?lstr43_FirmV_0_7_0+10
0x753D	0x7461 ;?ICS?lstr43_FirmV_0_7_0+12
0x753F	0x003A ;?ICS?lstr43_FirmV_0_7_0+14
; end of ?ICS?lstr43_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState6_delay_L0
0x7541	0x03 ;?ICSState6_delay_L0+0
; end of ?ICSState6_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr38_FirmV_0_7_0
0x7542	0x3553 ;?ICS?lstr38_FirmV_0_7_0+0
0x7544	0x4120 ;?ICS?lstr38_FirmV_0_7_0+2
0x7546	0x7475 ;?ICS?lstr38_FirmV_0_7_0+4
0x7548	0x206F ;?ICS?lstr38_FirmV_0_7_0+6
0x754A	0x6C43 ;?ICS?lstr38_FirmV_0_7_0+8
0x754C	0x736F ;?ICS?lstr38_FirmV_0_7_0+10
0x754E	0x2065 ;?ICS?lstr38_FirmV_0_7_0+12
0x7550	0x6544 ;?ICS?lstr38_FirmV_0_7_0+14
0x7552	0x656C ;?ICS?lstr38_FirmV_0_7_0+16
0x7554	0x6574 ;?ICS?lstr38_FirmV_0_7_0+18
0x7556	0x0064 ;?ICS?lstr38_FirmV_0_7_0+20
; end of ?ICS?lstr38_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr39_FirmV_0_7_0
0x7558	0x3553 ;?ICS?lstr39_FirmV_0_7_0+0
0x755A	0x4920 ;?ICS?lstr39_FirmV_0_7_0+2
0x755C	0x736E ;?ICS?lstr39_FirmV_0_7_0+4
0x755E	0x7265 ;?ICS?lstr39_FirmV_0_7_0+6
0x7560	0x2074 ;?ICS?lstr39_FirmV_0_7_0+8
0x7562	0x2039 ;?ICS?lstr39_FirmV_0_7_0+10
0x7564	0x7461 ;?ICS?lstr39_FirmV_0_7_0+12
0x7566	0x003A ;?ICS?lstr39_FirmV_0_7_0+14
; end of ?ICS?lstr39_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr40_FirmV_0_7_0
0x7568	0x3553 ;?ICS?lstr40_FirmV_0_7_0+0
0x756A	0x4920 ;?ICS?lstr40_FirmV_0_7_0+2
0x756C	0x736E ;?ICS?lstr40_FirmV_0_7_0+4
0x756E	0x7265 ;?ICS?lstr40_FirmV_0_7_0+6
0x7570	0x2074 ;?ICS?lstr40_FirmV_0_7_0+8
0x7572	0x2039 ;?ICS?lstr40_FirmV_0_7_0+10
0x7574	0x7461 ;?ICS?lstr40_FirmV_0_7_0+12
0x7576	0x003A ;?ICS?lstr40_FirmV_0_7_0+14
; end of ?ICS?lstr40_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState5_delay_L0
0x7578	0x02 ;?ICSState5_delay_L0+0
; end of ?ICSState5_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr103_FirmV_0_7_0
0x7579	0x654C ;?ICS?lstr103_FirmV_0_7_0+0
0x757B	0x7261 ;?ICS?lstr103_FirmV_0_7_0+2
0x757D	0x206E ;?ICS?lstr103_FirmV_0_7_0+4
0x757F	0x6F43 ;?ICS?lstr103_FirmV_0_7_0+6
0x7581	0x706D ;?ICS?lstr103_FirmV_0_7_0+8
0x7583	0x656C ;?ICS?lstr103_FirmV_0_7_0+10
0x7585	0x6574 ;?ICS?lstr103_FirmV_0_7_0+12
0x7587	0x2020 ;?ICS?lstr103_FirmV_0_7_0+14
0x7589	0x00 ;?ICS?lstr103_FirmV_0_7_0+16
; end of ?ICS?lstr103_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr104_FirmV_0_7_0
0x758A	0x2020 ;?ICS?lstr104_FirmV_0_7_0+0
0x758C	0x2020 ;?ICS?lstr104_FirmV_0_7_0+2
0x758E	0x5220 ;?ICS?lstr104_FirmV_0_7_0+4
0x7590	0x6165 ;?ICS?lstr104_FirmV_0_7_0+6
0x7592	0x7964 ;?ICS?lstr104_FirmV_0_7_0+8
0x7594	0x2020 ;?ICS?lstr104_FirmV_0_7_0+10
0x7596	0x2020 ;?ICS?lstr104_FirmV_0_7_0+12
0x7598	0x2020 ;?ICS?lstr104_FirmV_0_7_0+14
0x759A	0x00 ;?ICS?lstr104_FirmV_0_7_0+16
; end of ?ICS?lstr104_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr105_FirmV_0_7_0
0x759B	0x654C ;?ICS?lstr105_FirmV_0_7_0+0
0x759D	0x7261 ;?ICS?lstr105_FirmV_0_7_0+2
0x759F	0x206E ;?ICS?lstr105_FirmV_0_7_0+4
0x75A1	0x6F43 ;?ICS?lstr105_FirmV_0_7_0+6
0x75A3	0x706D ;?ICS?lstr105_FirmV_0_7_0+8
0x75A5	0x656C ;?ICS?lstr105_FirmV_0_7_0+10
0x75A7	0x6574 ;?ICS?lstr105_FirmV_0_7_0+12
0x75A9	0x2020 ;?ICS?lstr105_FirmV_0_7_0+14
0x75AB	0x00 ;?ICS?lstr105_FirmV_0_7_0+16
; end of ?ICS?lstr105_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr106_FirmV_0_7_0
0x75AC	0x2020 ;?ICS?lstr106_FirmV_0_7_0+0
0x75AE	0x2020 ;?ICS?lstr106_FirmV_0_7_0+2
0x75B0	0x5220 ;?ICS?lstr106_FirmV_0_7_0+4
0x75B2	0x6165 ;?ICS?lstr106_FirmV_0_7_0+6
0x75B4	0x7964 ;?ICS?lstr106_FirmV_0_7_0+8
0x75B6	0x2020 ;?ICS?lstr106_FirmV_0_7_0+10
0x75B8	0x2020 ;?ICS?lstr106_FirmV_0_7_0+12
0x75BA	0x2020 ;?ICS?lstr106_FirmV_0_7_0+14
0x75BC	0x00 ;?ICS?lstr106_FirmV_0_7_0+16
; end of ?ICS?lstr106_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr68_FirmV_0_7_0
0x75BD	0x2020 ;?ICS?lstr68_FirmV_0_7_0+0
0x75BF	0x2020 ;?ICS?lstr68_FirmV_0_7_0+2
0x75C1	0x2020 ;?ICS?lstr68_FirmV_0_7_0+4
0x75C3	0x2020 ;?ICS?lstr68_FirmV_0_7_0+6
0x75C5	0x2020 ;?ICS?lstr68_FirmV_0_7_0+8
0x75C7	0x2020 ;?ICS?lstr68_FirmV_0_7_0+10
0x75C9	0x2020 ;?ICS?lstr68_FirmV_0_7_0+12
0x75CB	0x0020 ;?ICS?lstr68_FirmV_0_7_0+14
; end of ?ICS?lstr68_FirmV_0_7_0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [356]    _interrupt
0x016C      [14]    _UART1_Write
0x017A      [18]    _SPI1_Write
0x018C      [24]    _____DoIFC
0x01A4      [54]    _Div_16x16_U
0x01DA      [30]    _Div_8x8_U
0x01F8      [80]    _memcpy
0x0248     [116]    _ByteToStr
0x02BC      [10]    _Delay_1us
0x02C6     [146]    _WordToStr
0x0358     [748]    _Div_32x32_U
0x0644      [20]    _Delay_5500us
0x0658      [24]    _UART_Write
0x0670     [222]    _SetOverloadParams
0x074E      [12]    _Delay_50us
0x075A      [52]    _EEPROM_Write
0x078E     [202]    _LongWordToStrWithZeros
0x0858      [80]    _Mul_16x16_U
0x08A8      [52]    _UART1_Write_Text
0x08DC      [52]    _UART_Write_Text
0x0910      [16]    _EEPROM_Read
0x0920      [10]    _Delay_22us
0x092A      [16]    ___CC2DW
0x093A     [206]    _SaveConfigs
0x0A08     [132]    _Lcd_Cmd
0x0A8C     [154]    _charValueToStr
0x0B26     [170]    _intValueToStr
0x0BD0      [76]    _FactorySettings
0x0C1C      [52]    _StartMotor
0x0C50     [210]    _GetAutocloseTime
0x0D22     [142]    _ClearTasks
0x0DB0     [198]    _LoadConfigs
0x0E76      [28]    _StopMotor
0x0E92      [30]    _OverloadInit
0x0EB0      [64]    _CheckTask
0x0EF0      [32]    _SetMotorSpeed
0x0F10    [2276]    _Menu0
0x17F4     [102]    _Logger
0x185A     [208]    _AutoLearnCalculator
0x192A      [62]    _ADC_Read
0x1968      [16]    _Lcd_Chr_CP
0x1978     [382]    _SaveLearnData
0x1AF6     [240]    _AddTask
0x1BE6      [20]    _GetLimitSwitchState
0x1BFA    [1416]    _Menu2
0x2182     [496]    _GetKeysState
0x2372      [64]    _Menu1
0x23B2      [22]    _GetExternalKeysState
0x23C8      [10]    _Menu3
0x23D2     [136]    _Lcd_Out
0x245A     [198]    _Lcd_Init
0x2520      [88]    _UART1_Init
0x2578    [1082]    _LearnAuto
0x29B2    [1552]    _State6
0x2FC2      [94]    _GetRemoteState
0x3020    [2432]    _State2
0x39A0    [1616]    _State7
0x3FF0    [1262]    _State5
0x44DE    [2180]    _State3
0x4D62    [1456]    _LearnManual
0x5312    [2122]    _State4
0x5B5C    [1438]    _State1
0x60FA      [58]    _State00
0x6134     [168]    _GetOverloadState
0x61DC      [36]    _GetPhotocellState
0x6200    [1660]    _State8
0x687C      [10]    _ResetTaskEvents
0x6886     [238]    _TaskManager
0x6974     [194]    _Init
0x6A36     [506]    _EventHandler
0x6C30     [198]    _StateManager
0x6CF6     [142]    _LCDUpdater
0x6D84     [106]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A      [17]    __errPhoto
0x002B      [17]    __errLimit
0x003C      [17]    __errRemote
0x004D      [17]    __stop
0x005E      [17]    __errOverload
0x006F       [1]    _PhotocellOpenFlag
0x0070       [1]    _Motor2Start
0x0071       [1]    _OverloadCounter1
0x0072       [1]    _OverloadCounter2
0x0073      [17]    __close
0x0084      [17]    __autoclose
0x0095       [1]    _Motor1Start
0x0096       [1]    _Motor1FullSpeed
0x0097       [1]    _M1isSlow
0x0098       [1]    _M2isSlow
0x0099       [1]    _CloseDone
0x009A       [1]    _ActiveDoors
0x009B      [17]    __closing
0x00AC      [17]    __Blank
0x00BD       [1]    _Motor2FullSpeed
0x00BE       [1]    _PassFlag
0x00BF       [1]    __AC
0x00C0       [1]    _OpenDone
0x00C1       [1]    _ZCCounter
0x00C2       [1]    _Flag20ms
0x00C3       [1]    _DebouncingDelay
0x00C4       [1]    _RemoteBFlag
0x00C5       [1]    _Pressed
0x00C6       [1]    _msCounter
0x00C7       [1]    _Flag500ms
0x00C8       [1]    _PhotocellCount
0x00C9       [1]    _RemoteAFlag
0x00CA      [17]    __opening
0x00DB      [17]    __open
0x00EC       [1]    _RemotePulse2
0x00ED       [1]    _MenuPointer
0x00EE       [4]    _ms500
0x00F2       [1]    _State
0x00F3      [17]    _LCDLine1
0x0104      [17]    _LCDLine2
0x0115       [1]    _OverloadCheckFlag2
0x0116       [1]    _OverloadCheckFlag1
0x0117       [1]    _RemotePulse1
0x0118       [1]    _ms20A
0x0119       [1]    _LCDFlashFlag
0x011A       [1]    _LearningMode
0x011B       [1]    _LCDFlash
0x011C       [1]    _OverloadSens
0x011D       [1]    _LCDUpdateFlag
0x011E       [1]    _CloseAfterPass
0x011F       [4]    _temp
0x0123      [11]    _t
0x012E       [1]    LearnAuto_DoorNo_L0
0x012F      [12]    LearnAuto_RawData_L0
0x013B       [4]    LearnAuto_startT_L0
0x013F       [4]    GetKeysState_PressTime_L0
0x0143       [2]    _OverloadTreshold
0x0145       [1]    _OverloadDuration
0x0146       [0]    __Lib_Lcd_cmd_status
0x0147       [4]    LearnManual_t2_L0
0x014B      [12]    LearnManual_RawData_L0
0x0157       [1]    GetKeysState_RepeatRate_L0
0x0158       [1]    GetKeysState_Repeat_L0
0x0159       [4]    LearnManual_t1_L0
0x015D       [1]    _ms20B
0x015E       [1]    _LockForce
0x015F       [4]    _UART_Tx_Idle_Ptr
0x0163       [1]    _LearnPhase
0x0164       [1]    LearnManual_DoorNo_L0
0x0165       [4]    LearnManual_t4_L0
0x0169       [4]    LearnManual_t3_L0
0x016D       [4]    _UART_Rdy_Ptr
0x0171       [9]    _Events
0x017A       [4]    _UART_Wr_Ptr
0x017E       [4]    _UART_Rd_Ptr
0x0182     [140]    _Tasks
0x020E       [1]    _OpenPhEnable
0x020F       [1]    _LimiterEnable
0x0210       [1]    _ActionTimeDiff
0x0211       [2]    _AutoCloseTime
0x0213       [1]    _Door2OpenTime
0x0214       [1]    _Door2CloseTime
0x0215       [1]    _Door1CloseTime
0x0216       [1]    _Door1OpenTime
0x0217       [1]    _CloseSoftStopTime
0x0218       [1]    _CloseSoftStartTime
0x0219       [1]    _OpenSoftStopTime
0x021A       [1]    _OpenSoftStartTime
0x021B      [10]    ?lstr2_FirmV_0_7_0
0x0225      [16]    ?lstr68_FirmV_0_7_0
0x0225       [1]    EventHandler_i_L0
0x0225       [1]    TaskManager_i_L0
0x0225       [1]    Init_i_L0
0x0235       [1]    GetKeysState_fin_L0
0x0235      [15]    ?lstr56_FirmV_0_7_0
0x0235      [15]    ?lstr44_FirmV_0_7_0
0x0235      [22]    ?lstr41_FirmV_0_7_0
0x0235      [17]    ?lstr105_FirmV_0_7_0
0x0235      [22]    ?lstr38_FirmV_0_7_0
0x0235       [1]    GetRemoteState_res_L0
0x0235       [1]    GetExternalKeysState_out_L0
0x0235       [2]    GetOverloadState_VCapM1_L0
0x0235      [17]    ?lstr97_FirmV_0_7_0
0x0235       [1]    FARG_Lcd_Out_row
0x0235      [22]    ?lstr3_FirmV_0_7_0
0x0235      [15]    ?lstr6_FirmV_0_7_0
0x0235       [1]    State1_delay_L0
0x0235      [17]    ?lstr103_FirmV_0_7_0
0x0235      [15]    ?lstr22_FirmV_0_7_0
0x0236       [1]    FARG_Lcd_Out_column
0x0236       [2]    GetKeysState_res_L0
0x0237       [2]    FARG_Lcd_Out_text
0x0237       [2]    GetOverloadState_VCapM2_L0
0x0238       [1]    GetKeysState_resch_L0
0x0239       [1]    Lcd_Out_i_L0
0x0239       [1]    GetOverloadState_res_L0
0x0244      [15]    ?lstr57_FirmV_0_7_0
0x0244      [15]    ?lstr7_FirmV_0_7_0
0x0244      [15]    ?lstr23_FirmV_0_7_0
0x0244      [15]    ?lstr45_FirmV_0_7_0
0x0246      [17]    ?lstr98_FirmV_0_7_0
0x0246      [17]    ?lstr106_FirmV_0_7_0
0x0246      [17]    ?lstr104_FirmV_0_7_0
0x024B      [16]    ?lstr4_FirmV_0_7_0
0x024B      [16]    ?lstr39_FirmV_0_7_0
0x024B      [16]    ?lstr42_FirmV_0_7_0
0x0253      [21]    ?lstr46_FirmV_0_7_0
0x0253      [15]    ?lstr8_FirmV_0_7_0
0x0253      [22]    ?lstr58_FirmV_0_7_0
0x0253      [21]    ?lstr24_FirmV_0_7_0
0x0257      [17]    ?lstr99_FirmV_0_7_0
0x025B      [16]    ?lstr40_FirmV_0_7_0
0x025B      [16]    ?lstr5_FirmV_0_7_0
0x025B      [16]    ?lstr43_FirmV_0_7_0
0x0262      [15]    ?lstr9_FirmV_0_7_0
0x0268      [17]    ?lstr100_FirmV_0_7_0
0x0268      [21]    ?lstr47_FirmV_0_7_0
0x0268      [21]    ?lstr25_FirmV_0_7_0
0x0269      [22]    ?lstr59_FirmV_0_7_0
0x026B       [1]    State5_delay_L0
0x026B       [1]    State2_delay_L0
0x026B       [1]    State6_delay_L0
0x0271      [15]    ?lstr10_FirmV_0_7_0
0x0279      [17]    ?lstr101_FirmV_0_7_0
0x027D      [15]    ?lstr48_FirmV_0_7_0
0x027D      [15]    ?lstr26_FirmV_0_7_0
0x027F      [15]    ?lstr60_FirmV_0_7_0
0x0280      [15]    ?lstr11_FirmV_0_7_0
0x028A      [17]    ?lstr102_FirmV_0_7_0
0x028C      [15]    ?lstr49_FirmV_0_7_0
0x028C      [17]    ?lstr27_FirmV_0_7_0
0x028E      [15]    ?lstr61_FirmV_0_7_0
0x028F      [22]    ?lstr12_FirmV_0_7_0
0x029B      [13]    ?lstr50_FirmV_0_7_0
0x029D      [15]    ?lstr62_FirmV_0_7_0
0x029D      [15]    ?lstr28_FirmV_0_7_0
0x02A5      [22]    ?lstr13_FirmV_0_7_0
0x02A8      [13]    ?lstr51_FirmV_0_7_0
0x02AC      [15]    ?lstr63_FirmV_0_7_0
0x02AC      [17]    ?lstr29_FirmV_0_7_0
0x02B5      [17]    ?lstr52_FirmV_0_7_0
0x02BB      [15]    ?lstr14_FirmV_0_7_0
0x02BB      [17]    ?lstr64_FirmV_0_7_0
0x02BD      [13]    ?lstr30_FirmV_0_7_0
0x02C6      [18]    ?lstr53_FirmV_0_7_0
0x02CA      [15]    ?lstr15_FirmV_0_7_0
0x02CA      [13]    ?lstr31_FirmV_0_7_0
0x02CC      [26]    ?lstr65_FirmV_0_7_0
0x02D7      [17]    ?lstr32_FirmV_0_7_0
0x02D8      [21]    ?lstr54_FirmV_0_7_0
0x02D9      [20]    ?lstr16_FirmV_0_7_0
0x02E6      [21]    ?lstr66_FirmV_0_7_0
0x02E8      [17]    ?lstr33_FirmV_0_7_0
0x02ED      [20]    ?lstr17_FirmV_0_7_0
0x02ED      [21]    ?lstr55_FirmV_0_7_0
0x02F9      [17]    ?lstr34_FirmV_0_7_0
0x02FB      [21]    ?lstr67_FirmV_0_7_0
0x0301      [17]    ?lstr18_FirmV_0_7_0
0x030A      [21]    ?lstr35_FirmV_0_7_0
0x0312      [17]    ?lstr19_FirmV_0_7_0
0x031F      [18]    ?lstr36_FirmV_0_7_0
0x0323      [23]    ?lstr20_FirmV_0_7_0
0x0331      [21]    ?lstr37_FirmV_0_7_0
0x033A      [21]    ?lstr21_FirmV_0_7_0
0x034F      [17]    ?lstr69_FirmV_0_7_0
0x034F       [1]    FARG_StopMotor_Mx
0x034F       [1]    FARG_ClearTasks_except
0x034F       [1]    GetAutocloseTime_i_L0
0x034F       [1]    FARG_CheckTask_TaskCode
0x034F       [1]    FARG_Lcd_Chr_CP_out_char
0x034F       [4]    FARG_AddTask_OccTime
0x034F       [2]    FARG_Logger_text
0x034F       [1]    FARG_ADC_Read_channel
0x034F       [2]    FARG_SaveLearnData_d
0x034F       [1]    FARG_OverloadInit_ch
0x034F       [1]    FARG_StartMotor_Mx
0x034F       [2]    FARG_AutoLearnCalculator_raw
0x034F       [1]    FARG_SetMotorSpeed_M1FullSpeed
0x0350       [4]    GetAutocloseTime_t_L0
0x0350       [1]    ClearTasks_i_L0
0x0350       [1]    FARG_SetMotorSpeed_M2FullSpeed
0x0350       [1]    FARG_StartMotor_Dir
0x0351       [1]    FARG_SaveLearnData_DCount
0x0351      [11]    Logger_time_L0
0x0353       [1]    FARG_AddTask_tcode
0x0354       [1]    AddTask_i_L0
0x035C       [3]    ?lstr1_FirmV_0_7_0
0x0360      [17]    ?lstr70_FirmV_0_7_0
0x0371      [17]    ?lstr71_FirmV_0_7_0
0x0382      [17]    ?lstr72_FirmV_0_7_0
0x0393      [17]    ?lstr73_FirmV_0_7_0
0x03A4      [17]    ?lstr74_FirmV_0_7_0
0x03B5      [17]    ?lstr75_FirmV_0_7_0
0x03C6      [17]    ?lstr76_FirmV_0_7_0
0x03D7      [17]    ?lstr77_FirmV_0_7_0
0x03E8      [17]    ?lstr78_FirmV_0_7_0
0x03F9      [17]    ?lstr79_FirmV_0_7_0
0x040A      [17]    ?lstr80_FirmV_0_7_0
0x041B      [17]    ?lstr81_FirmV_0_7_0
0x042C      [17]    ?lstr82_FirmV_0_7_0
0x043D      [17]    ?lstr83_FirmV_0_7_0
0x044E      [17]    ?lstr84_FirmV_0_7_0
0x045F      [17]    ?lstr85_FirmV_0_7_0
0x0470       [8]    ?lstr86_FirmV_0_7_0
0x0478       [9]    ?lstr87_FirmV_0_7_0
0x0481      [17]    ?lstr88_FirmV_0_7_0
0x0492       [8]    ?lstr89_FirmV_0_7_0
0x049A       [9]    ?lstr90_FirmV_0_7_0
0x04A3      [17]    ?lstr91_FirmV_0_7_0
0x04B4       [8]    ?lstr92_FirmV_0_7_0
0x04BC       [9]    ?lstr93_FirmV_0_7_0
0x04C5      [17]    ?lstr94_FirmV_0_7_0
0x04D6      [17]    ?lstr95_FirmV_0_7_0
0x04E7      [17]    ?lstr96_FirmV_0_7_0
0x04F8       [1]    FARG_Lcd_Cmd_out_char
0x04F8       [2]    FARG_UART_Write_Text_uart_text
0x04F8       [2]    FARG_intValueToStr_val
0x04F8       [1]    FARG_EEPROM_Read_address
0x04F8       [4]    FARG_LongWordToStrWithZeros_input
0x04F8       [2]    FARG_UART1_Write_Text_uart_text
0x04F8       [1]    FARG_charValueToStr_val
0x04F9       [2]    FARG_charValueToStr_string
0x04FA       [2]    FARG_intValueToStr_string
0x04FA       [1]    UART1_Write_Text_data__L0
0x04FA       [1]    UART_Write_Text_data__L0
0x04FB       [1]    UART_Write_Text_counter_L0
0x04FB       [4]    ?lstr107_FirmV_0_7_0
0x04FB       [1]    UART1_Write_Text_counter_L0
0x04FC       [4]    ?lstr109_FirmV_0_7_0
0x04FC       [2]    FARG_LongWordToStrWithZeros_output
0x04FE       [1]    LongWordToStrWithZeros_len_L0
0x04FF       [4]    ?lstr108_FirmV_0_7_0
0x04FF       [2]    FLOC__LongWordToStrWithZeros
0x0500       [4]    ?lstr110_FirmV_0_7_0
0x0504       [1]    FARG_ByteToStr_input
0x0504       [2]    FARG_memcpy_d1
0x0504       [2]    FARG_WordToStr_input
0x0504       [1]    FARG_SetOverloadParams_p
0x0504       [1]    FARG_EEPROM_Write_address
0x0504       [1]    FARG_UART_Write__data
0x0505       [1]    FARG_EEPROM_Write_data_
0x0505       [2]    FARG_ByteToStr_output
0x0506       [2]    FARG_WordToStr_output
0x0506       [2]    FARG_memcpy_s1
0x0507       [1]    ByteToStr_DigitPos_L0
0x0508       [2]    FLOC__ByteToStr
0x0508       [1]    WordToStr_len_L0
0x0508       [2]    FARG_memcpy_n
0x0509       [2]    FLOC__WordToStr
0x050B       [1]    FARG_SPI1_Write_data_
0x050B       [1]    FARG_UART1_Write_data_
0x0F80       [0]    AN3_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    VREFP_bit
0x0F80       [0]    VREFM_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    CLKO_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    AN0_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [1]    PORTA
0x0F80       [0]    AN2_bit
0x0F80       [0]    RA6_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    LCD_D4
0x0F81       [0]    RB4_bit
0x0F81       [0]    LCD_D5
0x0F81       [0]    RB7_bit
0x0F81       [1]    PORTB
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D6
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    CCP2A_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    PGD_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    RB0_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [1]    PORTC
0x0F82       [0]    SDA_bit
0x0F82       [0]    CK_bit
0x0F83       [0]    PSP6_bit
0x0F83       [0]    PSP5_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    PSP7_bit
0x0F83       [0]    RD5_bit
0x0F83       [1]    PORTD
0x0F83       [0]    PSP4_bit
0x0F83       [0]    PSP3_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    PSP0_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    PSP1_bit
0x0F83       [0]    PSP2_bit
0x0F84       [0]    LCD_RS
0x0F84       [0]    LCD_EN
0x0F84       [1]    PORTE
0x0F84       [0]    RE0_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    RD_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    AN6_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    WR_bit
0x0F84       [0]    CS_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA0_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA2_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB5_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC0_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD0_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    LATE0_bit
0x0F8D       [1]    LATE
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA4_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    TRISB1_bit
0x0F93       [1]    TRISB
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    CCP2_TRISB_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    CCP2_TRISC_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD5_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    LCD_EN_Direction
0x0F96       [0]    LCD_RS_Direction
0x0F96       [1]    TRISE
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    TRISE1_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [1]    IPR1
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [1]    PIR2
0x0FA2       [1]    IPR2
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    WR_EECON1_bit
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    EEPGD_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    RC8_9_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RC9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RCD8_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    TX8_9_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TX9D_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    DCCPX_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    CCP2M0_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBE       [2]    CCPR1
0x0FBE       [1]    CCPR1L
0x0FBF       [1]    CCPR1H
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    ADCS2_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG0_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_NOT_DONE_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    ADCS1_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKDT_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM2_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    R_NOT_W_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    D_NOT_A_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    I2C_DATA_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    BF_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TMR2ON_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    NOT_IPEN_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    RI_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [1]    WDTCON
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDEN_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0SE_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    N_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    OV_bit
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD8       [0]    Z_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2PTR
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0PTR
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [1]    INTCON3
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    GIE_GIEH_bit
0x0FF2       [0]    PEIE_GIEL_bit
0x0FF2       [1]    INTCON
0x0FF2       [1]    INTCON1
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF9       [1]    PCL
0x0FF9       [1]    PC
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU0_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU3_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    SP4_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x6DEE      [17]    ?ICS?lstr69_FirmV_0_7_0
0x6DFF      [17]    ?ICS?lstr70_FirmV_0_7_0
0x6E10      [17]    ?ICS?lstr71_FirmV_0_7_0
0x6E21      [17]    ?ICS?lstr72_FirmV_0_7_0
0x6E32      [17]    ?ICS?lstr73_FirmV_0_7_0
0x6E43      [17]    ?ICS?lstr74_FirmV_0_7_0
0x6E54      [17]    ?ICS?lstr75_FirmV_0_7_0
0x6E65      [17]    ?ICS?lstr76_FirmV_0_7_0
0x6E76      [17]    ?ICS?lstr77_FirmV_0_7_0
0x6E87      [17]    ?ICS?lstr78_FirmV_0_7_0
0x6E98      [17]    ?ICS?lstr79_FirmV_0_7_0
0x6EA9      [17]    ?ICS?lstr80_FirmV_0_7_0
0x6EBA      [17]    ?ICS?lstr81_FirmV_0_7_0
0x6ECB      [17]    ?ICS?lstr82_FirmV_0_7_0
0x6EDC      [17]    ?ICS?lstr83_FirmV_0_7_0
0x6EED      [17]    ?ICS?lstr84_FirmV_0_7_0
0x6EFE      [17]    ?ICS?lstr85_FirmV_0_7_0
0x6F0F       [8]    ?ICS?lstr86_FirmV_0_7_0
0x6F17       [9]    ?ICS?lstr87_FirmV_0_7_0
0x6F20      [17]    ?ICS?lstr88_FirmV_0_7_0
0x6F31       [8]    ?ICS?lstr89_FirmV_0_7_0
0x6F39       [9]    ?ICS?lstr90_FirmV_0_7_0
0x6F42      [17]    ?ICS?lstr91_FirmV_0_7_0
0x6F53       [8]    ?ICS?lstr92_FirmV_0_7_0
0x6F5B       [9]    ?ICS?lstr93_FirmV_0_7_0
0x6F64      [17]    ?ICS?lstr94_FirmV_0_7_0
0x6F75      [17]    ?ICS?lstr95_FirmV_0_7_0
0x6F86      [17]    ?ICS?lstr96_FirmV_0_7_0
0x6F97      [15]    ?ICS?lstr6_FirmV_0_7_0
0x6FA6      [15]    ?ICS?lstr7_FirmV_0_7_0
0x6FB5      [15]    ?ICS?lstr8_FirmV_0_7_0
0x6FC4      [15]    ?ICS?lstr9_FirmV_0_7_0
0x6FD3      [15]    ?ICS?lstr10_FirmV_0_7_0
0x6FE2      [15]    ?ICS?lstr11_FirmV_0_7_0
0x6FF1      [22]    ?ICS?lstr12_FirmV_0_7_0
0x7007      [22]    ?ICS?lstr13_FirmV_0_7_0
0x701D      [15]    ?ICS?lstr14_FirmV_0_7_0
0x702C      [15]    ?ICS?lstr15_FirmV_0_7_0
0x703B      [20]    ?ICS?lstr16_FirmV_0_7_0
0x704F      [20]    ?ICS?lstr17_FirmV_0_7_0
0x7063      [17]    ?ICS?lstr18_FirmV_0_7_0
0x7074      [17]    ?ICS?lstr19_FirmV_0_7_0
0x7085      [23]    ?ICS?lstr20_FirmV_0_7_0
0x709C      [21]    ?ICS?lstr21_FirmV_0_7_0
0x70B1      [15]    ?ICS?lstr22_FirmV_0_7_0
0x70C0      [15]    ?ICS?lstr23_FirmV_0_7_0
0x70CF      [21]    ?ICS?lstr24_FirmV_0_7_0
0x70E4      [21]    ?ICS?lstr25_FirmV_0_7_0
0x70F9      [15]    ?ICS?lstr26_FirmV_0_7_0
0x7108      [17]    ?ICS?lstr27_FirmV_0_7_0
0x7119      [15]    ?ICS?lstr28_FirmV_0_7_0
0x7128      [17]    ?ICS?lstr29_FirmV_0_7_0
0x7139      [13]    ?ICS?lstr30_FirmV_0_7_0
0x7146      [13]    ?ICS?lstr31_FirmV_0_7_0
0x7153      [17]    ?ICS?lstr32_FirmV_0_7_0
0x7164      [17]    ?ICS?lstr33_FirmV_0_7_0
0x7175      [17]    ?ICS?lstr34_FirmV_0_7_0
0x7186      [21]    ?ICS?lstr35_FirmV_0_7_0
0x719B      [18]    ?ICS?lstr36_FirmV_0_7_0
0x71AD      [21]    ?ICS?lstr37_FirmV_0_7_0
0x71C2      [17]    ?ICS__errPhoto
0x71D3      [17]    ?ICS__errLimit
0x71E4      [17]    ?ICS__errRemote
0x71F5      [17]    ?ICS__stop
0x7206      [17]    ?ICS__errOverload
0x7217       [1]    ?ICS_PhotocellOpenFlag
0x7218       [1]    ?ICS_Motor2Start
0x7219       [1]    ?ICS_OverloadCounter1
0x721A       [1]    ?ICS_OverloadCounter2
0x721B      [17]    ?ICS__close
0x722C      [17]    ?ICS__autoclose
0x723D       [1]    ?ICS_Motor1Start
0x723E       [1]    ?ICS_Motor1FullSpeed
0x723F       [1]    ?ICS_M1isSlow
0x7240       [1]    ?ICS_M2isSlow
0x7241       [1]    ?ICS_CloseDone
0x7242       [1]    ?ICS_ActiveDoors
0x7243      [17]    ?ICS__closing
0x7254      [17]    ?ICS__Blank
0x7265       [1]    ?ICS_Motor2FullSpeed
0x7266       [1]    ?ICS_PassFlag
0x7267       [1]    ?ICS__AC
0x7268       [1]    ?ICS_OpenDone
0x7269       [1]    ?ICS_ZCCounter
0x726A       [1]    ?ICS_Flag20ms
0x726B       [1]    ?ICS_DebouncingDelay
0x726C       [1]    ?ICS_RemoteBFlag
0x726D       [1]    ?ICS_Pressed
0x726E       [1]    ?ICS_msCounter
0x726F       [1]    ?ICS_Flag500ms
0x7270       [1]    ?ICS_PhotocellCount
0x7271       [1]    ?ICS_RemoteAFlag
0x7272      [17]    ?ICS__opening
0x7283      [17]    ?ICS__open
0x7294       [1]    ?ICS_RemotePulse2
0x7295       [1]    ?ICS_MenuPointer
0x7296       [4]    ?ICS_ms500
0x729A       [1]    ?ICS_State
0x729B      [17]    ?ICS_LCDLine1
0x72AC      [17]    ?ICS_LCDLine2
0x72BD       [1]    ?ICS_OverloadCheckFlag2
0x72BE       [1]    ?ICS_OverloadCheckFlag1
0x72BF       [1]    ?ICS_RemotePulse1
0x72C0       [1]    ?ICS_ms20A
0x72C1       [1]    ?ICS_LCDFlashFlag
0x72C2       [1]    ?ICS_LearningMode
0x72C3       [1]    ?ICS_LCDFlash
0x72C4       [1]    ?ICS_OverloadSens
0x72C5       [1]    ?ICS_LCDUpdateFlag
0x72C6      [15]    ?ICS?lstr56_FirmV_0_7_0
0x72D5      [15]    ?ICS?lstr57_FirmV_0_7_0
0x72E4      [22]    ?ICS?lstr58_FirmV_0_7_0
0x72FA      [22]    ?ICS?lstr59_FirmV_0_7_0
0x7310      [15]    ?ICS?lstr60_FirmV_0_7_0
0x731F      [15]    ?ICS?lstr61_FirmV_0_7_0
0x732E      [15]    ?ICS?lstr62_FirmV_0_7_0
0x733D      [15]    ?ICS?lstr63_FirmV_0_7_0
0x734C      [17]    ?ICS?lstr64_FirmV_0_7_0
0x735D      [26]    ?ICS?lstr65_FirmV_0_7_0
0x7377      [21]    ?ICS?lstr66_FirmV_0_7_0
0x738C      [21]    ?ICS?lstr67_FirmV_0_7_0
0x73A1      [15]    ?ICS?lstr44_FirmV_0_7_0
0x73B0      [15]    ?ICS?lstr45_FirmV_0_7_0
0x73BF      [21]    ?ICS?lstr46_FirmV_0_7_0
0x73D4      [21]    ?ICS?lstr47_FirmV_0_7_0
0x73E9      [15]    ?ICS?lstr48_FirmV_0_7_0
0x73F8      [15]    ?ICS?lstr49_FirmV_0_7_0
0x7407      [13]    ?ICS?lstr50_FirmV_0_7_0
0x7414      [13]    ?ICS?lstr51_FirmV_0_7_0
0x7421      [17]    ?ICS?lstr52_FirmV_0_7_0
0x7432      [18]    ?ICS?lstr53_FirmV_0_7_0
0x7444      [21]    ?ICS?lstr54_FirmV_0_7_0
0x7459      [21]    ?ICS?lstr55_FirmV_0_7_0
0x746E      [17]    ?ICS?lstr97_FirmV_0_7_0
0x747F      [17]    ?ICS?lstr98_FirmV_0_7_0
0x7490      [17]    ?ICS?lstr99_FirmV_0_7_0
0x74A1      [17]    ?ICS?lstr100_FirmV_0_7_0
0x74B2      [17]    ?ICS?lstr101_FirmV_0_7_0
0x74C3      [17]    ?ICS?lstr102_FirmV_0_7_0
0x74D4      [22]    ?ICS?lstr3_FirmV_0_7_0
0x74EA      [16]    ?ICS?lstr4_FirmV_0_7_0
0x74FA      [16]    ?ICS?lstr5_FirmV_0_7_0
0x750A       [1]    ?ICSState2_delay_L0
0x750B      [22]    ?ICS?lstr41_FirmV_0_7_0
0x7521      [16]    ?ICS?lstr42_FirmV_0_7_0
0x7531      [16]    ?ICS?lstr43_FirmV_0_7_0
0x7541       [1]    ?ICSState6_delay_L0
0x7542      [22]    ?ICS?lstr38_FirmV_0_7_0
0x7558      [16]    ?ICS?lstr39_FirmV_0_7_0
0x7568      [16]    ?ICS?lstr40_FirmV_0_7_0
0x7578       [1]    ?ICSState5_delay_L0
0x7579      [17]    ?ICS?lstr103_FirmV_0_7_0
0x758A      [17]    ?ICS?lstr104_FirmV_0_7_0
0x759B      [17]    ?ICS?lstr105_FirmV_0_7_0
0x75AC      [17]    ?ICS?lstr106_FirmV_0_7_0
0x75BD      [16]    ?ICS?lstr68_FirmV_0_7_0
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_StateManager39
  L_StateManager40
  L_StateManager41
  L_StateManager42
  L_StateManager43
  L_StateManager44
  L_StateManager45
  L_StateManager46
  L_StateManager47
  L_StateManager48
  L_StateManager49
  L_StateManager50
  L_StateManager51
  L_StateManager52
  L_StateManager53
  L_StateManager54
  L_StateManager55
  L_StateManager56
  L_StateTest57
  L_StateTest58
  L_State0059
  L_State160
  L_State161
  L_State162
  L_State163
  L_State164
  L_State165
  L_State166
  L_State167
  L_State168
  L_State169
  L_State170
  L_State171
  L_State272
  L_State273
  L_State274
  L_State275
  L_State276
  L_State277
  L_State278
  L_State279
  L_State280
  L_State281
  L_State282
  L_State283
  L_State284
  L_State285
  L_State286
  L_State287
  L_State288
  L_State289
  L_State290
  L_State291
  L_State292
  L_State293
  L_State294
  L_State295
  L_State296
  L_State297
  L_State298
  L_State299
  L_State2100
  L_State2101
  L_State3102
  L_State3103
  L_State3104
  L_State3105
  L_State3106
  L_State3107
  L_State3108
  L_State3109
  L_State3110
  L_State3111
  L_State3112
  L_State3113
  L_State3114
  L_State3115
  L_State3116
  L_State3117
  L_State3118
  L_State3119
  L_State3120
  L_State3121
  L_State3122
  L_State3123
  L_State3124
  L_State3125
  L_State3126
  L_State3127
  L_State3128
  L_State3129
  L_State3130
  L_State3131
  L_State3132
  L_State3133
  L_State4134
  L_State4135
  L_State4136
  L_State4137
  L_State4138
  L_State4139
  L_State4140
  L_State4141
  L_State4142
  L_State4143
  L_State4144
  L_State4145
  L_State4146
  L_State4147
  L_State4148
  L_State4149
  L_State4150
  L_State4151
  L_State4152
  L_State4153
  L_State4154
  L_State4155
  L_State4156
  L_State4157
  L_State4158
  L_State4159
  L_State4160
  L_State4161
  L_State4162
  L_State5163
  L_State5164
  L_State5165
  L_State5166
  L_State5167
  L_State5168
  L_State5169
  L_State5170
  L_State5171
  L_State5172
  L_State5173
  L_State5174
  L_State5175
  L_State5176
  L_State5177
  L_State5178
  L_State5179
  L_State6180
  L_State6181
  L_State6182
  L_State6183
  L_State6184
  L_State6185
  L_State6186
  L_State6187
  L_State6188
  L_State6189
  L_State6190
  L_State6191
  L_State6192
  L_State6193
  L_State6194
  L_State6195
  L_State6196
  L_State6197
  L_State7198
  L_State7199
  L_State7200
  L_State7201
  L_State7202
  L_State7203
  L_State7204
  L_State7205
  L_State7206
  L_State7207
  L_State7208
  L_State7209
  L_State7210
  L_State7211
  L_State7212
  L_State7213
  L_State7214
  L_State7215
  L_State7216
  L_State7217
  L_State7218
  L_State7219
  L_State7220
  L_State7221
  L_State7222
  L_State7223
  L_State7224
  L_State7225
  L_State7226
  L_State7227
  L_State7228
  L_State7229
  L_State7230
  L_State8231
  L_State8232
  L_State8233
  L_State8234
  L_State8235
  L_State8236
  L_State8237
  L_State8238
  L_State8239
  L_State8240
  L_State8241
  L_State8242
  L_State8243
  L_State8244
  L_State8245
  L_State8246
  L_State8247
  L_State8248
  L_State8249
  L_State8250
  L_State8251
  L_State8252
  L_State8253
  L_State8254
  L_State8255
  L_State8256
  L_State8257
  L_State8258
  L_State8259
  L_State8260
  L_State8261
  L_State8262
  L_State8263
  L_State8264
  L_State8265
  L_State8266
  L_LCDUpdater267
  L_LCDUpdater268
  L_LCDUpdater269
  L_LCDUpdater270
  L_Init271
  L_Init272
  L_Init273
  L_TaskManager274
  L_TaskManager275
  L_TaskManager276
  L_TaskManager277
  L_TaskManager278
  L_TaskManager279
  L_AddTask280
  L_AddTask281
  L_AddTask282
  L_AddTask283
  L_EventHandler284
  L_EventHandler285
  L_EventHandler286
  L_EventHandler287
  L_EventHandler288
  L_EventHandler289
  L_EventHandler290
  L_EventHandler291
  L_EventHandler292
  L_EventHandler293
  L_EventHandler294
  L_GetKeysState295
  L_GetKeysState296
  L_GetKeysState297
  L_GetKeysState298
  L_GetKeysState299
  L_GetKeysState300
  L_GetKeysState301
  L_GetKeysState302
  L_GetKeysState303
  L_GetKeysState304
  L_GetKeysState305
  L_GetKeysState306
  L_GetKeysState307
  L_GetKeysState308
  L_GetKeysState309
  L_GetKeysState310
  L_GetKeysState311
  L_GetKeysState312
  L_GetKeysState313
  L_GetKeysState314
  L_GetKeysState315
  L_GetKeysState316
  L_GetKeysState317
  L_GetKeysState318
  L_GetKeysState319
  L_GetKeysState320
  L_GetExternalKeysState321
  L_GetExternalKeysState322
  L_GetLimitSwitchState323
  L_GetLimitSwitchState324
  L_GetLimitSwitchState325
  L_GetLimitSwitchState326
  L_GetOverloadState327
  L_GetOverloadState328
  L_GetOverloadState329
  L_GetOverloadState330
  L_GetOverloadState331
  L_GetOverloadState332
  L_GetOverloadState333
  L_GetOverloadState334
  L_GetOverloadState335
  L_GetOverloadState336
  L_GetOverloadState337
  L_GetOverloadState338
  L_GetOverloadState339
  L_GetOverloadState340
  L_GetPhotocellState341
  L_GetPhotocellState342
  L_GetPhotocellState343
  L_GetPhotocellState344
  L_GetPhotocellState345
  L_SetMotorSpeed346
  L_SetMotorSpeed347
  L_SetMotorSpeed348
  L_SetMotorSpeed349
  L_OverloadInit350
  L_OverloadInit351
  L_StartMotor352
  L_StartMotor353
  L_StopMotor354
  L_StopMotor355
  L_CheckTask356
  L_CheckTask357
  L_CheckTask358
  L_GetAutocloseTime359
  L_GetAutocloseTime360
  L_GetAutocloseTime361
  L_GetAutocloseTime362
  L_GetAutocloseTime363
  L_GetAutocloseTime364
  L_ClearTasks365
  L_ClearTasks366
  L_ClearTasks367
  L_ClearTasks368
  L_ClearTasks369
  L_ClearTasks370
  L_Menu0371
  L_Menu0372
  L_Menu0373
  L_Menu0374
  L_Menu0375
  L_Menu0376
  L_Menu0377
  L_Menu0378
  L_Menu0379
  L_Menu0380
  L_Menu0381
  L_Menu0382
  L_Menu0383
  L_Menu0384
  L_Menu0385
  L_Menu0386
  L_Menu0387
  L_Menu0388
  L_Menu0389
  L_Menu0390
  L_Menu0391
  L_Menu0392
  L_Menu0393
  L_Menu0394
  L_Menu0395
  L_Menu0396
  L_Menu0397
  L_Menu1398
  L_Menu1399
  L_Menu1400
  L_Menu1401
  L_Menu1402
  L_Menu1403
  L_Menu1404
  L_Menu2405
  L_Menu2406
  L_Menu2407
  L_Menu2408
  L_Menu2409
  L_Menu2410
  L_Menu2411
  L_Menu2412
  L_Menu2413
  L_Menu2414
  L_Menu2415
  L_Menu2416
  L_Menu2417
  L_Menu2418
  L_Menu2419
  L_Menu2420
  L_Menu2421
  L_Menu2422
  L_Menu2423
  L_Menu2424
  L_Menu2425
  L_Menu2426
  L_Menu2427
  L_Menu2428
  L_Menu2429
  L_Menu2430
  L_Menu2431
  L_Menu2432
  L_Menu2433
  L_Menu2434
  L_Menu2435
  L_Menu2436
  L_Menu2437
  L_Menu2438
  L_Menu2439
  L_Menu2440
  L_Menu2441
  L_Menu2442
  L_Menu2443
  L_Menu2444
  L_Menu2445
  L_Menu2446
  L_Menu2447
  L_Menu2448
  L_Menu2449
  L_Menu2450
  L_Menu2451
  L_Menu2452
  L_Menu2453
  L_Menu2454
  L_Menu2455
  L_Menu2456
  L_Menu2457
  L_Menu2458
  L_Menu2459
  L_Menu2460
  L_Menu2461
  L_Menu2462
  L_Menu2463
  L_Menu2464
  L_Menu2465
  L_Menu2466
  L_Menu2467
  L_Menu2468
  L_Menu2469
  L_Menu2470
  L_Menu2471
  L_Menu2472
  L_Menu2473
  L_Menu2474
  L_Menu2475
  L_Menu2476
  L_Menu2477
  L_Menu2478
  L_Menu2479
  L_Menu2480
  L_Menu2481
  L_Menu2482
  L_Menu2483
  L_Menu2484
  L_Menu2485
  L_Menu2486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_Menu2506
  L_Menu2507
  L_Menu2508
  L_Menu2509
  L_Menu2510
  L_Menu2511
  L_Menu2512
  L_Menu2513
  L_Menu2514
  L_Menu2515
  L_Menu2516
  L_Menu2517
  L_Menu2518
  L_Menu2519
  L_Menu2520
  L_Menu2521
  L_Menu2522
  L_Menu2523
  L_Menu2524
  L_Menu2525
  L_LearnAuto526
  L_LearnAuto527
  L_LearnAuto528
  L_LearnAuto529
  L_LearnAuto530
  L_LearnAuto531
  L_LearnAuto532
  L_LearnAuto533
  L_LearnAuto534
  L_LearnAuto535
  L_LearnAuto536
  L_LearnAuto537
  L_LearnAuto538
  L_LearnAuto539
  L_LearnAuto540
  L_LearnAuto541
  L_LearnAuto542
  L_LearnAuto543
  L_LearnAuto544
  L_LearnAuto545
  L_LearnAuto546
  L_LearnAuto547
  L_LearnAuto548
  L_LearnAuto549
  L_LearnAuto550
  L_LearnAuto551
  L_LearnAuto552
  L_LearnAuto553
  L_LearnAuto554
  L_LearnAuto555
  L_LearnAuto556
  L_LearnAuto557
  L_SaveLearnData558
  L_SaveLearnData559
  L_LearnManual560
  L_LearnManual561
  L_LearnManual562
  L_LearnManual563
  L_LearnManual564
  L_LearnManual565
  L_LearnManual566
  L_LearnManual567
  L_LearnManual568
  L_LearnManual569
  L_LearnManual570
  L_LearnManual571
  L_LearnManual572
  L_LearnManual573
  L_LearnManual574
  L_LearnManual575
  L_LearnManual576
  L_LearnManual577
  L_LearnManual578
  L_LearnManual579
  L_LearnManual580
  L_LearnManual581
  L_LearnManual582
  L_LearnManual583
  L_LearnManual584
  L_LearnManual585
  L_LearnManual586
  L_LearnManual587
  L_LearnManual588
  L_LearnManual589
  L_LearnManual590
  L_LearnManual591
  L_LearnManual592
  L_LearnManual593
  L_LearnManual594
  L_LearnManual595
  L_LearnManual596
  L_LearnManual597
  L_LearnManual598
  L_LearnManual599
  L_LearnManual600
  L_LearnManual601
  L_LearnManual602
  L_LearnManual603
  L_LearnManual604
  L_LearnManual605
  L_LearnManual606
  L_LearnManual607
  L_charValueToStr608
  L_charValueToStr609
  L_intValueToStr610
  L_intValueToStr611
  L_SetOverloadParams612
  L_SetOverloadParams613
  L_SetOverloadParams614
  L_SetOverloadParams615
  L_SetOverloadParams616
  L_SetOverloadParams617
  L_SetOverloadParams618
  L_SetOverloadParams619
  L_SetOverloadParams620
  L_SetOverloadParams621
  L_SetOverloadParams622
  L_SetOverloadParams623
  L__interrupt624
  L__interrupt625
  L__State1626
  L__State2627
  L__State2628
  L__State2629
  L__State2630
  L__State2631
  L__State3632
  L__State3633
  L__State3634
  L__State3635
  L__State3636
  L__State3637
  L__State4638
  L__State4639
  L__State4640
  L__State4641
  L__State4642
  L__State5643
  L__State5644
  L__State5645
  L__State5646
  L__State5647
  L__State6648
  L__State6649
  L__State6650
  L__State6651
  L__State6652
  L__State7653
  L__State7654
  L__State7655
  L__State7656
  L__State7657
  L__State7658
  L__State7659
  L__State7660
  L__State7661
  L__State8662
  L__State8663
  L__State8664
  L__State8665
  L__State8666
  L__State8667
  L__State8668
  L__State8669
  L__State8670
  L__State8671
  L__TaskManager672
  L__EventHandler673
  L__GetKeysState674
  L__GetKeysState675
  L__GetKeysState676
  L__GetKeysState677
  L__GetKeysState678
  L__GetKeysState679
  L__GetKeysState680
  L__GetLimitSwitchState681
  L__SetMotorSpeed682
  L__GetAutocloseTime683
  L__ClearTasks684
  L__Menu2685
  L__Menu2686
  L__Menu2687
  L__Menu2688
  L__Menu2689
  L__Menu2690
  L__Menu2691
  L__Menu2692
  L__Menu2693
  L__Menu2694
  L__Menu2695
  L__Menu2696
  L__Menu2697
  L__Menu2698
  L__Menu2699
  L__Menu2700
  L__Menu2701
  L__Menu2702
  L__Menu2703
  L__Menu2704
  L__Menu2705
  L__Menu2706
  L__Menu2707
  L__Menu2708
  L__Menu2709
  L__Menu2710
  L__Menu2711
  L__Menu2712
  L__Menu2713
  L__Menu2714
  L__Menu2715
  L__Menu2716
  _interrupt
  L__interrupt717
  _ResetTaskEvents
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1718
  _State2
  L__State2719
  L__State2720
  _State3
  L__State3721
  _State4
  L__State4722
  _State5
  L__State5723
  L__State5724
  _State6
  L__State6725
  L__State6726
  _State7
  L__State7727
  _State8
  L__State8728
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager729
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState730
  L__GetKeysState731
  L__GetKeysState732
  L__GetKeysState733
  L__GetKeysState734
  L__GetKeysState735
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState736
  L__GetRemoteState737
  L__GetRemoteState738
  L__GetRemoteState739
  L__GetRemoteState740
  L__GetRemoteState741
  L__GetRemoteState742
  L__GetRemoteState743
  L__GetRemoteState744
  L__GetRemoteState745
  L__GetRemoteState746
  L__GetRemoteState747
  _GetOverloadState
  L__GetOverloadState748
  L__GetOverloadState749
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor750
  L__StartMotor751
  L__StartMotor752
  L__StartMotor753
  _StopMotor
  _CheckTask
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _Menu1
  _Menu2
  L__Menu2754
  L__Menu2755
  _Menu3
  _LearnAuto
  _AutoLearnCalculator
  _SaveLearnData
  _LearnManual
  _charValueToStr
  _intValueToStr
  L__intValueToStr756
  _SetOverloadParams
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L__Rtrim142
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L__FloatToStr149
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Delay_1us0
  L_Delay_10us1
  L_Delay_22us2
  L_Delay_50us3
  L_Delay_80us4
  L_Delay_500us5
  L_Delay_5500us6
  L_Delay_1ms7
  L_Delay_5ms8
  L_Delay_8ms9
  L_Delay_100ms10
  L_Delay_10ms11
  L_Delay_1sec12
  L____Boot_Delay4k13
  L____Boot_Delay8k14
  L____Boot_Delay12k15
  L____Boot_Delay16k16
  L____Boot_Delay24k17
  L____Boot_Delay32k18
  L____Boot_Delay48k19
  L____Boot_Delay64k20
  L____Boot_Delay128k21
  L_Delay_Cyc22
  L_Delay_Cyc23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_VDelay_Advanced_ms29
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms30
  L__VDelay_ms31
  L__VDelay_ms32
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms33
  L__VDelay_Advanced_ms34
  L__VDelay_Advanced_ms35
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_end_EEPROM_Read
  _EEPROM_Read
  L_end_EEPROM_Write
  _EEPROM_Write
  L__EEPROM_Write4
  L__EEPROM_Write5
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_StateManager39
  L_StateManager40
  L_StateManager41
  L_StateManager42
  L_StateManager43
  L_StateManager44
  L_StateManager45
  L_StateManager46
  L_StateManager47
  L_StateManager48
  L_StateManager49
  L_StateManager50
  L_StateManager51
  L_StateManager52
  L_StateManager53
  L_StateManager54
  L_StateManager55
  L_StateManager56
  L_StateTest57
  L_StateTest58
  L_State0059
  L_State160
  L_State161
  L_State162
  L_State163
  L_State164
  L_State165
  L_State166
  L_State167
  L_State168
  L_State169
  L_State170
  L_State171
  L_State272
  L_State273
  L_State274
  L_State275
  L_State276
  L_State277
  L_State278
  L_State279
  L_State280
  L_State281
  L_State282
  L_State283
  L_State284
  L_State285
  L_State286
  L_State287
  L_State288
  L_State289
  L_State290
  L_State291
  L_State292
  L_State293
  L_State294
  L_State295
  L_State296
  L_State297
  L_State298
  L_State299
  L_State2100
  L_State2101
  L_State3102
  L_State3103
  L_State3104
  L_State3105
  L_State3106
  L_State3107
  L_State3108
  L_State3109
  L_State3110
  L_State3111
  L_State3112
  L_State3113
  L_State3114
  L_State3115
  L_State3116
  L_State3117
  L_State3118
  L_State3119
  L_State3120
  L_State3121
  L_State3122
  L_State3123
  L_State3124
  L_State3125
  L_State3126
  L_State3127
  L_State3128
  L_State3129
  L_State3130
  L_State3131
  L_State3132
  L_State3133
  L_State4134
  L_State4135
  L_State4136
  L_State4137
  L_State4138
  L_State4139
  L_State4140
  L_State4141
  L_State4142
  L_State4143
  L_State4144
  L_State4145
  L_State4146
  L_State4147
  L_State4148
  L_State4149
  L_State4150
  L_State4151
  L_State4152
  L_State4153
  L_State4154
  L_State4155
  L_State4156
  L_State4157
  L_State4158
  L_State4159
  L_State4160
  L_State4161
  L_State4162
  L_State5163
  L_State5164
  L_State5165
  L_State5166
  L_State5167
  L_State5168
  L_State5169
  L_State5170
  L_State5171
  L_State5172
  L_State5173
  L_State5174
  L_State5175
  L_State5176
  L_State5177
  L_State5178
  L_State5179
  L_State6180
  L_State6181
  L_State6182
  L_State6183
  L_State6184
  L_State6185
  L_State6186
  L_State6187
  L_State6188
  L_State6189
  L_State6190
  L_State6191
  L_State6192
  L_State6193
  L_State6194
  L_State6195
  L_State6196
  L_State6197
  L_State7198
  L_State7199
  L_State7200
  L_State7201
  L_State7202
  L_State7203
  L_State7204
  L_State7205
  L_State7206
  L_State7207
  L_State7208
  L_State7209
  L_State7210
  L_State7211
  L_State7212
  L_State7213
  L_State7214
  L_State7215
  L_State7216
  L_State7217
  L_State7218
  L_State7219
  L_State7220
  L_State7221
  L_State7222
  L_State7223
  L_State7224
  L_State7225
  L_State7226
  L_State7227
  L_State7228
  L_State7229
  L_State7230
  L_State8231
  L_State8232
  L_State8233
  L_State8234
  L_State8235
  L_State8236
  L_State8237
  L_State8238
  L_State8239
  L_State8240
  L_State8241
  L_State8242
  L_State8243
  L_State8244
  L_State8245
  L_State8246
  L_State8247
  L_State8248
  L_State8249
  L_State8250
  L_State8251
  L_State8252
  L_State8253
  L_State8254
  L_State8255
  L_State8256
  L_State8257
  L_State8258
  L_State8259
  L_State8260
  L_State8261
  L_State8262
  L_State8263
  L_State8264
  L_State8265
  L_State8266
  L_LCDUpdater267
  L_LCDUpdater268
  L_LCDUpdater269
  L_LCDUpdater270
  L_Init271
  L_Init272
  L_Init273
  L_TaskManager274
  L_TaskManager275
  L_TaskManager276
  L_TaskManager277
  L_TaskManager278
  L_TaskManager279
  L_AddTask280
  L_AddTask281
  L_AddTask282
  L_AddTask283
  L_EventHandler284
  L_EventHandler285
  L_EventHandler286
  L_EventHandler287
  L_EventHandler288
  L_EventHandler289
  L_EventHandler290
  L_EventHandler291
  L_EventHandler292
  L_EventHandler293
  L_EventHandler294
  L_GetKeysState295
  L_GetKeysState296
  L_GetKeysState297
  L_GetKeysState298
  L_GetKeysState299
  L_GetKeysState300
  L_GetKeysState301
  L_GetKeysState302
  L_GetKeysState303
  L_GetKeysState304
  L_GetKeysState305
  L_GetKeysState306
  L_GetKeysState307
  L_GetKeysState308
  L_GetKeysState309
  L_GetKeysState310
  L_GetKeysState311
  L_GetKeysState312
  L_GetKeysState313
  L_GetKeysState314
  L_GetKeysState315
  L_GetKeysState316
  L_GetKeysState317
  L_GetKeysState318
  L_GetKeysState319
  L_GetKeysState320
  L_GetExternalKeysState321
  L_GetExternalKeysState322
  L_GetLimitSwitchState323
  L_GetLimitSwitchState324
  L_GetLimitSwitchState325
  L_GetLimitSwitchState326
  L_GetOverloadState327
  L_GetOverloadState328
  L_GetOverloadState329
  L_GetOverloadState330
  L_GetOverloadState331
  L_GetOverloadState332
  L_GetOverloadState333
  L_GetOverloadState334
  L_GetOverloadState335
  L_GetOverloadState336
  L_GetOverloadState337
  L_GetOverloadState338
  L_GetOverloadState339
  L_GetOverloadState340
  L_GetPhotocellState341
  L_GetPhotocellState342
  L_GetPhotocellState343
  L_GetPhotocellState344
  L_GetPhotocellState345
  L_SetMotorSpeed346
  L_SetMotorSpeed347
  L_SetMotorSpeed348
  L_SetMotorSpeed349
  L_OverloadInit350
  L_OverloadInit351
  L_StartMotor352
  L_StartMotor353
  L_StopMotor354
  L_StopMotor355
  L_CheckTask356
  L_CheckTask357
  L_CheckTask358
  L_GetAutocloseTime359
  L_GetAutocloseTime360
  L_GetAutocloseTime361
  L_GetAutocloseTime362
  L_GetAutocloseTime363
  L_GetAutocloseTime364
  L_ClearTasks365
  L_ClearTasks366
  L_ClearTasks367
  L_ClearTasks368
  L_ClearTasks369
  L_ClearTasks370
  L_Menu0371
  L_Menu0372
  L_Menu0373
  L_Menu0374
  L_Menu0375
  L_Menu0376
  L_Menu0377
  L_Menu0378
  L_Menu0379
  L_Menu0380
  L_Menu0381
  L_Menu0382
  L_Menu0383
  L_Menu0384
  L_Menu0385
  L_Menu0386
  L_Menu0387
  L_Menu0388
  L_Menu0389
  L_Menu0390
  L_Menu0391
  L_Menu0392
  L_Menu0393
  L_Menu0394
  L_Menu0395
  L_Menu0396
  L_Menu0397
  L_Menu1398
  L_Menu1399
  L_Menu1400
  L_Menu1401
  L_Menu1402
  L_Menu1403
  L_Menu1404
  L_Menu2405
  L_Menu2406
  L_Menu2407
  L_Menu2408
  L_Menu2409
  L_Menu2410
  L_Menu2411
  L_Menu2412
  L_Menu2413
  L_Menu2414
  L_Menu2415
  L_Menu2416
  L_Menu2417
  L_Menu2418
  L_Menu2419
  L_Menu2420
  L_Menu2421
  L_Menu2422
  L_Menu2423
  L_Menu2424
  L_Menu2425
  L_Menu2426
  L_Menu2427
  L_Menu2428
  L_Menu2429
  L_Menu2430
  L_Menu2431
  L_Menu2432
  L_Menu2433
  L_Menu2434
  L_Menu2435
  L_Menu2436
  L_Menu2437
  L_Menu2438
  L_Menu2439
  L_Menu2440
  L_Menu2441
  L_Menu2442
  L_Menu2443
  L_Menu2444
  L_Menu2445
  L_Menu2446
  L_Menu2447
  L_Menu2448
  L_Menu2449
  L_Menu2450
  L_Menu2451
  L_Menu2452
  L_Menu2453
  L_Menu2454
  L_Menu2455
  L_Menu2456
  L_Menu2457
  L_Menu2458
  L_Menu2459
  L_Menu2460
  L_Menu2461
  L_Menu2462
  L_Menu2463
  L_Menu2464
  L_Menu2465
  L_Menu2466
  L_Menu2467
  L_Menu2468
  L_Menu2469
  L_Menu2470
  L_Menu2471
  L_Menu2472
  L_Menu2473
  L_Menu2474
  L_Menu2475
  L_Menu2476
  L_Menu2477
  L_Menu2478
  L_Menu2479
  L_Menu2480
  L_Menu2481
  L_Menu2482
  L_Menu2483
  L_Menu2484
  L_Menu2485
  L_Menu2486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_Menu2506
  L_Menu2507
  L_Menu2508
  L_Menu2509
  L_Menu2510
  L_Menu2511
  L_Menu2512
  L_Menu2513
  L_Menu2514
  L_Menu2515
  L_Menu2516
  L_Menu2517
  L_Menu2518
  L_Menu2519
  L_Menu2520
  L_Menu2521
  L_Menu2522
  L_Menu2523
  L_Menu2524
  L_Menu2525
  L_LearnAuto526
  L_LearnAuto527
  L_LearnAuto528
  L_LearnAuto529
  L_LearnAuto530
  L_LearnAuto531
  L_LearnAuto532
  L_LearnAuto533
  L_LearnAuto534
  L_LearnAuto535
  L_LearnAuto536
  L_LearnAuto537
  L_LearnAuto538
  L_LearnAuto539
  L_LearnAuto540
  L_LearnAuto541
  L_LearnAuto542
  L_LearnAuto543
  L_LearnAuto544
  L_LearnAuto545
  L_LearnAuto546
  L_LearnAuto547
  L_LearnAuto548
  L_LearnAuto549
  L_LearnAuto550
  L_LearnAuto551
  L_LearnAuto552
  L_LearnAuto553
  L_LearnAuto554
  L_LearnAuto555
  L_LearnAuto556
  L_LearnAuto557
  L_SaveLearnData558
  L_SaveLearnData559
  L_LearnManual560
  L_LearnManual561
  L_LearnManual562
  L_LearnManual563
  L_LearnManual564
  L_LearnManual565
  L_LearnManual566
  L_LearnManual567
  L_LearnManual568
  L_LearnManual569
  L_LearnManual570
  L_LearnManual571
  L_LearnManual572
  L_LearnManual573
  L_LearnManual574
  L_LearnManual575
  L_LearnManual576
  L_LearnManual577
  L_LearnManual578
  L_LearnManual579
  L_LearnManual580
  L_LearnManual581
  L_LearnManual582
  L_LearnManual583
  L_LearnManual584
  L_LearnManual585
  L_LearnManual586
  L_LearnManual587
  L_LearnManual588
  L_LearnManual589
  L_LearnManual590
  L_LearnManual591
  L_LearnManual592
  L_LearnManual593
  L_LearnManual594
  L_LearnManual595
  L_LearnManual596
  L_LearnManual597
  L_LearnManual598
  L_LearnManual599
  L_LearnManual600
  L_LearnManual601
  L_LearnManual602
  L_LearnManual603
  L_LearnManual604
  L_LearnManual605
  L_LearnManual606
  L_LearnManual607
  L_charValueToStr608
  L_charValueToStr609
  L_intValueToStr610
  L_intValueToStr611
  L_SetOverloadParams612
  L_SetOverloadParams613
  L_SetOverloadParams614
  L_SetOverloadParams615
  L_SetOverloadParams616
  L_SetOverloadParams617
  L_SetOverloadParams618
  L_SetOverloadParams619
  L_SetOverloadParams620
  L_SetOverloadParams621
  L_SetOverloadParams622
  L_SetOverloadParams623
  L__interrupt624
  L__interrupt625
  L__State1626
  L__State2627
  L__State2628
  L__State2629
  L__State2630
  L__State2631
  L__State3632
  L__State3633
  L__State3634
  L__State3635
  L__State3636
  L__State3637
  L__State4638
  L__State4639
  L__State4640
  L__State4641
  L__State4642
  L__State5643
  L__State5644
  L__State5645
  L__State5646
  L__State5647
  L__State6648
  L__State6649
  L__State6650
  L__State6651
  L__State6652
  L__State7653
  L__State7654
  L__State7655
  L__State7656
  L__State7657
  L__State7658
  L__State7659
  L__State7660
  L__State7661
  L__State8662
  L__State8663
  L__State8664
  L__State8665
  L__State8666
  L__State8667
  L__State8668
  L__State8669
  L__State8670
  L__State8671
  L__TaskManager672
  L__EventHandler673
  L__GetKeysState674
  L__GetKeysState675
  L__GetKeysState676
  L__GetKeysState677
  L__GetKeysState678
  L__GetKeysState679
  L__GetKeysState680
  L__GetLimitSwitchState681
  L__SetMotorSpeed682
  L__GetAutocloseTime683
  L__ClearTasks684
  L__Menu2685
  L__Menu2686
  L__Menu2687
  L__Menu2688
  L__Menu2689
  L__Menu2690
  L__Menu2691
  L__Menu2692
  L__Menu2693
  L__Menu2694
  L__Menu2695
  L__Menu2696
  L__Menu2697
  L__Menu2698
  L__Menu2699
  L__Menu2700
  L__Menu2701
  L__Menu2702
  L__Menu2703
  L__Menu2704
  L__Menu2705
  L__Menu2706
  L__Menu2707
  L__Menu2708
  L__Menu2709
  L__Menu2710
  L__Menu2711
  L__Menu2712
  L__Menu2713
  L__Menu2714
  L__Menu2715
  L__Menu2716
  _interrupt
  L__interrupt717
  _ResetTaskEvents
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1718
  _State2
  L__State2719
  L__State2720
  _State3
  L__State3721
  _State4
  L__State4722
  _State5
  L__State5723
  L__State5724
  _State6
  L__State6725
  L__State6726
  _State7
  L__State7727
  _State8
  L__State8728
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager729
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState730
  L__GetKeysState731
  L__GetKeysState732
  L__GetKeysState733
  L__GetKeysState734
  L__GetKeysState735
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState736
  L__GetRemoteState737
  L__GetRemoteState738
  L__GetRemoteState739
  L__GetRemoteState740
  L__GetRemoteState741
  L__GetRemoteState742
  L__GetRemoteState743
  L__GetRemoteState744
  L__GetRemoteState745
  L__GetRemoteState746
  L__GetRemoteState747
  _GetOverloadState
  L__GetOverloadState748
  L__GetOverloadState749
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor750
  L__StartMotor751
  L__StartMotor752
  L__StartMotor753
  _StopMotor
  _CheckTask
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _Menu1
  _Menu2
  L__Menu2754
  L__Menu2755
  _Menu3
  _LearnAuto
  _AutoLearnCalculator
  _SaveLearnData
  _LearnManual
  _charValueToStr
  _intValueToStr
  L__intValueToStr756
  _SetOverloadParams
