;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/4/2014 9:04:18 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF02BEF12  	GOTO        22052
_LearnAuto:
;FirmV_0_7_0.c,2057 :: 		void LearnAuto()
;FirmV_0_7_0.c,2059 :: 		}
0x0006	0x0012      	RETURN      0
; end of _LearnAuto
_interrupt:
;FirmV_0_7_0.c,180 :: 		void interrupt()
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C004  	MOVFF       R4, 23
0x0014	0xF016C008  	MOVFF       R8, 22
0x0018	0xF015C00C  	MOVFF       R12, 21
;FirmV_0_7_0.c,182 :: 		if(TMR0IF_bit)
0x001C	0xA4F2      	BTFSS       TMR0IF_bit, 2 
0x001E	0xD02A      	BRA         L_interrupt0
;FirmV_0_7_0.c,184 :: 		msCounter=msCounter+1;
0x0020	0x2A5B      	INCF        _msCounter, 1 
;FirmV_0_7_0.c,185 :: 		LCDBackLight=1;
0x0022	0x8681      	BSF         PORTB, 3 
;FirmV_0_7_0.c,186 :: 		Flag20ms=1;
0x0024	0x0E01      	MOVLW       1
0x0026	0x6E43      	MOVWF       _Flag20ms 
;FirmV_0_7_0.c,187 :: 		if(ms20A==255)
0x0028	0x5040      	MOVF        _ms20A, 0 
0x002A	0x0AFF      	XORLW       255
0x002C	0xE103      	BNZ         L_interrupt1
;FirmV_0_7_0.c,188 :: 		{ms20A=0;RemotePulse1=0;}
0x002E	0x6A40      	CLRF        _ms20A 
0x0030	0x6A41      	CLRF        _RemotePulse1 
0x0032	0xD001      	BRA         L_interrupt2
L_interrupt1:
;FirmV_0_7_0.c,190 :: 		ms20A=ms20A+1;
0x0034	0x2A40      	INCF        _ms20A, 1 
L_interrupt2:
;FirmV_0_7_0.c,192 :: 		if(ms20B==255)
0x0036	0x0101      	MOVLB       1
0x0038	0x5106      	MOVF        _ms20B, 0, 1
0x003A	0x0AFF      	XORLW       255
0x003C	0xE103      	BNZ         L_interrupt3
;FirmV_0_7_0.c,193 :: 		{ms20B=0;RemotePulse2=0;}
0x003E	0x6B06      	CLRF        _ms20B, 1
0x0040	0x6A5A      	CLRF        _RemotePulse2 
0x0042	0xD001      	BRA         L_interrupt4
L_interrupt3:
;FirmV_0_7_0.c,195 :: 		ms20B=ms20B+1;
0x0044	0x2B06      	INCF        _ms20B, 1, 1
L_interrupt4:
;FirmV_0_7_0.c,197 :: 		if(msCounter>=25)
0x0046	0x0E19      	MOVLW       25
0x0048	0x5C5B      	SUBWF       _msCounter, 0 
0x004A	0xE30F      	BNC         L_interrupt5
;FirmV_0_7_0.c,199 :: 		msCounter=0;
0x004C	0x6A5B      	CLRF        _msCounter 
;FirmV_0_7_0.c,200 :: 		ms500=ms500+1;
0x004E	0x0E01      	MOVLW       1
0x0050	0x261C      	ADDWF       _ms500, 1 
0x0052	0x0E00      	MOVLW       0
0x0054	0x221D      	ADDWFC      _ms500+1, 1 
0x0056	0x221E      	ADDWFC      _ms500+2, 1 
0x0058	0x221F      	ADDWFC      _ms500+3, 1 
;FirmV_0_7_0.c,201 :: 		LCDFlashFlag=!LCDFlashFlag;
0x005A	0x5222      	MOVF        _LCDFlashFlag, 1 
0x005C	0x0E01      	MOVLW       1
0x005E	0xA4D8      	BTFSS       STATUS, 2 
0x0060	0x0E00      	MOVLW       0
0x0062	0x6E22      	MOVWF       _LCDFlashFlag 
;FirmV_0_7_0.c,202 :: 		LCDBackLight=0;
0x0064	0x9681      	BCF         PORTB, 3 
;FirmV_0_7_0.c,203 :: 		Flag500ms=1;
0x0066	0x0E01      	MOVLW       1
0x0068	0x6E42      	MOVWF       _Flag500ms 
;FirmV_0_7_0.c,204 :: 		}
L_interrupt5:
;FirmV_0_7_0.c,205 :: 		tmr0h=0xF3;
0x006A	0x0EF3      	MOVLW       243
0x006C	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,206 :: 		tmr0l=0xCA;
0x006E	0x0ECA      	MOVLW       202
0x0070	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,207 :: 		TMR0IF_bit=0;
0x0072	0x94F2      	BCF         TMR0IF_bit, 2 
;FirmV_0_7_0.c,208 :: 		}
L_interrupt0:
;FirmV_0_7_0.c,211 :: 		if(INT1F_bit)
0x0074	0xA0F0      	BTFSS       INT1F_bit, 0 
0x0076	0xD016      	BRA         L_interrupt6
;FirmV_0_7_0.c,213 :: 		if(RemotePulse1==0)
0x0078	0x5041      	MOVF        _RemotePulse1, 0 
0x007A	0x0A00      	XORLW       0
0x007C	0xE103      	BNZ         L_interrupt7
;FirmV_0_7_0.c,214 :: 		{ RemotePulse1=RemotePulse1+1;ms20A=0;}
0x007E	0x2A41      	INCF        _RemotePulse1, 1 
0x0080	0x6A40      	CLRF        _ms20A 
0x0082	0xD001      	BRA         L_interrupt8
L_interrupt7:
;FirmV_0_7_0.c,216 :: 		{ RemotePulse1=RemotePulse1+1;}
0x0084	0x2A41      	INCF        _RemotePulse1, 1 
L_interrupt8:
;FirmV_0_7_0.c,217 :: 		if(RemotePulse1>=5)
0x0086	0x0E05      	MOVLW       5
0x0088	0x5C41      	SUBWF       _RemotePulse1, 0 
0x008A	0xE30B      	BNC         L_interrupt9
;FirmV_0_7_0.c,218 :: 		if((ms20A>=19)&&(ms20A<=21))
0x008C	0x0E13      	MOVLW       19
0x008E	0x5C40      	SUBWF       _ms20A, 0 
0x0090	0xE307      	BNC         L_interrupt12
0x0092	0x5040      	MOVF        _ms20A, 0 
0x0094	0x0815      	SUBLW       21
0x0096	0xE304      	BNC         L_interrupt12
L__interrupt523:
;FirmV_0_7_0.c,219 :: 		{RemoteAFlag=1;RemotePulse1=0;}
0x0098	0x0E01      	MOVLW       1
0x009A	0x6E3F      	MOVWF       _RemoteAFlag 
0x009C	0x6A41      	CLRF        _RemotePulse1 
0x009E	0xD001      	BRA         L_interrupt13
L_interrupt12:
;FirmV_0_7_0.c,221 :: 		RemotePulse1=0;
0x00A0	0x6A41      	CLRF        _RemotePulse1 
L_interrupt13:
L_interrupt9:
;FirmV_0_7_0.c,222 :: 		INT1IF_bit=0;
0x00A2	0x90F0      	BCF         INT1IF_bit, 0 
;FirmV_0_7_0.c,223 :: 		}
L_interrupt6:
;FirmV_0_7_0.c,227 :: 		if(INT2IF_bit)
0x00A4	0xA2F0      	BTFSS       INT2IF_bit, 1 
0x00A6	0xD018      	BRA         L_interrupt14
;FirmV_0_7_0.c,229 :: 		if(RemotePulse2==0)
0x00A8	0x505A      	MOVF        _RemotePulse2, 0 
0x00AA	0x0A00      	XORLW       0
0x00AC	0xE104      	BNZ         L_interrupt15
;FirmV_0_7_0.c,230 :: 		{ RemotePulse2=RemotePulse2+1;ms20B=0;}
0x00AE	0x0101      	MOVLB       1
0x00B0	0x2A5A      	INCF        _RemotePulse2, 1 
0x00B2	0x6B06      	CLRF        _ms20B, 1
0x00B4	0xD001      	BRA         L_interrupt16
L_interrupt15:
;FirmV_0_7_0.c,232 :: 		{ RemotePulse2=RemotePulse2+1;}
0x00B6	0x2A5A      	INCF        _RemotePulse2, 1 
L_interrupt16:
;FirmV_0_7_0.c,233 :: 		if(RemotePulse2>=5)
0x00B8	0x0E05      	MOVLW       5
0x00BA	0x5C5A      	SUBWF       _RemotePulse2, 0 
0x00BC	0xE30C      	BNC         L_interrupt17
;FirmV_0_7_0.c,234 :: 		if((ms20B>=19)&&(ms20B<=21))
0x00BE	0x0101      	MOVLB       1
0x00C0	0x0E13      	MOVLW       19
0x00C2	0x5D06      	SUBWF       _ms20B, 0, 1
0x00C4	0xE307      	BNC         L_interrupt20
0x00C6	0x5106      	MOVF        _ms20B, 0, 1
0x00C8	0x0815      	SUBLW       21
0x00CA	0xE304      	BNC         L_interrupt20
L__interrupt522:
;FirmV_0_7_0.c,235 :: 		{RemoteBFlag=1;RemotePulse2=0;}
0x00CC	0x0E01      	MOVLW       1
0x00CE	0x6E3E      	MOVWF       _RemoteBFlag 
0x00D0	0x6A5A      	CLRF        _RemotePulse2 
0x00D2	0xD001      	BRA         L_interrupt21
L_interrupt20:
;FirmV_0_7_0.c,237 :: 		RemotePulse2=0;
0x00D4	0x6A5A      	CLRF        _RemotePulse2 
L_interrupt21:
L_interrupt17:
;FirmV_0_7_0.c,238 :: 		INT2IF_bit=0;
0x00D6	0x92F0      	BCF         INT2IF_bit, 1 
;FirmV_0_7_0.c,239 :: 		}
L_interrupt14:
;FirmV_0_7_0.c,244 :: 		if(INT0F_bit==1)
0x00D8	0xA2F2      	BTFSS       INT0F_bit, 1 
0x00DA	0xD02E      	BRA         L_interrupt22
;FirmV_0_7_0.c,246 :: 		ZCCounter=ZCCounter+1;
0x00DC	0x2A5E      	INCF        _ZCCounter, 1 
;FirmV_0_7_0.c,247 :: 		if(ZCCounter==255)
0x00DE	0x505E      	MOVF        _ZCCounter, 0 
0x00E0	0x0AFF      	XORLW       255
0x00E2	0xE101      	BNZ         L_interrupt23
;FirmV_0_7_0.c,248 :: 		ZCCounter=0;
0x00E4	0x6A5E      	CLRF        _ZCCounter 
L_interrupt23:
;FirmV_0_7_0.c,249 :: 		if(ZCCounter%3==1)
0x00E6	0x0E03      	MOVLW       3
0x00E8	0x6E04      	MOVWF       R4 
0x00EA	0xF000C05E  	MOVFF       _ZCCounter, R0
0x00EE	0xD866      	RCALL       _Div_8x8_U
0x00F0	0xF000C008  	MOVFF       R8, R0
0x00F4	0x5000      	MOVF        R0, 0 
0x00F6	0x0A01      	XORLW       1
0x00F8	0xE10E      	BNZ         L_interrupt24
;FirmV_0_7_0.c,251 :: 		if(Motor1Start)
0x00FA	0x5227      	MOVF        _Motor1Start, 1 
0x00FC	0xE005      	BZ          L_interrupt25
;FirmV_0_7_0.c,252 :: 		if(Motor1FullSpeed)
0x00FE	0x5260      	MOVF        _Motor1FullSpeed, 1 
0x0100	0xE002      	BZ          L_interrupt26
;FirmV_0_7_0.c,253 :: 		Motor1=1;
0x0102	0x8282      	BSF         PORTC, 1 
0x0104	0xD001      	BRA         L_interrupt27
L_interrupt26:
;FirmV_0_7_0.c,255 :: 		Motor1=0;
0x0106	0x9282      	BCF         PORTC, 1 
L_interrupt27:
L_interrupt25:
;FirmV_0_7_0.c,257 :: 		if(Motor2Start)
0x0108	0x5228      	MOVF        _Motor2Start, 1 
0x010A	0xE005      	BZ          L_interrupt28
;FirmV_0_7_0.c,258 :: 		if(Motor2FullSpeed)
0x010C	0x525F      	MOVF        _Motor2FullSpeed, 1 
0x010E	0xE002      	BZ          L_interrupt29
;FirmV_0_7_0.c,259 :: 		Motor2=1;
0x0110	0x8082      	BSF         PORTC, 0 
0x0112	0xD001      	BRA         L_interrupt30
L_interrupt29:
;FirmV_0_7_0.c,261 :: 		Motor2=0;
0x0114	0x9082      	BCF         PORTC, 0 
L_interrupt30:
L_interrupt28:
;FirmV_0_7_0.c,262 :: 		}
L_interrupt24:
;FirmV_0_7_0.c,263 :: 		if(ZCCounter%3==0)
0x0116	0x0E03      	MOVLW       3
0x0118	0x6E04      	MOVWF       R4 
0x011A	0xF000C05E  	MOVFF       _ZCCounter, R0
0x011E	0xD84E      	RCALL       _Div_8x8_U
0x0120	0xF000C008  	MOVFF       R8, R0
0x0124	0x5000      	MOVF        R0, 0 
0x0126	0x0A00      	XORLW       0
0x0128	0xE106      	BNZ         L_interrupt31
;FirmV_0_7_0.c,265 :: 		if(Motor1Start)
0x012A	0x5227      	MOVF        _Motor1Start, 1 
0x012C	0xE001      	BZ          L_interrupt32
;FirmV_0_7_0.c,266 :: 		Motor1=1;
0x012E	0x8282      	BSF         PORTC, 1 
L_interrupt32:
;FirmV_0_7_0.c,268 :: 		if(Motor2Start)
0x0130	0x5228      	MOVF        _Motor2Start, 1 
0x0132	0xE001      	BZ          L_interrupt33
;FirmV_0_7_0.c,269 :: 		Motor2=1;
0x0134	0x8082      	BSF         PORTC, 0 
L_interrupt33:
;FirmV_0_7_0.c,270 :: 		}
L_interrupt31:
;FirmV_0_7_0.c,271 :: 		INT0F_bit=0;
0x0136	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,272 :: 		}
L_interrupt22:
;FirmV_0_7_0.c,273 :: 		}
L__interrupt604:
0x0138	0xF000C019  	MOVFF       25, R0
0x013C	0xF001C018  	MOVFF       24, R1
0x0140	0xF004C017  	MOVFF       23, R4
0x0144	0xF008C016  	MOVFF       22, R8
0x0148	0xF00CC015  	MOVFF       21, R12
0x014C	0x0011      	RETFIE      1
; end of _interrupt
_SPI1_Write:
;__Lib_SPI_c345.c,76 :: 		
;__Lib_SPI_c345.c,79 :: 		
0x014E	0xFFC9C43A  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,80 :: 		
L_SPI1_Write8:
0x0152	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0154	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,81 :: 		
0x0156	0x0000      	NOP
0x0158	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,82 :: 		
0x015A	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x015E	0x0012      	RETURN      0
; end of _SPI1_Write
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0160	0xB2AC      	BTFSC       TXSTA, 1 
0x0162	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0164	0x0000      	NOP
0x0166	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0168	0xFFADC43A  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x016C	0x0012      	RETURN      0
; end of _UART1_Write
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x016E	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,110 :: 		
0x0170	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,111 :: 		
0x0172	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0174	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,113 :: 		
0x0176	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0178	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x017A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x017C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x017E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0180	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0182	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0184	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0186	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0188	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x018A	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x018C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x018E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0190	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0192	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0194	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0196	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0198	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x019A	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x019C	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x019E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x01A0	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x01A2	0x0012      	RETURN      0
; end of _Div_16x16_U
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x01A4	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x01A6	0x6E02      	MOVWF       R2, higher_addr(_CC2D_Loop1)
;__Lib_System.c,96 :: 		
0x01A8	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x01AA	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x01AC	0x6AFF      	CLRF        TOSU, higher_addr(_CC2D_Loop1)
;__Lib_System.c,99 :: 		
0x01AE	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x01B0	0x6EFE      	MOVWF       TOSH, higher_addr(_CC2D_Loop1)
;__Lib_System.c,101 :: 		
0x01B2	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x01B4	0x6EFD      	MOVWF       TOSL, higher_addr(_CC2D_Loop1)
;__Lib_System.c,103 :: 		
0x01B6	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x01B8	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x01BA	0x0012      	RETURN      0
; end of _____DoIFC
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x01BC	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,85 :: 		
0x01BE	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x01C0	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,87 :: 		
0x01C2	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x01C4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x01C6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x01C8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x01CA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x01CC	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x01CE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x01D0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x01D2	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x01D4	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x01D6	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x01D8	0x0012      	RETURN      0
; end of _Div_8x8_U
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x01DA	0x0104      	MOVLB       4
0x01DC	0x6B36      	CLRF        ByteToStr_DigitPos_L0, 1
L_ByteToStr0:
0x01DE	0x0E03      	MOVLW       3
0x01E0	0x5D36      	SUBWF       ByteToStr_DigitPos_L0, 0, 1
0x01E2	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x01E4	0x5136      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x01E6	0x2534      	ADDWF       FARG_ByteToStr_output, 0, 1
0x01E8	0x6EE1      	MOVWF       FSR1L 
0x01EA	0x0E00      	MOVLW       0
0x01EC	0x2135      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x01EE	0x6EE2      	MOVWF       FSR1H 
0x01F0	0x0E20      	MOVLW       32
0x01F2	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x01F4	0x2B36      	INCF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,70 :: 		
0x01F6	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x01F8	0x5136      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x01FA	0x2534      	ADDWF       FARG_ByteToStr_output, 0, 1
0x01FC	0x6EE1      	MOVWF       FSR1L 
0x01FE	0x0E00      	MOVLW       0
0x0200	0x2135      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0202	0x6EE2      	MOVWF       FSR1H 
0x0204	0x6AE6      	CLRF        POSTINC1 
0x0206	0x0736      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x0208	0x5136      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x020A	0x2534      	ADDWF       FARG_ByteToStr_output, 0, 1
0x020C	0x6F37      	MOVWF       FLOC__ByteToStr, 1
0x020E	0x0E00      	MOVLW       0
0x0210	0x2135      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0212	0x6F38      	MOVWF       FLOC__ByteToStr+1, 1
0x0214	0x0E0A      	MOVLW       10
0x0216	0x6E04      	MOVWF       R4 
0x0218	0xF000C433  	MOVFF       FARG_ByteToStr_input, R0
0x021C	0xDFCF      	RCALL       _Div_8x8_U
0x021E	0xF000C008  	MOVFF       R8, R0
0x0222	0x0E30      	MOVLW       48
0x0224	0x2600      	ADDWF       R0, 1 
0x0226	0xFFE1C437  	MOVFF       FLOC__ByteToStr, FSR1L
0x022A	0xFFE2C438  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x022E	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x0232	0x0E0A      	MOVLW       10
0x0234	0x6E04      	MOVWF       R4 
0x0236	0xF000C433  	MOVFF       FARG_ByteToStr_input, R0
0x023A	0xDFC0      	RCALL       _Div_8x8_U
0x023C	0xF433C000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x0240	0x5000      	MOVF        R0, 0 
0x0242	0x0A00      	XORLW       0
0x0244	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x0246	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x0248	0x0736      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,80 :: 		
0x024A	0xD7DE      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x024C	0x0012      	RETURN      0
; end of _ByteToStr
_memcpy:
;__Lib_CString.c,44 :: 		
;__Lib_CString.c,48 :: 		
0x024E	0xF004C435  	MOVFF       FARG_memcpy_s1, R4
0x0252	0xF005C436  	MOVFF       FARG_memcpy_s1+1, R5
;__Lib_CString.c,49 :: 		
0x0256	0xF002C433  	MOVFF       FARG_memcpy_d1, R2
0x025A	0xF003C434  	MOVFF       FARG_memcpy_d1+1, R3
;__Lib_CString.c,50 :: 		
L_memcpy7:
0x025E	0xF000C437  	MOVFF       FARG_memcpy_n, R0
0x0262	0xF001C438  	MOVFF       FARG_memcpy_n+1, R1
0x0266	0x0E01      	MOVLW       1
0x0268	0x0104      	MOVLB       4
0x026A	0x5F37      	SUBWF       FARG_memcpy_n, 1, 1
0x026C	0x0E00      	MOVLW       0
0x026E	0x5B38      	SUBWFB      FARG_memcpy_n+1, 1, 1
0x0270	0x5000      	MOVF        R0, 0 
0x0272	0x1001      	IORWF       R1, 0 
0x0274	0xE00F      	BZ          L_memcpy8
;__Lib_CString.c,51 :: 		
0x0276	0xFFE9C004  	MOVFF       R4, FSR0L
0x027A	0xFFEAC005  	MOVFF       R5, FSR0H
0x027E	0xFFE1C002  	MOVFF       R2, FSR1L
0x0282	0xFFE2C003  	MOVFF       R3, FSR1H
0x0286	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x028A	0x4A02      	INFSNZ      R2, 1 
0x028C	0x2A03      	INCF        R3, 1 
0x028E	0x4A04      	INFSNZ      R4, 1 
0x0290	0x2A05      	INCF        R5, 1 
0x0292	0xD7E5      	BRA         L_memcpy7
L_memcpy8:
;__Lib_CString.c,53 :: 		
0x0294	0xF000C433  	MOVFF       FARG_memcpy_d1, R0
0x0298	0xF001C434  	MOVFF       FARG_memcpy_d1+1, R1
;__Lib_CString.c,54 :: 		
L_end_memcpy:
0x029C	0x0012      	RETURN      0
; end of _memcpy
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x029E	0x0E03      	MOVLW       3
0x02A0	0x6E0D      	MOVWF       R13, 0
L_Delay_1us0:
0x02A2	0x2E0D      	DECFSZ      R13, 1, 0
0x02A4	0xD7FE      	BRA         L_Delay_1us0
;__Lib_Delays.c,9 :: 		}
0x02A6	0x0012      	RETURN      0
; end of _Delay_1us
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x02A8	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1174 :: 		
0x02AA	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1175 :: 		
0x02AC	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1176 :: 		
0x02AE	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1178 :: 		
0x02B0	0x6A0E      	CLRF        R14, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1180 :: 		
0x02B2	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x02B4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x02B6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x02B8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x02BA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x02BC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x02BE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x02C0	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x02C2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x02C4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x02C6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x02C8	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x02CA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x02CC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x02CE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x02D0	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x02D2	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1198 :: 		
0x02D4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x02D6	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x02D8	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x02DA	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x02DC	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x02DE	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x02E0	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x02E2	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x02E4	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x02E6	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x02E8	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x02EA	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x02EC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x02EE	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x02F0	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x02F2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x02F4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x02F6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x02F8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x02FA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x02FC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x02FE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x0300	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x0302	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x0304	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x0306	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x0308	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x030A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x030C	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1231 :: 		
0x030E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x0310	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x0312	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x0314	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x0316	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x0318	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x031A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x031C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x031E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x0320	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x0322	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x0324	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x0326	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x0328	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x032A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x032C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x032E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x0330	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1251 :: 		
0x0332	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x0334	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x0336	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x0338	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x033A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x033C	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x033E	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x0340	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x0342	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x0344	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x0346	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x0348	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x034A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x034C	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x034E	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x0350	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x0352	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x0354	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x0356	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x0358	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x035A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x035C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x035E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x0360	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x0362	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x0364	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x0366	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x0368	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x036A	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1285 :: 		
0x036C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x036E	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x0370	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x0372	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x0374	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x0376	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x0378	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x037A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x037C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x037E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x0380	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x0382	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x0384	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x0386	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x0388	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x038A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x038C	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x038E	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1305 :: 		
0x0390	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x0392	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x0394	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x0396	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x0398	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x039A	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x039C	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x039E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x03A0	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x03A2	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x03A4	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x03A6	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x03A8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x03AA	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x03AC	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x03AE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x03B0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x03B2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x03B4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x03B6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x03B8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x03BA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x03BC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x03BE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x03C0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x03C2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x03C4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x03C6	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x03C8	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1340 :: 		
0x03CA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x03CC	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x03CE	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x03D0	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x03D2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x03D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x03D6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x03D8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x03DA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x03DC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x03DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x03E0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x03E2	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x03E4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x03E6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x03E8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x03EA	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x03EC	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1360 :: 		
0x03EE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x03F0	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x03F2	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x03F4	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x03F6	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x03F8	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x03FA	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x03FC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x03FE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x0400	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x0402	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x0404	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x0406	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x0408	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x040A	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x040C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x040E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x0410	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x0412	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x0414	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x0416	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x0418	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x041A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x041C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x041E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x0420	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x0422	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x0424	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x0426	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1394 :: 		
0x0428	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x042A	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x042C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x042E	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x0430	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x0432	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x0434	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x0436	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x0438	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x043A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x043C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x043E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x0440	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x0442	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x0444	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x0446	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x0448	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x044A	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1414 :: 		
0x044C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x044E	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x0450	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x0452	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x0454	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x0456	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x0458	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x045A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x045C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x045E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x0460	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x0462	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x0464	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x0466	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x0468	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x046A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x046C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x046E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x0470	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x0472	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x0474	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x0476	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x0478	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x047A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x047C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x047E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x0480	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x0482	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x0484	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1449 :: 		
0x0486	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x0488	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x048A	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x048C	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x048E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x0490	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x0492	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x0494	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x0496	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x0498	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x049A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x049C	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x049E	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x04A0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x04A2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x04A4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x04A6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x04A8	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1469 :: 		
0x04AA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x04AC	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x04AE	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x04B0	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x04B2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x04B4	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x04B6	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x04B8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x04BA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x04BC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x04BE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x04C0	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x04C2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x04C4	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x04C6	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x04C8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x04CA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x04CC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x04CE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x04D0	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x04D2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x04D4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x04D6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x04D8	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x04DA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x04DC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x04DE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x04E0	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x04E2	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1503 :: 		
0x04E4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x04E6	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x04E8	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x04EA	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x04EC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x04EE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x04F0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x04F2	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x04F4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x04F6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x04F8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x04FA	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x04FC	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x04FE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x0500	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x0502	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x0504	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x0506	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1523 :: 		
0x0508	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x050A	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x050C	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x050E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x0510	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x0512	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x0514	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x0516	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x0518	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x051A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x051C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x051E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x0520	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x0522	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x0524	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x0526	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x0528	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x052A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x052C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x052E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x0530	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x0532	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x0534	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x0536	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x0538	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x053A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x053C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x053E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x0540	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1558 :: 		
0x0542	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x0544	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x0546	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x0548	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x054A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x054C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x054E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x0550	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x0552	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x0554	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x0556	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x0558	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x055A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x055C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x055E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x0560	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x0562	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x0564	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1578 :: 		
0x0566	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x0568	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x056A	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x056C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x056E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x0570	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x0572	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x0574	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x0576	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x0578	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x057A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x057C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x057E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x0580	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x0582	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x0584	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x0586	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x0588	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x058A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x058C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x058E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x0590	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x0592	0x0012      	RETURN      0
; end of _Div_32x32_U
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0594	0x0EA6      	MOVLW       166
0x0596	0x6E0D      	MOVWF       R13, 0
L_Delay_50us3:
0x0598	0x2E0D      	DECFSZ      R13, 1, 0
0x059A	0xD7FE      	BRA         L_Delay_50us3
0x059C	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
0x059E	0x0012      	RETURN      0
; end of _Delay_50us
_UART_Write:
;__Lib_UART_c67.c,119 :: 		
;__Lib_UART_c67.c,120 :: 		
0x05A0	0xFFE1C128  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x05A4	0xFFE2C129  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x05A8	0xFFE6C433  	MOVFF       FARG_UART_Write__data, POSTINC1
0x05AC	0xF000C126  	MOVFF       _UART_Wr_Ptr, R0
0x05B0	0xF001C127  	MOVFF       _UART_Wr_Ptr+1, R1
0x05B4	0xDDF7      	RCALL       _____DoIFC
;__Lib_UART_c67.c,121 :: 		
L_end_UART_Write:
0x05B6	0x0012      	RETURN      0
; end of _UART_Write
_SetOverloadParams:
;FirmV_0_7_0.c,2121 :: 		void SetOverloadParams(char p)
;FirmV_0_7_0.c,2124 :: 		switch(p)
0x05B8	0xD04E      	BRA         L_SetOverloadParams510
;FirmV_0_7_0.c,2126 :: 		case 0: OverloadTreshold=0;OverloadDuration=255; break;
L_SetOverloadParams512:
0x05BA	0x0101      	MOVLB       1
0x05BC	0x6B08      	CLRF        _OverloadTreshold, 1
0x05BE	0x6B09      	CLRF        _OverloadTreshold+1, 1
0x05C0	0x0EFF      	MOVLW       255
0x05C2	0x6F07      	MOVWF       _OverloadDuration, 1
0x05C4	0xD067      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2128 :: 		case 1: OverloadTreshold=400;OverloadDuration=200; break;
L_SetOverloadParams513:
0x05C6	0x0101      	MOVLB       1
0x05C8	0x0E90      	MOVLW       144
0x05CA	0x6F08      	MOVWF       _OverloadTreshold, 1
0x05CC	0x0E01      	MOVLW       1
0x05CE	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x05D0	0x0EC8      	MOVLW       200
0x05D2	0x6F07      	MOVWF       _OverloadDuration, 1
0x05D4	0xD05F      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2130 :: 		case 2: OverloadTreshold=450;OverloadDuration=150; break;
L_SetOverloadParams514:
0x05D6	0x0101      	MOVLB       1
0x05D8	0x0EC2      	MOVLW       194
0x05DA	0x6F08      	MOVWF       _OverloadTreshold, 1
0x05DC	0x0E01      	MOVLW       1
0x05DE	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x05E0	0x0E96      	MOVLW       150
0x05E2	0x6F07      	MOVWF       _OverloadDuration, 1
0x05E4	0xD057      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2132 :: 		case 3: OverloadTreshold=500;OverloadDuration=100; break;
L_SetOverloadParams515:
0x05E6	0x0101      	MOVLB       1
0x05E8	0x0EF4      	MOVLW       244
0x05EA	0x6F08      	MOVWF       _OverloadTreshold, 1
0x05EC	0x0E01      	MOVLW       1
0x05EE	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x05F0	0x0E64      	MOVLW       100
0x05F2	0x6F07      	MOVWF       _OverloadDuration, 1
0x05F4	0xD04F      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2134 :: 		case 4: OverloadTreshold=550;OverloadDuration=80; break;
L_SetOverloadParams516:
0x05F6	0x0101      	MOVLB       1
0x05F8	0x0E26      	MOVLW       38
0x05FA	0x6F08      	MOVWF       _OverloadTreshold, 1
0x05FC	0x0E02      	MOVLW       2
0x05FE	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0600	0x0E50      	MOVLW       80
0x0602	0x6F07      	MOVWF       _OverloadDuration, 1
0x0604	0xD047      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2136 :: 		case 5: OverloadTreshold=600;OverloadDuration=150; break;
L_SetOverloadParams517:
0x0606	0x0101      	MOVLB       1
0x0608	0x0E58      	MOVLW       88
0x060A	0x6F08      	MOVWF       _OverloadTreshold, 1
0x060C	0x0E02      	MOVLW       2
0x060E	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0610	0x0E96      	MOVLW       150
0x0612	0x6F07      	MOVWF       _OverloadDuration, 1
0x0614	0xD03F      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2138 :: 		case 6: OverloadTreshold=600;OverloadDuration=100; break;
L_SetOverloadParams518:
0x0616	0x0101      	MOVLB       1
0x0618	0x0E58      	MOVLW       88
0x061A	0x6F08      	MOVWF       _OverloadTreshold, 1
0x061C	0x0E02      	MOVLW       2
0x061E	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0620	0x0E64      	MOVLW       100
0x0622	0x6F07      	MOVWF       _OverloadDuration, 1
0x0624	0xD037      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2140 :: 		case 7: OverloadTreshold=600;OverloadDuration=50; break;
L_SetOverloadParams519:
0x0626	0x0101      	MOVLB       1
0x0628	0x0E58      	MOVLW       88
0x062A	0x6F08      	MOVWF       _OverloadTreshold, 1
0x062C	0x0E02      	MOVLW       2
0x062E	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0630	0x0E32      	MOVLW       50
0x0632	0x6F07      	MOVWF       _OverloadDuration, 1
0x0634	0xD02F      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2142 :: 		case 8: OverloadTreshold=700;OverloadDuration=100; break;
L_SetOverloadParams520:
0x0636	0x0101      	MOVLB       1
0x0638	0x0EBC      	MOVLW       188
0x063A	0x6F08      	MOVWF       _OverloadTreshold, 1
0x063C	0x0E02      	MOVLW       2
0x063E	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0640	0x0E64      	MOVLW       100
0x0642	0x6F07      	MOVWF       _OverloadDuration, 1
0x0644	0xD027      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2144 :: 		case 9: OverloadTreshold=700;OverloadDuration=50; break;
L_SetOverloadParams521:
0x0646	0x0101      	MOVLB       1
0x0648	0x0EBC      	MOVLW       188
0x064A	0x6F08      	MOVWF       _OverloadTreshold, 1
0x064C	0x0E02      	MOVLW       2
0x064E	0x6F09      	MOVWF       _OverloadTreshold+1, 1
0x0650	0x0E32      	MOVLW       50
0x0652	0x6F07      	MOVWF       _OverloadDuration, 1
0x0654	0xD01F      	BRA         L_SetOverloadParams511
;FirmV_0_7_0.c,2146 :: 		}
L_SetOverloadParams510:
0x0656	0x0104      	MOVLB       4
0x0658	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x065A	0x0A00      	XORLW       0
0x065C	0xE0AE      	BZ          L_SetOverloadParams512
0x065E	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0660	0x0A01      	XORLW       1
0x0662	0xE0B1      	BZ          L_SetOverloadParams513
0x0664	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0666	0x0A02      	XORLW       2
0x0668	0xE0B6      	BZ          L_SetOverloadParams514
0x066A	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x066C	0x0A03      	XORLW       3
0x066E	0xE0BB      	BZ          L_SetOverloadParams515
0x0670	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0672	0x0A04      	XORLW       4
0x0674	0xE0C0      	BZ          L_SetOverloadParams516
0x0676	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0678	0x0A05      	XORLW       5
0x067A	0xE0C5      	BZ          L_SetOverloadParams517
0x067C	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x067E	0x0A06      	XORLW       6
0x0680	0xE0CA      	BZ          L_SetOverloadParams518
0x0682	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0684	0x0A07      	XORLW       7
0x0686	0xE0CF      	BZ          L_SetOverloadParams519
0x0688	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x068A	0x0A08      	XORLW       8
0x068C	0xE0D4      	BZ          L_SetOverloadParams520
0x068E	0x5133      	MOVF        FARG_SetOverloadParams_p, 0, 1
0x0690	0x0A09      	XORLW       9
0x0692	0xE0D9      	BZ          L_SetOverloadParams521
L_SetOverloadParams511:
;FirmV_0_7_0.c,2147 :: 		}
0x0694	0x0012      	RETURN      0
; end of _SetOverloadParams
_EEPROM_Write:
;__Lib_EEPROM_256.c,21 :: 		
;__Lib_EEPROM_256.c,24 :: 		
L_EEPROM_Write0:
0x0696	0xA2A6      	BTFSS       EECON1, 1 
0x0698	0xD002      	BRA         L_EEPROM_Write1
;__Lib_EEPROM_256.c,25 :: 		
0x069A	0x0000      	NOP
0x069C	0xD7FC      	BRA         L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_256.c,26 :: 		
0x069E	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,27 :: 		
0x06A0	0xFFA9C433  	MOVFF       FARG_EEPROM_Write_address, EEADR
;__Lib_EEPROM_256.c,28 :: 		
0x06A4	0xFFA8C434  	MOVFF       FARG_EEPROM_Write_data_, EEDATA
;__Lib_EEPROM_256.c,29 :: 		
0x06A8	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,30 :: 		
0x06AA	0x84A6      	BSF         EECON1, 2 
;__Lib_EEPROM_256.c,32 :: 		
0x06AC	0xF000CFF2  	MOVFF       INTCON, R0
;__Lib_EEPROM_256.c,35 :: 		
0x06B0	0x9EF2      	BCF         INTCON, 7 
;__Lib_EEPROM_256.c,36 :: 		
0x06B2	0x0E55      	MOVLW       85
0x06B4	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,37 :: 		
0x06B6	0x0EAA      	MOVLW       170
0x06B8	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,38 :: 		
0x06BA	0x82A6      	BSF         EECON1, 1 
;__Lib_EEPROM_256.c,42 :: 		
0x06BC	0xBE00      	BTFSC       R0, 7 
0x06BE	0xD002      	BRA         L__EEPROM_Write4
0x06C0	0x9EF2      	BCF         INTCON, 7 
0x06C2	0xD001      	BRA         L__EEPROM_Write5
L__EEPROM_Write4:
0x06C4	0x8EF2      	BSF         INTCON, 7 
L__EEPROM_Write5:
;__Lib_EEPROM_256.c,44 :: 		
0x06C6	0x94A6      	BCF         EECON1, 2 
;__Lib_EEPROM_256.c,46 :: 		
L_end_EEPROM_Write:
0x06C8	0x0012      	RETURN      0
; end of _EEPROM_Write
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x06CA	0x0E48      	MOVLW       72
0x06CC	0x6E0C      	MOVWF       R12, 0
0x06CE	0x0E6C      	MOVLW       108
0x06D0	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us6:
0x06D2	0x2E0D      	DECFSZ      R13, 1, 0
0x06D4	0xD7FE      	BRA         L_Delay_5500us6
0x06D6	0x2E0C      	DECFSZ      R12, 1, 0
0x06D8	0xD7FC      	BRA         L_Delay_5500us6
0x06DA	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
0x06DC	0x0012      	RETURN      0
; end of _Delay_5500us
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x06DE	0x0104      	MOVLB       4
0x06E0	0x6B37      	CLRF        WordToStr_len_L0, 1
L_WordToStr6:
0x06E2	0x0E05      	MOVLW       5
0x06E4	0x5D37      	SUBWF       WordToStr_len_L0, 0, 1
0x06E6	0xE20A      	BC          L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x06E8	0x5137      	MOVF        WordToStr_len_L0, 0, 1
0x06EA	0x2535      	ADDWF       FARG_WordToStr_output, 0, 1
0x06EC	0x6EE1      	MOVWF       FSR1L 
0x06EE	0x0E00      	MOVLW       0
0x06F0	0x2136      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x06F2	0x6EE2      	MOVWF       FSR1H 
0x06F4	0x0E20      	MOVLW       32
0x06F6	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x06F8	0x2B37      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,90 :: 		
0x06FA	0xD7F3      	BRA         L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x06FC	0x5137      	MOVF        WordToStr_len_L0, 0, 1
0x06FE	0x2535      	ADDWF       FARG_WordToStr_output, 0, 1
0x0700	0x6EE1      	MOVWF       FSR1L 
0x0702	0x0E00      	MOVLW       0
0x0704	0x2136      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0706	0x6EE2      	MOVWF       FSR1H 
0x0708	0x6AE6      	CLRF        POSTINC1 
0x070A	0x0737      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x070C	0x5137      	MOVF        WordToStr_len_L0, 0, 1
0x070E	0x2535      	ADDWF       FARG_WordToStr_output, 0, 1
0x0710	0x6F38      	MOVWF       FLOC__WordToStr, 1
0x0712	0x0E00      	MOVLW       0
0x0714	0x2136      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0716	0x6F39      	MOVWF       FLOC__WordToStr+1, 1
0x0718	0x0E0A      	MOVLW       10
0x071A	0x6E04      	MOVWF       R4 
0x071C	0x0E00      	MOVLW       0
0x071E	0x6E05      	MOVWF       R5 
0x0720	0xF000C433  	MOVFF       FARG_WordToStr_input, R0
0x0724	0xF001C434  	MOVFF       FARG_WordToStr_input+1, R1
0x0728	0xDD22      	RCALL       _Div_16x16_U
0x072A	0xF000C008  	MOVFF       R8, R0
0x072E	0xF001C009  	MOVFF       R9, R1
0x0732	0x0E30      	MOVLW       48
0x0734	0x2600      	ADDWF       R0, 1 
0x0736	0xFFE1C438  	MOVFF       FLOC__WordToStr, FSR1L
0x073A	0xFFE2C439  	MOVFF       FLOC__WordToStr+1, FSR1H
0x073E	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,95 :: 		
0x0742	0x0E0A      	MOVLW       10
0x0744	0x6E04      	MOVWF       R4 
0x0746	0x0E00      	MOVLW       0
0x0748	0x6E05      	MOVWF       R5 
0x074A	0xF000C433  	MOVFF       FARG_WordToStr_input, R0
0x074E	0xF001C434  	MOVFF       FARG_WordToStr_input+1, R1
0x0752	0xDD0D      	RCALL       _Div_16x16_U
0x0754	0xF433C000  	MOVFF       R0, FARG_WordToStr_input
0x0758	0xF434C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x075C	0x0E00      	MOVLW       0
0x075E	0x1801      	XORWF       R1, 0 
0x0760	0xE102      	BNZ         L__WordToStr109
0x0762	0x0E00      	MOVLW       0
0x0764	0x1800      	XORWF       R0, 0 
L__WordToStr109:
0x0766	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x0768	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x076A	0x0737      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,99 :: 		
0x076C	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x076E	0x0012      	RETURN      0
; end of _WordToStr
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0770	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,448 :: 		
0x0772	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,449 :: 		
0x0774	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,450 :: 		
0x0776	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0778	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,453 :: 		
0x077A	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x077E	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0782	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0784	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,458 :: 		
0x0786	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x078A	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x078E	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0790	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,463 :: 		
0x0792	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0794	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0796	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0798	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x079A	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,468 :: 		
0x079C	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x079E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x07A0	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,472 :: 		
0x07A2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x07A4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x07A6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x07A8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x07AA	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,477 :: 		
0x07AC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x07AE	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x07B2	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x07B6	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x07BA	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x07BE	0x0012      	RETURN      0
; end of _Mul_16x16_U
_LongWordToStrWithZeros:
;__Lib_Conversions.c,226 :: 		
;__Lib_Conversions.c,229 :: 		
0x07C0	0x0104      	MOVLB       4
0x07C2	0x6B2D      	CLRF        LongWordToStrWithZeros_len_L0, 1
L_LongWordToStrWithZeros44:
0x07C4	0x0E0A      	MOVLW       10
0x07C6	0x5D2D      	SUBWF       LongWordToStrWithZeros_len_L0, 0, 1
0x07C8	0xE20A      	BC          L_LongWordToStrWithZeros45
;__Lib_Conversions.c,230 :: 		
0x07CA	0x512D      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x07CC	0x252B      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x07CE	0x6EE1      	MOVWF       FSR1L 
0x07D0	0x0E00      	MOVLW       0
0x07D2	0x212C      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x07D4	0x6EE2      	MOVWF       FSR1H 
0x07D6	0x0E30      	MOVLW       48
0x07D8	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,229 :: 		
0x07DA	0x2B2D      	INCF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,230 :: 		
0x07DC	0xD7F3      	BRA         L_LongWordToStrWithZeros44
L_LongWordToStrWithZeros45:
;__Lib_Conversions.c,231 :: 		
0x07DE	0x512D      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x07E0	0x252B      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x07E2	0x6EE1      	MOVWF       FSR1L 
0x07E4	0x0E00      	MOVLW       0
0x07E6	0x212C      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x07E8	0x6EE2      	MOVWF       FSR1H 
0x07EA	0x6AE6      	CLRF        POSTINC1 
0x07EC	0x072D      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,233 :: 		
L_LongWordToStrWithZeros47:
0x07EE	0x0E00      	MOVLW       0
0x07F0	0x6E00      	MOVWF       R0 
0x07F2	0x192A      	XORWF       FARG_LongWordToStrWithZeros_input+3, 0, 1
0x07F4	0xE108      	BNZ         L__LongWordToStrWithZeros125
0x07F6	0x5000      	MOVF        R0, 0 
0x07F8	0x1929      	XORWF       FARG_LongWordToStrWithZeros_input+2, 0, 1
0x07FA	0xE105      	BNZ         L__LongWordToStrWithZeros125
0x07FC	0x5000      	MOVF        R0, 0 
0x07FE	0x1928      	XORWF       FARG_LongWordToStrWithZeros_input+1, 0, 1
0x0800	0xE102      	BNZ         L__LongWordToStrWithZeros125
0x0802	0x5127      	MOVF        FARG_LongWordToStrWithZeros_input, 0, 1
0x0804	0x0A00      	XORLW       0
L__LongWordToStrWithZeros125:
0x0806	0xE03E      	BZ          L_LongWordToStrWithZeros48
;__Lib_Conversions.c,234 :: 		
0x0808	0x512D      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x080A	0x252B      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x080C	0x6F2E      	MOVWF       FLOC__LongWordToStrWithZeros, 1
0x080E	0x0E00      	MOVLW       0
0x0810	0x212C      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x0812	0x6F2F      	MOVWF       FLOC__LongWordToStrWithZeros+1, 1
0x0814	0x0E0A      	MOVLW       10
0x0816	0x6E04      	MOVWF       R4 
0x0818	0x0E00      	MOVLW       0
0x081A	0x6E05      	MOVWF       R5 
0x081C	0x6E06      	MOVWF       R6 
0x081E	0x6E07      	MOVWF       R7 
0x0820	0xF000C427  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x0824	0xF001C428  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x0828	0xF002C429  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x082C	0xF003C42A  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0830	0xDD3B      	RCALL       _Div_32x32_U
0x0832	0xF000C008  	MOVFF       R8, R0
0x0836	0xF001C009  	MOVFF       R9, R1
0x083A	0xF002C00A  	MOVFF       R10, R2
0x083E	0xF003C00B  	MOVFF       R11, R3
0x0842	0x0E30      	MOVLW       48
0x0844	0x2600      	ADDWF       R0, 1 
0x0846	0xFFE1C42E  	MOVFF       FLOC__LongWordToStrWithZeros, FSR1L
0x084A	0xFFE2C42F  	MOVFF       FLOC__LongWordToStrWithZeros+1, FSR1H
0x084E	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0852	0x072D      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,235 :: 		
0x0854	0x0E0A      	MOVLW       10
0x0856	0x6E04      	MOVWF       R4 
0x0858	0x0E00      	MOVLW       0
0x085A	0x6E05      	MOVWF       R5 
0x085C	0x6E06      	MOVWF       R6 
0x085E	0x6E07      	MOVWF       R7 
0x0860	0xF000C427  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x0864	0xF001C428  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x0868	0xF002C429  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x086C	0xF003C42A  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0870	0xDD1B      	RCALL       _Div_32x32_U
0x0872	0xF427C000  	MOVFF       R0, FARG_LongWordToStrWithZeros_input
0x0876	0xF428C001  	MOVFF       R1, FARG_LongWordToStrWithZeros_input+1
0x087A	0xF429C002  	MOVFF       R2, FARG_LongWordToStrWithZeros_input+2
0x087E	0xF42AC003  	MOVFF       R3, FARG_LongWordToStrWithZeros_input+3
;__Lib_Conversions.c,236 :: 		
0x0882	0xD7B5      	BRA         L_LongWordToStrWithZeros47
L_LongWordToStrWithZeros48:
;__Lib_Conversions.c,237 :: 		
L_end_LongWordToStrWithZeros:
0x0884	0x0012      	RETURN      0
; end of _LongWordToStrWithZeros
_intValueToStr:
;FirmV_0_7_0.c,2102 :: 		void intValueToStr(unsigned val, char * string)
;FirmV_0_7_0.c,2104 :: 		wordtostr(val>>1,string);
0x0886	0xF433C427  	MOVFF       FARG_intValueToStr_val, FARG_WordToStr_input
0x088A	0xF434C428  	MOVFF       FARG_intValueToStr_val+1, FARG_WordToStr_input+1
0x088E	0x0104      	MOVLB       4
0x0890	0x3334      	RRCF        FARG_WordToStr_input+1, 1, 1
0x0892	0x3333      	RRCF        FARG_WordToStr_input, 1, 1
0x0894	0x9F34      	BCF         FARG_WordToStr_input+1, 7, 1
0x0896	0xF435C429  	MOVFF       FARG_intValueToStr_string, FARG_WordToStr_output
0x089A	0xF436C42A  	MOVFF       FARG_intValueToStr_string+1, FARG_WordToStr_output+1
0x089E	0xDF1F      	RCALL       _WordToStr
;FirmV_0_7_0.c,2105 :: 		if((val%2)==1)
0x08A0	0x0E01      	MOVLW       1
0x08A2	0x1527      	ANDWF       FARG_intValueToStr_val, 0, 1
0x08A4	0x6E01      	MOVWF       R1 
0x08A6	0xF002C428  	MOVFF       FARG_intValueToStr_val+1, R2
0x08AA	0x0E00      	MOVLW       0
0x08AC	0x1602      	ANDWF       R2, 1 
0x08AE	0x0E00      	MOVLW       0
0x08B0	0x1802      	XORWF       R2, 0 
0x08B2	0xE102      	BNZ         L__intValueToStr643
0x08B4	0x0E01      	MOVLW       1
0x08B6	0x1801      	XORWF       R1, 0 
L__intValueToStr643:
0x08B8	0xE117      	BNZ         L_intValueToStr508
;FirmV_0_7_0.c,2106 :: 		memcpy(string+5,".5s",4);
0x08BA	0x0E05      	MOVLW       5
0x08BC	0x2529      	ADDWF       FARG_intValueToStr_string, 0, 1
0x08BE	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x08C0	0x0E00      	MOVLW       0
0x08C2	0x212A      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x08C4	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x08C6	0x0E2E      	MOVLW       46
0x08C8	0x6F2B      	MOVWF       ?lstr106_FirmV_0_7_0, 1
0x08CA	0x0E35      	MOVLW       53
0x08CC	0x6F2C      	MOVWF       ?lstr106_FirmV_0_7_0+1, 1
0x08CE	0x0E73      	MOVLW       115
0x08D0	0x6F2D      	MOVWF       ?lstr106_FirmV_0_7_0+2, 1
0x08D2	0x6B2E      	CLRF        ?lstr106_FirmV_0_7_0+3, 1
0x08D4	0x0E2B      	MOVLW       ?lstr106_FirmV_0_7_0
0x08D6	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x08D8	0x0E04      	MOVLW       hi_addr(?lstr106_FirmV_0_7_0)
0x08DA	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x08DC	0x0E04      	MOVLW       4
0x08DE	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x08E0	0x0E00      	MOVLW       0
0x08E2	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x08E4	0xDCB4      	RCALL       _memcpy
0x08E6	0xD016      	BRA         L_intValueToStr509
L_intValueToStr508:
;FirmV_0_7_0.c,2108 :: 		memcpy(string+5,"s  ",4);
0x08E8	0x0E05      	MOVLW       5
0x08EA	0x2529      	ADDWF       FARG_intValueToStr_string, 0, 1
0x08EC	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x08EE	0x0E00      	MOVLW       0
0x08F0	0x212A      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x08F2	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x08F4	0x0E73      	MOVLW       115
0x08F6	0x6F2F      	MOVWF       ?lstr107_FirmV_0_7_0, 1
0x08F8	0x0E20      	MOVLW       32
0x08FA	0x6F30      	MOVWF       ?lstr107_FirmV_0_7_0+1, 1
0x08FC	0x0E20      	MOVLW       32
0x08FE	0x6F31      	MOVWF       ?lstr107_FirmV_0_7_0+2, 1
0x0900	0x6B32      	CLRF        ?lstr107_FirmV_0_7_0+3, 1
0x0902	0x0E2F      	MOVLW       ?lstr107_FirmV_0_7_0
0x0904	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0906	0x0E04      	MOVLW       hi_addr(?lstr107_FirmV_0_7_0)
0x0908	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x090A	0x0E04      	MOVLW       4
0x090C	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x090E	0x0E00      	MOVLW       0
0x0910	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0912	0xDC9D      	RCALL       _memcpy
L_intValueToStr509:
;FirmV_0_7_0.c,2109 :: 		}
0x0914	0x0012      	RETURN      0
; end of _intValueToStr
_UART_Write_Text:
;__Lib_UART_c67.c,123 :: 		
;__Lib_UART_c67.c,124 :: 		
0x0916	0x0104      	MOVLB       4
0x0918	0x6B2A      	CLRF        UART_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,126 :: 		
0x091A	0xFFE9C427  	MOVFF       FARG_UART_Write_Text_uart_text, FSR0L
0x091E	0xFFEAC428  	MOVFF       FARG_UART_Write_Text_uart_text+1, FSR0H
0x0922	0xF429CFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,127 :: 		
L_UART_Write_Text16:
0x0926	0x5129      	MOVF        UART_Write_Text_data__L0, 0, 1
0x0928	0x0A00      	XORLW       0
0x092A	0xE00E      	BZ          L_UART_Write_Text17
;__Lib_UART_c67.c,128 :: 		
0x092C	0xF433C429  	MOVFF       UART_Write_Text_data__L0, FARG_UART_Write__data
0x0930	0xDE37      	RCALL       _UART_Write
;__Lib_UART_c67.c,129 :: 		
0x0932	0x0104      	MOVLB       4
0x0934	0x2B2A      	INCF        UART_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,130 :: 		
0x0936	0x512A      	MOVF        UART_Write_Text_counter_L0, 0, 1
0x0938	0x2527      	ADDWF       FARG_UART_Write_Text_uart_text, 0, 1
0x093A	0x6EE9      	MOVWF       FSR0L 
0x093C	0x0E00      	MOVLW       0
0x093E	0x2128      	ADDWFC      FARG_UART_Write_Text_uart_text+1, 0, 1
0x0940	0x6EEA      	MOVWF       FSR0H 
0x0942	0xF429CFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,131 :: 		
0x0946	0xD7EF      	BRA         L_UART_Write_Text16
L_UART_Write_Text17:
;__Lib_UART_c67.c,132 :: 		
L_end_UART_Write_Text:
0x0948	0x0012      	RETURN      0
; end of _UART_Write_Text
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x094A	0x0E49      	MOVLW       73
0x094C	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x094E	0x2E0D      	DECFSZ      R13, 1, 0
0x0950	0xD7FE      	BRA         L_Delay_22us2
;__Lib_Delays.c,17 :: 		}
0x0952	0x0012      	RETURN      0
; end of _Delay_22us
_EEPROM_Read:
;__Lib_EEPROM_256.c,7 :: 		
;__Lib_EEPROM_256.c,9 :: 		
0x0954	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,10 :: 		
0x0956	0xFFA9C427  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_256.c,11 :: 		
0x095A	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,12 :: 		
0x095C	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_256.c,14 :: 		
0x095E	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_256.c,16 :: 		
L_end_EEPROM_Read:
0x0962	0x0012      	RETURN      0
; end of _EEPROM_Read
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0964	0x0104      	MOVLB       4
0x0966	0xBF27      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0968	0xD002      	BRA         L__Lcd_Cmd21
0x096A	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x096C	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x096E	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0970	0xBD27      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0972	0xD002      	BRA         L__Lcd_Cmd23
0x0974	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0976	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0978	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x097A	0xBB27      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x097C	0xD002      	BRA         L__Lcd_Cmd25
0x097E	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0980	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0982	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0984	0xB927      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0986	0xD002      	BRA         L__Lcd_Cmd27
0x0988	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x098A	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x098C	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x098E	0x0101      	MOVLB       1
0x0990	0xB10A      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0992	0xD002      	BRA         L__Lcd_Cmd29
0x0994	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0996	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0998	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x099A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x099C	0xDC80      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x099E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x09A0	0x0104      	MOVLB       4
0x09A2	0xB727      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x09A4	0xD002      	BRA         L__Lcd_Cmd31
0x09A6	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x09A8	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x09AA	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x09AC	0xB527      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x09AE	0xD002      	BRA         L__Lcd_Cmd33
0x09B0	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x09B2	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x09B4	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x09B6	0xB327      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x09B8	0xD002      	BRA         L__Lcd_Cmd35
0x09BA	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x09BC	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x09BE	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x09C0	0xB127      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x09C2	0xD002      	BRA         L__Lcd_Cmd37
0x09C4	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x09C6	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x09C8	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x09CA	0x0101      	MOVLB       1
0x09CC	0xB10A      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x09CE	0xD002      	BRA         L__Lcd_Cmd39
0x09D0	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x09D2	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x09D4	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x09D6	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x09D8	0xDC62      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x09DA	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x09DC	0xA10A      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x09DE	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x09E0	0xDE74      	RCALL       _Delay_5500us
0x09E2	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x09E4	0xDDD7      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x09E6	0x0012      	RETURN      0
; end of _Lcd_Cmd
_SaveConfigs:
;FirmV_0_7_0.c,1519 :: 		void SaveConfigs()
;FirmV_0_7_0.c,1522 :: 		EEPROM_Write(1,Door1OpenTime);
0x09E8	0x0E01      	MOVLW       1
0x09EA	0x0104      	MOVLB       4
0x09EC	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x09EE	0xF434C117  	MOVFF       _Door1OpenTime, FARG_EEPROM_Write_data_
0x09F2	0xDE51      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1523 :: 		EEPROM_Write(2,Door2OpenTime);
0x09F4	0x0E02      	MOVLW       2
0x09F6	0x0104      	MOVLB       4
0x09F8	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x09FA	0xF434C10D  	MOVFF       _Door2OpenTime, FARG_EEPROM_Write_data_
0x09FE	0xDE4B      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1524 :: 		EEPROM_Write(3,Door1CloseTime);
0x0A00	0x0E03      	MOVLW       3
0x0A02	0x0104      	MOVLB       4
0x0A04	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A06	0xF434C10C  	MOVFF       _Door1CloseTime, FARG_EEPROM_Write_data_
0x0A0A	0xDE45      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1525 :: 		EEPROM_Write(4,Door2CloseTime);
0x0A0C	0x0E04      	MOVLW       4
0x0A0E	0x0104      	MOVLB       4
0x0A10	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A12	0xF434C10B  	MOVFF       _Door2CloseTime, FARG_EEPROM_Write_data_
0x0A16	0xDE3F      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1526 :: 		EEPROM_Write(5,ActionTimeDiff);
0x0A18	0x0E05      	MOVLW       5
0x0A1A	0x0104      	MOVLB       4
0x0A1C	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A1E	0xF434C110  	MOVFF       _ActionTimeDiff, FARG_EEPROM_Write_data_
0x0A22	0xDE39      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1527 :: 		EEPROM_Write(6,OpenSoftStartTime);
0x0A24	0x0E06      	MOVLW       6
0x0A26	0x0104      	MOVLB       4
0x0A28	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A2A	0xF434C10F  	MOVFF       _OpenSoftStartTime, FARG_EEPROM_Write_data_
0x0A2E	0xDE33      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1528 :: 		EEPROM_Write(7,OpenSoftStopTime);
0x0A30	0x0E07      	MOVLW       7
0x0A32	0x0104      	MOVLB       4
0x0A34	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A36	0xF434C10E  	MOVFF       _OpenSoftStopTime, FARG_EEPROM_Write_data_
0x0A3A	0xDE2D      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1529 :: 		EEPROM_Write(8,CloseSoftStartTime);
0x0A3C	0x0E08      	MOVLW       8
0x0A3E	0x0104      	MOVLB       4
0x0A40	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A42	0xF434C120  	MOVFF       _CloseSoftStartTime, FARG_EEPROM_Write_data_
0x0A46	0xDE27      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1530 :: 		EEPROM_Write(9,CloseSoftStopTime);
0x0A48	0x0E09      	MOVLW       9
0x0A4A	0x0104      	MOVLB       4
0x0A4C	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A4E	0xF434C12B  	MOVFF       _CloseSoftStopTime, FARG_EEPROM_Write_data_
0x0A52	0xDE21      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1531 :: 		EEPROM_Write(10,Hi(AutoCloseTime));
0x0A54	0x0E0A      	MOVLW       10
0x0A56	0x0104      	MOVLB       4
0x0A58	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A5A	0xF434C12D  	MOVFF       _AutoCloseTime+1, FARG_EEPROM_Write_data_
0x0A5E	0xDE1B      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1532 :: 		EEPROM_Write(11,Lo(AutoCloseTime));
0x0A60	0x0E0B      	MOVLW       11
0x0A62	0x0104      	MOVLB       4
0x0A64	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A66	0xF434C12C  	MOVFF       _AutoCloseTime, FARG_EEPROM_Write_data_
0x0A6A	0xDE15      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1533 :: 		EEPROM_Write(12,OverloadSens);
0x0A6C	0x0E0C      	MOVLW       12
0x0A6E	0x0104      	MOVLB       4
0x0A70	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A72	0xF434C061  	MOVFF       _OverloadSens, FARG_EEPROM_Write_data_
0x0A76	0xDE0F      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1534 :: 		SetOverloadParams(9-OverloadSens);
0x0A78	0x5061      	MOVF        _OverloadSens, 0 
0x0A7A	0x0809      	SUBLW       9
0x0A7C	0x0104      	MOVLB       4
0x0A7E	0x6F33      	MOVWF       FARG_SetOverloadParams_p, 1
0x0A80	0xDD9B      	RCALL       _SetOverloadParams
;FirmV_0_7_0.c,1535 :: 		EEPROM_Write(13,CloseAfterPass);
0x0A82	0x0E0D      	MOVLW       13
0x0A84	0x0104      	MOVLB       4
0x0A86	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A88	0xF434C12A  	MOVFF       _CloseAfterPass, FARG_EEPROM_Write_data_
0x0A8C	0xDE04      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1536 :: 		EEPROM_Write(14,LockForce);
0x0A8E	0x0E0E      	MOVLW       14
0x0A90	0x0104      	MOVLB       4
0x0A92	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0A94	0xF434C12E  	MOVFF       _LockForce, FARG_EEPROM_Write_data_
0x0A98	0xDDFE      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1537 :: 		EEPROM_Write(15,OpenPhEnable);
0x0A9A	0x0E0F      	MOVLW       15
0x0A9C	0x0104      	MOVLB       4
0x0A9E	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0AA0	0xF434C12F  	MOVFF       _OpenPhEnable, FARG_EEPROM_Write_data_
0x0AA4	0xDDF8      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1538 :: 		EEPROM_Write(16,LimiterEnable);
0x0AA6	0x0E10      	MOVLW       16
0x0AA8	0x0104      	MOVLB       4
0x0AAA	0x6F33      	MOVWF       FARG_EEPROM_Write_address, 1
0x0AAC	0xF434C125  	MOVFF       _LimiterEnable, FARG_EEPROM_Write_data_
0x0AB0	0xDDF2      	RCALL       _EEPROM_Write
;FirmV_0_7_0.c,1540 :: 		}
0x0AB2	0x0012      	RETURN      0
; end of _SaveConfigs
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0AB4	0x0104      	MOVLB       4
0x0AB6	0x6B2A      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0AB8	0xFFE9C427  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0ABC	0xFFEAC428  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0AC0	0xF429CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0AC4	0x5129      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0AC6	0x0A00      	XORLW       0
0x0AC8	0xE00F      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x0ACA	0xF43AC429  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0ACE	0xF000ECB0  	CALL        _UART1_Write, 0
;__Lib_UART_c67.c,72 :: 		
0x0AD2	0x0104      	MOVLB       4
0x0AD4	0x2B2A      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0AD6	0x512A      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0AD8	0x2527      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0ADA	0x6EE9      	MOVWF       FSR0L 
0x0ADC	0x0E00      	MOVLW       0
0x0ADE	0x2128      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x0AE0	0x6EEA      	MOVWF       FSR0H 
0x0AE2	0xF429CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0AE6	0xD7EE      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x0AE8	0x0012      	RETURN      0
; end of _UART1_Write_Text
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0AEA	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0AEC	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0AF0	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0AF2	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0AF4	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0AF6	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0AF8	0x0012      	RETURN      0
; end of ___CC2DW
_charValueToStr:
;FirmV_0_7_0.c,2082 :: 		void charValueToStr(char val, char * string)
;FirmV_0_7_0.c,2084 :: 		bytetostr(val>>1,string);
0x0AFA	0xF433C427  	MOVFF       FARG_charValueToStr_val, FARG_ByteToStr_input
0x0AFE	0x0104      	MOVLB       4
0x0B00	0x3333      	RRCF        FARG_ByteToStr_input, 1, 1
0x0B02	0x9F33      	BCF         FARG_ByteToStr_input, 7, 1
0x0B04	0xF434C428  	MOVFF       FARG_charValueToStr_string, FARG_ByteToStr_output
0x0B08	0xF435C429  	MOVFF       FARG_charValueToStr_string+1, FARG_ByteToStr_output+1
0x0B0C	0xF000ECED  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,2085 :: 		if((val%2)==1)
0x0B10	0x0E01      	MOVLW       1
0x0B12	0x1527      	ANDWF       FARG_charValueToStr_val, 0, 1
0x0B14	0x6E01      	MOVWF       R1 
0x0B16	0x5001      	MOVF        R1, 0 
0x0B18	0x0A01      	XORLW       1
0x0B1A	0xE118      	BNZ         L_charValueToStr506
;FirmV_0_7_0.c,2086 :: 		memcpy(string+3,".5s",4);
0x0B1C	0x0E03      	MOVLW       3
0x0B1E	0x2528      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0B20	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0B22	0x0E00      	MOVLW       0
0x0B24	0x2129      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0B26	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0B28	0x0E2E      	MOVLW       46
0x0B2A	0x6F2A      	MOVWF       ?lstr104_FirmV_0_7_0, 1
0x0B2C	0x0E35      	MOVLW       53
0x0B2E	0x6F2B      	MOVWF       ?lstr104_FirmV_0_7_0+1, 1
0x0B30	0x0E73      	MOVLW       115
0x0B32	0x6F2C      	MOVWF       ?lstr104_FirmV_0_7_0+2, 1
0x0B34	0x6B2D      	CLRF        ?lstr104_FirmV_0_7_0+3, 1
0x0B36	0x0E2A      	MOVLW       ?lstr104_FirmV_0_7_0
0x0B38	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0B3A	0x0E04      	MOVLW       hi_addr(?lstr104_FirmV_0_7_0)
0x0B3C	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0B3E	0x0E04      	MOVLW       4
0x0B40	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0B42	0x0E00      	MOVLW       0
0x0B44	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0B46	0xF001EC27  	CALL        _memcpy, 0
0x0B4A	0xD017      	BRA         L_charValueToStr507
L_charValueToStr506:
;FirmV_0_7_0.c,2088 :: 		memcpy(string+3,"s  ",4);
0x0B4C	0x0E03      	MOVLW       3
0x0B4E	0x2528      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0B50	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0B52	0x0E00      	MOVLW       0
0x0B54	0x2129      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0B56	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0B58	0x0E73      	MOVLW       115
0x0B5A	0x6F2E      	MOVWF       ?lstr105_FirmV_0_7_0, 1
0x0B5C	0x0E20      	MOVLW       32
0x0B5E	0x6F2F      	MOVWF       ?lstr105_FirmV_0_7_0+1, 1
0x0B60	0x0E20      	MOVLW       32
0x0B62	0x6F30      	MOVWF       ?lstr105_FirmV_0_7_0+2, 1
0x0B64	0x6B31      	CLRF        ?lstr105_FirmV_0_7_0+3, 1
0x0B66	0x0E2E      	MOVLW       ?lstr105_FirmV_0_7_0
0x0B68	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0B6A	0x0E04      	MOVLW       hi_addr(?lstr105_FirmV_0_7_0)
0x0B6C	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0B6E	0x0E04      	MOVLW       4
0x0B70	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0B72	0x0E00      	MOVLW       0
0x0B74	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0B76	0xF001EC27  	CALL        _memcpy, 0
L_charValueToStr507:
;FirmV_0_7_0.c,2089 :: 		}
0x0B7A	0x0012      	RETURN      0
; end of _charValueToStr
_CheckTask:
;FirmV_0_7_0.c,1656 :: 		char CheckTask(char TaskCode)
;FirmV_0_7_0.c,1658 :: 		if(Events.Task1==TaskCode)
0x0B7C	0x0100      	MOVLB       0
0x0B7E	0x51FE      	MOVF        _Events+1, 0, 1
0x0B80	0x0102      	MOVLB       2
0x0B82	0x197E      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0B84	0xE105      	BNZ         L_CheckTask336
;FirmV_0_7_0.c,1659 :: 		{Events.Task1=0; return 1;}
0x0B86	0x0100      	MOVLB       0
0x0B88	0x6BFE      	CLRF        _Events+1, 1
0x0B8A	0x0E01      	MOVLW       1
0x0B8C	0x6E00      	MOVWF       R0 
0x0B8E	0x0012      	RETURN      0
L_CheckTask336:
0x0B90	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1661 :: 		if(Events.Task2==TaskCode)
0x0B92	0x51FF      	MOVF        _Events+2, 0, 1
0x0B94	0x0102      	MOVLB       2
0x0B96	0x197E      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0B98	0xE105      	BNZ         L_CheckTask337
;FirmV_0_7_0.c,1662 :: 		{Events.Task2=0; return 1;}
0x0B9A	0x0100      	MOVLB       0
0x0B9C	0x6BFF      	CLRF        _Events+2, 1
0x0B9E	0x0E01      	MOVLW       1
0x0BA0	0x6E00      	MOVWF       R0 
0x0BA2	0x0012      	RETURN      0
L_CheckTask337:
0x0BA4	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1664 :: 		if(Events.Task3==TaskCode)
0x0BA6	0x5100      	MOVF        _Events+3, 0, 1
0x0BA8	0x0102      	MOVLB       2
0x0BAA	0x197E      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x0BAC	0xE105      	BNZ         L_CheckTask338
;FirmV_0_7_0.c,1665 :: 		{Events.Task3=0; return 1;}
0x0BAE	0x0101      	MOVLB       1
0x0BB0	0x6B00      	CLRF        _Events+3, 1
0x0BB2	0x0E01      	MOVLW       1
0x0BB4	0x6E00      	MOVWF       R0 
0x0BB6	0x0012      	RETURN      0
L_CheckTask338:
;FirmV_0_7_0.c,1667 :: 		return 0;
0x0BB8	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1669 :: 		}
0x0BBA	0x0012      	RETURN      0
; end of _CheckTask
_OverloadInit:
;FirmV_0_7_0.c,1495 :: 		void OverloadInit(char ch)
;FirmV_0_7_0.c,1497 :: 		if(ch==1)
0x0BBC	0x0102      	MOVLB       2
0x0BBE	0x517E      	MOVF        FARG_OverloadInit_ch, 0, 1
0x0BC0	0x0A01      	XORLW       1
0x0BC2	0xE103      	BNZ         L_OverloadInit330
;FirmV_0_7_0.c,1499 :: 		OverloadCounter1=0;
0x0BC4	0x6A45      	CLRF        _OverloadCounter1 
;FirmV_0_7_0.c,1500 :: 		Events.Overload.b0=0;
0x0BC6	0x0101      	MOVLB       1
0x0BC8	0x9102      	BCF         _Events+5, 0, 1
;FirmV_0_7_0.c,1501 :: 		}
L_OverloadInit330:
;FirmV_0_7_0.c,1503 :: 		if(ch==2)
0x0BCA	0x0102      	MOVLB       2
0x0BCC	0x517E      	MOVF        FARG_OverloadInit_ch, 0, 1
0x0BCE	0x0A02      	XORLW       2
0x0BD0	0xE103      	BNZ         L_OverloadInit331
;FirmV_0_7_0.c,1505 :: 		OverloadCounter2=0;
0x0BD2	0x6A46      	CLRF        _OverloadCounter2 
;FirmV_0_7_0.c,1506 :: 		Events.Overload.b1=0;
0x0BD4	0x0101      	MOVLB       1
0x0BD6	0x9302      	BCF         _Events+5, 1, 1
;FirmV_0_7_0.c,1507 :: 		}
L_OverloadInit331:
;FirmV_0_7_0.c,1508 :: 		}
0x0BD8	0x0012      	RETURN      0
; end of _OverloadInit
_ClearTasks:
;FirmV_0_7_0.c,1706 :: 		void ClearTasks(char except)
;FirmV_0_7_0.c,1709 :: 		for(i=0;i<20;i++)
0x0BDA	0x0102      	MOVLB       2
0x0BDC	0x6B7F      	CLRF        ClearTasks_i_L0, 1
L_ClearTasks345:
0x0BDE	0x0E14      	MOVLW       20
0x0BE0	0x5D7F      	SUBWF       ClearTasks_i_L0, 0, 1
0x0BE2	0xE241      	BC          L_ClearTasks346
;FirmV_0_7_0.c,1710 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode!=except))
0x0BE4	0xF000C27F  	MOVFF       ClearTasks_i_L0, R0
0x0BE8	0x0E00      	MOVLW       0
0x0BEA	0x6E01      	MOVWF       R1 
0x0BEC	0x0E07      	MOVLW       7
0x0BEE	0x6E04      	MOVWF       R4 
0x0BF0	0x0E00      	MOVLW       0
0x0BF2	0x6E05      	MOVWF       R5 
0x0BF4	0xDDBD      	RCALL       _Mul_16x16_U
0x0BF6	0x0E71      	MOVLW       _Tasks
0x0BF8	0x2600      	ADDWF       R0, 1 
0x0BFA	0x0E00      	MOVLW       hi_addr(_Tasks)
0x0BFC	0x2201      	ADDWFC      R1, 1 
0x0BFE	0x0E05      	MOVLW       5
0x0C00	0x2400      	ADDWF       R0, 0 
0x0C02	0x6EE9      	MOVWF       FSR0L 
0x0C04	0x0E00      	MOVLW       0
0x0C06	0x2001      	ADDWFC      R1, 0 
0x0C08	0x6EEA      	MOVWF       FSR0H 
0x0C0A	0x50EE      	MOVF        POSTINC0, 0 
0x0C0C	0x0A00      	XORLW       0
0x0C0E	0xE129      	BNZ         L_ClearTasks350
0x0C10	0xF000C27F  	MOVFF       ClearTasks_i_L0, R0
0x0C14	0x0E00      	MOVLW       0
0x0C16	0x6E01      	MOVWF       R1 
0x0C18	0x0E07      	MOVLW       7
0x0C1A	0x6E04      	MOVWF       R4 
0x0C1C	0x0E00      	MOVLW       0
0x0C1E	0x6E05      	MOVWF       R5 
0x0C20	0xDDA7      	RCALL       _Mul_16x16_U
0x0C22	0x0E71      	MOVLW       _Tasks
0x0C24	0x2400      	ADDWF       R0, 0 
0x0C26	0x6EE9      	MOVWF       FSR0L 
0x0C28	0x0E00      	MOVLW       hi_addr(_Tasks)
0x0C2A	0x2001      	ADDWFC      R1, 0 
0x0C2C	0x6EEA      	MOVWF       FSR0H 
0x0C2E	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0C32	0x5001      	MOVF        R1, 0 
0x0C34	0x197E      	XORWF       FARG_ClearTasks_except, 0, 1
0x0C36	0xE015      	BZ          L_ClearTasks350
L__ClearTasks571:
;FirmV_0_7_0.c,1711 :: 		Tasks[i].Expired=1;
0x0C38	0xF000C27F  	MOVFF       ClearTasks_i_L0, R0
0x0C3C	0x0E00      	MOVLW       0
0x0C3E	0x6E01      	MOVWF       R1 
0x0C40	0x0E07      	MOVLW       7
0x0C42	0x6E04      	MOVWF       R4 
0x0C44	0x0E00      	MOVLW       0
0x0C46	0x6E05      	MOVWF       R5 
0x0C48	0xDD93      	RCALL       _Mul_16x16_U
0x0C4A	0x0E71      	MOVLW       _Tasks
0x0C4C	0x2600      	ADDWF       R0, 1 
0x0C4E	0x0E00      	MOVLW       hi_addr(_Tasks)
0x0C50	0x2201      	ADDWFC      R1, 1 
0x0C52	0x0E05      	MOVLW       5
0x0C54	0x2400      	ADDWF       R0, 0 
0x0C56	0x6EE1      	MOVWF       FSR1L 
0x0C58	0x0E00      	MOVLW       0
0x0C5A	0x2001      	ADDWFC      R1, 0 
0x0C5C	0x6EE2      	MOVWF       FSR1H 
0x0C5E	0x0E01      	MOVLW       1
0x0C60	0x6EE6      	MOVWF       POSTINC1 
L_ClearTasks350:
;FirmV_0_7_0.c,1709 :: 		for(i=0;i<20;i++)
0x0C62	0x2B7F      	INCF        ClearTasks_i_L0, 1, 1
;FirmV_0_7_0.c,1711 :: 		Tasks[i].Expired=1;
0x0C64	0xD7BC      	BRA         L_ClearTasks345
L_ClearTasks346:
;FirmV_0_7_0.c,1712 :: 		}
0x0C66	0x0012      	RETURN      0
; end of _ClearTasks
_ADC_Read:
;__Lib_ADC_A_C.c,41 :: 		
;__Lib_ADC_A_C.c,44 :: 		
0x0C68	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_C.c,45 :: 		
0x0C6A	0x0EC0      	MOVLW       192
0x0C6C	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,46 :: 		
0x0C6E	0x8CC1      	BSF         ADCON1, 6 
;__Lib_ADC_A_C.c,48 :: 		
0x0C70	0x8EC1      	BSF         ADCON1, 7 
;__Lib_ADC_A_C.c,49 :: 		
0x0C72	0xF000C27E  	MOVFF       FARG_ADC_Read_channel, R0
0x0C76	0x3600      	RLCF        R0, 1 
0x0C78	0x9000      	BCF         R0, 0 
0x0C7A	0x3600      	RLCF        R0, 1 
0x0C7C	0x9000      	BCF         R0, 0 
0x0C7E	0x3600      	RLCF        R0, 1 
0x0C80	0x9000      	BCF         R0, 0 
0x0C82	0x5000      	MOVF        R0, 0 
0x0C84	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_C.c,50 :: 		
0x0C86	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_C.c,51 :: 		
0x0C88	0xDE60      	RCALL       _Delay_22us
;__Lib_ADC_A_C.c,52 :: 		
0x0C8A	0x84C2      	BSF         ADCON0, 2 
;__Lib_ADC_A_C.c,53 :: 		
L_ADC_Read2:
0x0C8C	0xA4C2      	BTFSS       ADCON0, 2 
0x0C8E	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_C.c,54 :: 		
0x0C90	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,56 :: 		
0x0C92	0xF001CFC4  	MOVFF       ADRESH, R1
0x0C96	0x6A00      	CLRF        R0 
;__Lib_ADC_A_C.c,57 :: 		
0x0C98	0x50C3      	MOVF        ADRESL, 0 
0x0C9A	0x1200      	IORWF       R0, 1 
0x0C9C	0x0E00      	MOVLW       0
0x0C9E	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_C.c,58 :: 		
0x0CA0	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_C.c,60 :: 		
;__Lib_ADC_A_C.c,61 :: 		
L_end_ADC_Read:
0x0CA2	0x0012      	RETURN      0
; end of _ADC_Read
_StartMotor:
;FirmV_0_7_0.c,1613 :: 		void StartMotor(char Mx,char Dir)
;FirmV_0_7_0.c,1615 :: 		if(Mx==1)
0x0CA4	0x0102      	MOVLB       2
0x0CA6	0x517E      	MOVF        FARG_StartMotor_Mx, 0, 1
0x0CA8	0x0A01      	XORLW       1
0x0CAA	0xE108      	BNZ         L_StartMotor332
;FirmV_0_7_0.c,1617 :: 		Motor1Start=1;
0x0CAC	0x0E01      	MOVLW       1
0x0CAE	0x6E27      	MOVWF       _Motor1Start 
;FirmV_0_7_0.c,1618 :: 		Motor1Dir=Dir;
0x0CB0	0xB17F      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x0CB2	0xD002      	BRA         L__StartMotor637
0x0CB4	0x9882      	BCF         PORTC, 4 
0x0CB6	0xD001      	BRA         L__StartMotor638
L__StartMotor637:
0x0CB8	0x8882      	BSF         PORTC, 4 
L__StartMotor638:
;FirmV_0_7_0.c,1619 :: 		Motor1=1;
0x0CBA	0x8282      	BSF         PORTC, 1 
;FirmV_0_7_0.c,1620 :: 		}
L_StartMotor332:
;FirmV_0_7_0.c,1622 :: 		if(Mx==2)
0x0CBC	0x517E      	MOVF        FARG_StartMotor_Mx, 0, 1
0x0CBE	0x0A02      	XORLW       2
0x0CC0	0xE108      	BNZ         L_StartMotor333
;FirmV_0_7_0.c,1624 :: 		Motor2Start=1;
0x0CC2	0x0E01      	MOVLW       1
0x0CC4	0x6E28      	MOVWF       _Motor2Start 
;FirmV_0_7_0.c,1625 :: 		Motor2Dir=Dir;
0x0CC6	0xB17F      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x0CC8	0xD002      	BRA         L__StartMotor639
0x0CCA	0x9682      	BCF         PORTC, 3 
0x0CCC	0xD001      	BRA         L__StartMotor640
L__StartMotor639:
0x0CCE	0x8682      	BSF         PORTC, 3 
L__StartMotor640:
;FirmV_0_7_0.c,1626 :: 		Motor2=1;
0x0CD0	0x8082      	BSF         PORTC, 0 
;FirmV_0_7_0.c,1627 :: 		}
L_StartMotor333:
;FirmV_0_7_0.c,1628 :: 		}
0x0CD2	0x0012      	RETURN      0
; end of _StartMotor
_Menu0:
;FirmV_0_7_0.c,1727 :: 		void Menu0()
;FirmV_0_7_0.c,1729 :: 		memcpy(LCDLine2,"                ",16);
0x0CD4	0x0E48      	MOVLW       _LCDLine2
0x0CD6	0x0104      	MOVLB       4
0x0CD8	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0CDA	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x0CDC	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0CDE	0x0E88      	MOVLW       ?ICS?lstr70_FirmV_0_7_0
0x0CE0	0x6EF6      	MOVWF       4086 
0x0CE2	0x0E56      	MOVLW       hi_addr(?ICS?lstr70_FirmV_0_7_0)
0x0CE4	0x6EF7      	MOVWF       TBLPTRH 
0x0CE6	0x0E00      	MOVLW       higher_addr(?ICS?lstr70_FirmV_0_7_0)
0x0CE8	0x6EF8      	MOVWF       TBLPTRU 
0x0CEA	0x0E7E      	MOVLW       ?lstr70_FirmV_0_7_0
0x0CEC	0x6EE1      	MOVWF       FSR1L 
0x0CEE	0x0E02      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x0CF0	0x6EE2      	MOVWF       FSR1H 
0x0CF2	0x0E11      	MOVLW       17
0x0CF4	0x6E00      	MOVWF       R0 
0x0CF6	0x0E01      	MOVLW       1
0x0CF8	0x6E01      	MOVWF       R1 
0x0CFA	0xDEF7      	RCALL       ___CC2DW
0x0CFC	0x0E7E      	MOVLW       ?lstr70_FirmV_0_7_0
0x0CFE	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0D00	0x0E02      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x0D02	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0D04	0x0E10      	MOVLW       16
0x0D06	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0D08	0x0E00      	MOVLW       0
0x0D0A	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0D0C	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,1731 :: 		if(MenuPointer==0)
0x0D10	0x5020      	MOVF        _MenuPointer, 0 
0x0D12	0x0A00      	XORLW       0
0x0D14	0xE15F      	BNZ         L_Menu0351
;FirmV_0_7_0.c,1732 :: 		{memcpy(LCDLine1,"00 Learning Mode",16);LCDUpdateFlag=1;
0x0D16	0x0E2D      	MOVLW       _LCDLine1
0x0D18	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0D1A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0D1C	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0D1E	0x0E99      	MOVLW       ?ICS?lstr71_FirmV_0_7_0
0x0D20	0x6EF6      	MOVWF       4086 
0x0D22	0x0E56      	MOVLW       hi_addr(?ICS?lstr71_FirmV_0_7_0)
0x0D24	0x6EF7      	MOVWF       TBLPTRH 
0x0D26	0x0E00      	MOVLW       higher_addr(?ICS?lstr71_FirmV_0_7_0)
0x0D28	0x6EF8      	MOVWF       TBLPTRU 
0x0D2A	0x0E8F      	MOVLW       ?lstr71_FirmV_0_7_0
0x0D2C	0x6EE1      	MOVWF       FSR1L 
0x0D2E	0x0E02      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x0D30	0x6EE2      	MOVWF       FSR1H 
0x0D32	0x0E11      	MOVLW       17
0x0D34	0x6E00      	MOVWF       R0 
0x0D36	0x0E01      	MOVLW       1
0x0D38	0x6E01      	MOVWF       R1 
0x0D3A	0xDED7      	RCALL       ___CC2DW
0x0D3C	0x0E8F      	MOVLW       ?lstr71_FirmV_0_7_0
0x0D3E	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0D40	0x0E02      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x0D42	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0D44	0x0E10      	MOVLW       16
0x0D46	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0D48	0x0E00      	MOVLW       0
0x0D4A	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0D4C	0xF001EC27  	CALL        _memcpy, 0
0x0D50	0x0E01      	MOVLW       1
0x0D52	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1733 :: 		if(LearningMode==0)memcpy(LCDLine2,"      Auto      ",16);
0x0D54	0x5021      	MOVF        _LearningMode, 0 
0x0D56	0x0A00      	XORLW       0
0x0D58	0xE11D      	BNZ         L_Menu0352
0x0D5A	0x0E48      	MOVLW       _LCDLine2
0x0D5C	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0D5E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x0D60	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0D62	0x0EAA      	MOVLW       ?ICS?lstr72_FirmV_0_7_0
0x0D64	0x6EF6      	MOVWF       4086 
0x0D66	0x0E56      	MOVLW       hi_addr(?ICS?lstr72_FirmV_0_7_0)
0x0D68	0x6EF7      	MOVWF       TBLPTRH 
0x0D6A	0x0E00      	MOVLW       higher_addr(?ICS?lstr72_FirmV_0_7_0)
0x0D6C	0x6EF8      	MOVWF       TBLPTRU 
0x0D6E	0x0EA0      	MOVLW       ?lstr72_FirmV_0_7_0
0x0D70	0x6EE1      	MOVWF       FSR1L 
0x0D72	0x0E02      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x0D74	0x6EE2      	MOVWF       FSR1H 
0x0D76	0x0E11      	MOVLW       17
0x0D78	0x6E00      	MOVWF       R0 
0x0D7A	0x0E01      	MOVLW       1
0x0D7C	0x6E01      	MOVWF       R1 
0x0D7E	0xDEB5      	RCALL       ___CC2DW
0x0D80	0x0EA0      	MOVLW       ?lstr72_FirmV_0_7_0
0x0D82	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0D84	0x0E02      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x0D86	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0D88	0x0E10      	MOVLW       16
0x0D8A	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0D8C	0x0E00      	MOVLW       0
0x0D8E	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0D90	0xF001EC27  	CALL        _memcpy, 0
L_Menu0352:
;FirmV_0_7_0.c,1734 :: 		if(LearningMode==1)memcpy(LCDLine2,"     Manual     ",16);}
0x0D94	0x5021      	MOVF        _LearningMode, 0 
0x0D96	0x0A01      	XORLW       1
0x0D98	0xE11D      	BNZ         L_Menu0353
0x0D9A	0x0E48      	MOVLW       _LCDLine2
0x0D9C	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0D9E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x0DA0	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0DA2	0x0EBB      	MOVLW       ?ICS?lstr73_FirmV_0_7_0
0x0DA4	0x6EF6      	MOVWF       4086 
0x0DA6	0x0E56      	MOVLW       hi_addr(?ICS?lstr73_FirmV_0_7_0)
0x0DA8	0x6EF7      	MOVWF       TBLPTRH 
0x0DAA	0x0E00      	MOVLW       higher_addr(?ICS?lstr73_FirmV_0_7_0)
0x0DAC	0x6EF8      	MOVWF       TBLPTRU 
0x0DAE	0x0EB1      	MOVLW       ?lstr73_FirmV_0_7_0
0x0DB0	0x6EE1      	MOVWF       FSR1L 
0x0DB2	0x0E02      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x0DB4	0x6EE2      	MOVWF       FSR1H 
0x0DB6	0x0E11      	MOVLW       17
0x0DB8	0x6E00      	MOVWF       R0 
0x0DBA	0x0E01      	MOVLW       1
0x0DBC	0x6E01      	MOVWF       R1 
0x0DBE	0xDE95      	RCALL       ___CC2DW
0x0DC0	0x0EB1      	MOVLW       ?lstr73_FirmV_0_7_0
0x0DC2	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0DC4	0x0E02      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x0DC6	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0DC8	0x0E10      	MOVLW       16
0x0DCA	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0DCC	0x0E00      	MOVLW       0
0x0DCE	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0DD0	0xF001EC27  	CALL        _memcpy, 0
L_Menu0353:
L_Menu0351:
;FirmV_0_7_0.c,1736 :: 		if(MenuPointer==1)
0x0DD4	0x5020      	MOVF        _MenuPointer, 0 
0x0DD6	0x0A01      	XORLW       1
0x0DD8	0xE126      	BNZ         L_Menu0354
;FirmV_0_7_0.c,1737 :: 		{memcpy(LCDLine1,"01 D1 Open Time ",16);LCDUpdateFlag=1;
0x0DDA	0x0E2D      	MOVLW       _LCDLine1
0x0DDC	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0DDE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0DE0	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0DE2	0x0ECC      	MOVLW       ?ICS?lstr74_FirmV_0_7_0
0x0DE4	0x6EF6      	MOVWF       4086 
0x0DE6	0x0E56      	MOVLW       hi_addr(?ICS?lstr74_FirmV_0_7_0)
0x0DE8	0x6EF7      	MOVWF       TBLPTRH 
0x0DEA	0x0E00      	MOVLW       higher_addr(?ICS?lstr74_FirmV_0_7_0)
0x0DEC	0x6EF8      	MOVWF       TBLPTRU 
0x0DEE	0x0EC2      	MOVLW       ?lstr74_FirmV_0_7_0
0x0DF0	0x6EE1      	MOVWF       FSR1L 
0x0DF2	0x0E02      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x0DF4	0x6EE2      	MOVWF       FSR1H 
0x0DF6	0x0E11      	MOVLW       17
0x0DF8	0x6E00      	MOVWF       R0 
0x0DFA	0x0E01      	MOVLW       1
0x0DFC	0x6E01      	MOVWF       R1 
0x0DFE	0xDE75      	RCALL       ___CC2DW
0x0E00	0x0EC2      	MOVLW       ?lstr74_FirmV_0_7_0
0x0E02	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0E04	0x0E02      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x0E06	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0E08	0x0E10      	MOVLW       16
0x0E0A	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0E0C	0x0E00      	MOVLW       0
0x0E0E	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0E10	0xF001EC27  	CALL        _memcpy, 0
0x0E14	0x0E01      	MOVLW       1
0x0E16	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1738 :: 		charValueToStr(Door1OpenTime,LCDLine2+6);}
0x0E18	0xF427C117  	MOVFF       _Door1OpenTime, FARG_charValueToStr_val
0x0E1C	0x0E4E      	MOVLW       _LCDLine2+6
0x0E1E	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0E20	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0E22	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0E24	0xDE6A      	RCALL       _charValueToStr
L_Menu0354:
;FirmV_0_7_0.c,1740 :: 		if(MenuPointer==2)
0x0E26	0x5020      	MOVF        _MenuPointer, 0 
0x0E28	0x0A02      	XORLW       2
0x0E2A	0xE126      	BNZ         L_Menu0355
;FirmV_0_7_0.c,1741 :: 		{memcpy(LCDLine1,"02 D2 Open Time ",16);LCDUpdateFlag=1;
0x0E2C	0x0E2D      	MOVLW       _LCDLine1
0x0E2E	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0E30	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0E32	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0E34	0x0EDD      	MOVLW       ?ICS?lstr75_FirmV_0_7_0
0x0E36	0x6EF6      	MOVWF       4086 
0x0E38	0x0E56      	MOVLW       hi_addr(?ICS?lstr75_FirmV_0_7_0)
0x0E3A	0x6EF7      	MOVWF       TBLPTRH 
0x0E3C	0x0E00      	MOVLW       higher_addr(?ICS?lstr75_FirmV_0_7_0)
0x0E3E	0x6EF8      	MOVWF       TBLPTRU 
0x0E40	0x0ED3      	MOVLW       ?lstr75_FirmV_0_7_0
0x0E42	0x6EE1      	MOVWF       FSR1L 
0x0E44	0x0E02      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x0E46	0x6EE2      	MOVWF       FSR1H 
0x0E48	0x0E11      	MOVLW       17
0x0E4A	0x6E00      	MOVWF       R0 
0x0E4C	0x0E01      	MOVLW       1
0x0E4E	0x6E01      	MOVWF       R1 
0x0E50	0xDE4C      	RCALL       ___CC2DW
0x0E52	0x0ED3      	MOVLW       ?lstr75_FirmV_0_7_0
0x0E54	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0E56	0x0E02      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x0E58	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0E5A	0x0E10      	MOVLW       16
0x0E5C	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0E5E	0x0E00      	MOVLW       0
0x0E60	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0E62	0xF001EC27  	CALL        _memcpy, 0
0x0E66	0x0E01      	MOVLW       1
0x0E68	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1742 :: 		charValueToStr(Door2OpenTime,LCDLine2+6);}
0x0E6A	0xF427C10D  	MOVFF       _Door2OpenTime, FARG_charValueToStr_val
0x0E6E	0x0E4E      	MOVLW       _LCDLine2+6
0x0E70	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0E72	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0E74	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0E76	0xDE41      	RCALL       _charValueToStr
L_Menu0355:
;FirmV_0_7_0.c,1744 :: 		if(MenuPointer==3)
0x0E78	0x5020      	MOVF        _MenuPointer, 0 
0x0E7A	0x0A03      	XORLW       3
0x0E7C	0xE126      	BNZ         L_Menu0356
;FirmV_0_7_0.c,1745 :: 		{memcpy(LCDLine1,"03 D1 Close Time",16);LCDUpdateFlag=1;
0x0E7E	0x0E2D      	MOVLW       _LCDLine1
0x0E80	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0E82	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0E84	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0E86	0x0EEE      	MOVLW       ?ICS?lstr76_FirmV_0_7_0
0x0E88	0x6EF6      	MOVWF       4086 
0x0E8A	0x0E56      	MOVLW       hi_addr(?ICS?lstr76_FirmV_0_7_0)
0x0E8C	0x6EF7      	MOVWF       TBLPTRH 
0x0E8E	0x0E00      	MOVLW       higher_addr(?ICS?lstr76_FirmV_0_7_0)
0x0E90	0x6EF8      	MOVWF       TBLPTRU 
0x0E92	0x0EE4      	MOVLW       ?lstr76_FirmV_0_7_0
0x0E94	0x6EE1      	MOVWF       FSR1L 
0x0E96	0x0E02      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x0E98	0x6EE2      	MOVWF       FSR1H 
0x0E9A	0x0E11      	MOVLW       17
0x0E9C	0x6E00      	MOVWF       R0 
0x0E9E	0x0E01      	MOVLW       1
0x0EA0	0x6E01      	MOVWF       R1 
0x0EA2	0xDE23      	RCALL       ___CC2DW
0x0EA4	0x0EE4      	MOVLW       ?lstr76_FirmV_0_7_0
0x0EA6	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0EA8	0x0E02      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x0EAA	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0EAC	0x0E10      	MOVLW       16
0x0EAE	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0EB0	0x0E00      	MOVLW       0
0x0EB2	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0EB4	0xF001EC27  	CALL        _memcpy, 0
0x0EB8	0x0E01      	MOVLW       1
0x0EBA	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1746 :: 		charValueToStr(Door1CloseTime,LCDLine2+6);}
0x0EBC	0xF427C10C  	MOVFF       _Door1CloseTime, FARG_charValueToStr_val
0x0EC0	0x0E4E      	MOVLW       _LCDLine2+6
0x0EC2	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0EC4	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0EC6	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0EC8	0xDE18      	RCALL       _charValueToStr
L_Menu0356:
;FirmV_0_7_0.c,1748 :: 		if(MenuPointer==4)
0x0ECA	0x5020      	MOVF        _MenuPointer, 0 
0x0ECC	0x0A04      	XORLW       4
0x0ECE	0xE126      	BNZ         L_Menu0357
;FirmV_0_7_0.c,1749 :: 		{memcpy(LCDLine1,"04 D2 Close Time",16);LCDUpdateFlag=1;
0x0ED0	0x0E2D      	MOVLW       _LCDLine1
0x0ED2	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0ED4	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0ED6	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0ED8	0x0EFF      	MOVLW       ?ICS?lstr77_FirmV_0_7_0
0x0EDA	0x6EF6      	MOVWF       4086 
0x0EDC	0x0E56      	MOVLW       hi_addr(?ICS?lstr77_FirmV_0_7_0)
0x0EDE	0x6EF7      	MOVWF       TBLPTRH 
0x0EE0	0x0E00      	MOVLW       higher_addr(?ICS?lstr77_FirmV_0_7_0)
0x0EE2	0x6EF8      	MOVWF       TBLPTRU 
0x0EE4	0x0EF5      	MOVLW       ?lstr77_FirmV_0_7_0
0x0EE6	0x6EE1      	MOVWF       FSR1L 
0x0EE8	0x0E02      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x0EEA	0x6EE2      	MOVWF       FSR1H 
0x0EEC	0x0E11      	MOVLW       17
0x0EEE	0x6E00      	MOVWF       R0 
0x0EF0	0x0E01      	MOVLW       1
0x0EF2	0x6E01      	MOVWF       R1 
0x0EF4	0xDDFA      	RCALL       ___CC2DW
0x0EF6	0x0EF5      	MOVLW       ?lstr77_FirmV_0_7_0
0x0EF8	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0EFA	0x0E02      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x0EFC	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0EFE	0x0E10      	MOVLW       16
0x0F00	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0F02	0x0E00      	MOVLW       0
0x0F04	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0F06	0xF001EC27  	CALL        _memcpy, 0
0x0F0A	0x0E01      	MOVLW       1
0x0F0C	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1750 :: 		charValueToStr(Door2CloseTime,LCDLine2+6);}
0x0F0E	0xF427C10B  	MOVFF       _Door2CloseTime, FARG_charValueToStr_val
0x0F12	0x0E4E      	MOVLW       _LCDLine2+6
0x0F14	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0F16	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0F18	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0F1A	0xDDEF      	RCALL       _charValueToStr
L_Menu0357:
;FirmV_0_7_0.c,1752 :: 		if(MenuPointer==5)
0x0F1C	0x5020      	MOVF        _MenuPointer, 0 
0x0F1E	0x0A05      	XORLW       5
0x0F20	0xE126      	BNZ         L_Menu0358
;FirmV_0_7_0.c,1753 :: 		{memcpy(LCDLine1,"05 Op Soft Start",16);LCDUpdateFlag=1;
0x0F22	0x0E2D      	MOVLW       _LCDLine1
0x0F24	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0F26	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0F28	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0F2A	0x0E10      	MOVLW       ?ICS?lstr78_FirmV_0_7_0
0x0F2C	0x6EF6      	MOVWF       4086 
0x0F2E	0x0E57      	MOVLW       hi_addr(?ICS?lstr78_FirmV_0_7_0)
0x0F30	0x6EF7      	MOVWF       TBLPTRH 
0x0F32	0x0E00      	MOVLW       higher_addr(?ICS?lstr78_FirmV_0_7_0)
0x0F34	0x6EF8      	MOVWF       TBLPTRU 
0x0F36	0x0E06      	MOVLW       ?lstr78_FirmV_0_7_0
0x0F38	0x6EE1      	MOVWF       FSR1L 
0x0F3A	0x0E03      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x0F3C	0x6EE2      	MOVWF       FSR1H 
0x0F3E	0x0E11      	MOVLW       17
0x0F40	0x6E00      	MOVWF       R0 
0x0F42	0x0E01      	MOVLW       1
0x0F44	0x6E01      	MOVWF       R1 
0x0F46	0xDDD1      	RCALL       ___CC2DW
0x0F48	0x0E06      	MOVLW       ?lstr78_FirmV_0_7_0
0x0F4A	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0F4C	0x0E03      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x0F4E	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0F50	0x0E10      	MOVLW       16
0x0F52	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0F54	0x0E00      	MOVLW       0
0x0F56	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0F58	0xF001EC27  	CALL        _memcpy, 0
0x0F5C	0x0E01      	MOVLW       1
0x0F5E	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1754 :: 		charValueToStr(OpenSoftStartTime,LCDLine2+6);}
0x0F60	0xF427C10F  	MOVFF       _OpenSoftStartTime, FARG_charValueToStr_val
0x0F64	0x0E4E      	MOVLW       _LCDLine2+6
0x0F66	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0F68	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0F6A	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0F6C	0xDDC6      	RCALL       _charValueToStr
L_Menu0358:
;FirmV_0_7_0.c,1756 :: 		if(MenuPointer==6)
0x0F6E	0x5020      	MOVF        _MenuPointer, 0 
0x0F70	0x0A06      	XORLW       6
0x0F72	0xE126      	BNZ         L_Menu0359
;FirmV_0_7_0.c,1757 :: 		{memcpy(LCDLine1,"06 Op Soft Stop ",16);LCDUpdateFlag=1;
0x0F74	0x0E2D      	MOVLW       _LCDLine1
0x0F76	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0F78	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0F7A	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0F7C	0x0E21      	MOVLW       ?ICS?lstr79_FirmV_0_7_0
0x0F7E	0x6EF6      	MOVWF       4086 
0x0F80	0x0E57      	MOVLW       hi_addr(?ICS?lstr79_FirmV_0_7_0)
0x0F82	0x6EF7      	MOVWF       TBLPTRH 
0x0F84	0x0E00      	MOVLW       higher_addr(?ICS?lstr79_FirmV_0_7_0)
0x0F86	0x6EF8      	MOVWF       TBLPTRU 
0x0F88	0x0E17      	MOVLW       ?lstr79_FirmV_0_7_0
0x0F8A	0x6EE1      	MOVWF       FSR1L 
0x0F8C	0x0E03      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x0F8E	0x6EE2      	MOVWF       FSR1H 
0x0F90	0x0E11      	MOVLW       17
0x0F92	0x6E00      	MOVWF       R0 
0x0F94	0x0E01      	MOVLW       1
0x0F96	0x6E01      	MOVWF       R1 
0x0F98	0xDDA8      	RCALL       ___CC2DW
0x0F9A	0x0E17      	MOVLW       ?lstr79_FirmV_0_7_0
0x0F9C	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0F9E	0x0E03      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x0FA0	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0FA2	0x0E10      	MOVLW       16
0x0FA4	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0FA6	0x0E00      	MOVLW       0
0x0FA8	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0FAA	0xF001EC27  	CALL        _memcpy, 0
0x0FAE	0x0E01      	MOVLW       1
0x0FB0	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1758 :: 		charValueToStr(OpenSoftStopTime,LCDLine2+6);}
0x0FB2	0xF427C10E  	MOVFF       _OpenSoftStopTime, FARG_charValueToStr_val
0x0FB6	0x0E4E      	MOVLW       _LCDLine2+6
0x0FB8	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x0FBA	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x0FBC	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x0FBE	0xDD9D      	RCALL       _charValueToStr
L_Menu0359:
;FirmV_0_7_0.c,1760 :: 		if(MenuPointer==7)
0x0FC0	0x5020      	MOVF        _MenuPointer, 0 
0x0FC2	0x0A07      	XORLW       7
0x0FC4	0xE126      	BNZ         L_Menu0360
;FirmV_0_7_0.c,1761 :: 		{memcpy(LCDLine1,"07 Cl Soft Start",16);LCDUpdateFlag=1;
0x0FC6	0x0E2D      	MOVLW       _LCDLine1
0x0FC8	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x0FCA	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x0FCC	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x0FCE	0x0E32      	MOVLW       ?ICS?lstr80_FirmV_0_7_0
0x0FD0	0x6EF6      	MOVWF       4086 
0x0FD2	0x0E57      	MOVLW       hi_addr(?ICS?lstr80_FirmV_0_7_0)
0x0FD4	0x6EF7      	MOVWF       TBLPTRH 
0x0FD6	0x0E00      	MOVLW       higher_addr(?ICS?lstr80_FirmV_0_7_0)
0x0FD8	0x6EF8      	MOVWF       TBLPTRU 
0x0FDA	0x0E28      	MOVLW       ?lstr80_FirmV_0_7_0
0x0FDC	0x6EE1      	MOVWF       FSR1L 
0x0FDE	0x0E03      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x0FE0	0x6EE2      	MOVWF       FSR1H 
0x0FE2	0x0E11      	MOVLW       17
0x0FE4	0x6E00      	MOVWF       R0 
0x0FE6	0x0E01      	MOVLW       1
0x0FE8	0x6E01      	MOVWF       R1 
0x0FEA	0xDD7F      	RCALL       ___CC2DW
0x0FEC	0x0E28      	MOVLW       ?lstr80_FirmV_0_7_0
0x0FEE	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x0FF0	0x0E03      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x0FF2	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x0FF4	0x0E10      	MOVLW       16
0x0FF6	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x0FF8	0x0E00      	MOVLW       0
0x0FFA	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x0FFC	0xF001EC27  	CALL        _memcpy, 0
0x1000	0x0E01      	MOVLW       1
0x1002	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1762 :: 		charValueToStr(CloseSoftStartTime,LCDLine2+6);}
0x1004	0xF427C120  	MOVFF       _CloseSoftStartTime, FARG_charValueToStr_val
0x1008	0x0E4E      	MOVLW       _LCDLine2+6
0x100A	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x100C	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x100E	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x1010	0xDD74      	RCALL       _charValueToStr
L_Menu0360:
;FirmV_0_7_0.c,1764 :: 		if(MenuPointer==8)
0x1012	0x5020      	MOVF        _MenuPointer, 0 
0x1014	0x0A08      	XORLW       8
0x1016	0xE126      	BNZ         L_Menu0361
;FirmV_0_7_0.c,1765 :: 		{memcpy(LCDLine1,"08 Cl Soft Stop ",16);LCDUpdateFlag=1;
0x1018	0x0E2D      	MOVLW       _LCDLine1
0x101A	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x101C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x101E	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1020	0x0E43      	MOVLW       ?ICS?lstr81_FirmV_0_7_0
0x1022	0x6EF6      	MOVWF       4086 
0x1024	0x0E57      	MOVLW       hi_addr(?ICS?lstr81_FirmV_0_7_0)
0x1026	0x6EF7      	MOVWF       TBLPTRH 
0x1028	0x0E00      	MOVLW       higher_addr(?ICS?lstr81_FirmV_0_7_0)
0x102A	0x6EF8      	MOVWF       TBLPTRU 
0x102C	0x0E39      	MOVLW       ?lstr81_FirmV_0_7_0
0x102E	0x6EE1      	MOVWF       FSR1L 
0x1030	0x0E03      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x1032	0x6EE2      	MOVWF       FSR1H 
0x1034	0x0E11      	MOVLW       17
0x1036	0x6E00      	MOVWF       R0 
0x1038	0x0E01      	MOVLW       1
0x103A	0x6E01      	MOVWF       R1 
0x103C	0xDD56      	RCALL       ___CC2DW
0x103E	0x0E39      	MOVLW       ?lstr81_FirmV_0_7_0
0x1040	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1042	0x0E03      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x1044	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1046	0x0E10      	MOVLW       16
0x1048	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x104A	0x0E00      	MOVLW       0
0x104C	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x104E	0xF001EC27  	CALL        _memcpy, 0
0x1052	0x0E01      	MOVLW       1
0x1054	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1766 :: 		charValueToStr(CloseSoftStopTime,LCDLine2+6);}
0x1056	0xF427C12B  	MOVFF       _CloseSoftStopTime, FARG_charValueToStr_val
0x105A	0x0E4E      	MOVLW       _LCDLine2+6
0x105C	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x105E	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1060	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x1062	0xDD4B      	RCALL       _charValueToStr
L_Menu0361:
;FirmV_0_7_0.c,1768 :: 		if(MenuPointer==9)
0x1064	0x5020      	MOVF        _MenuPointer, 0 
0x1066	0x0A09      	XORLW       9
0x1068	0xE129      	BNZ         L_Menu0362
;FirmV_0_7_0.c,1769 :: 		{memcpy(LCDLine1,"09 Power        ",16);LCDUpdateFlag=1;
0x106A	0x0E2D      	MOVLW       _LCDLine1
0x106C	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x106E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1070	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1072	0x0E54      	MOVLW       ?ICS?lstr82_FirmV_0_7_0
0x1074	0x6EF6      	MOVWF       4086 
0x1076	0x0E57      	MOVLW       hi_addr(?ICS?lstr82_FirmV_0_7_0)
0x1078	0x6EF7      	MOVWF       TBLPTRH 
0x107A	0x0E00      	MOVLW       higher_addr(?ICS?lstr82_FirmV_0_7_0)
0x107C	0x6EF8      	MOVWF       TBLPTRU 
0x107E	0x0E4A      	MOVLW       ?lstr82_FirmV_0_7_0
0x1080	0x6EE1      	MOVWF       FSR1L 
0x1082	0x0E03      	MOVLW       hi_addr(?lstr82_FirmV_0_7_0)
0x1084	0x6EE2      	MOVWF       FSR1H 
0x1086	0x0E11      	MOVLW       17
0x1088	0x6E00      	MOVWF       R0 
0x108A	0x0E01      	MOVLW       1
0x108C	0x6E01      	MOVWF       R1 
0x108E	0xDD2D      	RCALL       ___CC2DW
0x1090	0x0E4A      	MOVLW       ?lstr82_FirmV_0_7_0
0x1092	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1094	0x0E03      	MOVLW       hi_addr(?lstr82_FirmV_0_7_0)
0x1096	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1098	0x0E10      	MOVLW       16
0x109A	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x109C	0x0E00      	MOVLW       0
0x109E	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x10A0	0xF001EC27  	CALL        _memcpy, 0
0x10A4	0x0E01      	MOVLW       1
0x10A6	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1770 :: 		bytetostr(OverloadSens,LCDLine2+6);LCDLine2[9]=' ';}
0x10A8	0xF433C061  	MOVFF       _OverloadSens, FARG_ByteToStr_input
0x10AC	0x0E4E      	MOVLW       _LCDLine2+6
0x10AE	0x6F34      	MOVWF       FARG_ByteToStr_output, 1
0x10B0	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x10B2	0x6F35      	MOVWF       FARG_ByteToStr_output+1, 1
0x10B4	0xF000ECED  	CALL        _ByteToStr, 0
0x10B8	0x0E20      	MOVLW       32
0x10BA	0x6E51      	MOVWF       _LCDLine2+9 
L_Menu0362:
;FirmV_0_7_0.c,1772 :: 		if(MenuPointer==10)
0x10BC	0x5020      	MOVF        _MenuPointer, 0 
0x10BE	0x0A0A      	XORLW       10
0x10C0	0xE126      	BNZ         L_Menu0363
;FirmV_0_7_0.c,1773 :: 		{memcpy(LCDLine1,"10 Interval Time",16);LCDUpdateFlag=1;
0x10C2	0x0E2D      	MOVLW       _LCDLine1
0x10C4	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x10C6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x10C8	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x10CA	0x0E65      	MOVLW       ?ICS?lstr83_FirmV_0_7_0
0x10CC	0x6EF6      	MOVWF       4086 
0x10CE	0x0E57      	MOVLW       hi_addr(?ICS?lstr83_FirmV_0_7_0)
0x10D0	0x6EF7      	MOVWF       TBLPTRH 
0x10D2	0x0E00      	MOVLW       higher_addr(?ICS?lstr83_FirmV_0_7_0)
0x10D4	0x6EF8      	MOVWF       TBLPTRU 
0x10D6	0x0E5B      	MOVLW       ?lstr83_FirmV_0_7_0
0x10D8	0x6EE1      	MOVWF       FSR1L 
0x10DA	0x0E03      	MOVLW       hi_addr(?lstr83_FirmV_0_7_0)
0x10DC	0x6EE2      	MOVWF       FSR1H 
0x10DE	0x0E11      	MOVLW       17
0x10E0	0x6E00      	MOVWF       R0 
0x10E2	0x0E01      	MOVLW       1
0x10E4	0x6E01      	MOVWF       R1 
0x10E6	0xDD01      	RCALL       ___CC2DW
0x10E8	0x0E5B      	MOVLW       ?lstr83_FirmV_0_7_0
0x10EA	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x10EC	0x0E03      	MOVLW       hi_addr(?lstr83_FirmV_0_7_0)
0x10EE	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x10F0	0x0E10      	MOVLW       16
0x10F2	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x10F4	0x0E00      	MOVLW       0
0x10F6	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x10F8	0xF001EC27  	CALL        _memcpy, 0
0x10FC	0x0E01      	MOVLW       1
0x10FE	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1774 :: 		charValueToStr(ActionTimeDiff,LCDLine2+6);}
0x1100	0xF427C110  	MOVFF       _ActionTimeDiff, FARG_charValueToStr_val
0x1104	0x0E4E      	MOVLW       _LCDLine2+6
0x1106	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x1108	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x110A	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x110C	0xDCF6      	RCALL       _charValueToStr
L_Menu0363:
;FirmV_0_7_0.c,1776 :: 		if(MenuPointer==11)
0x110E	0x5020      	MOVF        _MenuPointer, 0 
0x1110	0x0A0B      	XORLW       11
0x1112	0xE129      	BNZ         L_Menu0364
;FirmV_0_7_0.c,1777 :: 		{memcpy(LCDLine1,"11 Auto-close T ",16);LCDUpdateFlag=1;
0x1114	0x0E2D      	MOVLW       _LCDLine1
0x1116	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1118	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x111A	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x111C	0x0E76      	MOVLW       ?ICS?lstr84_FirmV_0_7_0
0x111E	0x6EF6      	MOVWF       4086 
0x1120	0x0E57      	MOVLW       hi_addr(?ICS?lstr84_FirmV_0_7_0)
0x1122	0x6EF7      	MOVWF       TBLPTRH 
0x1124	0x0E00      	MOVLW       higher_addr(?ICS?lstr84_FirmV_0_7_0)
0x1126	0x6EF8      	MOVWF       TBLPTRU 
0x1128	0x0E6C      	MOVLW       ?lstr84_FirmV_0_7_0
0x112A	0x6EE1      	MOVWF       FSR1L 
0x112C	0x0E03      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x112E	0x6EE2      	MOVWF       FSR1H 
0x1130	0x0E11      	MOVLW       17
0x1132	0x6E00      	MOVWF       R0 
0x1134	0x0E01      	MOVLW       1
0x1136	0x6E01      	MOVWF       R1 
0x1138	0xDCD8      	RCALL       ___CC2DW
0x113A	0x0E6C      	MOVLW       ?lstr84_FirmV_0_7_0
0x113C	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x113E	0x0E03      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x1140	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1142	0x0E10      	MOVLW       16
0x1144	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1146	0x0E00      	MOVLW       0
0x1148	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x114A	0xF001EC27  	CALL        _memcpy, 0
0x114E	0x0E01      	MOVLW       1
0x1150	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1778 :: 		intValueToStr(AutoCloseTime,LCDLine2+4);}
0x1152	0xF427C12C  	MOVFF       _AutoCloseTime, FARG_intValueToStr_val
0x1156	0xF428C12D  	MOVFF       _AutoCloseTime+1, FARG_intValueToStr_val+1
0x115A	0x0E4C      	MOVLW       _LCDLine2+4
0x115C	0x6F29      	MOVWF       FARG_intValueToStr_string, 1
0x115E	0x0E00      	MOVLW       hi_addr(_LCDLine2+4)
0x1160	0x6F2A      	MOVWF       FARG_intValueToStr_string+1, 1
0x1162	0xF004EC43  	CALL        _intValueToStr, 0
L_Menu0364:
;FirmV_0_7_0.c,1780 :: 		if(MenuPointer==12)
0x1166	0x5020      	MOVF        _MenuPointer, 0 
0x1168	0x0A0C      	XORLW       12
0x116A	0xE11F      	BNZ         L_Menu0365
;FirmV_0_7_0.c,1781 :: 		{memcpy(LCDLine1,"12 Factory Reset",16);LCDUpdateFlag=1;}
0x116C	0x0E2D      	MOVLW       _LCDLine1
0x116E	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1170	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1172	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1174	0x0E87      	MOVLW       ?ICS?lstr85_FirmV_0_7_0
0x1176	0x6EF6      	MOVWF       4086 
0x1178	0x0E57      	MOVLW       hi_addr(?ICS?lstr85_FirmV_0_7_0)
0x117A	0x6EF7      	MOVWF       TBLPTRH 
0x117C	0x0E00      	MOVLW       higher_addr(?ICS?lstr85_FirmV_0_7_0)
0x117E	0x6EF8      	MOVWF       TBLPTRU 
0x1180	0x0E7D      	MOVLW       ?lstr85_FirmV_0_7_0
0x1182	0x6EE1      	MOVWF       FSR1L 
0x1184	0x0E03      	MOVLW       hi_addr(?lstr85_FirmV_0_7_0)
0x1186	0x6EE2      	MOVWF       FSR1H 
0x1188	0x0E11      	MOVLW       17
0x118A	0x6E00      	MOVWF       R0 
0x118C	0x0E01      	MOVLW       1
0x118E	0x6E01      	MOVWF       R1 
0x1190	0xDCAC      	RCALL       ___CC2DW
0x1192	0x0E7D      	MOVLW       ?lstr85_FirmV_0_7_0
0x1194	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1196	0x0E03      	MOVLW       hi_addr(?lstr85_FirmV_0_7_0)
0x1198	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x119A	0x0E10      	MOVLW       16
0x119C	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x119E	0x0E00      	MOVLW       0
0x11A0	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x11A2	0xF001EC27  	CALL        _memcpy, 0
0x11A6	0x0E01      	MOVLW       1
0x11A8	0x6E59      	MOVWF       _LCDUpdateFlag 
L_Menu0365:
;FirmV_0_7_0.c,1783 :: 		if(MenuPointer==13)
0x11AA	0x5020      	MOVF        _MenuPointer, 0 
0x11AC	0x0A0D      	XORLW       13
0x11AE	0xE166      	BNZ         L_Menu0366
;FirmV_0_7_0.c,1784 :: 		{memcpy(LCDLine1,"13 Open Photo En",16);LCDUpdateFlag=1;
0x11B0	0x0E2D      	MOVLW       _LCDLine1
0x11B2	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x11B4	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x11B6	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x11B8	0x0E98      	MOVLW       ?ICS?lstr86_FirmV_0_7_0
0x11BA	0x6EF6      	MOVWF       4086 
0x11BC	0x0E57      	MOVLW       hi_addr(?ICS?lstr86_FirmV_0_7_0)
0x11BE	0x6EF7      	MOVWF       TBLPTRH 
0x11C0	0x0E00      	MOVLW       higher_addr(?ICS?lstr86_FirmV_0_7_0)
0x11C2	0x6EF8      	MOVWF       TBLPTRU 
0x11C4	0x0E8E      	MOVLW       ?lstr86_FirmV_0_7_0
0x11C6	0x6EE1      	MOVWF       FSR1L 
0x11C8	0x0E03      	MOVLW       hi_addr(?lstr86_FirmV_0_7_0)
0x11CA	0x6EE2      	MOVWF       FSR1H 
0x11CC	0x0E11      	MOVLW       17
0x11CE	0x6E00      	MOVWF       R0 
0x11D0	0x0E01      	MOVLW       1
0x11D2	0x6E01      	MOVWF       R1 
0x11D4	0xDC8A      	RCALL       ___CC2DW
0x11D6	0x0E8E      	MOVLW       ?lstr86_FirmV_0_7_0
0x11D8	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x11DA	0x0E03      	MOVLW       hi_addr(?lstr86_FirmV_0_7_0)
0x11DC	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x11DE	0x0E10      	MOVLW       16
0x11E0	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x11E2	0x0E00      	MOVLW       0
0x11E4	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x11E6	0xF001EC27  	CALL        _memcpy, 0
0x11EA	0x0E01      	MOVLW       1
0x11EC	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1785 :: 		if(OpenPhEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x11EE	0x0101      	MOVLB       1
0x11F0	0x512F      	MOVF        _OpenPhEnable, 0, 1
0x11F2	0x0A00      	XORLW       0
0x11F4	0xE121      	BNZ         L_Menu0367
0x11F6	0x0E4E      	MOVLW       _LCDLine2+6
0x11F8	0x0104      	MOVLB       4
0x11FA	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x11FC	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x11FE	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1200	0x0E4E      	MOVLW       78
0x1202	0x0103      	MOVLB       3
0x1204	0x6F9F      	MOVWF       ?lstr87_FirmV_0_7_0, 1
0x1206	0x0E6F      	MOVLW       111
0x1208	0x6FA0      	MOVWF       ?lstr87_FirmV_0_7_0+1, 1
0x120A	0x0E20      	MOVLW       32
0x120C	0x6FA1      	MOVWF       ?lstr87_FirmV_0_7_0+2, 1
0x120E	0x0E20      	MOVLW       32
0x1210	0x6FA2      	MOVWF       ?lstr87_FirmV_0_7_0+3, 1
0x1212	0x0E20      	MOVLW       32
0x1214	0x6FA3      	MOVWF       ?lstr87_FirmV_0_7_0+4, 1
0x1216	0x0E20      	MOVLW       32
0x1218	0x6FA4      	MOVWF       ?lstr87_FirmV_0_7_0+5, 1
0x121A	0x0E20      	MOVLW       32
0x121C	0x6FA5      	MOVWF       ?lstr87_FirmV_0_7_0+6, 1
0x121E	0x6BA6      	CLRF        ?lstr87_FirmV_0_7_0+7, 1
0x1220	0x0E9F      	MOVLW       ?lstr87_FirmV_0_7_0
0x1222	0x0104      	MOVLB       4
0x1224	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1226	0x0E03      	MOVLW       hi_addr(?lstr87_FirmV_0_7_0)
0x1228	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x122A	0x0E07      	MOVLW       7
0x122C	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x122E	0x0E00      	MOVLW       0
0x1230	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1232	0xF001EC27  	CALL        _memcpy, 0
0x1236	0xD022      	BRA         L_Menu0368
L_Menu0367:
0x1238	0x0104      	MOVLB       4
0x123A	0x0E4E      	MOVLW       _LCDLine2+6
0x123C	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x123E	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1240	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1242	0x0E59      	MOVLW       89
0x1244	0x0103      	MOVLB       3
0x1246	0x6FA7      	MOVWF       ?lstr88_FirmV_0_7_0, 1
0x1248	0x0E65      	MOVLW       101
0x124A	0x6FA8      	MOVWF       ?lstr88_FirmV_0_7_0+1, 1
0x124C	0x0E73      	MOVLW       115
0x124E	0x6FA9      	MOVWF       ?lstr88_FirmV_0_7_0+2, 1
0x1250	0x0E20      	MOVLW       32
0x1252	0x6FAA      	MOVWF       ?lstr88_FirmV_0_7_0+3, 1
0x1254	0x0E20      	MOVLW       32
0x1256	0x6FAB      	MOVWF       ?lstr88_FirmV_0_7_0+4, 1
0x1258	0x0E20      	MOVLW       32
0x125A	0x6FAC      	MOVWF       ?lstr88_FirmV_0_7_0+5, 1
0x125C	0x0E20      	MOVLW       32
0x125E	0x6FAD      	MOVWF       ?lstr88_FirmV_0_7_0+6, 1
0x1260	0x0E20      	MOVLW       32
0x1262	0x6FAE      	MOVWF       ?lstr88_FirmV_0_7_0+7, 1
0x1264	0x6BAF      	CLRF        ?lstr88_FirmV_0_7_0+8, 1
0x1266	0x0EA7      	MOVLW       ?lstr88_FirmV_0_7_0
0x1268	0x0104      	MOVLB       4
0x126A	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x126C	0x0E03      	MOVLW       hi_addr(?lstr88_FirmV_0_7_0)
0x126E	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1270	0x0E08      	MOVLW       8
0x1272	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1274	0x0E00      	MOVLW       0
0x1276	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1278	0xF001EC27  	CALL        _memcpy, 0
L_Menu0368:
L_Menu0366:
;FirmV_0_7_0.c,1787 :: 		if(MenuPointer==14)
0x127C	0x5020      	MOVF        _MenuPointer, 0 
0x127E	0x0A0E      	XORLW       14
0x1280	0xE166      	BNZ         L_Menu0369
;FirmV_0_7_0.c,1788 :: 		{memcpy(LCDLine1,"14 Limit Enable ",16);LCDUpdateFlag=1;
0x1282	0x0E2D      	MOVLW       _LCDLine1
0x1284	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1286	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1288	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x128A	0x0EBA      	MOVLW       ?ICS?lstr89_FirmV_0_7_0
0x128C	0x6EF6      	MOVWF       4086 
0x128E	0x0E57      	MOVLW       hi_addr(?ICS?lstr89_FirmV_0_7_0)
0x1290	0x6EF7      	MOVWF       TBLPTRH 
0x1292	0x0E00      	MOVLW       higher_addr(?ICS?lstr89_FirmV_0_7_0)
0x1294	0x6EF8      	MOVWF       TBLPTRU 
0x1296	0x0EB0      	MOVLW       ?lstr89_FirmV_0_7_0
0x1298	0x6EE1      	MOVWF       FSR1L 
0x129A	0x0E03      	MOVLW       hi_addr(?lstr89_FirmV_0_7_0)
0x129C	0x6EE2      	MOVWF       FSR1H 
0x129E	0x0E11      	MOVLW       17
0x12A0	0x6E00      	MOVWF       R0 
0x12A2	0x0E01      	MOVLW       1
0x12A4	0x6E01      	MOVWF       R1 
0x12A6	0xDC21      	RCALL       ___CC2DW
0x12A8	0x0EB0      	MOVLW       ?lstr89_FirmV_0_7_0
0x12AA	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x12AC	0x0E03      	MOVLW       hi_addr(?lstr89_FirmV_0_7_0)
0x12AE	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x12B0	0x0E10      	MOVLW       16
0x12B2	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x12B4	0x0E00      	MOVLW       0
0x12B6	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x12B8	0xF001EC27  	CALL        _memcpy, 0
0x12BC	0x0E01      	MOVLW       1
0x12BE	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1789 :: 		if(LimiterEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x12C0	0x0101      	MOVLB       1
0x12C2	0x5125      	MOVF        _LimiterEnable, 0, 1
0x12C4	0x0A00      	XORLW       0
0x12C6	0xE121      	BNZ         L_Menu0370
0x12C8	0x0E4E      	MOVLW       _LCDLine2+6
0x12CA	0x0104      	MOVLB       4
0x12CC	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x12CE	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x12D0	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x12D2	0x0E4E      	MOVLW       78
0x12D4	0x0103      	MOVLB       3
0x12D6	0x6FC1      	MOVWF       ?lstr90_FirmV_0_7_0, 1
0x12D8	0x0E6F      	MOVLW       111
0x12DA	0x6FC2      	MOVWF       ?lstr90_FirmV_0_7_0+1, 1
0x12DC	0x0E20      	MOVLW       32
0x12DE	0x6FC3      	MOVWF       ?lstr90_FirmV_0_7_0+2, 1
0x12E0	0x0E20      	MOVLW       32
0x12E2	0x6FC4      	MOVWF       ?lstr90_FirmV_0_7_0+3, 1
0x12E4	0x0E20      	MOVLW       32
0x12E6	0x6FC5      	MOVWF       ?lstr90_FirmV_0_7_0+4, 1
0x12E8	0x0E20      	MOVLW       32
0x12EA	0x6FC6      	MOVWF       ?lstr90_FirmV_0_7_0+5, 1
0x12EC	0x0E20      	MOVLW       32
0x12EE	0x6FC7      	MOVWF       ?lstr90_FirmV_0_7_0+6, 1
0x12F0	0x6BC8      	CLRF        ?lstr90_FirmV_0_7_0+7, 1
0x12F2	0x0EC1      	MOVLW       ?lstr90_FirmV_0_7_0
0x12F4	0x0104      	MOVLB       4
0x12F6	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x12F8	0x0E03      	MOVLW       hi_addr(?lstr90_FirmV_0_7_0)
0x12FA	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x12FC	0x0E07      	MOVLW       7
0x12FE	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1300	0x0E00      	MOVLW       0
0x1302	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1304	0xF001EC27  	CALL        _memcpy, 0
0x1308	0xD022      	BRA         L_Menu0371
L_Menu0370:
0x130A	0x0104      	MOVLB       4
0x130C	0x0E4E      	MOVLW       _LCDLine2+6
0x130E	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1310	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1312	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1314	0x0E59      	MOVLW       89
0x1316	0x0103      	MOVLB       3
0x1318	0x6FC9      	MOVWF       ?lstr91_FirmV_0_7_0, 1
0x131A	0x0E65      	MOVLW       101
0x131C	0x6FCA      	MOVWF       ?lstr91_FirmV_0_7_0+1, 1
0x131E	0x0E73      	MOVLW       115
0x1320	0x6FCB      	MOVWF       ?lstr91_FirmV_0_7_0+2, 1
0x1322	0x0E20      	MOVLW       32
0x1324	0x6FCC      	MOVWF       ?lstr91_FirmV_0_7_0+3, 1
0x1326	0x0E20      	MOVLW       32
0x1328	0x6FCD      	MOVWF       ?lstr91_FirmV_0_7_0+4, 1
0x132A	0x0E20      	MOVLW       32
0x132C	0x6FCE      	MOVWF       ?lstr91_FirmV_0_7_0+5, 1
0x132E	0x0E20      	MOVLW       32
0x1330	0x6FCF      	MOVWF       ?lstr91_FirmV_0_7_0+6, 1
0x1332	0x0E20      	MOVLW       32
0x1334	0x6FD0      	MOVWF       ?lstr91_FirmV_0_7_0+7, 1
0x1336	0x6BD1      	CLRF        ?lstr91_FirmV_0_7_0+8, 1
0x1338	0x0EC9      	MOVLW       ?lstr91_FirmV_0_7_0
0x133A	0x0104      	MOVLB       4
0x133C	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x133E	0x0E03      	MOVLW       hi_addr(?lstr91_FirmV_0_7_0)
0x1340	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1342	0x0E08      	MOVLW       8
0x1344	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1346	0x0E00      	MOVLW       0
0x1348	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x134A	0xF001EC27  	CALL        _memcpy, 0
L_Menu0371:
L_Menu0369:
;FirmV_0_7_0.c,1791 :: 		if(MenuPointer==15)
0x134E	0x5020      	MOVF        _MenuPointer, 0 
0x1350	0x0A0F      	XORLW       15
0x1352	0xE167      	BNZ         L_Menu0372
;FirmV_0_7_0.c,1792 :: 		{memcpy(LCDLine1,"15 Lock Force   ",16);LCDUpdateFlag=1;
0x1354	0x0E2D      	MOVLW       _LCDLine1
0x1356	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1358	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x135A	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x135C	0x0EDC      	MOVLW       ?ICS?lstr92_FirmV_0_7_0
0x135E	0x6EF6      	MOVWF       4086 
0x1360	0x0E57      	MOVLW       hi_addr(?ICS?lstr92_FirmV_0_7_0)
0x1362	0x6EF7      	MOVWF       TBLPTRH 
0x1364	0x0E00      	MOVLW       higher_addr(?ICS?lstr92_FirmV_0_7_0)
0x1366	0x6EF8      	MOVWF       TBLPTRU 
0x1368	0x0ED2      	MOVLW       ?lstr92_FirmV_0_7_0
0x136A	0x6EE1      	MOVWF       FSR1L 
0x136C	0x0E03      	MOVLW       hi_addr(?lstr92_FirmV_0_7_0)
0x136E	0x6EE2      	MOVWF       FSR1H 
0x1370	0x0E11      	MOVLW       17
0x1372	0x6E00      	MOVWF       R0 
0x1374	0x0E01      	MOVLW       1
0x1376	0x6E01      	MOVWF       R1 
0x1378	0xF005EC75  	CALL        ___CC2DW, 0
0x137C	0x0ED2      	MOVLW       ?lstr92_FirmV_0_7_0
0x137E	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1380	0x0E03      	MOVLW       hi_addr(?lstr92_FirmV_0_7_0)
0x1382	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1384	0x0E10      	MOVLW       16
0x1386	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1388	0x0E00      	MOVLW       0
0x138A	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x138C	0xF001EC27  	CALL        _memcpy, 0
0x1390	0x0E01      	MOVLW       1
0x1392	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1793 :: 		if(LockForce==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x1394	0x0101      	MOVLB       1
0x1396	0x512E      	MOVF        _LockForce, 0, 1
0x1398	0x0A00      	XORLW       0
0x139A	0xE121      	BNZ         L_Menu0373
0x139C	0x0E4E      	MOVLW       _LCDLine2+6
0x139E	0x0104      	MOVLB       4
0x13A0	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x13A2	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x13A4	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x13A6	0x0E4E      	MOVLW       78
0x13A8	0x0103      	MOVLB       3
0x13AA	0x6FE3      	MOVWF       ?lstr93_FirmV_0_7_0, 1
0x13AC	0x0E6F      	MOVLW       111
0x13AE	0x6FE4      	MOVWF       ?lstr93_FirmV_0_7_0+1, 1
0x13B0	0x0E20      	MOVLW       32
0x13B2	0x6FE5      	MOVWF       ?lstr93_FirmV_0_7_0+2, 1
0x13B4	0x0E20      	MOVLW       32
0x13B6	0x6FE6      	MOVWF       ?lstr93_FirmV_0_7_0+3, 1
0x13B8	0x0E20      	MOVLW       32
0x13BA	0x6FE7      	MOVWF       ?lstr93_FirmV_0_7_0+4, 1
0x13BC	0x0E20      	MOVLW       32
0x13BE	0x6FE8      	MOVWF       ?lstr93_FirmV_0_7_0+5, 1
0x13C0	0x0E20      	MOVLW       32
0x13C2	0x6FE9      	MOVWF       ?lstr93_FirmV_0_7_0+6, 1
0x13C4	0x6BEA      	CLRF        ?lstr93_FirmV_0_7_0+7, 1
0x13C6	0x0EE3      	MOVLW       ?lstr93_FirmV_0_7_0
0x13C8	0x0104      	MOVLB       4
0x13CA	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x13CC	0x0E03      	MOVLW       hi_addr(?lstr93_FirmV_0_7_0)
0x13CE	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x13D0	0x0E07      	MOVLW       7
0x13D2	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x13D4	0x0E00      	MOVLW       0
0x13D6	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x13D8	0xF001EC27  	CALL        _memcpy, 0
0x13DC	0xD022      	BRA         L_Menu0374
L_Menu0373:
0x13DE	0x0104      	MOVLB       4
0x13E0	0x0E4E      	MOVLW       _LCDLine2+6
0x13E2	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x13E4	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x13E6	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x13E8	0x0E59      	MOVLW       89
0x13EA	0x0103      	MOVLB       3
0x13EC	0x6FEB      	MOVWF       ?lstr94_FirmV_0_7_0, 1
0x13EE	0x0E65      	MOVLW       101
0x13F0	0x6FEC      	MOVWF       ?lstr94_FirmV_0_7_0+1, 1
0x13F2	0x0E73      	MOVLW       115
0x13F4	0x6FED      	MOVWF       ?lstr94_FirmV_0_7_0+2, 1
0x13F6	0x0E20      	MOVLW       32
0x13F8	0x6FEE      	MOVWF       ?lstr94_FirmV_0_7_0+3, 1
0x13FA	0x0E20      	MOVLW       32
0x13FC	0x6FEF      	MOVWF       ?lstr94_FirmV_0_7_0+4, 1
0x13FE	0x0E20      	MOVLW       32
0x1400	0x6FF0      	MOVWF       ?lstr94_FirmV_0_7_0+5, 1
0x1402	0x0E20      	MOVLW       32
0x1404	0x6FF1      	MOVWF       ?lstr94_FirmV_0_7_0+6, 1
0x1406	0x0E20      	MOVLW       32
0x1408	0x6FF2      	MOVWF       ?lstr94_FirmV_0_7_0+7, 1
0x140A	0x6BF3      	CLRF        ?lstr94_FirmV_0_7_0+8, 1
0x140C	0x0EEB      	MOVLW       ?lstr94_FirmV_0_7_0
0x140E	0x0104      	MOVLB       4
0x1410	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1412	0x0E03      	MOVLW       hi_addr(?lstr94_FirmV_0_7_0)
0x1414	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1416	0x0E08      	MOVLW       8
0x1418	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x141A	0x0E00      	MOVLW       0
0x141C	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x141E	0xF001EC27  	CALL        _memcpy, 0
L_Menu0374:
L_Menu0372:
;FirmV_0_7_0.c,1795 :: 		if(MenuPointer==16)
0x1422	0x5020      	MOVF        _MenuPointer, 0 
0x1424	0x0A10      	XORLW       16
0x1426	0xE128      	BNZ         L_Menu0375
;FirmV_0_7_0.c,1796 :: 		{memcpy(LCDLine1,"16 Au-Cl Pass   ",16);LCDUpdateFlag=1;
0x1428	0x0E2D      	MOVLW       _LCDLine1
0x142A	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x142C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x142E	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1430	0x0EFE      	MOVLW       ?ICS?lstr95_FirmV_0_7_0
0x1432	0x6EF6      	MOVWF       4086 
0x1434	0x0E57      	MOVLW       hi_addr(?ICS?lstr95_FirmV_0_7_0)
0x1436	0x6EF7      	MOVWF       TBLPTRH 
0x1438	0x0E00      	MOVLW       higher_addr(?ICS?lstr95_FirmV_0_7_0)
0x143A	0x6EF8      	MOVWF       TBLPTRU 
0x143C	0x0EF4      	MOVLW       ?lstr95_FirmV_0_7_0
0x143E	0x6EE1      	MOVWF       FSR1L 
0x1440	0x0E03      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x1442	0x6EE2      	MOVWF       FSR1H 
0x1444	0x0E11      	MOVLW       17
0x1446	0x6E00      	MOVWF       R0 
0x1448	0x0E01      	MOVLW       1
0x144A	0x6E01      	MOVWF       R1 
0x144C	0xF005EC75  	CALL        ___CC2DW, 0
0x1450	0x0EF4      	MOVLW       ?lstr95_FirmV_0_7_0
0x1452	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1454	0x0E03      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x1456	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1458	0x0E10      	MOVLW       16
0x145A	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x145C	0x0E00      	MOVLW       0
0x145E	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1460	0xF001EC27  	CALL        _memcpy, 0
0x1464	0x0E01      	MOVLW       1
0x1466	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1797 :: 		charValueToStr(CloseAfterPass,LCDLine2+6);}
0x1468	0xF427C12A  	MOVFF       _CloseAfterPass, FARG_charValueToStr_val
0x146C	0x0E4E      	MOVLW       _LCDLine2+6
0x146E	0x6F28      	MOVWF       FARG_charValueToStr_string, 1
0x1470	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1472	0x6F29      	MOVWF       FARG_charValueToStr_string+1, 1
0x1474	0xF005EC7D  	CALL        _charValueToStr, 0
L_Menu0375:
;FirmV_0_7_0.c,1799 :: 		if(MenuPointer==17)
0x1478	0x5020      	MOVF        _MenuPointer, 0 
0x147A	0x0A11      	XORLW       17
0x147C	0xE120      	BNZ         L_Menu0376
;FirmV_0_7_0.c,1800 :: 		{memcpy(LCDLine1,"17 Save Changes ",16);LCDUpdateFlag=1;}
0x147E	0x0E2D      	MOVLW       _LCDLine1
0x1480	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1482	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1484	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1486	0x0E0F      	MOVLW       ?ICS?lstr96_FirmV_0_7_0
0x1488	0x6EF6      	MOVWF       4086 
0x148A	0x0E58      	MOVLW       hi_addr(?ICS?lstr96_FirmV_0_7_0)
0x148C	0x6EF7      	MOVWF       TBLPTRH 
0x148E	0x0E00      	MOVLW       higher_addr(?ICS?lstr96_FirmV_0_7_0)
0x1490	0x6EF8      	MOVWF       TBLPTRU 
0x1492	0x0E05      	MOVLW       ?lstr96_FirmV_0_7_0
0x1494	0x6EE1      	MOVWF       FSR1L 
0x1496	0x0E04      	MOVLW       hi_addr(?lstr96_FirmV_0_7_0)
0x1498	0x6EE2      	MOVWF       FSR1H 
0x149A	0x0E11      	MOVLW       17
0x149C	0x6E00      	MOVWF       R0 
0x149E	0x0E01      	MOVLW       1
0x14A0	0x6E01      	MOVWF       R1 
0x14A2	0xF005EC75  	CALL        ___CC2DW, 0
0x14A6	0x0E05      	MOVLW       ?lstr96_FirmV_0_7_0
0x14A8	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x14AA	0x0E04      	MOVLW       hi_addr(?lstr96_FirmV_0_7_0)
0x14AC	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x14AE	0x0E10      	MOVLW       16
0x14B0	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x14B2	0x0E00      	MOVLW       0
0x14B4	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x14B6	0xF001EC27  	CALL        _memcpy, 0
0x14BA	0x0E01      	MOVLW       1
0x14BC	0x6E59      	MOVWF       _LCDUpdateFlag 
L_Menu0376:
;FirmV_0_7_0.c,1802 :: 		if(MenuPointer==18)
0x14BE	0x5020      	MOVF        _MenuPointer, 0 
0x14C0	0x0A12      	XORLW       18
0x14C2	0xE120      	BNZ         L_Menu0377
;FirmV_0_7_0.c,1803 :: 		{memcpy(LCDLine1,"18 Discard Exit ",16);LCDUpdateFlag=1;}
0x14C4	0x0E2D      	MOVLW       _LCDLine1
0x14C6	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x14C8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x14CA	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x14CC	0x0E20      	MOVLW       ?ICS?lstr97_FirmV_0_7_0
0x14CE	0x6EF6      	MOVWF       4086 
0x14D0	0x0E58      	MOVLW       hi_addr(?ICS?lstr97_FirmV_0_7_0)
0x14D2	0x6EF7      	MOVWF       TBLPTRH 
0x14D4	0x0E00      	MOVLW       higher_addr(?ICS?lstr97_FirmV_0_7_0)
0x14D6	0x6EF8      	MOVWF       TBLPTRU 
0x14D8	0x0E16      	MOVLW       ?lstr97_FirmV_0_7_0
0x14DA	0x6EE1      	MOVWF       FSR1L 
0x14DC	0x0E04      	MOVLW       hi_addr(?lstr97_FirmV_0_7_0)
0x14DE	0x6EE2      	MOVWF       FSR1H 
0x14E0	0x0E11      	MOVLW       17
0x14E2	0x6E00      	MOVWF       R0 
0x14E4	0x0E01      	MOVLW       1
0x14E6	0x6E01      	MOVWF       R1 
0x14E8	0xF005EC75  	CALL        ___CC2DW, 0
0x14EC	0x0E16      	MOVLW       ?lstr97_FirmV_0_7_0
0x14EE	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x14F0	0x0E04      	MOVLW       hi_addr(?lstr97_FirmV_0_7_0)
0x14F2	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x14F4	0x0E10      	MOVLW       16
0x14F6	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x14F8	0x0E00      	MOVLW       0
0x14FA	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x14FC	0xF001EC27  	CALL        _memcpy, 0
0x1500	0x0E01      	MOVLW       1
0x1502	0x6E59      	MOVWF       _LCDUpdateFlag 
L_Menu0377:
;FirmV_0_7_0.c,1806 :: 		State=101;
0x1504	0x0E65      	MOVLW       101
0x1506	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,1807 :: 		}
0x1508	0x0012      	RETURN      0
; end of _Menu0
_FactorySettings:
;FirmV_0_7_0.c,1587 :: 		void FactorySettings()
;FirmV_0_7_0.c,1589 :: 		Door1OpenTime=20;
0x150A	0x0E14      	MOVLW       20
0x150C	0x0101      	MOVLB       1
0x150E	0x6F17      	MOVWF       _Door1OpenTime, 1
;FirmV_0_7_0.c,1590 :: 		Door1CloseTime=20;
0x1510	0x0E14      	MOVLW       20
0x1512	0x6F0C      	MOVWF       _Door1CloseTime, 1
;FirmV_0_7_0.c,1591 :: 		Door2OpenTime=20;
0x1514	0x0E14      	MOVLW       20
0x1516	0x6F0D      	MOVWF       _Door2OpenTime, 1
;FirmV_0_7_0.c,1592 :: 		Door2CloseTime=20;
0x1518	0x0E14      	MOVLW       20
0x151A	0x6F0B      	MOVWF       _Door2CloseTime, 1
;FirmV_0_7_0.c,1593 :: 		OverloadSens=5;
0x151C	0x0E05      	MOVLW       5
0x151E	0x6E61      	MOVWF       _OverloadSens 
;FirmV_0_7_0.c,1594 :: 		SetOverloadParams(4);  //9-5
0x1520	0x0E04      	MOVLW       4
0x1522	0x0104      	MOVLB       4
0x1524	0x6F33      	MOVWF       FARG_SetOverloadParams_p, 1
0x1526	0xF002ECDC  	CALL        _SetOverloadParams, 0
;FirmV_0_7_0.c,1595 :: 		OpenSoftStopTime=10;
0x152A	0x0E0A      	MOVLW       10
0x152C	0x0101      	MOVLB       1
0x152E	0x6F0E      	MOVWF       _OpenSoftStopTime, 1
;FirmV_0_7_0.c,1596 :: 		OpenSoftStartTime=4;
0x1530	0x0E04      	MOVLW       4
0x1532	0x6F0F      	MOVWF       _OpenSoftStartTime, 1
;FirmV_0_7_0.c,1597 :: 		CloseSoftStopTime=10;
0x1534	0x0E0A      	MOVLW       10
0x1536	0x6F2B      	MOVWF       _CloseSoftStopTime, 1
;FirmV_0_7_0.c,1598 :: 		CloseSoftStartTime=4;
0x1538	0x0E04      	MOVLW       4
0x153A	0x6F20      	MOVWF       _CloseSoftStartTime, 1
;FirmV_0_7_0.c,1599 :: 		ActionTimeDiff=12;
0x153C	0x0E0C      	MOVLW       12
0x153E	0x6F10      	MOVWF       _ActionTimeDiff, 1
;FirmV_0_7_0.c,1600 :: 		AutoCloseTime=0;
0x1540	0x6B2C      	CLRF        _AutoCloseTime, 1
0x1542	0x6B2D      	CLRF        _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1601 :: 		LockForce=0;
0x1544	0x6B2E      	CLRF        _LockForce, 1
;FirmV_0_7_0.c,1602 :: 		OpenPhEnable=0;
0x1546	0x6B2F      	CLRF        _OpenPhEnable, 1
;FirmV_0_7_0.c,1603 :: 		LimiterEnable=0;
0x1548	0x6B25      	CLRF        _LimiterEnable, 1
;FirmV_0_7_0.c,1604 :: 		CloseAfterPass=0;
0x154A	0x6B2A      	CLRF        _CloseAfterPass, 1
;FirmV_0_7_0.c,1606 :: 		SaveConfigs();
0x154C	0xF004ECF4  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,1607 :: 		}
0x1550	0x0012      	RETURN      0
; end of _FactorySettings
_SetMotorSpeed:
;FirmV_0_7_0.c,1475 :: 		void SetMotorSpeed(char M1FullSpeed,char M2FullSpeed)
;FirmV_0_7_0.c,1477 :: 		if((M1FullSpeed==0)||(M2FullSpeed==0))
0x1552	0x0102      	MOVLB       2
0x1554	0x517E      	MOVF        FARG_SetMotorSpeed_M1FullSpeed, 0, 1
0x1556	0x0A00      	XORLW       0
0x1558	0xE004      	BZ          L__SetMotorSpeed569
0x155A	0x517F      	MOVF        FARG_SetMotorSpeed_M2FullSpeed, 0, 1
0x155C	0x0A00      	XORLW       0
0x155E	0xE001      	BZ          L__SetMotorSpeed569
0x1560	0xD002      	BRA         L_SetMotorSpeed328
L__SetMotorSpeed569:
;FirmV_0_7_0.c,1478 :: 		INT0E_bit=1;
0x1562	0x88F2      	BSF         INT0E_bit, 4 
0x1564	0xD001      	BRA         L_SetMotorSpeed329
L_SetMotorSpeed328:
;FirmV_0_7_0.c,1480 :: 		INT0E_bit=0;
0x1566	0x98F2      	BCF         INT0E_bit, 4 
L_SetMotorSpeed329:
;FirmV_0_7_0.c,1482 :: 		Motor1FullSpeed=M1FullSpeed;
0x1568	0xF060C27E  	MOVFF       FARG_SetMotorSpeed_M1FullSpeed, _Motor1FullSpeed
;FirmV_0_7_0.c,1483 :: 		Motor2FullSpeed=M2FullSpeed;
0x156C	0xF05FC27F  	MOVFF       FARG_SetMotorSpeed_M2FullSpeed, _Motor2FullSpeed
;FirmV_0_7_0.c,1484 :: 		}
0x1570	0x0012      	RETURN      0
; end of _SetMotorSpeed
_StopMotor:
;FirmV_0_7_0.c,1631 :: 		void StopMotor(char Mx)
;FirmV_0_7_0.c,1633 :: 		if(Mx==1)
0x1572	0x0102      	MOVLB       2
0x1574	0x517E      	MOVF        FARG_StopMotor_Mx, 0, 1
0x1576	0x0A01      	XORLW       1
0x1578	0xE102      	BNZ         L_StopMotor334
;FirmV_0_7_0.c,1635 :: 		Motor1Start=0;
0x157A	0x6A27      	CLRF        _Motor1Start 
;FirmV_0_7_0.c,1636 :: 		Motor1=0;
0x157C	0x9282      	BCF         PORTC, 1 
;FirmV_0_7_0.c,1637 :: 		}
L_StopMotor334:
;FirmV_0_7_0.c,1639 :: 		if(Mx==2)
0x157E	0x517E      	MOVF        FARG_StopMotor_Mx, 0, 1
0x1580	0x0A02      	XORLW       2
0x1582	0xE102      	BNZ         L_StopMotor335
;FirmV_0_7_0.c,1641 :: 		Motor2Start=0;
0x1584	0x6A28      	CLRF        _Motor2Start 
;FirmV_0_7_0.c,1642 :: 		Motor2=0;
0x1586	0x9082      	BCF         PORTC, 0 
;FirmV_0_7_0.c,1643 :: 		}
L_StopMotor335:
;FirmV_0_7_0.c,1644 :: 		}
0x1588	0x0012      	RETURN      0
; end of _StopMotor
_Logger:
;FirmV_0_7_0.c,303 :: 		void Logger(char* text)
;FirmV_0_7_0.c,306 :: 		longwordtostrwithzeros(ms500,time);
0x158A	0xF427C01C  	MOVFF       _ms500, FARG_LongWordToStrWithZeros_input
0x158E	0xF428C01D  	MOVFF       _ms500+1, FARG_LongWordToStrWithZeros_input+1
0x1592	0xF429C01E  	MOVFF       _ms500+2, FARG_LongWordToStrWithZeros_input+2
0x1596	0xF42AC01F  	MOVFF       _ms500+3, FARG_LongWordToStrWithZeros_input+3
0x159A	0x0E80      	MOVLW       Logger_time_L0
0x159C	0x0104      	MOVLB       4
0x159E	0x6F2B      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x15A0	0x0E02      	MOVLW       hi_addr(Logger_time_L0)
0x15A2	0x6F2C      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x15A4	0xF003ECE0  	CALL        _LongWordToStrWithZeros, 0
;FirmV_0_7_0.c,307 :: 		uart_write_text(time);
0x15A8	0x0E80      	MOVLW       Logger_time_L0
0x15AA	0x6F27      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x15AC	0x0E02      	MOVLW       hi_addr(Logger_time_L0)
0x15AE	0x6F28      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x15B0	0xF004EC8B  	CALL        _UART_Write_Text, 0
;FirmV_0_7_0.c,308 :: 		uart1_write_text(": ");
0x15B4	0x0E3A      	MOVLW       58
0x15B6	0x0102      	MOVLB       2
0x15B8	0x6F8B      	MOVWF       ?lstr1_FirmV_0_7_0, 1
0x15BA	0x0E20      	MOVLW       32
0x15BC	0x6F8C      	MOVWF       ?lstr1_FirmV_0_7_0+1, 1
0x15BE	0x6B8D      	CLRF        ?lstr1_FirmV_0_7_0+2, 1
0x15C0	0x0E8B      	MOVLW       ?lstr1_FirmV_0_7_0
0x15C2	0x0104      	MOVLB       4
0x15C4	0x6F27      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x15C6	0x0E02      	MOVLW       hi_addr(?lstr1_FirmV_0_7_0)
0x15C8	0x6F28      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x15CA	0xF005EC5A  	CALL        _UART1_Write_Text, 0
;FirmV_0_7_0.c,309 :: 		uart1_write_text(text);
0x15CE	0xF427C27E  	MOVFF       FARG_Logger_text, FARG_UART1_Write_Text_uart_text
0x15D2	0xF428C27F  	MOVFF       FARG_Logger_text+1, FARG_UART1_Write_Text_uart_text+1
0x15D6	0xF005EC5A  	CALL        _UART1_Write_Text, 0
;FirmV_0_7_0.c,310 :: 		uart1_write(10);
0x15DA	0x0E0A      	MOVLW       10
0x15DC	0x6F3A      	MOVWF       FARG_UART1_Write_data_, 1
0x15DE	0xF000ECB0  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,311 :: 		uart1_write(13);
0x15E2	0x0E0D      	MOVLW       13
0x15E4	0x0104      	MOVLB       4
0x15E6	0x6F3A      	MOVWF       FARG_UART1_Write_data_, 1
0x15E8	0xF000ECB0  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,312 :: 		}
0x15EC	0x0012      	RETURN      0
; end of _Logger
_AddTask:
;FirmV_0_7_0.c,1233 :: 		void AddTask(unsigned long OccTime,char tcode)
;FirmV_0_7_0.c,1236 :: 		for(i=0;i<20;i++)
0x15EE	0x0102      	MOVLB       2
0x15F0	0x6B83      	CLRF        AddTask_i_L0, 1
L_AddTask260:
0x15F2	0x0E14      	MOVLW       20
0x15F4	0x5D83      	SUBWF       AddTask_i_L0, 0, 1
0x15F6	0xE272      	BC          L_AddTask261
;FirmV_0_7_0.c,1237 :: 		if(Tasks[i].Expired==1)
0x15F8	0xF000C283  	MOVFF       AddTask_i_L0, R0
0x15FC	0x0E00      	MOVLW       0
0x15FE	0x6E01      	MOVWF       R1 
0x1600	0x0E07      	MOVLW       7
0x1602	0x6E04      	MOVWF       R4 
0x1604	0x0E00      	MOVLW       0
0x1606	0x6E05      	MOVWF       R5 
0x1608	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x160C	0x0E71      	MOVLW       _Tasks
0x160E	0x2600      	ADDWF       R0, 1 
0x1610	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1612	0x2201      	ADDWFC      R1, 1 
0x1614	0x0E05      	MOVLW       5
0x1616	0x2400      	ADDWF       R0, 0 
0x1618	0x6EE9      	MOVWF       FSR0L 
0x161A	0x0E00      	MOVLW       0
0x161C	0x2001      	ADDWFC      R1, 0 
0x161E	0x6EEA      	MOVWF       FSR0H 
0x1620	0x50EE      	MOVF        POSTINC0, 0 
0x1622	0x0A01      	XORLW       1
0x1624	0xE159      	BNZ         L_AddTask263
;FirmV_0_7_0.c,1239 :: 		Tasks[i].TaskCode=tcode;
0x1626	0xF000C283  	MOVFF       AddTask_i_L0, R0
0x162A	0x0E00      	MOVLW       0
0x162C	0x6E01      	MOVWF       R1 
0x162E	0x0E07      	MOVLW       7
0x1630	0x6E04      	MOVWF       R4 
0x1632	0x0E00      	MOVLW       0
0x1634	0x6E05      	MOVWF       R5 
0x1636	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x163A	0x0E71      	MOVLW       _Tasks
0x163C	0x2400      	ADDWF       R0, 0 
0x163E	0x6EE1      	MOVWF       FSR1L 
0x1640	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1642	0x2001      	ADDWFC      R1, 0 
0x1644	0x6EE2      	MOVWF       FSR1H 
0x1646	0xFFE6C282  	MOVFF       FARG_AddTask_tcode, POSTINC1
;FirmV_0_7_0.c,1240 :: 		Tasks[i].Time=OccTime;
0x164A	0xF000C283  	MOVFF       AddTask_i_L0, R0
0x164E	0x0E00      	MOVLW       0
0x1650	0x6E01      	MOVWF       R1 
0x1652	0x0E07      	MOVLW       7
0x1654	0x6E04      	MOVWF       R4 
0x1656	0x0E00      	MOVLW       0
0x1658	0x6E05      	MOVWF       R5 
0x165A	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x165E	0x0E71      	MOVLW       _Tasks
0x1660	0x2600      	ADDWF       R0, 1 
0x1662	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1664	0x2201      	ADDWFC      R1, 1 
0x1666	0x0E01      	MOVLW       1
0x1668	0x2400      	ADDWF       R0, 0 
0x166A	0x6EE1      	MOVWF       FSR1L 
0x166C	0x0E00      	MOVLW       0
0x166E	0x2001      	ADDWFC      R1, 0 
0x1670	0x6EE2      	MOVWF       FSR1H 
0x1672	0xFFE6C27E  	MOVFF       FARG_AddTask_OccTime, POSTINC1
0x1676	0xFFE6C27F  	MOVFF       FARG_AddTask_OccTime+1, POSTINC1
0x167A	0xFFE6C280  	MOVFF       FARG_AddTask_OccTime+2, POSTINC1
0x167E	0xFFE6C281  	MOVFF       FARG_AddTask_OccTime+3, POSTINC1
;FirmV_0_7_0.c,1241 :: 		Tasks[i].Expired=0;
0x1682	0xF000C283  	MOVFF       AddTask_i_L0, R0
0x1686	0x0E00      	MOVLW       0
0x1688	0x6E01      	MOVWF       R1 
0x168A	0x0E07      	MOVLW       7
0x168C	0x6E04      	MOVWF       R4 
0x168E	0x0E00      	MOVLW       0
0x1690	0x6E05      	MOVWF       R5 
0x1692	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x1696	0x0E71      	MOVLW       _Tasks
0x1698	0x2600      	ADDWF       R0, 1 
0x169A	0x0E00      	MOVLW       hi_addr(_Tasks)
0x169C	0x2201      	ADDWFC      R1, 1 
0x169E	0x0E05      	MOVLW       5
0x16A0	0x2400      	ADDWF       R0, 0 
0x16A2	0x6EE1      	MOVWF       FSR1L 
0x16A4	0x0E00      	MOVLW       0
0x16A6	0x2001      	ADDWFC      R1, 0 
0x16A8	0x6EE2      	MOVWF       FSR1H 
0x16AA	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1242 :: 		Tasks[i].Fired=0;
0x16AC	0xF000C283  	MOVFF       AddTask_i_L0, R0
0x16B0	0x0E00      	MOVLW       0
0x16B2	0x6E01      	MOVWF       R1 
0x16B4	0x0E07      	MOVLW       7
0x16B6	0x6E04      	MOVWF       R4 
0x16B8	0x0E00      	MOVLW       0
0x16BA	0x6E05      	MOVWF       R5 
0x16BC	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x16C0	0x0E71      	MOVLW       _Tasks
0x16C2	0x2600      	ADDWF       R0, 1 
0x16C4	0x0E00      	MOVLW       hi_addr(_Tasks)
0x16C6	0x2201      	ADDWFC      R1, 1 
0x16C8	0x0E06      	MOVLW       6
0x16CA	0x2400      	ADDWF       R0, 0 
0x16CC	0x6EE1      	MOVWF       FSR1L 
0x16CE	0x0E00      	MOVLW       0
0x16D0	0x2001      	ADDWFC      R1, 0 
0x16D2	0x6EE2      	MOVWF       FSR1H 
0x16D4	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1243 :: 		break;
0x16D6	0xD002      	BRA         L_AddTask261
;FirmV_0_7_0.c,1244 :: 		}
L_AddTask263:
;FirmV_0_7_0.c,1236 :: 		for(i=0;i<20;i++)
0x16D8	0x2B83      	INCF        AddTask_i_L0, 1, 1
;FirmV_0_7_0.c,1244 :: 		}
0x16DA	0xD78B      	BRA         L_AddTask260
L_AddTask261:
;FirmV_0_7_0.c,1245 :: 		}
0x16DC	0x0012      	RETURN      0
; end of _AddTask
_GetAutocloseTime:
;FirmV_0_7_0.c,1677 :: 		char GetAutocloseTime()
;FirmV_0_7_0.c,1681 :: 		for(i=0;i<20;i++)
0x16DE	0x0102      	MOVLB       2
0x16E0	0x6B7E      	CLRF        GetAutocloseTime_i_L0, 1
L_GetAutocloseTime339:
0x16E2	0x0E14      	MOVLW       20
0x16E4	0x5D7E      	SUBWF       GetAutocloseTime_i_L0, 0, 1
0x16E6	0xE260      	BC          L_GetAutocloseTime340
;FirmV_0_7_0.c,1683 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode==9))
0x16E8	0xF000C27E  	MOVFF       GetAutocloseTime_i_L0, R0
0x16EC	0x0E00      	MOVLW       0
0x16EE	0x6E01      	MOVWF       R1 
0x16F0	0x0E07      	MOVLW       7
0x16F2	0x6E04      	MOVWF       R4 
0x16F4	0x0E00      	MOVLW       0
0x16F6	0x6E05      	MOVWF       R5 
0x16F8	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x16FC	0x0E71      	MOVLW       _Tasks
0x16FE	0x2600      	ADDWF       R0, 1 
0x1700	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1702	0x2201      	ADDWFC      R1, 1 
0x1704	0x0E05      	MOVLW       5
0x1706	0x2400      	ADDWF       R0, 0 
0x1708	0x6EE9      	MOVWF       FSR0L 
0x170A	0x0E00      	MOVLW       0
0x170C	0x2001      	ADDWFC      R1, 0 
0x170E	0x6EEA      	MOVWF       FSR0H 
0x1710	0x50EE      	MOVF        POSTINC0, 0 
0x1712	0x0A00      	XORLW       0
0x1714	0xE131      	BNZ         L_GetAutocloseTime344
0x1716	0xF000C27E  	MOVFF       GetAutocloseTime_i_L0, R0
0x171A	0x0E00      	MOVLW       0
0x171C	0x6E01      	MOVWF       R1 
0x171E	0x0E07      	MOVLW       7
0x1720	0x6E04      	MOVWF       R4 
0x1722	0x0E00      	MOVLW       0
0x1724	0x6E05      	MOVWF       R5 
0x1726	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x172A	0x0E71      	MOVLW       _Tasks
0x172C	0x2400      	ADDWF       R0, 0 
0x172E	0x6EE9      	MOVWF       FSR0L 
0x1730	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1732	0x2001      	ADDWFC      R1, 0 
0x1734	0x6EEA      	MOVWF       FSR0H 
0x1736	0xF001CFEE  	MOVFF       POSTINC0, R1
0x173A	0x5001      	MOVF        R1, 0 
0x173C	0x0A09      	XORLW       9
0x173E	0xE11C      	BNZ         L_GetAutocloseTime344
L__GetAutocloseTime570:
;FirmV_0_7_0.c,1684 :: 		t=Tasks[i].Time;
0x1740	0xF000C27E  	MOVFF       GetAutocloseTime_i_L0, R0
0x1744	0x0E00      	MOVLW       0
0x1746	0x6E01      	MOVWF       R1 
0x1748	0x0E07      	MOVLW       7
0x174A	0x6E04      	MOVWF       R4 
0x174C	0x0E00      	MOVLW       0
0x174E	0x6E05      	MOVWF       R5 
0x1750	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x1754	0x0E71      	MOVLW       _Tasks
0x1756	0x2600      	ADDWF       R0, 1 
0x1758	0x0E00      	MOVLW       hi_addr(_Tasks)
0x175A	0x2201      	ADDWFC      R1, 1 
0x175C	0x0E01      	MOVLW       1
0x175E	0x2400      	ADDWF       R0, 0 
0x1760	0x6EE9      	MOVWF       FSR0L 
0x1762	0x0E00      	MOVLW       0
0x1764	0x2001      	ADDWFC      R1, 0 
0x1766	0x6EEA      	MOVWF       FSR0H 
0x1768	0xF27FCFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0
0x176C	0xF280CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+1
0x1770	0xF281CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+2
0x1774	0xF282CFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+3
L_GetAutocloseTime344:
;FirmV_0_7_0.c,1685 :: 		Tasks[i].Expired=1;
0x1778	0xF000C27E  	MOVFF       GetAutocloseTime_i_L0, R0
0x177C	0x0E00      	MOVLW       0
0x177E	0x6E01      	MOVWF       R1 
0x1780	0x0E07      	MOVLW       7
0x1782	0x6E04      	MOVWF       R4 
0x1784	0x0E00      	MOVLW       0
0x1786	0x6E05      	MOVWF       R5 
0x1788	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x178C	0x0E71      	MOVLW       _Tasks
0x178E	0x2600      	ADDWF       R0, 1 
0x1790	0x0E00      	MOVLW       hi_addr(_Tasks)
0x1792	0x2201      	ADDWFC      R1, 1 
0x1794	0x0E05      	MOVLW       5
0x1796	0x2400      	ADDWF       R0, 0 
0x1798	0x6EE1      	MOVWF       FSR1L 
0x179A	0x0E00      	MOVLW       0
0x179C	0x2001      	ADDWFC      R1, 0 
0x179E	0x6EE2      	MOVWF       FSR1H 
0x17A0	0x0E01      	MOVLW       1
0x17A2	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,1681 :: 		for(i=0;i<20;i++)
0x17A4	0x2B7E      	INCF        GetAutocloseTime_i_L0, 1, 1
;FirmV_0_7_0.c,1686 :: 		}
0x17A6	0xD79D      	BRA         L_GetAutocloseTime339
L_GetAutocloseTime340:
;FirmV_0_7_0.c,1687 :: 		i=t-ms500;
0x17A8	0x501C      	MOVF        _ms500, 0 
0x17AA	0x5D7F      	SUBWF       GetAutocloseTime_t_L0, 0, 1
0x17AC	0x6E00      	MOVWF       R0 
0x17AE	0xF27EC000  	MOVFF       R0, GetAutocloseTime_i_L0
;FirmV_0_7_0.c,1688 :: 		return i;
;FirmV_0_7_0.c,1689 :: 		}
0x17B2	0x0012      	RETURN      0
; end of _GetAutocloseTime
_LoadConfigs:
;FirmV_0_7_0.c,1553 :: 		void LoadConfigs()
;FirmV_0_7_0.c,1555 :: 		Door1OpenTime=EEPROM_Read(1);
0x17B4	0x0E01      	MOVLW       1
0x17B6	0x0104      	MOVLB       4
0x17B8	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17BA	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17BE	0xF117C000  	MOVFF       R0, _Door1OpenTime
;FirmV_0_7_0.c,1556 :: 		Door2OpenTime=EEPROM_Read(2);
0x17C2	0x0E02      	MOVLW       2
0x17C4	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17C6	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17CA	0xF10DC000  	MOVFF       R0, _Door2OpenTime
;FirmV_0_7_0.c,1557 :: 		Door1CloseTime=EEPROM_Read(3);
0x17CE	0x0E03      	MOVLW       3
0x17D0	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17D2	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17D6	0xF10CC000  	MOVFF       R0, _Door1CloseTime
;FirmV_0_7_0.c,1558 :: 		Door2CloseTime=EEPROM_Read(4);
0x17DA	0x0E04      	MOVLW       4
0x17DC	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17DE	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17E2	0xF10BC000  	MOVFF       R0, _Door2CloseTime
;FirmV_0_7_0.c,1559 :: 		ActionTimeDiff=EEPROM_Read(5);
0x17E6	0x0E05      	MOVLW       5
0x17E8	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17EA	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17EE	0xF110C000  	MOVFF       R0, _ActionTimeDiff
;FirmV_0_7_0.c,1560 :: 		OpenSoftStartTime=EEPROM_Read(6);
0x17F2	0x0E06      	MOVLW       6
0x17F4	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x17F6	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x17FA	0xF10FC000  	MOVFF       R0, _OpenSoftStartTime
;FirmV_0_7_0.c,1561 :: 		OpenSoftStopTime=EEPROM_Read(7);
0x17FE	0x0E07      	MOVLW       7
0x1800	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1802	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1806	0xF10EC000  	MOVFF       R0, _OpenSoftStopTime
;FirmV_0_7_0.c,1562 :: 		CloseSoftStartTime=EEPROM_Read(8);
0x180A	0x0E08      	MOVLW       8
0x180C	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x180E	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1812	0xF120C000  	MOVFF       R0, _CloseSoftStartTime
;FirmV_0_7_0.c,1563 :: 		CloseSoftStopTime=EEPROM_Read(9);
0x1816	0x0E09      	MOVLW       9
0x1818	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x181A	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x181E	0xF12BC000  	MOVFF       R0, _CloseSoftStopTime
;FirmV_0_7_0.c,1564 :: 		AutoCloseTime=EEPROM_Read(10);
0x1822	0x0E0A      	MOVLW       10
0x1824	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1826	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x182A	0xF12CC000  	MOVFF       R0, _AutoCloseTime
0x182E	0x0E00      	MOVLW       0
0x1830	0x0101      	MOVLB       1
0x1832	0x6F2D      	MOVWF       _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1565 :: 		AutoCloseTime=AutoCloseTime<<8;
0x1834	0xF12DC12C  	MOVFF       _AutoCloseTime, _AutoCloseTime+1
0x1838	0x6B2C      	CLRF        _AutoCloseTime, 1
;FirmV_0_7_0.c,1566 :: 		AutoCloseTime=AutocloseTime|EEPROM_Read(11);
0x183A	0x0E0B      	MOVLW       11
0x183C	0x0104      	MOVLB       4
0x183E	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1840	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1844	0x5000      	MOVF        R0, 0 
0x1846	0x0101      	MOVLB       1
0x1848	0x132C      	IORWF       _AutoCloseTime, 1, 1
0x184A	0x0E00      	MOVLW       0
0x184C	0x132D      	IORWF       _AutoCloseTime+1, 1, 1
;FirmV_0_7_0.c,1567 :: 		OverloadSens=EEPROM_Read(12);
0x184E	0x0E0C      	MOVLW       12
0x1850	0x0104      	MOVLB       4
0x1852	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1854	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1858	0xF061C000  	MOVFF       R0, _OverloadSens
;FirmV_0_7_0.c,1568 :: 		SetOverloadParams(9-OverloadSens);
0x185C	0x5000      	MOVF        R0, 0 
0x185E	0x0809      	SUBLW       9
0x1860	0x6F33      	MOVWF       FARG_SetOverloadParams_p, 1
0x1862	0xF002ECDC  	CALL        _SetOverloadParams, 0
;FirmV_0_7_0.c,1569 :: 		CloseAfterPass=EEPROM_Read(13);
0x1866	0x0E0D      	MOVLW       13
0x1868	0x0104      	MOVLB       4
0x186A	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x186C	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1870	0xF12AC000  	MOVFF       R0, _CloseAfterPass
;FirmV_0_7_0.c,1570 :: 		LockForce=EEPROM_Read(14);
0x1874	0x0E0E      	MOVLW       14
0x1876	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1878	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x187C	0xF12EC000  	MOVFF       R0, _LockForce
;FirmV_0_7_0.c,1571 :: 		OpenPhEnable=EEPROM_Read(15);
0x1880	0x0E0F      	MOVLW       15
0x1882	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1884	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1888	0xF12FC000  	MOVFF       R0, _OpenPhEnable
;FirmV_0_7_0.c,1572 :: 		LimiterEnable=EEPROM_Read(16);
0x188C	0x0E10      	MOVLW       16
0x188E	0x6F27      	MOVWF       FARG_EEPROM_Read_address, 1
0x1890	0xF004ECAA  	CALL        _EEPROM_Read, 0
0x1894	0xF125C000  	MOVFF       R0, _LimiterEnable
;FirmV_0_7_0.c,1574 :: 		}
0x1898	0x0012      	RETURN      0
; end of _LoadConfigs
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x189A	0x0101      	MOVLB       1
0x189C	0x910A      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x189E	0xF427C27E  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x18A2	0xF004ECB2  	CALL        _Lcd_Cmd, 0
;__Lib_Lcd.c,54 :: 		
0x18A6	0x810A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x18A8	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_GetLimitSwitchState:
;FirmV_0_7_0.c,1356 :: 		char GetLimitSwitchState()
;FirmV_0_7_0.c,1358 :: 		if((Limit1==0)||(Limit2==0))
0x18AA	0xA283      	BTFSS       PORTD, 1 
0x18AC	0xD003      	BRA         L__GetLimitSwitchState568
0x18AE	0xA483      	BTFSS       PORTD, 2 
0x18B0	0xD001      	BRA         L__GetLimitSwitchState568
0x18B2	0xD003      	BRA         L_GetLimitSwitchState305
L__GetLimitSwitchState568:
;FirmV_0_7_0.c,1359 :: 		return 1;
0x18B4	0x0E01      	MOVLW       1
0x18B6	0x6E00      	MOVWF       R0 
0x18B8	0x0012      	RETURN      0
L_GetLimitSwitchState305:
;FirmV_0_7_0.c,1361 :: 		return 0;
0x18BA	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1362 :: 		}
0x18BC	0x0012      	RETURN      0
; end of _GetLimitSwitchState
_GetKeysState:
;FirmV_0_7_0.c,1285 :: 		char GetKeysState()
;FirmV_0_7_0.c,1287 :: 		unsigned res=0;
0x18BE	0x0101      	MOVLB       1
0x18C0	0x6B4B      	CLRF        GetKeysState_res_L0, 1
0x18C2	0x6B4C      	CLRF        GetKeysState_res_L0+1, 1
;FirmV_0_7_0.c,1291 :: 		char resch=0,fin;
0x18C4	0x6B4D      	CLRF        GetKeysState_resch_L0, 1
;FirmV_0_7_0.c,1292 :: 		res=ADC_Read(5);
0x18C6	0x0E05      	MOVLW       5
0x18C8	0x0102      	MOVLB       2
0x18CA	0x6F7E      	MOVWF       FARG_ADC_Read_channel, 1
0x18CC	0xF006EC34  	CALL        _ADC_Read, 0
0x18D0	0xF14BC000  	MOVFF       R0, GetKeysState_res_L0
0x18D4	0xF14CC001  	MOVFF       R1, GetKeysState_res_L0+1
;FirmV_0_7_0.c,1293 :: 		if(((res>>2)>160)&&((res>>2)<185))
0x18D8	0xF002C000  	MOVFF       R0, R2
0x18DC	0xF003C001  	MOVFF       R1, R3
0x18E0	0x3203      	RRCF        R3, 1 
0x18E2	0x3202      	RRCF        R2, 1 
0x18E4	0x9E03      	BCF         R3, 7 
0x18E6	0x3203      	RRCF        R3, 1 
0x18E8	0x3202      	RRCF        R2, 1 
0x18EA	0x9E03      	BCF         R3, 7 
0x18EC	0x0E00      	MOVLW       0
0x18EE	0x6E00      	MOVWF       R0 
0x18F0	0x5003      	MOVF        R3, 0 
0x18F2	0x5C00      	SUBWF       R0, 0 
0x18F4	0xE102      	BNZ         L__GetKeysState617
0x18F6	0x5002      	MOVF        R2, 0 
0x18F8	0x08A0      	SUBLW       160
L__GetKeysState617:
0x18FA	0xE212      	BC          L_GetKeysState277
0x18FC	0xF001C14B  	MOVFF       GetKeysState_res_L0, R1
0x1900	0xF002C14C  	MOVFF       GetKeysState_res_L0+1, R2
0x1904	0x3202      	RRCF        R2, 1 
0x1906	0x3201      	RRCF        R1, 1 
0x1908	0x9E02      	BCF         R2, 7 
0x190A	0x3202      	RRCF        R2, 1 
0x190C	0x3201      	RRCF        R1, 1 
0x190E	0x9E02      	BCF         R2, 7 
0x1910	0x0E00      	MOVLW       0
0x1912	0x5C02      	SUBWF       R2, 0 
0x1914	0xE102      	BNZ         L__GetKeysState618
0x1916	0x0EB9      	MOVLW       185
0x1918	0x5C01      	SUBWF       R1, 0 
L__GetKeysState618:
0x191A	0xE202      	BC          L_GetKeysState277
L__GetKeysState567:
;FirmV_0_7_0.c,1294 :: 		resch.b2=1;
0x191C	0x0101      	MOVLB       1
0x191E	0x854D      	BSF         GetKeysState_resch_L0, 2, 1
L_GetKeysState277:
;FirmV_0_7_0.c,1295 :: 		if(((res>>2)>100)&&((res>>2)<160))
0x1920	0xF001C14B  	MOVFF       GetKeysState_res_L0, R1
0x1924	0xF002C14C  	MOVFF       GetKeysState_res_L0+1, R2
0x1928	0x3202      	RRCF        R2, 1 
0x192A	0x3201      	RRCF        R1, 1 
0x192C	0x9E02      	BCF         R2, 7 
0x192E	0x3202      	RRCF        R2, 1 
0x1930	0x3201      	RRCF        R1, 1 
0x1932	0x9E02      	BCF         R2, 7 
0x1934	0x0E00      	MOVLW       0
0x1936	0x6E00      	MOVWF       R0 
0x1938	0x5002      	MOVF        R2, 0 
0x193A	0x5C00      	SUBWF       R0, 0 
0x193C	0xE102      	BNZ         L__GetKeysState619
0x193E	0x5001      	MOVF        R1, 0 
0x1940	0x0864      	SUBLW       100
L__GetKeysState619:
0x1942	0xE212      	BC          L_GetKeysState280
0x1944	0xF001C14B  	MOVFF       GetKeysState_res_L0, R1
0x1948	0xF002C14C  	MOVFF       GetKeysState_res_L0+1, R2
0x194C	0x3202      	RRCF        R2, 1 
0x194E	0x3201      	RRCF        R1, 1 
0x1950	0x9E02      	BCF         R2, 7 
0x1952	0x3202      	RRCF        R2, 1 
0x1954	0x3201      	RRCF        R1, 1 
0x1956	0x9E02      	BCF         R2, 7 
0x1958	0x0E00      	MOVLW       0
0x195A	0x5C02      	SUBWF       R2, 0 
0x195C	0xE102      	BNZ         L__GetKeysState620
0x195E	0x0EA0      	MOVLW       160
0x1960	0x5C01      	SUBWF       R1, 0 
L__GetKeysState620:
0x1962	0xE202      	BC          L_GetKeysState280
L__GetKeysState566:
0x1964	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1296 :: 		resch.b1=1;
0x1966	0x834D      	BSF         GetKeysState_resch_L0, 1, 1
L_GetKeysState280:
;FirmV_0_7_0.c,1297 :: 		if((res>>2)<50)
0x1968	0xF001C14B  	MOVFF       GetKeysState_res_L0, R1
0x196C	0xF002C14C  	MOVFF       GetKeysState_res_L0+1, R2
0x1970	0x3202      	RRCF        R2, 1 
0x1972	0x3201      	RRCF        R1, 1 
0x1974	0x9E02      	BCF         R2, 7 
0x1976	0x3202      	RRCF        R2, 1 
0x1978	0x3201      	RRCF        R1, 1 
0x197A	0x9E02      	BCF         R2, 7 
0x197C	0x0E00      	MOVLW       0
0x197E	0x5C02      	SUBWF       R2, 0 
0x1980	0xE102      	BNZ         L__GetKeysState621
0x1982	0x0E32      	MOVLW       50
0x1984	0x5C01      	SUBWF       R1, 0 
L__GetKeysState621:
0x1986	0xE202      	BC          L_GetKeysState281
;FirmV_0_7_0.c,1298 :: 		resch.b0=1;
0x1988	0x0101      	MOVLB       1
0x198A	0x814D      	BSF         GetKeysState_resch_L0, 0, 1
L_GetKeysState281:
0x198C	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1300 :: 		if((resch==0))
0x198E	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x1990	0x0A00      	XORLW       0
0x1992	0xE111      	BNZ         L_GetKeysState282
;FirmV_0_7_0.c,1302 :: 		if(Pressed==0)
0x1994	0x505C      	MOVF        _Pressed, 0 
0x1996	0x0A00      	XORLW       0
0x1998	0xE104      	BNZ         L_GetKeysState283
;FirmV_0_7_0.c,1303 :: 		{Repeat=0;Pressed=0;fin=0;RepeatRate=0;}
0x199A	0x6B11      	CLRF        GetKeysState_Repeat_L0, 1
0x199C	0x6A5C      	CLRF        _Pressed 
0x199E	0x6B4A      	CLRF        GetKeysState_fin_L0, 1
0x19A0	0x6B12      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState283:
;FirmV_0_7_0.c,1304 :: 		if(Pressed==1)
0x19A2	0x505C      	MOVF        _Pressed, 0 
0x19A4	0x0A01      	XORLW       1
0x19A6	0xE107      	BNZ         L_GetKeysState284
;FirmV_0_7_0.c,1305 :: 		if(DebouncingDelay>=DebouncingFix)
0x19A8	0x0E05      	MOVLW       5
0x19AA	0x5C5D      	SUBWF       _DebouncingDelay, 0 
0x19AC	0xE304      	BNC         L_GetKeysState285
;FirmV_0_7_0.c,1306 :: 		{Repeat=0;Pressed=0;fin=0;RepeatRate=0;}
0x19AE	0x6B11      	CLRF        GetKeysState_Repeat_L0, 1
0x19B0	0x6A5C      	CLRF        _Pressed 
0x19B2	0x6B4A      	CLRF        GetKeysState_fin_L0, 1
0x19B4	0x6B12      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState285:
L_GetKeysState284:
;FirmV_0_7_0.c,1307 :: 		}
L_GetKeysState282:
;FirmV_0_7_0.c,1308 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0)&&(ms500==PressTime+KeyRepeatDelay))
0x19B6	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x19B8	0x0A00      	XORLW       0
0x19BA	0xE020      	BZ          L_GetKeysState288
0x19BC	0x505C      	MOVF        _Pressed, 0 
0x19BE	0x0A01      	XORLW       1
0x19C0	0xE11D      	BNZ         L_GetKeysState288
0x19C2	0x5111      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x19C4	0x0A00      	XORLW       0
0x19C6	0xE11A      	BNZ         L_GetKeysState288
0x19C8	0x0E03      	MOVLW       3
0x19CA	0x251C      	ADDWF       GetKeysState_PressTime_L0, 0, 1
0x19CC	0x6E01      	MOVWF       R1 
0x19CE	0x0E00      	MOVLW       0
0x19D0	0x211D      	ADDWFC      GetKeysState_PressTime_L0+1, 0, 1
0x19D2	0x6E02      	MOVWF       R2 
0x19D4	0x0E00      	MOVLW       0
0x19D6	0x211E      	ADDWFC      GetKeysState_PressTime_L0+2, 0, 1
0x19D8	0x6E03      	MOVWF       R3 
0x19DA	0x0E00      	MOVLW       0
0x19DC	0x211F      	ADDWFC      GetKeysState_PressTime_L0+3, 0, 1
0x19DE	0x6E04      	MOVWF       R4 
0x19E0	0x501F      	MOVF        _ms500+3, 0 
0x19E2	0x1804      	XORWF       R4, 0 
0x19E4	0xE108      	BNZ         L__GetKeysState622
0x19E6	0x501E      	MOVF        _ms500+2, 0 
0x19E8	0x1803      	XORWF       R3, 0 
0x19EA	0xE105      	BNZ         L__GetKeysState622
0x19EC	0x501D      	MOVF        _ms500+1, 0 
0x19EE	0x1802      	XORWF       R2, 0 
0x19F0	0xE102      	BNZ         L__GetKeysState622
0x19F2	0x501C      	MOVF        _ms500, 0 
0x19F4	0x1801      	XORWF       R1, 0 
L__GetKeysState622:
0x19F6	0xE102      	BNZ         L_GetKeysState288
L__GetKeysState565:
;FirmV_0_7_0.c,1309 :: 		Repeat=1;
0x19F8	0x0E01      	MOVLW       1
0x19FA	0x6F11      	MOVWF       GetKeysState_Repeat_L0, 1
L_GetKeysState288:
;FirmV_0_7_0.c,1311 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0))
0x19FC	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x19FE	0x0A00      	XORLW       0
0x1A00	0xE007      	BZ          L_GetKeysState291
0x1A02	0x505C      	MOVF        _Pressed, 0 
0x1A04	0x0A01      	XORLW       1
0x1A06	0xE104      	BNZ         L_GetKeysState291
0x1A08	0x5111      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x1A0A	0x0A00      	XORLW       0
0x1A0C	0xE101      	BNZ         L_GetKeysState291
L__GetKeysState564:
;FirmV_0_7_0.c,1312 :: 		fin=0;
0x1A0E	0x6B4A      	CLRF        GetKeysState_fin_L0, 1
L_GetKeysState291:
;FirmV_0_7_0.c,1314 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==1))
0x1A10	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x1A12	0x0A00      	XORLW       0
0x1A14	0xE00B      	BZ          L_GetKeysState294
0x1A16	0x505C      	MOVF        _Pressed, 0 
0x1A18	0x0A01      	XORLW       1
0x1A1A	0xE108      	BNZ         L_GetKeysState294
0x1A1C	0x5111      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x1A1E	0x0A01      	XORLW       1
0x1A20	0xE105      	BNZ         L_GetKeysState294
L__GetKeysState563:
;FirmV_0_7_0.c,1315 :: 		{fin=resch*RepeatRate;RepeatRate=0;}
0x1A22	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x1A24	0x0312      	MULWF       GetKeysState_RepeatRate_L0, 1
0x1A26	0xF14ACFF3  	MOVFF       PRODL, GetKeysState_fin_L0
0x1A2A	0x6B12      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState294:
;FirmV_0_7_0.c,1318 :: 		if((resch!=0)&&(Pressed==0))
0x1A2C	0x514D      	MOVF        GetKeysState_resch_L0, 0, 1
0x1A2E	0x0A00      	XORLW       0
0x1A30	0xE010      	BZ          L_GetKeysState297
0x1A32	0x505C      	MOVF        _Pressed, 0 
0x1A34	0x0A00      	XORLW       0
0x1A36	0xE10D      	BNZ         L_GetKeysState297
L__GetKeysState562:
;FirmV_0_7_0.c,1319 :: 		{fin=resch; Pressed=1;PressTime=ms500;DebouncingDelay=0;}
0x1A38	0xF14AC14D  	MOVFF       GetKeysState_resch_L0, GetKeysState_fin_L0
0x1A3C	0x0E01      	MOVLW       1
0x1A3E	0x6E5C      	MOVWF       _Pressed 
0x1A40	0xF11CC01C  	MOVFF       _ms500, GetKeysState_PressTime_L0
0x1A44	0xF11DC01D  	MOVFF       _ms500+1, GetKeysState_PressTime_L0+1
0x1A48	0xF11EC01E  	MOVFF       _ms500+2, GetKeysState_PressTime_L0+2
0x1A4C	0xF11FC01F  	MOVFF       _ms500+3, GetKeysState_PressTime_L0+3
0x1A50	0x6A5D      	CLRF        _DebouncingDelay 
L_GetKeysState297:
;FirmV_0_7_0.c,1321 :: 		if((Repeat==1)&&(msCounter%10==0))
0x1A52	0x5111      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x1A54	0x0A01      	XORLW       1
0x1A56	0xE10D      	BNZ         L_GetKeysState300
0x1A58	0x0E0A      	MOVLW       10
0x1A5A	0x6E04      	MOVWF       R4 
0x1A5C	0xF000C05B  	MOVFF       _msCounter, R0
0x1A60	0xF000ECDE  	CALL        _Div_8x8_U, 0
0x1A64	0xF000C008  	MOVFF       R8, R0
0x1A68	0x5000      	MOVF        R0, 0 
0x1A6A	0x0A00      	XORLW       0
0x1A6C	0xE102      	BNZ         L_GetKeysState300
L__GetKeysState561:
;FirmV_0_7_0.c,1322 :: 		RepeatRate=1;
0x1A6E	0x0E01      	MOVLW       1
0x1A70	0x6F12      	MOVWF       GetKeysState_RepeatRate_L0, 1
L_GetKeysState300:
;FirmV_0_7_0.c,1324 :: 		return fin;
0x1A72	0xF000C14A  	MOVFF       GetKeysState_fin_L0, R0
;FirmV_0_7_0.c,1325 :: 		}
0x1A76	0x0012      	RETURN      0
; end of _GetKeysState
_GetExternalKeysState:
;FirmV_0_7_0.c,1335 :: 		char GetExternalKeysState()
;FirmV_0_7_0.c,1337 :: 		char out=0;
0x1A78	0x0101      	MOVLB       1
0x1A7A	0x6B4A      	CLRF        GetExternalKeysState_out_L0, 1
;FirmV_0_7_0.c,1338 :: 		if(D1ExKey==0)
0x1A7C	0xB683      	BTFSC       PORTD, 3 
0x1A7E	0xD001      	BRA         L_GetExternalKeysState301
;FirmV_0_7_0.c,1339 :: 		out.b0=1;
0x1A80	0x814A      	BSF         GetExternalKeysState_out_L0, 0, 1
L_GetExternalKeysState301:
;FirmV_0_7_0.c,1340 :: 		if(D2ExKey==0)
0x1A82	0xB883      	BTFSC       PORTD, 4 
0x1A84	0xD001      	BRA         L_GetExternalKeysState302
;FirmV_0_7_0.c,1341 :: 		out.b1=1;
0x1A86	0x834A      	BSF         GetExternalKeysState_out_L0, 1, 1
L_GetExternalKeysState302:
;FirmV_0_7_0.c,1342 :: 		return out;
0x1A88	0xF000C14A  	MOVFF       GetExternalKeysState_out_L0, R0
;FirmV_0_7_0.c,1343 :: 		}
0x1A8C	0x0012      	RETURN      0
; end of _GetExternalKeysState
_Menu2:
;FirmV_0_7_0.c,1845 :: 		void Menu2()
;FirmV_0_7_0.c,1848 :: 		LCDFlash=1;
0x1A8E	0x0E01      	MOVLW       1
0x1A90	0x6E23      	MOVWF       _LCDFlash 
;FirmV_0_7_0.c,1850 :: 		if(Events.Keys.b1==1)
0x1A92	0x0100      	MOVLB       0
0x1A94	0xA3FD      	BTFSS       _Events, 1, 1
0x1A96	0xD011      	BRA         L_Menu2385
;FirmV_0_7_0.c,1852 :: 		LCDFlash=0;LCDFlashFlag=0;State=101;
0x1A98	0x6A23      	CLRF        _LCDFlash 
0x1A9A	0x6A22      	CLRF        _LCDFlashFlag 
0x1A9C	0x0E65      	MOVLW       101
0x1A9E	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,1853 :: 		if(MenuPointer==0)
0x1AA0	0x5020      	MOVF        _MenuPointer, 0 
0x1AA2	0x0A00      	XORLW       0
0x1AA4	0xE10A      	BNZ         L_Menu2386
;FirmV_0_7_0.c,1855 :: 		if(LearningMode==0)
0x1AA6	0x5021      	MOVF        _LearningMode, 0 
0x1AA8	0x0A00      	XORLW       0
0x1AAA	0xE102      	BNZ         L_Menu2387
;FirmV_0_7_0.c,1856 :: 		State=200;
0x1AAC	0x0EC8      	MOVLW       200
0x1AAE	0x6E29      	MOVWF       _State 
L_Menu2387:
;FirmV_0_7_0.c,1857 :: 		if(LearningMode==1)
0x1AB0	0x5021      	MOVF        _LearningMode, 0 
0x1AB2	0x0A01      	XORLW       1
0x1AB4	0xE102      	BNZ         L_Menu2388
;FirmV_0_7_0.c,1858 :: 		State=201;
0x1AB6	0x0EC9      	MOVLW       201
0x1AB8	0x6E29      	MOVWF       _State 
L_Menu2388:
;FirmV_0_7_0.c,1859 :: 		}
L_Menu2386:
;FirmV_0_7_0.c,1860 :: 		}
L_Menu2385:
;FirmV_0_7_0.c,1863 :: 		if(MenuPointer==0)
0x1ABA	0x5020      	MOVF        _MenuPointer, 0 
0x1ABC	0x0A00      	XORLW       0
0x1ABE	0xE116      	BNZ         L_Menu2389
;FirmV_0_7_0.c,1864 :: 		{ if((Events.Keys.b0==1)&&(LearningMode>0))
0x1AC0	0x0100      	MOVLB       0
0x1AC2	0xA1FD      	BTFSS       _Events, 0, 1
0x1AC4	0xD008      	BRA         L_Menu2392
0x1AC6	0x5021      	MOVF        _LearningMode, 0 
0x1AC8	0x0800      	SUBLW       0
0x1ACA	0xE205      	BC          L_Menu2392
L__Menu2603:
;FirmV_0_7_0.c,1865 :: 		{LearningMode=LearningMode-1;Menu0();State=102;}
0x1ACC	0x0621      	DECF        _LearningMode, 1 
0x1ACE	0xF006EC6A  	CALL        _Menu0, 0
0x1AD2	0x0E66      	MOVLW       102
0x1AD4	0x6E29      	MOVWF       _State 
L_Menu2392:
;FirmV_0_7_0.c,1866 :: 		if((Events.Keys.b2==1)&&(LearningMode<1))
0x1AD6	0x0100      	MOVLB       0
0x1AD8	0xA5FD      	BTFSS       _Events, 2, 1
0x1ADA	0xD008      	BRA         L_Menu2395
0x1ADC	0x0E01      	MOVLW       1
0x1ADE	0x5C21      	SUBWF       _LearningMode, 0 
0x1AE0	0xE205      	BC          L_Menu2395
L__Menu2602:
;FirmV_0_7_0.c,1867 :: 		{LearningMode=LearningMode+1;Menu0();State=102;}
0x1AE2	0x2A21      	INCF        _LearningMode, 1 
0x1AE4	0xF006EC6A  	CALL        _Menu0, 0
0x1AE8	0x0E66      	MOVLW       102
0x1AEA	0x6E29      	MOVWF       _State 
L_Menu2395:
;FirmV_0_7_0.c,1868 :: 		}
L_Menu2389:
;FirmV_0_7_0.c,1872 :: 		if(MenuPointer==1)
0x1AEC	0x5020      	MOVF        _MenuPointer, 0 
0x1AEE	0x0A01      	XORLW       1
0x1AF0	0xE118      	BNZ         L_Menu2396
;FirmV_0_7_0.c,1873 :: 		{ if((Events.Keys.b0==1)&&(Door1OpenTime>0))
0x1AF2	0x0100      	MOVLB       0
0x1AF4	0xA1FD      	BTFSS       _Events, 0, 1
0x1AF6	0xD009      	BRA         L_Menu2399
0x1AF8	0x0101      	MOVLB       1
0x1AFA	0x5117      	MOVF        _Door1OpenTime, 0, 1
0x1AFC	0x0800      	SUBLW       0
0x1AFE	0xE205      	BC          L_Menu2399
L__Menu2601:
;FirmV_0_7_0.c,1874 :: 		{Door1OpenTime=Door1OpenTime-1;Menu0();State=102;}
0x1B00	0x0717      	DECF        _Door1OpenTime, 1, 1
0x1B02	0xF006EC6A  	CALL        _Menu0, 0
0x1B06	0x0E66      	MOVLW       102
0x1B08	0x6E29      	MOVWF       _State 
L_Menu2399:
;FirmV_0_7_0.c,1875 :: 		if((Events.Keys.b2==1)&&(Door1OpenTime<255))
0x1B0A	0x0100      	MOVLB       0
0x1B0C	0xA5FD      	BTFSS       _Events, 2, 1
0x1B0E	0xD009      	BRA         L_Menu2402
0x1B10	0x0EFF      	MOVLW       255
0x1B12	0x0101      	MOVLB       1
0x1B14	0x5D17      	SUBWF       _Door1OpenTime, 0, 1
0x1B16	0xE205      	BC          L_Menu2402
L__Menu2600:
;FirmV_0_7_0.c,1876 :: 		{Door1OpenTime=Door1OpenTime+1;Menu0();State=102;}
0x1B18	0x2B17      	INCF        _Door1OpenTime, 1, 1
0x1B1A	0xF006EC6A  	CALL        _Menu0, 0
0x1B1E	0x0E66      	MOVLW       102
0x1B20	0x6E29      	MOVWF       _State 
L_Menu2402:
;FirmV_0_7_0.c,1877 :: 		}
L_Menu2396:
;FirmV_0_7_0.c,1881 :: 		if(MenuPointer==2)
0x1B22	0x5020      	MOVF        _MenuPointer, 0 
0x1B24	0x0A02      	XORLW       2
0x1B26	0xE118      	BNZ         L_Menu2403
;FirmV_0_7_0.c,1882 :: 		{ if((Events.Keys.b0==1)&&(Door2OpenTime>0))
0x1B28	0x0100      	MOVLB       0
0x1B2A	0xA1FD      	BTFSS       _Events, 0, 1
0x1B2C	0xD009      	BRA         L_Menu2406
0x1B2E	0x0101      	MOVLB       1
0x1B30	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x1B32	0x0800      	SUBLW       0
0x1B34	0xE205      	BC          L_Menu2406
L__Menu2599:
;FirmV_0_7_0.c,1883 :: 		{Door2OpenTime=Door2OpenTime-1;Menu0();State=102;}
0x1B36	0x070D      	DECF        _Door2OpenTime, 1, 1
0x1B38	0xF006EC6A  	CALL        _Menu0, 0
0x1B3C	0x0E66      	MOVLW       102
0x1B3E	0x6E29      	MOVWF       _State 
L_Menu2406:
;FirmV_0_7_0.c,1884 :: 		if((Events.Keys.b2==1)&&(Door2OpenTime<255))
0x1B40	0x0100      	MOVLB       0
0x1B42	0xA5FD      	BTFSS       _Events, 2, 1
0x1B44	0xD009      	BRA         L_Menu2409
0x1B46	0x0EFF      	MOVLW       255
0x1B48	0x0101      	MOVLB       1
0x1B4A	0x5D0D      	SUBWF       _Door2OpenTime, 0, 1
0x1B4C	0xE205      	BC          L_Menu2409
L__Menu2598:
;FirmV_0_7_0.c,1885 :: 		{Door2OpenTime=Door2OpenTime+1;Menu0();State=102;}
0x1B4E	0x2B0D      	INCF        _Door2OpenTime, 1, 1
0x1B50	0xF006EC6A  	CALL        _Menu0, 0
0x1B54	0x0E66      	MOVLW       102
0x1B56	0x6E29      	MOVWF       _State 
L_Menu2409:
;FirmV_0_7_0.c,1886 :: 		}
L_Menu2403:
;FirmV_0_7_0.c,1889 :: 		if(MenuPointer==3)
0x1B58	0x5020      	MOVF        _MenuPointer, 0 
0x1B5A	0x0A03      	XORLW       3
0x1B5C	0xE118      	BNZ         L_Menu2410
;FirmV_0_7_0.c,1890 :: 		{ if((Events.Keys.b0==1)&&(Door1CloseTime>0))
0x1B5E	0x0100      	MOVLB       0
0x1B60	0xA1FD      	BTFSS       _Events, 0, 1
0x1B62	0xD009      	BRA         L_Menu2413
0x1B64	0x0101      	MOVLB       1
0x1B66	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x1B68	0x0800      	SUBLW       0
0x1B6A	0xE205      	BC          L_Menu2413
L__Menu2597:
;FirmV_0_7_0.c,1891 :: 		{Door1CloseTime=Door1CloseTime-1;Menu0();State=102;}
0x1B6C	0x070C      	DECF        _Door1CloseTime, 1, 1
0x1B6E	0xF006EC6A  	CALL        _Menu0, 0
0x1B72	0x0E66      	MOVLW       102
0x1B74	0x6E29      	MOVWF       _State 
L_Menu2413:
;FirmV_0_7_0.c,1892 :: 		if((Events.Keys.b2==1)&&(Door1CloseTime<255))
0x1B76	0x0100      	MOVLB       0
0x1B78	0xA5FD      	BTFSS       _Events, 2, 1
0x1B7A	0xD009      	BRA         L_Menu2416
0x1B7C	0x0EFF      	MOVLW       255
0x1B7E	0x0101      	MOVLB       1
0x1B80	0x5D0C      	SUBWF       _Door1CloseTime, 0, 1
0x1B82	0xE205      	BC          L_Menu2416
L__Menu2596:
;FirmV_0_7_0.c,1893 :: 		{Door1CloseTime=Door1CloseTime+1;Menu0();State=102;}
0x1B84	0x2B0C      	INCF        _Door1CloseTime, 1, 1
0x1B86	0xF006EC6A  	CALL        _Menu0, 0
0x1B8A	0x0E66      	MOVLW       102
0x1B8C	0x6E29      	MOVWF       _State 
L_Menu2416:
;FirmV_0_7_0.c,1894 :: 		}
L_Menu2410:
;FirmV_0_7_0.c,1897 :: 		if(MenuPointer==4)
0x1B8E	0x5020      	MOVF        _MenuPointer, 0 
0x1B90	0x0A04      	XORLW       4
0x1B92	0xE118      	BNZ         L_Menu2417
;FirmV_0_7_0.c,1898 :: 		{ if((Events.Keys.b0==1)&&(Door2CloseTime>0))
0x1B94	0x0100      	MOVLB       0
0x1B96	0xA1FD      	BTFSS       _Events, 0, 1
0x1B98	0xD009      	BRA         L_Menu2420
0x1B9A	0x0101      	MOVLB       1
0x1B9C	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x1B9E	0x0800      	SUBLW       0
0x1BA0	0xE205      	BC          L_Menu2420
L__Menu2595:
;FirmV_0_7_0.c,1899 :: 		{Door2CloseTime=Door2CloseTime-1;Menu0();State=102;}
0x1BA2	0x070B      	DECF        _Door2CloseTime, 1, 1
0x1BA4	0xF006EC6A  	CALL        _Menu0, 0
0x1BA8	0x0E66      	MOVLW       102
0x1BAA	0x6E29      	MOVWF       _State 
L_Menu2420:
;FirmV_0_7_0.c,1900 :: 		if((Events.Keys.b2==1)&&(Door2CloseTime<255))
0x1BAC	0x0100      	MOVLB       0
0x1BAE	0xA5FD      	BTFSS       _Events, 2, 1
0x1BB0	0xD009      	BRA         L_Menu2423
0x1BB2	0x0EFF      	MOVLW       255
0x1BB4	0x0101      	MOVLB       1
0x1BB6	0x5D0B      	SUBWF       _Door2CloseTime, 0, 1
0x1BB8	0xE205      	BC          L_Menu2423
L__Menu2594:
;FirmV_0_7_0.c,1901 :: 		{Door2CloseTime=Door2CloseTime+1;Menu0();State=102;}
0x1BBA	0x2B0B      	INCF        _Door2CloseTime, 1, 1
0x1BBC	0xF006EC6A  	CALL        _Menu0, 0
0x1BC0	0x0E66      	MOVLW       102
0x1BC2	0x6E29      	MOVWF       _State 
L_Menu2423:
;FirmV_0_7_0.c,1902 :: 		}
L_Menu2417:
;FirmV_0_7_0.c,1906 :: 		if(MenuPointer==5)
0x1BC4	0x5020      	MOVF        _MenuPointer, 0 
0x1BC6	0x0A05      	XORLW       5
0x1BC8	0xE118      	BNZ         L_Menu2424
;FirmV_0_7_0.c,1907 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStartTime>0))
0x1BCA	0x0100      	MOVLB       0
0x1BCC	0xA1FD      	BTFSS       _Events, 0, 1
0x1BCE	0xD009      	BRA         L_Menu2427
0x1BD0	0x0101      	MOVLB       1
0x1BD2	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x1BD4	0x0800      	SUBLW       0
0x1BD6	0xE205      	BC          L_Menu2427
L__Menu2593:
;FirmV_0_7_0.c,1908 :: 		{OpenSoftStartTime=OpenSoftStartTime-1;Menu0();State=102;}
0x1BD8	0x070F      	DECF        _OpenSoftStartTime, 1, 1
0x1BDA	0xF006EC6A  	CALL        _Menu0, 0
0x1BDE	0x0E66      	MOVLW       102
0x1BE0	0x6E29      	MOVWF       _State 
L_Menu2427:
;FirmV_0_7_0.c,1909 :: 		if((Events.Keys.b2==1)&&(OpenSoftStartTime<255))
0x1BE2	0x0100      	MOVLB       0
0x1BE4	0xA5FD      	BTFSS       _Events, 2, 1
0x1BE6	0xD009      	BRA         L_Menu2430
0x1BE8	0x0EFF      	MOVLW       255
0x1BEA	0x0101      	MOVLB       1
0x1BEC	0x5D0F      	SUBWF       _OpenSoftStartTime, 0, 1
0x1BEE	0xE205      	BC          L_Menu2430
L__Menu2592:
;FirmV_0_7_0.c,1910 :: 		{OpenSoftStartTime=OpenSoftStartTime+1;Menu0();State=102;}
0x1BF0	0x2B0F      	INCF        _OpenSoftStartTime, 1, 1
0x1BF2	0xF006EC6A  	CALL        _Menu0, 0
0x1BF6	0x0E66      	MOVLW       102
0x1BF8	0x6E29      	MOVWF       _State 
L_Menu2430:
;FirmV_0_7_0.c,1911 :: 		}
L_Menu2424:
;FirmV_0_7_0.c,1914 :: 		if(MenuPointer==6)
0x1BFA	0x5020      	MOVF        _MenuPointer, 0 
0x1BFC	0x0A06      	XORLW       6
0x1BFE	0xE118      	BNZ         L_Menu2431
;FirmV_0_7_0.c,1915 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStopTime>0))
0x1C00	0x0100      	MOVLB       0
0x1C02	0xA1FD      	BTFSS       _Events, 0, 1
0x1C04	0xD009      	BRA         L_Menu2434
0x1C06	0x0101      	MOVLB       1
0x1C08	0x510E      	MOVF        _OpenSoftStopTime, 0, 1
0x1C0A	0x0800      	SUBLW       0
0x1C0C	0xE205      	BC          L_Menu2434
L__Menu2591:
;FirmV_0_7_0.c,1916 :: 		{OpenSoftStopTime=OpenSoftStopTime-1;Menu0();State=102;}
0x1C0E	0x070E      	DECF        _OpenSoftStopTime, 1, 1
0x1C10	0xF006EC6A  	CALL        _Menu0, 0
0x1C14	0x0E66      	MOVLW       102
0x1C16	0x6E29      	MOVWF       _State 
L_Menu2434:
;FirmV_0_7_0.c,1917 :: 		if((Events.Keys.b2==1)&&(OpenSoftStopTime<255))
0x1C18	0x0100      	MOVLB       0
0x1C1A	0xA5FD      	BTFSS       _Events, 2, 1
0x1C1C	0xD009      	BRA         L_Menu2437
0x1C1E	0x0EFF      	MOVLW       255
0x1C20	0x0101      	MOVLB       1
0x1C22	0x5D0E      	SUBWF       _OpenSoftStopTime, 0, 1
0x1C24	0xE205      	BC          L_Menu2437
L__Menu2590:
;FirmV_0_7_0.c,1918 :: 		{OpenSoftStopTime=OpenSoftStopTime+1;Menu0();State=102;}
0x1C26	0x2B0E      	INCF        _OpenSoftStopTime, 1, 1
0x1C28	0xF006EC6A  	CALL        _Menu0, 0
0x1C2C	0x0E66      	MOVLW       102
0x1C2E	0x6E29      	MOVWF       _State 
L_Menu2437:
;FirmV_0_7_0.c,1919 :: 		}
L_Menu2431:
;FirmV_0_7_0.c,1922 :: 		if(MenuPointer==7)
0x1C30	0x5020      	MOVF        _MenuPointer, 0 
0x1C32	0x0A07      	XORLW       7
0x1C34	0xE118      	BNZ         L_Menu2438
;FirmV_0_7_0.c,1923 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStartTime>0))
0x1C36	0x0100      	MOVLB       0
0x1C38	0xA1FD      	BTFSS       _Events, 0, 1
0x1C3A	0xD009      	BRA         L_Menu2441
0x1C3C	0x0101      	MOVLB       1
0x1C3E	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x1C40	0x0800      	SUBLW       0
0x1C42	0xE205      	BC          L_Menu2441
L__Menu2589:
;FirmV_0_7_0.c,1924 :: 		{CloseSoftStartTime=CloseSoftStartTime-1;Menu0();State=102;}
0x1C44	0x0720      	DECF        _CloseSoftStartTime, 1, 1
0x1C46	0xF006EC6A  	CALL        _Menu0, 0
0x1C4A	0x0E66      	MOVLW       102
0x1C4C	0x6E29      	MOVWF       _State 
L_Menu2441:
;FirmV_0_7_0.c,1925 :: 		if((Events.Keys.b2==1)&&(CloseSoftStartTime<255))
0x1C4E	0x0100      	MOVLB       0
0x1C50	0xA5FD      	BTFSS       _Events, 2, 1
0x1C52	0xD009      	BRA         L_Menu2444
0x1C54	0x0EFF      	MOVLW       255
0x1C56	0x0101      	MOVLB       1
0x1C58	0x5D20      	SUBWF       _CloseSoftStartTime, 0, 1
0x1C5A	0xE205      	BC          L_Menu2444
L__Menu2588:
;FirmV_0_7_0.c,1926 :: 		{CloseSoftStartTime=CloseSoftStartTime+1;Menu0();State=102;}
0x1C5C	0x2B20      	INCF        _CloseSoftStartTime, 1, 1
0x1C5E	0xF006EC6A  	CALL        _Menu0, 0
0x1C62	0x0E66      	MOVLW       102
0x1C64	0x6E29      	MOVWF       _State 
L_Menu2444:
;FirmV_0_7_0.c,1927 :: 		}
L_Menu2438:
;FirmV_0_7_0.c,1930 :: 		if(MenuPointer==8)
0x1C66	0x5020      	MOVF        _MenuPointer, 0 
0x1C68	0x0A08      	XORLW       8
0x1C6A	0xE118      	BNZ         L_Menu2445
;FirmV_0_7_0.c,1931 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStopTime>0))
0x1C6C	0x0100      	MOVLB       0
0x1C6E	0xA1FD      	BTFSS       _Events, 0, 1
0x1C70	0xD009      	BRA         L_Menu2448
0x1C72	0x0101      	MOVLB       1
0x1C74	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x1C76	0x0800      	SUBLW       0
0x1C78	0xE205      	BC          L_Menu2448
L__Menu2587:
;FirmV_0_7_0.c,1932 :: 		{CloseSoftStopTime=CloseSoftStopTime-1;Menu0();State=102;}
0x1C7A	0x072B      	DECF        _CloseSoftStopTime, 1, 1
0x1C7C	0xF006EC6A  	CALL        _Menu0, 0
0x1C80	0x0E66      	MOVLW       102
0x1C82	0x6E29      	MOVWF       _State 
L_Menu2448:
;FirmV_0_7_0.c,1933 :: 		if((Events.Keys.b2==1)&&(CloseSoftStopTime<255))
0x1C84	0x0100      	MOVLB       0
0x1C86	0xA5FD      	BTFSS       _Events, 2, 1
0x1C88	0xD009      	BRA         L_Menu2451
0x1C8A	0x0EFF      	MOVLW       255
0x1C8C	0x0101      	MOVLB       1
0x1C8E	0x5D2B      	SUBWF       _CloseSoftStopTime, 0, 1
0x1C90	0xE205      	BC          L_Menu2451
L__Menu2586:
;FirmV_0_7_0.c,1934 :: 		{CloseSoftStopTime=CloseSoftStopTime+1;Menu0();State=102;}
0x1C92	0x2B2B      	INCF        _CloseSoftStopTime, 1, 1
0x1C94	0xF006EC6A  	CALL        _Menu0, 0
0x1C98	0x0E66      	MOVLW       102
0x1C9A	0x6E29      	MOVWF       _State 
L_Menu2451:
;FirmV_0_7_0.c,1935 :: 		}
L_Menu2445:
;FirmV_0_7_0.c,1939 :: 		if(MenuPointer==9)
0x1C9C	0x5020      	MOVF        _MenuPointer, 0 
0x1C9E	0x0A09      	XORLW       9
0x1CA0	0xE116      	BNZ         L_Menu2452
;FirmV_0_7_0.c,1940 :: 		{ if((Events.Keys.b0==1)&&(OverloadSens>0))
0x1CA2	0x0100      	MOVLB       0
0x1CA4	0xA1FD      	BTFSS       _Events, 0, 1
0x1CA6	0xD008      	BRA         L_Menu2455
0x1CA8	0x5061      	MOVF        _OverloadSens, 0 
0x1CAA	0x0800      	SUBLW       0
0x1CAC	0xE205      	BC          L_Menu2455
L__Menu2585:
;FirmV_0_7_0.c,1941 :: 		{OverloadSens=OverloadSens-1;Menu0();State=102;}
0x1CAE	0x0661      	DECF        _OverloadSens, 1 
0x1CB0	0xF006EC6A  	CALL        _Menu0, 0
0x1CB4	0x0E66      	MOVLW       102
0x1CB6	0x6E29      	MOVWF       _State 
L_Menu2455:
;FirmV_0_7_0.c,1942 :: 		if((Events.Keys.b2==1)&&(OverloadSens<9))
0x1CB8	0x0100      	MOVLB       0
0x1CBA	0xA5FD      	BTFSS       _Events, 2, 1
0x1CBC	0xD008      	BRA         L_Menu2458
0x1CBE	0x0E09      	MOVLW       9
0x1CC0	0x5C61      	SUBWF       _OverloadSens, 0 
0x1CC2	0xE205      	BC          L_Menu2458
L__Menu2584:
;FirmV_0_7_0.c,1943 :: 		{OverloadSens=OverloadSens+1;Menu0();State=102;}
0x1CC4	0x2A61      	INCF        _OverloadSens, 1 
0x1CC6	0xF006EC6A  	CALL        _Menu0, 0
0x1CCA	0x0E66      	MOVLW       102
0x1CCC	0x6E29      	MOVWF       _State 
L_Menu2458:
;FirmV_0_7_0.c,1944 :: 		}
L_Menu2452:
;FirmV_0_7_0.c,1947 :: 		if(MenuPointer==10)
0x1CCE	0x5020      	MOVF        _MenuPointer, 0 
0x1CD0	0x0A0A      	XORLW       10
0x1CD2	0xE118      	BNZ         L_Menu2459
;FirmV_0_7_0.c,1948 :: 		{ if((Events.Keys.b0==1)&&(ActionTimeDiff>0))
0x1CD4	0x0100      	MOVLB       0
0x1CD6	0xA1FD      	BTFSS       _Events, 0, 1
0x1CD8	0xD009      	BRA         L_Menu2462
0x1CDA	0x0101      	MOVLB       1
0x1CDC	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x1CDE	0x0800      	SUBLW       0
0x1CE0	0xE205      	BC          L_Menu2462
L__Menu2583:
;FirmV_0_7_0.c,1949 :: 		{ActionTimeDiff=ActionTimeDiff-1;Menu0();State=102;}
0x1CE2	0x0710      	DECF        _ActionTimeDiff, 1, 1
0x1CE4	0xF006EC6A  	CALL        _Menu0, 0
0x1CE8	0x0E66      	MOVLW       102
0x1CEA	0x6E29      	MOVWF       _State 
L_Menu2462:
;FirmV_0_7_0.c,1950 :: 		if((Events.Keys.b2==1)&&(ActionTimeDiff<255))
0x1CEC	0x0100      	MOVLB       0
0x1CEE	0xA5FD      	BTFSS       _Events, 2, 1
0x1CF0	0xD009      	BRA         L_Menu2465
0x1CF2	0x0EFF      	MOVLW       255
0x1CF4	0x0101      	MOVLB       1
0x1CF6	0x5D10      	SUBWF       _ActionTimeDiff, 0, 1
0x1CF8	0xE205      	BC          L_Menu2465
L__Menu2582:
;FirmV_0_7_0.c,1951 :: 		{ActionTimeDiff=ActionTimeDiff+1;Menu0();State=102;}
0x1CFA	0x2B10      	INCF        _ActionTimeDiff, 1, 1
0x1CFC	0xF006EC6A  	CALL        _Menu0, 0
0x1D00	0x0E66      	MOVLW       102
0x1D02	0x6E29      	MOVWF       _State 
L_Menu2465:
;FirmV_0_7_0.c,1952 :: 		}
L_Menu2459:
;FirmV_0_7_0.c,1955 :: 		if(MenuPointer==11)
0x1D04	0x5020      	MOVF        _MenuPointer, 0 
0x1D06	0x0A0B      	XORLW       11
0x1D08	0xE124      	BNZ         L_Menu2466
;FirmV_0_7_0.c,1956 :: 		{ if((Events.Keys.b0==1)&&(AutoCloseTime>0))
0x1D0A	0x0100      	MOVLB       0
0x1D0C	0xA1FD      	BTFSS       _Events, 0, 1
0x1D0E	0xD011      	BRA         L_Menu2469
0x1D10	0x0E00      	MOVLW       0
0x1D12	0x6E00      	MOVWF       R0 
0x1D14	0x0101      	MOVLB       1
0x1D16	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x1D18	0x5C00      	SUBWF       R0, 0 
0x1D1A	0xE102      	BNZ         L__Menu2641
0x1D1C	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x1D1E	0x0800      	SUBLW       0
L__Menu2641:
0x1D20	0xE208      	BC          L_Menu2469
L__Menu2581:
;FirmV_0_7_0.c,1957 :: 		{AutoCloseTime=AutoCloseTime-1;Menu0();State=102;}
0x1D22	0x0E01      	MOVLW       1
0x1D24	0x5F2C      	SUBWF       _AutoCloseTime, 1, 1
0x1D26	0x0E00      	MOVLW       0
0x1D28	0x5B2D      	SUBWFB      _AutoCloseTime+1, 1, 1
0x1D2A	0xF006EC6A  	CALL        _Menu0, 0
0x1D2E	0x0E66      	MOVLW       102
0x1D30	0x6E29      	MOVWF       _State 
L_Menu2469:
;FirmV_0_7_0.c,1958 :: 		if((Events.Keys.b2==1)&&(AutoCloseTime<65000))
0x1D32	0x0100      	MOVLB       0
0x1D34	0xA5FD      	BTFSS       _Events, 2, 1
0x1D36	0xD00D      	BRA         L_Menu2472
0x1D38	0x0EFD      	MOVLW       253
0x1D3A	0x0101      	MOVLB       1
0x1D3C	0x5D2D      	SUBWF       _AutoCloseTime+1, 0, 1
0x1D3E	0xE102      	BNZ         L__Menu2642
0x1D40	0x0EE8      	MOVLW       232
0x1D42	0x5D2C      	SUBWF       _AutoCloseTime, 0, 1
L__Menu2642:
0x1D44	0xE206      	BC          L_Menu2472
L__Menu2580:
;FirmV_0_7_0.c,1959 :: 		{AutoCloseTime=AutoCloseTime+1;Menu0();State=102;}
0x1D46	0x4B2C      	INFSNZ      _AutoCloseTime, 1, 1
0x1D48	0x2B2D      	INCF        _AutoCloseTime+1, 1, 1
0x1D4A	0xF006EC6A  	CALL        _Menu0, 0
0x1D4E	0x0E66      	MOVLW       102
0x1D50	0x6E29      	MOVWF       _State 
L_Menu2472:
;FirmV_0_7_0.c,1960 :: 		}
L_Menu2466:
;FirmV_0_7_0.c,1963 :: 		if(MenuPointer==12)
0x1D52	0x5020      	MOVF        _MenuPointer, 0 
0x1D54	0x0A0C      	XORLW       12
0x1D56	0xE146      	BNZ         L_Menu2473
;FirmV_0_7_0.c,1965 :: 		State=0;
0x1D58	0x0104      	MOVLB       4
0x1D5A	0x6A29      	CLRF        _State 
;FirmV_0_7_0.c,1966 :: 		memcpy(LCDLine1,"                ",16);
0x1D5C	0x0E2D      	MOVLW       _LCDLine1
0x1D5E	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1D60	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1D62	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1D64	0x0E1E      	MOVLW       ?ICS?lstr98_FirmV_0_7_0
0x1D66	0x6EF6      	MOVWF       4086 
0x1D68	0x0E5C      	MOVLW       hi_addr(?ICS?lstr98_FirmV_0_7_0)
0x1D6A	0x6EF7      	MOVWF       TBLPTRH 
0x1D6C	0x0E00      	MOVLW       higher_addr(?ICS?lstr98_FirmV_0_7_0)
0x1D6E	0x6EF8      	MOVWF       TBLPTRU 
0x1D70	0x0E4A      	MOVLW       ?lstr98_FirmV_0_7_0
0x1D72	0x6EE1      	MOVWF       FSR1L 
0x1D74	0x0E01      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x1D76	0x6EE2      	MOVWF       FSR1H 
0x1D78	0x0E11      	MOVLW       17
0x1D7A	0x6E00      	MOVWF       R0 
0x1D7C	0x0E01      	MOVLW       1
0x1D7E	0x6E01      	MOVWF       R1 
0x1D80	0xF005EC75  	CALL        ___CC2DW, 0
0x1D84	0x0E4A      	MOVLW       ?lstr98_FirmV_0_7_0
0x1D86	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1D88	0x0E01      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x1D8A	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1D8C	0x0E10      	MOVLW       16
0x1D8E	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1D90	0x0E00      	MOVLW       0
0x1D92	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1D94	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,1967 :: 		memcpy(LCDLine2,"                ",16);
0x1D98	0x0E48      	MOVLW       _LCDLine2
0x1D9A	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1D9C	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x1D9E	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1DA0	0x0E2F      	MOVLW       ?ICS?lstr99_FirmV_0_7_0
0x1DA2	0x6EF6      	MOVWF       4086 
0x1DA4	0x0E5C      	MOVLW       hi_addr(?ICS?lstr99_FirmV_0_7_0)
0x1DA6	0x6EF7      	MOVWF       TBLPTRH 
0x1DA8	0x0E00      	MOVLW       higher_addr(?ICS?lstr99_FirmV_0_7_0)
0x1DAA	0x6EF8      	MOVWF       TBLPTRU 
0x1DAC	0x0E5B      	MOVLW       ?lstr99_FirmV_0_7_0
0x1DAE	0x6EE1      	MOVWF       FSR1L 
0x1DB0	0x0E01      	MOVLW       hi_addr(?lstr99_FirmV_0_7_0)
0x1DB2	0x6EE2      	MOVWF       FSR1H 
0x1DB4	0x0E11      	MOVLW       17
0x1DB6	0x6E00      	MOVWF       R0 
0x1DB8	0x0E01      	MOVLW       1
0x1DBA	0x6E01      	MOVWF       R1 
0x1DBC	0xF005EC75  	CALL        ___CC2DW, 0
0x1DC0	0x0E5B      	MOVLW       ?lstr99_FirmV_0_7_0
0x1DC2	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1DC4	0x0E01      	MOVLW       hi_addr(?lstr99_FirmV_0_7_0)
0x1DC6	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1DC8	0x0E10      	MOVLW       16
0x1DCA	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1DCC	0x0E00      	MOVLW       0
0x1DCE	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1DD0	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,1968 :: 		LCDFlash=0; LCDFlashFlag=0;
0x1DD4	0x6A23      	CLRF        _LCDFlash 
0x1DD6	0x6A22      	CLRF        _LCDFlashFlag 
;FirmV_0_7_0.c,1969 :: 		LCDUpdateFlag=1;
0x1DD8	0x0E01      	MOVLW       1
0x1DDA	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,1970 :: 		FactorySettings();
0x1DDC	0xF00AEC85  	CALL        _FactorySettings, 0
;FirmV_0_7_0.c,1971 :: 		SaveConfigs();
0x1DE0	0xF004ECF4  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,1972 :: 		}
L_Menu2473:
;FirmV_0_7_0.c,1975 :: 		if(MenuPointer==13)
0x1DE4	0x5020      	MOVF        _MenuPointer, 0 
0x1DE6	0x0A0D      	XORLW       13
0x1DE8	0xE118      	BNZ         L_Menu2474
;FirmV_0_7_0.c,1976 :: 		{ if((Events.Keys.b0==1)&&(OpenPhEnable>0))
0x1DEA	0x0100      	MOVLB       0
0x1DEC	0xA1FD      	BTFSS       _Events, 0, 1
0x1DEE	0xD009      	BRA         L_Menu2477
0x1DF0	0x0101      	MOVLB       1
0x1DF2	0x512F      	MOVF        _OpenPhEnable, 0, 1
0x1DF4	0x0800      	SUBLW       0
0x1DF6	0xE205      	BC          L_Menu2477
L__Menu2579:
;FirmV_0_7_0.c,1977 :: 		{OpenPhEnable=OpenPhEnable-1;Menu0();State=102;}
0x1DF8	0x072F      	DECF        _OpenPhEnable, 1, 1
0x1DFA	0xF006EC6A  	CALL        _Menu0, 0
0x1DFE	0x0E66      	MOVLW       102
0x1E00	0x6E29      	MOVWF       _State 
L_Menu2477:
;FirmV_0_7_0.c,1978 :: 		if((Events.Keys.b2==1)&&(OpenPhEnable<1))
0x1E02	0x0100      	MOVLB       0
0x1E04	0xA5FD      	BTFSS       _Events, 2, 1
0x1E06	0xD009      	BRA         L_Menu2480
0x1E08	0x0E01      	MOVLW       1
0x1E0A	0x0101      	MOVLB       1
0x1E0C	0x5D2F      	SUBWF       _OpenPhEnable, 0, 1
0x1E0E	0xE205      	BC          L_Menu2480
L__Menu2578:
;FirmV_0_7_0.c,1979 :: 		{OpenPhEnable=OpenPhEnable+1;Menu0();State=102;}
0x1E10	0x2B2F      	INCF        _OpenPhEnable, 1, 1
0x1E12	0xF006EC6A  	CALL        _Menu0, 0
0x1E16	0x0E66      	MOVLW       102
0x1E18	0x6E29      	MOVWF       _State 
L_Menu2480:
;FirmV_0_7_0.c,1980 :: 		}
L_Menu2474:
;FirmV_0_7_0.c,1984 :: 		if(MenuPointer==14)
0x1E1A	0x5020      	MOVF        _MenuPointer, 0 
0x1E1C	0x0A0E      	XORLW       14
0x1E1E	0xE118      	BNZ         L_Menu2481
;FirmV_0_7_0.c,1985 :: 		{ if((Events.Keys.b0==1)&&(LimiterEnable>0))
0x1E20	0x0100      	MOVLB       0
0x1E22	0xA1FD      	BTFSS       _Events, 0, 1
0x1E24	0xD009      	BRA         L_Menu2484
0x1E26	0x0101      	MOVLB       1
0x1E28	0x5125      	MOVF        _LimiterEnable, 0, 1
0x1E2A	0x0800      	SUBLW       0
0x1E2C	0xE205      	BC          L_Menu2484
L__Menu2577:
;FirmV_0_7_0.c,1986 :: 		{LimiterEnable=LimiterEnable-1;Menu0();State=102;}
0x1E2E	0x0725      	DECF        _LimiterEnable, 1, 1
0x1E30	0xF006EC6A  	CALL        _Menu0, 0
0x1E34	0x0E66      	MOVLW       102
0x1E36	0x6E29      	MOVWF       _State 
L_Menu2484:
;FirmV_0_7_0.c,1987 :: 		if((Events.Keys.b2==1)&&(LimiterEnable<1))
0x1E38	0x0100      	MOVLB       0
0x1E3A	0xA5FD      	BTFSS       _Events, 2, 1
0x1E3C	0xD009      	BRA         L_Menu2487
0x1E3E	0x0E01      	MOVLW       1
0x1E40	0x0101      	MOVLB       1
0x1E42	0x5D25      	SUBWF       _LimiterEnable, 0, 1
0x1E44	0xE205      	BC          L_Menu2487
L__Menu2576:
;FirmV_0_7_0.c,1988 :: 		{LimiterEnable=LimiterEnable+1;Menu0();State=102;}
0x1E46	0x2B25      	INCF        _LimiterEnable, 1, 1
0x1E48	0xF006EC6A  	CALL        _Menu0, 0
0x1E4C	0x0E66      	MOVLW       102
0x1E4E	0x6E29      	MOVWF       _State 
L_Menu2487:
;FirmV_0_7_0.c,1989 :: 		}
L_Menu2481:
;FirmV_0_7_0.c,1992 :: 		if(MenuPointer==15)
0x1E50	0x5020      	MOVF        _MenuPointer, 0 
0x1E52	0x0A0F      	XORLW       15
0x1E54	0xE118      	BNZ         L_Menu2488
;FirmV_0_7_0.c,1993 :: 		{ if((Events.Keys.b0==1)&&(LockForce>0))
0x1E56	0x0100      	MOVLB       0
0x1E58	0xA1FD      	BTFSS       _Events, 0, 1
0x1E5A	0xD009      	BRA         L_Menu2491
0x1E5C	0x0101      	MOVLB       1
0x1E5E	0x512E      	MOVF        _LockForce, 0, 1
0x1E60	0x0800      	SUBLW       0
0x1E62	0xE205      	BC          L_Menu2491
L__Menu2575:
;FirmV_0_7_0.c,1994 :: 		{LockForce=LockForce-1;Menu0();State=102;}
0x1E64	0x072E      	DECF        _LockForce, 1, 1
0x1E66	0xF006EC6A  	CALL        _Menu0, 0
0x1E6A	0x0E66      	MOVLW       102
0x1E6C	0x6E29      	MOVWF       _State 
L_Menu2491:
;FirmV_0_7_0.c,1995 :: 		if((Events.Keys.b2==1)&&(LockForce<1))
0x1E6E	0x0100      	MOVLB       0
0x1E70	0xA5FD      	BTFSS       _Events, 2, 1
0x1E72	0xD009      	BRA         L_Menu2494
0x1E74	0x0E01      	MOVLW       1
0x1E76	0x0101      	MOVLB       1
0x1E78	0x5D2E      	SUBWF       _LockForce, 0, 1
0x1E7A	0xE205      	BC          L_Menu2494
L__Menu2574:
;FirmV_0_7_0.c,1996 :: 		{LockForce=LockForce+1;Menu0();State=102;}
0x1E7C	0x2B2E      	INCF        _LockForce, 1, 1
0x1E7E	0xF006EC6A  	CALL        _Menu0, 0
0x1E82	0x0E66      	MOVLW       102
0x1E84	0x6E29      	MOVWF       _State 
L_Menu2494:
;FirmV_0_7_0.c,1997 :: 		}
L_Menu2488:
;FirmV_0_7_0.c,2000 :: 		if(MenuPointer==16)
0x1E86	0x5020      	MOVF        _MenuPointer, 0 
0x1E88	0x0A10      	XORLW       16
0x1E8A	0xE121      	BNZ         L_Menu2495
;FirmV_0_7_0.c,2001 :: 		{ if((Events.Keys.b0==1)&&(CloseAfterPass>0))
0x1E8C	0x0100      	MOVLB       0
0x1E8E	0xA1FD      	BTFSS       _Events, 0, 1
0x1E90	0xD00D      	BRA         L_Menu2498
0x1E92	0x0101      	MOVLB       1
0x1E94	0x512A      	MOVF        _CloseAfterPass, 0, 1
0x1E96	0x0800      	SUBLW       0
0x1E98	0xE209      	BC          L_Menu2498
L__Menu2573:
;FirmV_0_7_0.c,2002 :: 		{CloseAfterPass=CloseAfterPass-1;if(CloseAfterPass==9) CloseAfterPass=0;Menu0();State=102;}
0x1E9A	0x072A      	DECF        _CloseAfterPass, 1, 1
0x1E9C	0x512A      	MOVF        _CloseAfterPass, 0, 1
0x1E9E	0x0A09      	XORLW       9
0x1EA0	0xE101      	BNZ         L_Menu2499
0x1EA2	0x6B2A      	CLRF        _CloseAfterPass, 1
L_Menu2499:
0x1EA4	0xF006EC6A  	CALL        _Menu0, 0
0x1EA8	0x0E66      	MOVLW       102
0x1EAA	0x6E29      	MOVWF       _State 
L_Menu2498:
;FirmV_0_7_0.c,2003 :: 		if((Events.Keys.b2==1)&&(CloseAfterPass<255))
0x1EAC	0x0100      	MOVLB       0
0x1EAE	0xA5FD      	BTFSS       _Events, 2, 1
0x1EB0	0xD00E      	BRA         L_Menu2502
0x1EB2	0x0EFF      	MOVLW       255
0x1EB4	0x0101      	MOVLB       1
0x1EB6	0x5D2A      	SUBWF       _CloseAfterPass, 0, 1
0x1EB8	0xE20A      	BC          L_Menu2502
L__Menu2572:
;FirmV_0_7_0.c,2004 :: 		{CloseAfterPass=CloseAfterPass+1;if(CloseAfterPass==1) CloseAfterPass=10;Menu0();State=102;}
0x1EBA	0x2B2A      	INCF        _CloseAfterPass, 1, 1
0x1EBC	0x512A      	MOVF        _CloseAfterPass, 0, 1
0x1EBE	0x0A01      	XORLW       1
0x1EC0	0xE102      	BNZ         L_Menu2503
0x1EC2	0x0E0A      	MOVLW       10
0x1EC4	0x6F2A      	MOVWF       _CloseAfterPass, 1
L_Menu2503:
0x1EC6	0xF006EC6A  	CALL        _Menu0, 0
0x1ECA	0x0E66      	MOVLW       102
0x1ECC	0x6E29      	MOVWF       _State 
L_Menu2502:
;FirmV_0_7_0.c,2005 :: 		}
L_Menu2495:
;FirmV_0_7_0.c,2008 :: 		if(MenuPointer==17)
0x1ECE	0x5020      	MOVF        _MenuPointer, 0 
0x1ED0	0x0A11      	XORLW       17
0x1ED2	0xE142      	BNZ         L_Menu2504
;FirmV_0_7_0.c,2010 :: 		State=103;
0x1ED4	0x0104      	MOVLB       4
0x1ED6	0x0E67      	MOVLW       103
0x1ED8	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,2011 :: 		memcpy(LCDLine1,"                ",16);
0x1EDA	0x0E2D      	MOVLW       _LCDLine1
0x1EDC	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1EDE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1EE0	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1EE2	0x0E40      	MOVLW       ?ICS?lstr100_FirmV_0_7_0
0x1EE4	0x6EF6      	MOVWF       4086 
0x1EE6	0x0E5C      	MOVLW       hi_addr(?ICS?lstr100_FirmV_0_7_0)
0x1EE8	0x6EF7      	MOVWF       TBLPTRH 
0x1EEA	0x0E00      	MOVLW       higher_addr(?ICS?lstr100_FirmV_0_7_0)
0x1EEC	0x6EF8      	MOVWF       TBLPTRU 
0x1EEE	0x0E6C      	MOVLW       ?lstr100_FirmV_0_7_0
0x1EF0	0x6EE1      	MOVWF       FSR1L 
0x1EF2	0x0E01      	MOVLW       hi_addr(?lstr100_FirmV_0_7_0)
0x1EF4	0x6EE2      	MOVWF       FSR1H 
0x1EF6	0x0E11      	MOVLW       17
0x1EF8	0x6E00      	MOVWF       R0 
0x1EFA	0x0E01      	MOVLW       1
0x1EFC	0x6E01      	MOVWF       R1 
0x1EFE	0xF005EC75  	CALL        ___CC2DW, 0
0x1F02	0x0E6C      	MOVLW       ?lstr100_FirmV_0_7_0
0x1F04	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1F06	0x0E01      	MOVLW       hi_addr(?lstr100_FirmV_0_7_0)
0x1F08	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1F0A	0x0E10      	MOVLW       16
0x1F0C	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1F0E	0x0E00      	MOVLW       0
0x1F10	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1F12	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2012 :: 		memcpy(LCDLine2,"                ",16);
0x1F16	0x0E48      	MOVLW       _LCDLine2
0x1F18	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1F1A	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x1F1C	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1F1E	0x0E51      	MOVLW       ?ICS?lstr101_FirmV_0_7_0
0x1F20	0x6EF6      	MOVWF       4086 
0x1F22	0x0E5C      	MOVLW       hi_addr(?ICS?lstr101_FirmV_0_7_0)
0x1F24	0x6EF7      	MOVWF       TBLPTRH 
0x1F26	0x0E00      	MOVLW       higher_addr(?ICS?lstr101_FirmV_0_7_0)
0x1F28	0x6EF8      	MOVWF       TBLPTRU 
0x1F2A	0x0E7D      	MOVLW       ?lstr101_FirmV_0_7_0
0x1F2C	0x6EE1      	MOVWF       FSR1L 
0x1F2E	0x0E01      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x1F30	0x6EE2      	MOVWF       FSR1H 
0x1F32	0x0E11      	MOVLW       17
0x1F34	0x6E00      	MOVWF       R0 
0x1F36	0x0E01      	MOVLW       1
0x1F38	0x6E01      	MOVWF       R1 
0x1F3A	0xF005EC75  	CALL        ___CC2DW, 0
0x1F3E	0x0E7D      	MOVLW       ?lstr101_FirmV_0_7_0
0x1F40	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1F42	0x0E01      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x1F44	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1F46	0x0E10      	MOVLW       16
0x1F48	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1F4A	0x0E00      	MOVLW       0
0x1F4C	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1F4E	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2013 :: 		LCDFlash=0;
0x1F52	0x6A23      	CLRF        _LCDFlash 
;FirmV_0_7_0.c,2014 :: 		LCDUpdateFlag=1;
0x1F54	0x0E01      	MOVLW       1
0x1F56	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,2015 :: 		}
L_Menu2504:
;FirmV_0_7_0.c,2018 :: 		if(MenuPointer==18)
0x1F58	0x5020      	MOVF        _MenuPointer, 0 
0x1F5A	0x0A12      	XORLW       18
0x1F5C	0xE143      	BNZ         L_Menu2505
;FirmV_0_7_0.c,2020 :: 		State=0;
0x1F5E	0x0104      	MOVLB       4
0x1F60	0x6A29      	CLRF        _State 
;FirmV_0_7_0.c,2021 :: 		memcpy(LCDLine1,"                ",16);
0x1F62	0x0E2D      	MOVLW       _LCDLine1
0x1F64	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1F66	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1F68	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1F6A	0x0E62      	MOVLW       ?ICS?lstr102_FirmV_0_7_0
0x1F6C	0x6EF6      	MOVWF       4086 
0x1F6E	0x0E5C      	MOVLW       hi_addr(?ICS?lstr102_FirmV_0_7_0)
0x1F70	0x6EF7      	MOVWF       TBLPTRH 
0x1F72	0x0E00      	MOVLW       higher_addr(?ICS?lstr102_FirmV_0_7_0)
0x1F74	0x6EF8      	MOVWF       TBLPTRU 
0x1F76	0x0E8E      	MOVLW       ?lstr102_FirmV_0_7_0
0x1F78	0x6EE1      	MOVWF       FSR1L 
0x1F7A	0x0E01      	MOVLW       hi_addr(?lstr102_FirmV_0_7_0)
0x1F7C	0x6EE2      	MOVWF       FSR1H 
0x1F7E	0x0E11      	MOVLW       17
0x1F80	0x6E00      	MOVWF       R0 
0x1F82	0x0E01      	MOVLW       1
0x1F84	0x6E01      	MOVWF       R1 
0x1F86	0xF005EC75  	CALL        ___CC2DW, 0
0x1F8A	0x0E8E      	MOVLW       ?lstr102_FirmV_0_7_0
0x1F8C	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1F8E	0x0E01      	MOVLW       hi_addr(?lstr102_FirmV_0_7_0)
0x1F90	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1F92	0x0E10      	MOVLW       16
0x1F94	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1F96	0x0E00      	MOVLW       0
0x1F98	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1F9A	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2022 :: 		memcpy(LCDLine2,"                ",16);
0x1F9E	0x0E48      	MOVLW       _LCDLine2
0x1FA0	0x6F33      	MOVWF       FARG_memcpy_d1, 1
0x1FA2	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x1FA4	0x6F34      	MOVWF       FARG_memcpy_d1+1, 1
0x1FA6	0x0E73      	MOVLW       ?ICS?lstr103_FirmV_0_7_0
0x1FA8	0x6EF6      	MOVWF       4086 
0x1FAA	0x0E5C      	MOVLW       hi_addr(?ICS?lstr103_FirmV_0_7_0)
0x1FAC	0x6EF7      	MOVWF       TBLPTRH 
0x1FAE	0x0E00      	MOVLW       higher_addr(?ICS?lstr103_FirmV_0_7_0)
0x1FB0	0x6EF8      	MOVWF       TBLPTRU 
0x1FB2	0x0E9F      	MOVLW       ?lstr103_FirmV_0_7_0
0x1FB4	0x6EE1      	MOVWF       FSR1L 
0x1FB6	0x0E01      	MOVLW       hi_addr(?lstr103_FirmV_0_7_0)
0x1FB8	0x6EE2      	MOVWF       FSR1H 
0x1FBA	0x0E11      	MOVLW       17
0x1FBC	0x6E00      	MOVWF       R0 
0x1FBE	0x0E01      	MOVLW       1
0x1FC0	0x6E01      	MOVWF       R1 
0x1FC2	0xF005EC75  	CALL        ___CC2DW, 0
0x1FC6	0x0E9F      	MOVLW       ?lstr103_FirmV_0_7_0
0x1FC8	0x6F35      	MOVWF       FARG_memcpy_s1, 1
0x1FCA	0x0E01      	MOVLW       hi_addr(?lstr103_FirmV_0_7_0)
0x1FCC	0x6F36      	MOVWF       FARG_memcpy_s1+1, 1
0x1FCE	0x0E10      	MOVLW       16
0x1FD0	0x6F37      	MOVWF       FARG_memcpy_n, 1
0x1FD2	0x0E00      	MOVLW       0
0x1FD4	0x6F38      	MOVWF       FARG_memcpy_n+1, 1
0x1FD6	0xF001EC27  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2023 :: 		LCDFlash=0;
0x1FDA	0x6A23      	CLRF        _LCDFlash 
;FirmV_0_7_0.c,2024 :: 		LCDUpdateFlag=1;
0x1FDC	0x0E01      	MOVLW       1
0x1FDE	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,2025 :: 		LoadConfigs();
0x1FE0	0xF00BECDA  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,2026 :: 		}
L_Menu2505:
;FirmV_0_7_0.c,2027 :: 		}
0x1FE4	0x0012      	RETURN      0
; end of _Menu2
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x1FE6	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x1FE8	0x0E80      	MOVLW       128
0x1FEA	0x0101      	MOVLB       1
0x1FEC	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x1FEE	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x1FF0	0x0EC0      	MOVLW       192
0x1FF2	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x1FF4	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x1FF6	0x0E94      	MOVLW       148
0x1FF8	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x1FFA	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x1FFC	0x0ED4      	MOVLW       212
0x1FFE	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x2000	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x2002	0x0E80      	MOVLW       128
0x2004	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x2006	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x2008	0x0101      	MOVLB       1
0x200A	0x514A      	MOVF        FARG_Lcd_Out_row, 0, 1
0x200C	0x0A01      	XORLW       1
0x200E	0xE0EC      	BZ          L_Lcd_Out13
0x2010	0x514A      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2012	0x0A02      	XORLW       2
0x2014	0xE0ED      	BZ          L_Lcd_Out14
0x2016	0x514A      	MOVF        FARG_Lcd_Out_row, 0, 1
0x2018	0x0A03      	XORLW       3
0x201A	0xE0ED      	BZ          L_Lcd_Out15
0x201C	0x514A      	MOVF        FARG_Lcd_Out_row, 0, 1
0x201E	0x0A04      	XORLW       4
0x2020	0xE0ED      	BZ          L_Lcd_Out16
0x2022	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x2024	0x054B      	DECF        FARG_Lcd_Out_column, 0, 1
0x2026	0x6E00      	MOVWF       R0 
0x2028	0x514A      	MOVF        FARG_Lcd_Out_row, 0, 1
0x202A	0x2600      	ADDWF       R0, 1 
0x202C	0xF14AC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x2030	0xF427C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x2034	0xF004ECB2  	CALL        _Lcd_Cmd, 0
;__Lib_Lcd.c,197 :: 		
0x2038	0x910A      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x203A	0x6B4E      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x203C	0x514E      	MOVF        Lcd_Out_i_L0, 0, 1
0x203E	0x254C      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x2040	0x6EE9      	MOVWF       FSR0L 
0x2042	0x0E00      	MOVLW       0
0x2044	0x214D      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x2046	0x6EEA      	MOVWF       FSR0H 
0x2048	0x52EE      	MOVF        POSTINC0, 1 
0x204A	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x204C	0x514E      	MOVF        Lcd_Out_i_L0, 0, 1
0x204E	0x254C      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x2050	0x6EE9      	MOVWF       FSR0L 
0x2052	0x0E00      	MOVLW       0
0x2054	0x214D      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x2056	0x6EEA      	MOVWF       FSR0H 
0x2058	0xF27ECFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x205C	0xDC1E      	RCALL       _Lcd_Chr_CP
0x205E	0x2B4E      	INCF        Lcd_Out_i_L0, 1, 1
0x2060	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x2062	0x810A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x2064	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x2066	0x9296      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x2068	0x9496      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x206A	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x206C	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x206E	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x2070	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x2072	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x2074	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x2076	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x2078	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x207A	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x207C	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x207E	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x2082	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x2086	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x208A	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x208C	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x208E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x2090	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x2094	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x2096	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x209A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x209C	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x20A0	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x20A2	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x20A6	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x20A8	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x20AC	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x20AE	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x20B2	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x20B4	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x20B6	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x20BA	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x20BC	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x20C0	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x20C2	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x20C6	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x20C8	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x20CA	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x20CC	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x20CE	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x20D2	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x20D4	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x20D8	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x20DA	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x20DC	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x20DE	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x20E2	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x20E4	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x20E6	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x20E8	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x20EC	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x20EE	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x20F2	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x20F4	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x20F8	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x20FA	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x20FC	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x20FE	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x2102	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x2104	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x2108	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x210A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x210C	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x2110	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x2112	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x2114	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x2116	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x2118	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x211A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x211C	0xF001EC4F  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x2120	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x2122	0xF003EC65  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x2126	0x0101      	MOVLB       1
0x2128	0x810A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x212A	0x0012      	RETURN      0
; end of _Lcd_Init
_Menu3:
;FirmV_0_7_0.c,2039 :: 		void Menu3()
;FirmV_0_7_0.c,2041 :: 		SaveConfigs();
0x212C	0xF004ECF4  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2042 :: 		State=0;
0x2130	0x6A29      	CLRF        _State 
;FirmV_0_7_0.c,2043 :: 		}
0x2132	0x0012      	RETURN      0
; end of _Menu3
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x2134	0x0E60      	MOVLW       _UART1_Write
0x2136	0x0101      	MOVLB       1
0x2138	0x6F26      	MOVWF       _UART_Wr_Ptr, 1
0x213A	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x213C	0x6F27      	MOVWF       _UART_Wr_Ptr+1, 1
0x213E	0x0E3A      	MOVLW       FARG_UART1_Write_data_
0x2140	0x6F28      	MOVWF       _UART_Wr_Ptr+2, 1
0x2142	0x0E04      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x2144	0x6F29      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x2146	0x0EFF      	MOVLW       _UART1_Read
0x2148	0x6F21      	MOVWF       _UART_Rd_Ptr, 1
0x214A	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x214C	0x6F22      	MOVWF       _UART_Rd_Ptr+1, 1
0x214E	0x0E00      	MOVLW       0
0x2150	0x6F23      	MOVWF       _UART_Rd_Ptr+2, 1
0x2152	0x0E00      	MOVLW       0
0x2154	0x6F24      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x2156	0x0EFF      	MOVLW       _UART1_Data_Ready
0x2158	0x6F18      	MOVWF       _UART_Rdy_Ptr, 1
0x215A	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x215C	0x6F19      	MOVWF       _UART_Rdy_Ptr+1, 1
0x215E	0x0E00      	MOVLW       0
0x2160	0x6F1A      	MOVWF       _UART_Rdy_Ptr+2, 1
0x2162	0x0E00      	MOVLW       0
0x2164	0x6F1B      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x2166	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x2168	0x6F13      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x216A	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x216C	0x6F14      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x216E	0x0E00      	MOVLW       0
0x2170	0x6F15      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x2172	0x0E00      	MOVLW       0
0x2174	0x6F16      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x2176	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x2178	0x0E90      	MOVLW       144
0x217A	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x217C	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x217E	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x2180	0xAA9E      	BTFSS       PIR1, 5 
0x2182	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x2184	0xF000CFAE  	MOVFF       RCREG, R0
0x2188	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x218A	0x0012      	RETURN      0
; end of _UART1_Init
_LearnManual:
;FirmV_0_7_0.c,2072 :: 		void LearnManual()
;FirmV_0_7_0.c,2074 :: 		}
0x218C	0x0012      	RETURN      0
; end of _LearnManual
_State7:
;FirmV_0_7_0.c,973 :: 		void State7()
;FirmV_0_7_0.c,975 :: 		Flasher=1;
0x218E	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,977 :: 		if(CheckTask(1))
0x2190	0x0E01      	MOVLW       1
0x2192	0x0102      	MOVLB       2
0x2194	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2196	0xF005ECBE  	CALL        _CheckTask, 0
0x219A	0x5200      	MOVF        R0, 1 
0x219C	0xE02B      	BZ          L_State7182
;FirmV_0_7_0.c,978 :: 		{StartMotor(1,_Close);Logger("S7 Motor1Start");}
0x219E	0x0E01      	MOVLW       1
0x21A0	0x0102      	MOVLB       2
0x21A2	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x21A4	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x21A6	0xF006EC52  	CALL        _StartMotor, 0
0x21AA	0x0E53      	MOVLW       83
0x21AC	0x0101      	MOVLB       1
0x21AE	0x6F4A      	MOVWF       ?lstr45_FirmV_0_7_0, 1
0x21B0	0x0E37      	MOVLW       55
0x21B2	0x6F4B      	MOVWF       ?lstr45_FirmV_0_7_0+1, 1
0x21B4	0x0E20      	MOVLW       32
0x21B6	0x6F4C      	MOVWF       ?lstr45_FirmV_0_7_0+2, 1
0x21B8	0x0E4D      	MOVLW       77
0x21BA	0x6F4D      	MOVWF       ?lstr45_FirmV_0_7_0+3, 1
0x21BC	0x0E6F      	MOVLW       111
0x21BE	0x6F4E      	MOVWF       ?lstr45_FirmV_0_7_0+4, 1
0x21C0	0x0E74      	MOVLW       116
0x21C2	0x6F4F      	MOVWF       ?lstr45_FirmV_0_7_0+5, 1
0x21C4	0x0E6F      	MOVLW       111
0x21C6	0x6F50      	MOVWF       ?lstr45_FirmV_0_7_0+6, 1
0x21C8	0x0E72      	MOVLW       114
0x21CA	0x6F51      	MOVWF       ?lstr45_FirmV_0_7_0+7, 1
0x21CC	0x0E31      	MOVLW       49
0x21CE	0x6F52      	MOVWF       ?lstr45_FirmV_0_7_0+8, 1
0x21D0	0x0E53      	MOVLW       83
0x21D2	0x6F53      	MOVWF       ?lstr45_FirmV_0_7_0+9, 1
0x21D4	0x0E74      	MOVLW       116
0x21D6	0x6F54      	MOVWF       ?lstr45_FirmV_0_7_0+10, 1
0x21D8	0x0E61      	MOVLW       97
0x21DA	0x6F55      	MOVWF       ?lstr45_FirmV_0_7_0+11, 1
0x21DC	0x0E72      	MOVLW       114
0x21DE	0x6F56      	MOVWF       ?lstr45_FirmV_0_7_0+12, 1
0x21E0	0x0E74      	MOVLW       116
0x21E2	0x6F57      	MOVWF       ?lstr45_FirmV_0_7_0+13, 1
0x21E4	0x6B58      	CLRF        ?lstr45_FirmV_0_7_0+14, 1
0x21E6	0x0E4A      	MOVLW       ?lstr45_FirmV_0_7_0
0x21E8	0x0102      	MOVLB       2
0x21EA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x21EC	0x0E01      	MOVLW       hi_addr(?lstr45_FirmV_0_7_0)
0x21EE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x21F0	0xF00AECC5  	CALL        _Logger, 0
L_State7182:
;FirmV_0_7_0.c,980 :: 		if(CheckTask(2))
0x21F4	0x0E02      	MOVLW       2
0x21F6	0x0102      	MOVLB       2
0x21F8	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x21FA	0xF005ECBE  	CALL        _CheckTask, 0
0x21FE	0x5200      	MOVF        R0, 1 
0x2200	0xE02B      	BZ          L_State7183
;FirmV_0_7_0.c,981 :: 		{StartMotor(2,_Close);Logger("S7 Motor2Start");}
0x2202	0x0E02      	MOVLW       2
0x2204	0x0102      	MOVLB       2
0x2206	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x2208	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x220A	0xF006EC52  	CALL        _StartMotor, 0
0x220E	0x0E53      	MOVLW       83
0x2210	0x0101      	MOVLB       1
0x2212	0x6F59      	MOVWF       ?lstr46_FirmV_0_7_0, 1
0x2214	0x0E37      	MOVLW       55
0x2216	0x6F5A      	MOVWF       ?lstr46_FirmV_0_7_0+1, 1
0x2218	0x0E20      	MOVLW       32
0x221A	0x6F5B      	MOVWF       ?lstr46_FirmV_0_7_0+2, 1
0x221C	0x0E4D      	MOVLW       77
0x221E	0x6F5C      	MOVWF       ?lstr46_FirmV_0_7_0+3, 1
0x2220	0x0E6F      	MOVLW       111
0x2222	0x6F5D      	MOVWF       ?lstr46_FirmV_0_7_0+4, 1
0x2224	0x0E74      	MOVLW       116
0x2226	0x6F5E      	MOVWF       ?lstr46_FirmV_0_7_0+5, 1
0x2228	0x0E6F      	MOVLW       111
0x222A	0x6F5F      	MOVWF       ?lstr46_FirmV_0_7_0+6, 1
0x222C	0x0E72      	MOVLW       114
0x222E	0x6F60      	MOVWF       ?lstr46_FirmV_0_7_0+7, 1
0x2230	0x0E32      	MOVLW       50
0x2232	0x6F61      	MOVWF       ?lstr46_FirmV_0_7_0+8, 1
0x2234	0x0E53      	MOVLW       83
0x2236	0x6F62      	MOVWF       ?lstr46_FirmV_0_7_0+9, 1
0x2238	0x0E74      	MOVLW       116
0x223A	0x6F63      	MOVWF       ?lstr46_FirmV_0_7_0+10, 1
0x223C	0x0E61      	MOVLW       97
0x223E	0x6F64      	MOVWF       ?lstr46_FirmV_0_7_0+11, 1
0x2240	0x0E72      	MOVLW       114
0x2242	0x6F65      	MOVWF       ?lstr46_FirmV_0_7_0+12, 1
0x2244	0x0E74      	MOVLW       116
0x2246	0x6F66      	MOVWF       ?lstr46_FirmV_0_7_0+13, 1
0x2248	0x6B67      	CLRF        ?lstr46_FirmV_0_7_0+14, 1
0x224A	0x0E59      	MOVLW       ?lstr46_FirmV_0_7_0
0x224C	0x0102      	MOVLB       2
0x224E	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2250	0x0E01      	MOVLW       hi_addr(?lstr46_FirmV_0_7_0)
0x2252	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2254	0xF00AECC5  	CALL        _Logger, 0
L_State7183:
;FirmV_0_7_0.c,983 :: 		if(CheckTask(10))
0x2258	0x0E0A      	MOVLW       10
0x225A	0x0102      	MOVLB       2
0x225C	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x225E	0xF005ECBE  	CALL        _CheckTask, 0
0x2262	0x5200      	MOVF        R0, 1 
0x2264	0xE01E      	BZ          L_State7184
;FirmV_0_7_0.c,984 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S7 M1 Overload Check");}
0x2266	0x0E01      	MOVLW       1
0x2268	0x6E26      	MOVWF       _OverloadCheckFlag1 
0x226A	0x0E01      	MOVLW       1
0x226C	0x0102      	MOVLB       2
0x226E	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x2270	0xF005ECDE  	CALL        _OverloadInit, 0
0x2274	0x0E6F      	MOVLW       ?ICS?lstr47_FirmV_0_7_0
0x2276	0x6EF6      	MOVWF       4086 
0x2278	0x0E5B      	MOVLW       hi_addr(?ICS?lstr47_FirmV_0_7_0)
0x227A	0x6EF7      	MOVWF       TBLPTRH 
0x227C	0x0E00      	MOVLW       higher_addr(?ICS?lstr47_FirmV_0_7_0)
0x227E	0x6EF8      	MOVWF       TBLPTRU 
0x2280	0x0E68      	MOVLW       ?lstr47_FirmV_0_7_0
0x2282	0x6EE1      	MOVWF       FSR1L 
0x2284	0x0E01      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x2286	0x6EE2      	MOVWF       FSR1H 
0x2288	0x0E15      	MOVLW       21
0x228A	0x6E00      	MOVWF       R0 
0x228C	0x0E01      	MOVLW       1
0x228E	0x6E01      	MOVWF       R1 
0x2290	0xF005EC75  	CALL        ___CC2DW, 0
0x2294	0x0E68      	MOVLW       ?lstr47_FirmV_0_7_0
0x2296	0x0102      	MOVLB       2
0x2298	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x229A	0x0E01      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x229C	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x229E	0xF00AECC5  	CALL        _Logger, 0
L_State7184:
;FirmV_0_7_0.c,986 :: 		if(CheckTask(11))
0x22A2	0x0E0B      	MOVLW       11
0x22A4	0x0102      	MOVLB       2
0x22A6	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x22A8	0xF005ECBE  	CALL        _CheckTask, 0
0x22AC	0x5200      	MOVF        R0, 1 
0x22AE	0xE01E      	BZ          L_State7185
;FirmV_0_7_0.c,987 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S7 M2 Overload Check");}
0x22B0	0x0E01      	MOVLW       1
0x22B2	0x6E25      	MOVWF       _OverloadCheckFlag2 
0x22B4	0x0E02      	MOVLW       2
0x22B6	0x0102      	MOVLB       2
0x22B8	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x22BA	0xF005ECDE  	CALL        _OverloadInit, 0
0x22BE	0x0E84      	MOVLW       ?ICS?lstr48_FirmV_0_7_0
0x22C0	0x6EF6      	MOVWF       4086 
0x22C2	0x0E5B      	MOVLW       hi_addr(?ICS?lstr48_FirmV_0_7_0)
0x22C4	0x6EF7      	MOVWF       TBLPTRH 
0x22C6	0x0E00      	MOVLW       higher_addr(?ICS?lstr48_FirmV_0_7_0)
0x22C8	0x6EF8      	MOVWF       TBLPTRU 
0x22CA	0x0E7D      	MOVLW       ?lstr48_FirmV_0_7_0
0x22CC	0x6EE1      	MOVWF       FSR1L 
0x22CE	0x0E01      	MOVLW       hi_addr(?lstr48_FirmV_0_7_0)
0x22D0	0x6EE2      	MOVWF       FSR1H 
0x22D2	0x0E15      	MOVLW       21
0x22D4	0x6E00      	MOVWF       R0 
0x22D6	0x0E01      	MOVLW       1
0x22D8	0x6E01      	MOVWF       R1 
0x22DA	0xF005EC75  	CALL        ___CC2DW, 0
0x22DE	0x0E7D      	MOVLW       ?lstr48_FirmV_0_7_0
0x22E0	0x0102      	MOVLB       2
0x22E2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x22E4	0x0E01      	MOVLW       hi_addr(?lstr48_FirmV_0_7_0)
0x22E6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x22E8	0xF00AECC5  	CALL        _Logger, 0
L_State7185:
;FirmV_0_7_0.c,989 :: 		if(CheckTask(5))
0x22EC	0x0E05      	MOVLW       5
0x22EE	0x0102      	MOVLB       2
0x22F0	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x22F2	0xF005ECBE  	CALL        _CheckTask, 0
0x22F6	0x5200      	MOVF        R0, 1 
0x22F8	0xE02D      	BZ          L_State7186
;FirmV_0_7_0.c,990 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S7 M1 Speed UP");}
0x22FA	0x0E01      	MOVLW       1
0x22FC	0x0102      	MOVLB       2
0x22FE	0x6F7E      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x2300	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x2304	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x2308	0x6A24      	CLRF        _M1isSlow 
0x230A	0x0E53      	MOVLW       83
0x230C	0x0101      	MOVLB       1
0x230E	0x6F92      	MOVWF       ?lstr49_FirmV_0_7_0, 1
0x2310	0x0E37      	MOVLW       55
0x2312	0x6F93      	MOVWF       ?lstr49_FirmV_0_7_0+1, 1
0x2314	0x0E20      	MOVLW       32
0x2316	0x6F94      	MOVWF       ?lstr49_FirmV_0_7_0+2, 1
0x2318	0x0E4D      	MOVLW       77
0x231A	0x6F95      	MOVWF       ?lstr49_FirmV_0_7_0+3, 1
0x231C	0x0E31      	MOVLW       49
0x231E	0x6F96      	MOVWF       ?lstr49_FirmV_0_7_0+4, 1
0x2320	0x0E20      	MOVLW       32
0x2322	0x6F97      	MOVWF       ?lstr49_FirmV_0_7_0+5, 1
0x2324	0x0E53      	MOVLW       83
0x2326	0x6F98      	MOVWF       ?lstr49_FirmV_0_7_0+6, 1
0x2328	0x0E70      	MOVLW       112
0x232A	0x6F99      	MOVWF       ?lstr49_FirmV_0_7_0+7, 1
0x232C	0x0E65      	MOVLW       101
0x232E	0x6F9A      	MOVWF       ?lstr49_FirmV_0_7_0+8, 1
0x2330	0x0E65      	MOVLW       101
0x2332	0x6F9B      	MOVWF       ?lstr49_FirmV_0_7_0+9, 1
0x2334	0x0E64      	MOVLW       100
0x2336	0x6F9C      	MOVWF       ?lstr49_FirmV_0_7_0+10, 1
0x2338	0x0E20      	MOVLW       32
0x233A	0x6F9D      	MOVWF       ?lstr49_FirmV_0_7_0+11, 1
0x233C	0x0E55      	MOVLW       85
0x233E	0x6F9E      	MOVWF       ?lstr49_FirmV_0_7_0+12, 1
0x2340	0x0E50      	MOVLW       80
0x2342	0x6F9F      	MOVWF       ?lstr49_FirmV_0_7_0+13, 1
0x2344	0x6BA0      	CLRF        ?lstr49_FirmV_0_7_0+14, 1
0x2346	0x0E92      	MOVLW       ?lstr49_FirmV_0_7_0
0x2348	0x0102      	MOVLB       2
0x234A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x234C	0x0E01      	MOVLW       hi_addr(?lstr49_FirmV_0_7_0)
0x234E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2350	0xF00AECC5  	CALL        _Logger, 0
L_State7186:
;FirmV_0_7_0.c,992 :: 		if(CheckTask(6))
0x2354	0x0E06      	MOVLW       6
0x2356	0x0102      	MOVLB       2
0x2358	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x235A	0xF005ECBE  	CALL        _CheckTask, 0
0x235E	0x5200      	MOVF        R0, 1 
0x2360	0xE02D      	BZ          L_State7187
;FirmV_0_7_0.c,993 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S7 M2 Speed UP");}
0x2362	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x2366	0x0E01      	MOVLW       1
0x2368	0x0102      	MOVLB       2
0x236A	0x6F7F      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x236C	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x2370	0x6A2B      	CLRF        _M2isSlow 
0x2372	0x0E53      	MOVLW       83
0x2374	0x0101      	MOVLB       1
0x2376	0x6FA1      	MOVWF       ?lstr50_FirmV_0_7_0, 1
0x2378	0x0E37      	MOVLW       55
0x237A	0x6FA2      	MOVWF       ?lstr50_FirmV_0_7_0+1, 1
0x237C	0x0E20      	MOVLW       32
0x237E	0x6FA3      	MOVWF       ?lstr50_FirmV_0_7_0+2, 1
0x2380	0x0E4D      	MOVLW       77
0x2382	0x6FA4      	MOVWF       ?lstr50_FirmV_0_7_0+3, 1
0x2384	0x0E32      	MOVLW       50
0x2386	0x6FA5      	MOVWF       ?lstr50_FirmV_0_7_0+4, 1
0x2388	0x0E20      	MOVLW       32
0x238A	0x6FA6      	MOVWF       ?lstr50_FirmV_0_7_0+5, 1
0x238C	0x0E53      	MOVLW       83
0x238E	0x6FA7      	MOVWF       ?lstr50_FirmV_0_7_0+6, 1
0x2390	0x0E70      	MOVLW       112
0x2392	0x6FA8      	MOVWF       ?lstr50_FirmV_0_7_0+7, 1
0x2394	0x0E65      	MOVLW       101
0x2396	0x6FA9      	MOVWF       ?lstr50_FirmV_0_7_0+8, 1
0x2398	0x0E65      	MOVLW       101
0x239A	0x6FAA      	MOVWF       ?lstr50_FirmV_0_7_0+9, 1
0x239C	0x0E64      	MOVLW       100
0x239E	0x6FAB      	MOVWF       ?lstr50_FirmV_0_7_0+10, 1
0x23A0	0x0E20      	MOVLW       32
0x23A2	0x6FAC      	MOVWF       ?lstr50_FirmV_0_7_0+11, 1
0x23A4	0x0E55      	MOVLW       85
0x23A6	0x6FAD      	MOVWF       ?lstr50_FirmV_0_7_0+12, 1
0x23A8	0x0E50      	MOVLW       80
0x23AA	0x6FAE      	MOVWF       ?lstr50_FirmV_0_7_0+13, 1
0x23AC	0x6BAF      	CLRF        ?lstr50_FirmV_0_7_0+14, 1
0x23AE	0x0EA1      	MOVLW       ?lstr50_FirmV_0_7_0
0x23B0	0x0102      	MOVLB       2
0x23B2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x23B4	0x0E01      	MOVLW       hi_addr(?lstr50_FirmV_0_7_0)
0x23B6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x23B8	0xF00AECC5  	CALL        _Logger, 0
L_State7187:
;FirmV_0_7_0.c,995 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(CloseDone.b0))
0x23BC	0x0E03      	MOVLW       3
0x23BE	0x0102      	MOVLB       2
0x23C0	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x23C2	0xF005ECBE  	CALL        _CheckTask, 0
0x23C6	0x5200      	MOVF        R0, 1 
0x23C8	0xE108      	BNZ         L__State7548
0x23CA	0x5026      	MOVF        _OverloadCheckFlag1, 0 
0x23CC	0x0A01      	XORLW       1
0x23CE	0xE104      	BNZ         L__State7549
0x23D0	0x0101      	MOVLB       1
0x23D2	0xA102      	BTFSS       _Events+5, 0, 1
0x23D4	0xD001      	BRA         L__State7549
0x23D6	0xD001      	BRA         L__State7548
L__State7549:
0x23D8	0xD029      	BRA         L_State7194
L__State7548:
0x23DA	0xA01B      	BTFSS       _CloseDone, 0 
0x23DC	0xD027      	BRA         L_State7194
L__State7547:
;FirmV_0_7_0.c,996 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S7 M1 Stoped");}
0x23DE	0x901B      	BCF         _CloseDone, 0 
0x23E0	0x0E01      	MOVLW       1
0x23E2	0x0102      	MOVLB       2
0x23E4	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x23E6	0xF00AECB9  	CALL        _StopMotor, 0
0x23EA	0x0E53      	MOVLW       83
0x23EC	0x0101      	MOVLB       1
0x23EE	0x6FB0      	MOVWF       ?lstr51_FirmV_0_7_0, 1
0x23F0	0x0E37      	MOVLW       55
0x23F2	0x6FB1      	MOVWF       ?lstr51_FirmV_0_7_0+1, 1
0x23F4	0x0E20      	MOVLW       32
0x23F6	0x6FB2      	MOVWF       ?lstr51_FirmV_0_7_0+2, 1
0x23F8	0x0E4D      	MOVLW       77
0x23FA	0x6FB3      	MOVWF       ?lstr51_FirmV_0_7_0+3, 1
0x23FC	0x0E31      	MOVLW       49
0x23FE	0x6FB4      	MOVWF       ?lstr51_FirmV_0_7_0+4, 1
0x2400	0x0E20      	MOVLW       32
0x2402	0x6FB5      	MOVWF       ?lstr51_FirmV_0_7_0+5, 1
0x2404	0x0E53      	MOVLW       83
0x2406	0x6FB6      	MOVWF       ?lstr51_FirmV_0_7_0+6, 1
0x2408	0x0E74      	MOVLW       116
0x240A	0x6FB7      	MOVWF       ?lstr51_FirmV_0_7_0+7, 1
0x240C	0x0E6F      	MOVLW       111
0x240E	0x6FB8      	MOVWF       ?lstr51_FirmV_0_7_0+8, 1
0x2410	0x0E70      	MOVLW       112
0x2412	0x6FB9      	MOVWF       ?lstr51_FirmV_0_7_0+9, 1
0x2414	0x0E65      	MOVLW       101
0x2416	0x6FBA      	MOVWF       ?lstr51_FirmV_0_7_0+10, 1
0x2418	0x0E64      	MOVLW       100
0x241A	0x6FBB      	MOVWF       ?lstr51_FirmV_0_7_0+11, 1
0x241C	0x6BBC      	CLRF        ?lstr51_FirmV_0_7_0+12, 1
0x241E	0x0EB0      	MOVLW       ?lstr51_FirmV_0_7_0
0x2420	0x0102      	MOVLB       2
0x2422	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2424	0x0E01      	MOVLW       hi_addr(?lstr51_FirmV_0_7_0)
0x2426	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2428	0xF00AECC5  	CALL        _Logger, 0
L_State7194:
;FirmV_0_7_0.c,998 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(CloseDone.b1))
0x242C	0x0E04      	MOVLW       4
0x242E	0x0102      	MOVLB       2
0x2430	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2432	0xF005ECBE  	CALL        _CheckTask, 0
0x2436	0x5200      	MOVF        R0, 1 
0x2438	0xE108      	BNZ         L__State7545
0x243A	0x5025      	MOVF        _OverloadCheckFlag2, 0 
0x243C	0x0A01      	XORLW       1
0x243E	0xE104      	BNZ         L__State7546
0x2440	0x0101      	MOVLB       1
0x2442	0xA302      	BTFSS       _Events+5, 1, 1
0x2444	0xD001      	BRA         L__State7546
0x2446	0xD001      	BRA         L__State7545
L__State7546:
0x2448	0xD029      	BRA         L_State7201
L__State7545:
0x244A	0xA21B      	BTFSS       _CloseDone, 1 
0x244C	0xD027      	BRA         L_State7201
L__State7544:
;FirmV_0_7_0.c,999 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S7 M2 Stoped");}
0x244E	0x921B      	BCF         _CloseDone, 1 
0x2450	0x0E02      	MOVLW       2
0x2452	0x0102      	MOVLB       2
0x2454	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x2456	0xF00AECB9  	CALL        _StopMotor, 0
0x245A	0x0E53      	MOVLW       83
0x245C	0x0101      	MOVLB       1
0x245E	0x6FBD      	MOVWF       ?lstr52_FirmV_0_7_0, 1
0x2460	0x0E37      	MOVLW       55
0x2462	0x6FBE      	MOVWF       ?lstr52_FirmV_0_7_0+1, 1
0x2464	0x0E20      	MOVLW       32
0x2466	0x6FBF      	MOVWF       ?lstr52_FirmV_0_7_0+2, 1
0x2468	0x0E4D      	MOVLW       77
0x246A	0x6FC0      	MOVWF       ?lstr52_FirmV_0_7_0+3, 1
0x246C	0x0E32      	MOVLW       50
0x246E	0x6FC1      	MOVWF       ?lstr52_FirmV_0_7_0+4, 1
0x2470	0x0E20      	MOVLW       32
0x2472	0x6FC2      	MOVWF       ?lstr52_FirmV_0_7_0+5, 1
0x2474	0x0E53      	MOVLW       83
0x2476	0x6FC3      	MOVWF       ?lstr52_FirmV_0_7_0+6, 1
0x2478	0x0E74      	MOVLW       116
0x247A	0x6FC4      	MOVWF       ?lstr52_FirmV_0_7_0+7, 1
0x247C	0x0E6F      	MOVLW       111
0x247E	0x6FC5      	MOVWF       ?lstr52_FirmV_0_7_0+8, 1
0x2480	0x0E70      	MOVLW       112
0x2482	0x6FC6      	MOVWF       ?lstr52_FirmV_0_7_0+9, 1
0x2484	0x0E65      	MOVLW       101
0x2486	0x6FC7      	MOVWF       ?lstr52_FirmV_0_7_0+10, 1
0x2488	0x0E64      	MOVLW       100
0x248A	0x6FC8      	MOVWF       ?lstr52_FirmV_0_7_0+11, 1
0x248C	0x6BC9      	CLRF        ?lstr52_FirmV_0_7_0+12, 1
0x248E	0x0EBD      	MOVLW       ?lstr52_FirmV_0_7_0
0x2490	0x0102      	MOVLB       2
0x2492	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2494	0x0E01      	MOVLW       hi_addr(?lstr52_FirmV_0_7_0)
0x2496	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2498	0xF00AECC5  	CALL        _Logger, 0
L_State7201:
;FirmV_0_7_0.c,1001 :: 		if(Door2OpenTime==0)
0x249C	0x0101      	MOVLB       1
0x249E	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x24A0	0x0A00      	XORLW       0
0x24A2	0xE101      	BNZ         L_State7202
;FirmV_0_7_0.c,1002 :: 		CloseDone.b1=0;
0x24A4	0x921B      	BCF         _CloseDone, 1 
L_State7202:
;FirmV_0_7_0.c,1004 :: 		if((Events.Photocell.b0==1))
0x24A6	0xA103      	BTFSS       _Events+6, 0, 1
0x24A8	0xD02A      	BRA         L_State7203
;FirmV_0_7_0.c,1005 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S7 Photocell Int");ClearTasks(9);}
0x24AA	0x0E01      	MOVLW       1
0x24AC	0x0102      	MOVLB       2
0x24AE	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x24B0	0xF00AECB9  	CALL        _StopMotor, 0
0x24B4	0x0E02      	MOVLW       2
0x24B6	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x24B8	0xF00AECB9  	CALL        _StopMotor, 0
0x24BC	0x6A26      	CLRF        _OverloadCheckFlag1 
0x24BE	0x6A25      	CLRF        _OverloadCheckFlag2 
0x24C0	0x0E06      	MOVLW       6
0x24C2	0x6E29      	MOVWF       _State 
0x24C4	0x0E01      	MOVLW       1
0x24C6	0x6E47      	MOVWF       _PhotocellOpenFlag 
0x24C8	0x0ED1      	MOVLW       ?ICS?lstr53_FirmV_0_7_0
0x24CA	0x6EF6      	MOVWF       4086 
0x24CC	0x0E5B      	MOVLW       hi_addr(?ICS?lstr53_FirmV_0_7_0)
0x24CE	0x6EF7      	MOVWF       TBLPTRH 
0x24D0	0x0E00      	MOVLW       higher_addr(?ICS?lstr53_FirmV_0_7_0)
0x24D2	0x6EF8      	MOVWF       TBLPTRU 
0x24D4	0x0ECA      	MOVLW       ?lstr53_FirmV_0_7_0
0x24D6	0x6EE1      	MOVWF       FSR1L 
0x24D8	0x0E01      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x24DA	0x6EE2      	MOVWF       FSR1H 
0x24DC	0x0E11      	MOVLW       17
0x24DE	0x6E00      	MOVWF       R0 
0x24E0	0x0E01      	MOVLW       1
0x24E2	0x6E01      	MOVWF       R1 
0x24E4	0xF005EC75  	CALL        ___CC2DW, 0
0x24E8	0x0ECA      	MOVLW       ?lstr53_FirmV_0_7_0
0x24EA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x24EC	0x0E01      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x24EE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x24F0	0xF00AECC5  	CALL        _Logger, 0
0x24F4	0x0E09      	MOVLW       9
0x24F6	0x0102      	MOVLB       2
0x24F8	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x24FA	0xF005ECED  	CALL        _ClearTasks, 0
L_State7203:
;FirmV_0_7_0.c,1007 :: 		if((Events.Remote.b0==1))
0x24FE	0x0101      	MOVLB       1
0x2500	0xA101      	BTFSS       _Events+4, 0, 1
0x2502	0xD028      	BRA         L_State7204
;FirmV_0_7_0.c,1008 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Remote Pressed");ClearTasks(9);}
0x2504	0x0E01      	MOVLW       1
0x2506	0x0102      	MOVLB       2
0x2508	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x250A	0xF00AECB9  	CALL        _StopMotor, 0
0x250E	0x0E02      	MOVLW       2
0x2510	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x2512	0xF00AECB9  	CALL        _StopMotor, 0
0x2516	0x0E06      	MOVLW       6
0x2518	0x6E29      	MOVWF       _State 
0x251A	0x6A26      	CLRF        _OverloadCheckFlag1 
0x251C	0x6A25      	CLRF        _OverloadCheckFlag2 
0x251E	0x0EE2      	MOVLW       ?ICS?lstr54_FirmV_0_7_0
0x2520	0x6EF6      	MOVWF       4086 
0x2522	0x0E5B      	MOVLW       hi_addr(?ICS?lstr54_FirmV_0_7_0)
0x2524	0x6EF7      	MOVWF       TBLPTRH 
0x2526	0x0E00      	MOVLW       higher_addr(?ICS?lstr54_FirmV_0_7_0)
0x2528	0x6EF8      	MOVWF       TBLPTRU 
0x252A	0x0EDB      	MOVLW       ?lstr54_FirmV_0_7_0
0x252C	0x6EE1      	MOVWF       FSR1L 
0x252E	0x0E01      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x2530	0x6EE2      	MOVWF       FSR1H 
0x2532	0x0E12      	MOVLW       18
0x2534	0x6E00      	MOVWF       R0 
0x2536	0x0E01      	MOVLW       1
0x2538	0x6E01      	MOVWF       R1 
0x253A	0xF005EC75  	CALL        ___CC2DW, 0
0x253E	0x0EDB      	MOVLW       ?lstr54_FirmV_0_7_0
0x2540	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2542	0x0E01      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x2544	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2546	0xF00AECC5  	CALL        _Logger, 0
0x254A	0x0E09      	MOVLW       9
0x254C	0x0102      	MOVLB       2
0x254E	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x2550	0xF005ECED  	CALL        _ClearTasks, 0
L_State7204:
;FirmV_0_7_0.c,1010 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x2554	0x0101      	MOVLB       1
0x2556	0x5104      	MOVF        _Events+7, 0, 1
0x2558	0x0A01      	XORLW       1
0x255A	0xE12A      	BNZ         L_State7207
0x255C	0x5325      	MOVF        _LimiterEnable, 1, 1
0x255E	0xE028      	BZ          L_State7207
L__State7543:
;FirmV_0_7_0.c,1011 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Limit Switch Stop");ClearTasks(9);}
0x2560	0x0E01      	MOVLW       1
0x2562	0x0102      	MOVLB       2
0x2564	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x2566	0xF00AECB9  	CALL        _StopMotor, 0
0x256A	0x0E02      	MOVLW       2
0x256C	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x256E	0xF00AECB9  	CALL        _StopMotor, 0
0x2572	0x0E06      	MOVLW       6
0x2574	0x6E29      	MOVWF       _State 
0x2576	0x6A26      	CLRF        _OverloadCheckFlag1 
0x2578	0x6A25      	CLRF        _OverloadCheckFlag2 
0x257A	0x0EF4      	MOVLW       ?ICS?lstr55_FirmV_0_7_0
0x257C	0x6EF6      	MOVWF       4086 
0x257E	0x0E5B      	MOVLW       hi_addr(?ICS?lstr55_FirmV_0_7_0)
0x2580	0x6EF7      	MOVWF       TBLPTRH 
0x2582	0x0E00      	MOVLW       higher_addr(?ICS?lstr55_FirmV_0_7_0)
0x2584	0x6EF8      	MOVWF       TBLPTRU 
0x2586	0x0EED      	MOVLW       ?lstr55_FirmV_0_7_0
0x2588	0x6EE1      	MOVWF       FSR1L 
0x258A	0x0E01      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x258C	0x6EE2      	MOVWF       FSR1H 
0x258E	0x0E15      	MOVLW       21
0x2590	0x6E00      	MOVWF       R0 
0x2592	0x0E01      	MOVLW       1
0x2594	0x6E01      	MOVWF       R1 
0x2596	0xF005EC75  	CALL        ___CC2DW, 0
0x259A	0x0EED      	MOVLW       ?lstr55_FirmV_0_7_0
0x259C	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x259E	0x0E01      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x25A0	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x25A2	0xF00AECC5  	CALL        _Logger, 0
0x25A6	0x0E09      	MOVLW       9
0x25A8	0x0102      	MOVLB       2
0x25AA	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x25AC	0xF005ECED  	CALL        _ClearTasks, 0
L_State7207:
;FirmV_0_7_0.c,1013 :: 		if(CloseDone==0)
0x25B0	0x501B      	MOVF        _CloseDone, 0 
0x25B2	0x0A00      	XORLW       0
0x25B4	0xE108      	BNZ         L_State7208
;FirmV_0_7_0.c,1014 :: 		{State=1; PassFlag=0;ClearTasks(9);}
0x25B6	0x0102      	MOVLB       2
0x25B8	0x0E01      	MOVLW       1
0x25BA	0x6E29      	MOVWF       _State 
0x25BC	0x6A2A      	CLRF        _PassFlag 
0x25BE	0x0E09      	MOVLW       9
0x25C0	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x25C2	0xF005ECED  	CALL        _ClearTasks, 0
L_State7208:
;FirmV_0_7_0.c,1016 :: 		if((State==5)||(State==6))
0x25C6	0x5029      	MOVF        _State, 0 
0x25C8	0x0A05      	XORLW       5
0x25CA	0xE004      	BZ          L__State7542
0x25CC	0x5029      	MOVF        _State, 0 
0x25CE	0x0A06      	XORLW       6
0x25D0	0xE001      	BZ          L__State7542
0x25D2	0xD034      	BRA         L_State7211
L__State7542:
0x25D4	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1017 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S7 Autoclose Renewed");}}
0x25D6	0x6B7E      	CLRF        FARG_ClearTasks_except, 1
0x25D8	0xF005ECED  	CALL        _ClearTasks, 0
0x25DC	0x0E00      	MOVLW       0
0x25DE	0x0101      	MOVLB       1
0x25E0	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x25E2	0xE102      	BNZ         L__State7614
0x25E4	0x0E00      	MOVLW       0
0x25E6	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State7614:
0x25E8	0xE029      	BZ          L_State7212
0x25EA	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x25EC	0x241C      	ADDWF       _ms500, 0 
0x25EE	0x0102      	MOVLB       2
0x25F0	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x25F2	0x0101      	MOVLB       1
0x25F4	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x25F6	0x201D      	ADDWFC      _ms500+1, 0 
0x25F8	0x0102      	MOVLB       2
0x25FA	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x25FC	0x0E00      	MOVLW       0
0x25FE	0x201E      	ADDWFC      _ms500+2, 0 
0x2600	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2602	0x0E00      	MOVLW       0
0x2604	0x201F      	ADDWFC      _ms500+3, 0 
0x2606	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2608	0x0E09      	MOVLW       9
0x260A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x260C	0xF00AECF7  	CALL        _AddTask, 0
0x2610	0x0E09      	MOVLW       ?ICS?lstr56_FirmV_0_7_0
0x2612	0x6EF6      	MOVWF       4086 
0x2614	0x0E5C      	MOVLW       hi_addr(?ICS?lstr56_FirmV_0_7_0)
0x2616	0x6EF7      	MOVWF       TBLPTRH 
0x2618	0x0E00      	MOVLW       higher_addr(?ICS?lstr56_FirmV_0_7_0)
0x261A	0x6EF8      	MOVWF       TBLPTRU 
0x261C	0x0E02      	MOVLW       ?lstr56_FirmV_0_7_0
0x261E	0x6EE1      	MOVWF       FSR1L 
0x2620	0x0E02      	MOVLW       hi_addr(?lstr56_FirmV_0_7_0)
0x2622	0x6EE2      	MOVWF       FSR1H 
0x2624	0x0E15      	MOVLW       21
0x2626	0x6E00      	MOVWF       R0 
0x2628	0x0E01      	MOVLW       1
0x262A	0x6E01      	MOVWF       R1 
0x262C	0xF005EC75  	CALL        ___CC2DW, 0
0x2630	0x0E02      	MOVLW       ?lstr56_FirmV_0_7_0
0x2632	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2634	0x0E02      	MOVLW       hi_addr(?lstr56_FirmV_0_7_0)
0x2636	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2638	0xF00AECC5  	CALL        _Logger, 0
L_State7212:
L_State7211:
;FirmV_0_7_0.c,1020 :: 		}
0x263C	0x0012      	RETURN      0
; end of _State7
_GetRemoteState:
;FirmV_0_7_0.c,1371 :: 		char GetRemoteState()
;FirmV_0_7_0.c,1373 :: 		char res=0;
0x263E	0x0101      	MOVLB       1
0x2640	0x6B4A      	CLRF        GetRemoteState_res_L0, 1
;FirmV_0_7_0.c,1374 :: 		res.b0=RemoteAFlag.b0;
0x2642	0xB03F      	BTFSC       _RemoteAFlag, 0 
0x2644	0xD002      	BRA         L__GetRemoteState623
0x2646	0x914A      	BCF         GetRemoteState_res_L0, 0, 1
0x2648	0xD001      	BRA         L__GetRemoteState624
L__GetRemoteState623:
0x264A	0x814A      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState624:
;FirmV_0_7_0.c,1375 :: 		res.b1=RemoteBFlag.b0;
0x264C	0xB03E      	BTFSC       _RemoteBFlag, 0 
0x264E	0xD002      	BRA         L__GetRemoteState625
0x2650	0x934A      	BCF         GetRemoteState_res_L0, 1, 1
0x2652	0xD001      	BRA         L__GetRemoteState626
L__GetRemoteState625:
0x2654	0x834A      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState626:
;FirmV_0_7_0.c,1376 :: 		RemoteAFlag=0;
0x2656	0x6A3F      	CLRF        _RemoteAFlag 
;FirmV_0_7_0.c,1377 :: 		RemoteBFlag=0;
0x2658	0x6A3E      	CLRF        _RemoteBFlag 
;FirmV_0_7_0.c,1378 :: 		res.b0=res.b0|(~D1ExKey);
0x265A	0xB683      	BTFSC       PORTD, 3 
0x265C	0xD002      	BRA         L__GetRemoteState627
0x265E	0x80D8      	BSF         STATUS, 0 
0x2660	0xD001      	BRA         L__GetRemoteState628
L__GetRemoteState627:
0x2662	0x90D8      	BCF         STATUS, 0 
L__GetRemoteState628:
0x2664	0xB14A      	BTFSC       GetRemoteState_res_L0, 0, 1
0x2666	0xD003      	BRA         L__GetRemoteState629
0x2668	0xE202      	BC          L__GetRemoteState629
0x266A	0x914A      	BCF         GetRemoteState_res_L0, 0, 1
0x266C	0xD001      	BRA         L__GetRemoteState630
L__GetRemoteState629:
0x266E	0x814A      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState630:
;FirmV_0_7_0.c,1379 :: 		res.b1=res.b1|(~D2ExKey);
0x2670	0xB883      	BTFSC       PORTD, 4 
0x2672	0xD002      	BRA         L__GetRemoteState631
0x2674	0x80D8      	BSF         STATUS, 0 
0x2676	0xD001      	BRA         L__GetRemoteState632
L__GetRemoteState631:
0x2678	0x90D8      	BCF         STATUS, 0 
L__GetRemoteState632:
0x267A	0xB34A      	BTFSC       GetRemoteState_res_L0, 1, 1
0x267C	0xD003      	BRA         L__GetRemoteState633
0x267E	0xE202      	BC          L__GetRemoteState633
0x2680	0x934A      	BCF         GetRemoteState_res_L0, 1, 1
0x2682	0xD001      	BRA         L__GetRemoteState634
L__GetRemoteState633:
0x2684	0x834A      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState634:
;FirmV_0_7_0.c,1380 :: 		return res;
0x2686	0xF000C14A  	MOVFF       GetRemoteState_res_L0, R0
;FirmV_0_7_0.c,1381 :: 		}
0x268A	0x0012      	RETURN      0
; end of _GetRemoteState
_State2:
;FirmV_0_7_0.c,542 :: 		void State2()
;FirmV_0_7_0.c,544 :: 		char delay=2;
0x268C	0x0E02      	MOVLW       2
0x268E	0x0101      	MOVLB       1
0x2690	0x6F80      	MOVWF       State2_delay_L0, 1
;FirmV_0_7_0.c,546 :: 		Flasher=0;
0x2692	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,548 :: 		if((Events.Remote.b0==1)||(CheckTask(9)==1))
0x2694	0xB101      	BTFSC       _Events+4, 0, 1
0x2696	0xD009      	BRA         L__State2526
0x2698	0x0E09      	MOVLW       9
0x269A	0x0102      	MOVLB       2
0x269C	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x269E	0xF005ECBE  	CALL        _CheckTask, 0
0x26A2	0x5000      	MOVF        R0, 0 
0x26A4	0x0A01      	XORLW       1
0x26A6	0xE001      	BZ          L__State2526
0x26A8	0xD388      	BRA         L_State273
L__State2526:
;FirmV_0_7_0.c,551 :: 		ClearTasks(9);
0x26AA	0x0E09      	MOVLW       9
0x26AC	0x0102      	MOVLB       2
0x26AE	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x26B0	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,552 :: 		if(Door2CloseTime==0)
0x26B4	0x0101      	MOVLB       1
0x26B6	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x26B8	0x0A00      	XORLW       0
0x26BA	0xA4D8      	BTFSS       STATUS, 2 
0x26BC	0xD12E      	BRA         L_State274
;FirmV_0_7_0.c,554 :: 		temp=ms500+delay;
0x26BE	0x5180      	MOVF        State2_delay_L0, 0, 1
0x26C0	0x241C      	ADDWF       _ms500, 0 
0x26C2	0x6E00      	MOVWF       R0 
0x26C4	0x0E00      	MOVLW       0
0x26C6	0x201D      	ADDWFC      _ms500+1, 0 
0x26C8	0x6E01      	MOVWF       R1 
0x26CA	0x0E00      	MOVLW       0
0x26CC	0x201E      	ADDWFC      _ms500+2, 0 
0x26CE	0x6E02      	MOVWF       R2 
0x26D0	0x0E00      	MOVLW       0
0x26D2	0x201F      	ADDWFC      _ms500+3, 0 
0x26D4	0x6E03      	MOVWF       R3 
0x26D6	0xF06DC000  	MOVFF       R0, _temp
0x26DA	0xF06EC001  	MOVFF       R1, _temp+1
0x26DE	0xF06FC002  	MOVFF       R2, _temp+2
0x26E2	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,555 :: 		AddTask(temp,1);
0x26E6	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x26EA	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x26EE	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x26F2	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x26F6	0x0E01      	MOVLW       1
0x26F8	0x0102      	MOVLB       2
0x26FA	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x26FC	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,556 :: 		if(CloseSoftStartTime!=0)
0x2700	0x0101      	MOVLB       1
0x2702	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2704	0x0A00      	XORLW       0
0x2706	0xE010      	BZ          L_State275
;FirmV_0_7_0.c,557 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x2708	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x270C	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2710	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2714	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x2718	0x0E07      	MOVLW       7
0x271A	0x0102      	MOVLB       2
0x271C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x271E	0xF00AECF7  	CALL        _AddTask, 0
0x2722	0x0E01      	MOVLW       1
0x2724	0x6E24      	MOVWF       _M1isSlow 
0x2726	0xD00E      	BRA         L_State276
L_State275:
0x2728	0x0102      	MOVLB       2
;FirmV_0_7_0.c,559 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x272A	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x272E	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2732	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2736	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x273A	0x0E05      	MOVLW       5
0x273C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x273E	0xF00AECF7  	CALL        _AddTask, 0
0x2742	0x6A24      	CLRF        _M1isSlow 
L_State276:
;FirmV_0_7_0.c,560 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x2744	0x0101      	MOVLB       1
0x2746	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2748	0x241C      	ADDWF       _ms500, 0 
0x274A	0x6E00      	MOVWF       R0 
0x274C	0x0E00      	MOVLW       0
0x274E	0x201D      	ADDWFC      _ms500+1, 0 
0x2750	0x6E01      	MOVWF       R1 
0x2752	0x0E00      	MOVLW       0
0x2754	0x201E      	ADDWFC      _ms500+2, 0 
0x2756	0x6E02      	MOVWF       R2 
0x2758	0x0E00      	MOVLW       0
0x275A	0x201F      	ADDWFC      _ms500+3, 0 
0x275C	0x6E03      	MOVWF       R3 
0x275E	0x0E02      	MOVLW       2
0x2760	0x2600      	ADDWF       R0, 1 
0x2762	0x0E00      	MOVLW       0
0x2764	0x2201      	ADDWFC      R1, 1 
0x2766	0x2202      	ADDWFC      R2, 1 
0x2768	0x2203      	ADDWFC      R3, 1 
0x276A	0x5180      	MOVF        State2_delay_L0, 0, 1
0x276C	0x2600      	ADDWF       R0, 1 
0x276E	0x0E00      	MOVLW       0
0x2770	0x2201      	ADDWFC      R1, 1 
0x2772	0x2202      	ADDWFC      R2, 1 
0x2774	0x2203      	ADDWFC      R3, 1 
0x2776	0xF06DC000  	MOVFF       R0, _temp
0x277A	0xF06EC001  	MOVFF       R1, _temp+1
0x277E	0xF06FC002  	MOVFF       R2, _temp+2
0x2782	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,561 :: 		AddTask(temp,10); //overload check
0x2786	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x278A	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x278E	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2792	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2796	0x0E0A      	MOVLW       10
0x2798	0x0102      	MOVLB       2
0x279A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x279C	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,562 :: 		temp=ms500+CloseSoftStartTime+delay;
0x27A0	0x0101      	MOVLB       1
0x27A2	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x27A4	0x241C      	ADDWF       _ms500, 0 
0x27A6	0x6E00      	MOVWF       R0 
0x27A8	0x0E00      	MOVLW       0
0x27AA	0x201D      	ADDWFC      _ms500+1, 0 
0x27AC	0x6E01      	MOVWF       R1 
0x27AE	0x0E00      	MOVLW       0
0x27B0	0x201E      	ADDWFC      _ms500+2, 0 
0x27B2	0x6E02      	MOVWF       R2 
0x27B4	0x0E00      	MOVLW       0
0x27B6	0x201F      	ADDWFC      _ms500+3, 0 
0x27B8	0x6E03      	MOVWF       R3 
0x27BA	0x5180      	MOVF        State2_delay_L0, 0, 1
0x27BC	0x2600      	ADDWF       R0, 1 
0x27BE	0x0E00      	MOVLW       0
0x27C0	0x2201      	ADDWFC      R1, 1 
0x27C2	0x2202      	ADDWFC      R2, 1 
0x27C4	0x2203      	ADDWFC      R3, 1 
0x27C6	0xF06DC000  	MOVFF       R0, _temp
0x27CA	0xF06EC001  	MOVFF       R1, _temp+1
0x27CE	0xF06FC002  	MOVFF       R2, _temp+2
0x27D2	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,563 :: 		AddTask(temp,5);//Speed up after soft start
0x27D6	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x27DA	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x27DE	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x27E2	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x27E6	0x0E05      	MOVLW       5
0x27E8	0x0102      	MOVLB       2
0x27EA	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x27EC	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,564 :: 		if(CloseSoftStopTime!=0)
0x27F0	0x0101      	MOVLB       1
0x27F2	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x27F4	0x0A00      	XORLW       0
0x27F6	0xE02D      	BZ          L_State277
;FirmV_0_7_0.c,565 :: 		{temp=ms500+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x27F8	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x27FA	0x241C      	ADDWF       _ms500, 0 
0x27FC	0x6E00      	MOVWF       R0 
0x27FE	0x0E00      	MOVLW       0
0x2800	0x201D      	ADDWFC      _ms500+1, 0 
0x2802	0x6E01      	MOVWF       R1 
0x2804	0x0E00      	MOVLW       0
0x2806	0x201E      	ADDWFC      _ms500+2, 0 
0x2808	0x6E02      	MOVWF       R2 
0x280A	0x0E00      	MOVLW       0
0x280C	0x201F      	ADDWFC      _ms500+3, 0 
0x280E	0x6E03      	MOVWF       R3 
0x2810	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x2812	0x5E00      	SUBWF       R0, 1 
0x2814	0x0E00      	MOVLW       0
0x2816	0x5A01      	SUBWFB      R1, 1 
0x2818	0x5A02      	SUBWFB      R2, 1 
0x281A	0x5A03      	SUBWFB      R3, 1 
0x281C	0x5180      	MOVF        State2_delay_L0, 0, 1
0x281E	0x2600      	ADDWF       R0, 1 
0x2820	0x0E00      	MOVLW       0
0x2822	0x2201      	ADDWFC      R1, 1 
0x2824	0x2202      	ADDWFC      R2, 1 
0x2826	0x2203      	ADDWFC      R3, 1 
0x2828	0xF06DC000  	MOVFF       R0, _temp
0x282C	0xF06EC001  	MOVFF       R1, _temp+1
0x2830	0xF06FC002  	MOVFF       R2, _temp+2
0x2834	0xF070C003  	MOVFF       R3, _temp+3
0x2838	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x283C	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2840	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2844	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2848	0x0E07      	MOVLW       7
0x284A	0x0102      	MOVLB       2
0x284C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x284E	0xF00AECF7  	CALL        _AddTask, 0
L_State277:
;FirmV_0_7_0.c,566 :: 		if(LockForce!=0)
0x2852	0x0101      	MOVLB       1
0x2854	0x512E      	MOVF        _LockForce, 0, 1
0x2856	0x0A00      	XORLW       0
0x2858	0xE038      	BZ          L_State278
;FirmV_0_7_0.c,567 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x285A	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x285C	0x241C      	ADDWF       _ms500, 0 
0x285E	0x6E00      	MOVWF       R0 
0x2860	0x0E00      	MOVLW       0
0x2862	0x201D      	ADDWFC      _ms500+1, 0 
0x2864	0x6E01      	MOVWF       R1 
0x2866	0x0E00      	MOVLW       0
0x2868	0x201E      	ADDWFC      _ms500+2, 0 
0x286A	0x6E02      	MOVWF       R2 
0x286C	0x0E00      	MOVLW       0
0x286E	0x201F      	ADDWFC      _ms500+3, 0 
0x2870	0x6E03      	MOVWF       R3 
0x2872	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2874	0x2600      	ADDWF       R0, 1 
0x2876	0x0E00      	MOVLW       0
0x2878	0x2201      	ADDWFC      R1, 1 
0x287A	0x2202      	ADDWFC      R2, 1 
0x287C	0x2203      	ADDWFC      R3, 1 
0x287E	0xF06DC000  	MOVFF       R0, _temp
0x2882	0xF06EC001  	MOVFF       R1, _temp+1
0x2886	0xF06FC002  	MOVFF       R2, _temp+2
0x288A	0xF070C003  	MOVFF       R3, _temp+3
0x288E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2892	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2896	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x289A	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x289E	0x0E05      	MOVLW       5
0x28A0	0x0102      	MOVLB       2
0x28A2	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x28A4	0xF00AECF7  	CALL        _AddTask, 0
0x28A8	0x0E03      	MOVLW       3
0x28AA	0x246D      	ADDWF       _temp, 0 
0x28AC	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x28AE	0x0E00      	MOVLW       0
0x28B0	0x206E      	ADDWFC      _temp+1, 0 
0x28B2	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x28B4	0x0E00      	MOVLW       0
0x28B6	0x206F      	ADDWFC      _temp+2, 0 
0x28B8	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x28BA	0x0E00      	MOVLW       0
0x28BC	0x2070      	ADDWFC      _temp+3, 0 
0x28BE	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x28C0	0x0E03      	MOVLW       3
0x28C2	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x28C4	0xF00AECF7  	CALL        _AddTask, 0
0x28C8	0xD028      	BRA         L_State279
L_State278:
;FirmV_0_7_0.c,569 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,3);}
0x28CA	0x0101      	MOVLB       1
0x28CC	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x28CE	0x241C      	ADDWF       _ms500, 0 
0x28D0	0x6E00      	MOVWF       R0 
0x28D2	0x0E00      	MOVLW       0
0x28D4	0x201D      	ADDWFC      _ms500+1, 0 
0x28D6	0x6E01      	MOVWF       R1 
0x28D8	0x0E00      	MOVLW       0
0x28DA	0x201E      	ADDWFC      _ms500+2, 0 
0x28DC	0x6E02      	MOVWF       R2 
0x28DE	0x0E00      	MOVLW       0
0x28E0	0x201F      	ADDWFC      _ms500+3, 0 
0x28E2	0x6E03      	MOVWF       R3 
0x28E4	0x5180      	MOVF        State2_delay_L0, 0, 1
0x28E6	0x2600      	ADDWF       R0, 1 
0x28E8	0x0E00      	MOVLW       0
0x28EA	0x2201      	ADDWFC      R1, 1 
0x28EC	0x2202      	ADDWFC      R2, 1 
0x28EE	0x2203      	ADDWFC      R3, 1 
0x28F0	0xF06DC000  	MOVFF       R0, _temp
0x28F4	0xF06EC001  	MOVFF       R1, _temp+1
0x28F8	0xF06FC002  	MOVFF       R2, _temp+2
0x28FC	0xF070C003  	MOVFF       R3, _temp+3
0x2900	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2904	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2908	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x290C	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2910	0x0E03      	MOVLW       3
0x2912	0x0102      	MOVLB       2
0x2914	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2916	0xF00AECF7  	CALL        _AddTask, 0
L_State279:
;FirmV_0_7_0.c,571 :: 		}
L_State274:
;FirmV_0_7_0.c,573 :: 		if(Door2CloseTime!=0)
0x291A	0x0101      	MOVLB       1
0x291C	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x291E	0x0A00      	XORLW       0
0x2920	0xB4D8      	BTFSC       STATUS, 2 
0x2922	0xD245      	BRA         L_State280
;FirmV_0_7_0.c,575 :: 		temp=ms500+delay;
0x2924	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2926	0x241C      	ADDWF       _ms500, 0 
0x2928	0x6E00      	MOVWF       R0 
0x292A	0x0E00      	MOVLW       0
0x292C	0x201D      	ADDWFC      _ms500+1, 0 
0x292E	0x6E01      	MOVWF       R1 
0x2930	0x0E00      	MOVLW       0
0x2932	0x201E      	ADDWFC      _ms500+2, 0 
0x2934	0x6E02      	MOVWF       R2 
0x2936	0x0E00      	MOVLW       0
0x2938	0x201F      	ADDWFC      _ms500+3, 0 
0x293A	0x6E03      	MOVWF       R3 
0x293C	0xF06DC000  	MOVFF       R0, _temp
0x2940	0xF06EC001  	MOVFF       R1, _temp+1
0x2944	0xF06FC002  	MOVFF       R2, _temp+2
0x2948	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,576 :: 		AddTask(temp,2);
0x294C	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2950	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2954	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2958	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x295C	0x0E02      	MOVLW       2
0x295E	0x0102      	MOVLB       2
0x2960	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2962	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,577 :: 		if(CloseSoftStartTime!=0)
0x2966	0x0101      	MOVLB       1
0x2968	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x296A	0x0A00      	XORLW       0
0x296C	0xE010      	BZ          L_State281
;FirmV_0_7_0.c,578 :: 		{AddTask(temp,8); M2isSlow=1;}//speed down
0x296E	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x2972	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2976	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x297A	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x297E	0x0E08      	MOVLW       8
0x2980	0x0102      	MOVLB       2
0x2982	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2984	0xF00AECF7  	CALL        _AddTask, 0
0x2988	0x0E01      	MOVLW       1
0x298A	0x6E2B      	MOVWF       _M2isSlow 
0x298C	0xD00E      	BRA         L_State282
L_State281:
0x298E	0x0102      	MOVLB       2
;FirmV_0_7_0.c,580 :: 		{AddTask(temp,6); M2isSlow=0;}//speed up
0x2990	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x2994	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2998	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x299C	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x29A0	0x0E06      	MOVLW       6
0x29A2	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x29A4	0xF00AECF7  	CALL        _AddTask, 0
0x29A8	0x6A2B      	CLRF        _M2isSlow 
L_State282:
;FirmV_0_7_0.c,581 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x29AA	0x0101      	MOVLB       1
0x29AC	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x29AE	0x241C      	ADDWF       _ms500, 0 
0x29B0	0x6E00      	MOVWF       R0 
0x29B2	0x0E00      	MOVLW       0
0x29B4	0x201D      	ADDWFC      _ms500+1, 0 
0x29B6	0x6E01      	MOVWF       R1 
0x29B8	0x0E00      	MOVLW       0
0x29BA	0x201E      	ADDWFC      _ms500+2, 0 
0x29BC	0x6E02      	MOVWF       R2 
0x29BE	0x0E00      	MOVLW       0
0x29C0	0x201F      	ADDWFC      _ms500+3, 0 
0x29C2	0x6E03      	MOVWF       R3 
0x29C4	0x0E02      	MOVLW       2
0x29C6	0x2600      	ADDWF       R0, 1 
0x29C8	0x0E00      	MOVLW       0
0x29CA	0x2201      	ADDWFC      R1, 1 
0x29CC	0x2202      	ADDWFC      R2, 1 
0x29CE	0x2203      	ADDWFC      R3, 1 
0x29D0	0x5180      	MOVF        State2_delay_L0, 0, 1
0x29D2	0x2600      	ADDWF       R0, 1 
0x29D4	0x0E00      	MOVLW       0
0x29D6	0x2201      	ADDWFC      R1, 1 
0x29D8	0x2202      	ADDWFC      R2, 1 
0x29DA	0x2203      	ADDWFC      R3, 1 
0x29DC	0xF06DC000  	MOVFF       R0, _temp
0x29E0	0xF06EC001  	MOVFF       R1, _temp+1
0x29E4	0xF06FC002  	MOVFF       R2, _temp+2
0x29E8	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,582 :: 		AddTask(temp,11); //overload check
0x29EC	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x29F0	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x29F4	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x29F8	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x29FC	0x0E0B      	MOVLW       11
0x29FE	0x0102      	MOVLB       2
0x2A00	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2A02	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,583 :: 		temp=ms500+CloseSoftStartTime+delay;
0x2A06	0x0101      	MOVLB       1
0x2A08	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2A0A	0x241C      	ADDWF       _ms500, 0 
0x2A0C	0x6E00      	MOVWF       R0 
0x2A0E	0x0E00      	MOVLW       0
0x2A10	0x201D      	ADDWFC      _ms500+1, 0 
0x2A12	0x6E01      	MOVWF       R1 
0x2A14	0x0E00      	MOVLW       0
0x2A16	0x201E      	ADDWFC      _ms500+2, 0 
0x2A18	0x6E02      	MOVWF       R2 
0x2A1A	0x0E00      	MOVLW       0
0x2A1C	0x201F      	ADDWFC      _ms500+3, 0 
0x2A1E	0x6E03      	MOVWF       R3 
0x2A20	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2A22	0x2600      	ADDWF       R0, 1 
0x2A24	0x0E00      	MOVLW       0
0x2A26	0x2201      	ADDWFC      R1, 1 
0x2A28	0x2202      	ADDWFC      R2, 1 
0x2A2A	0x2203      	ADDWFC      R3, 1 
0x2A2C	0xF06DC000  	MOVFF       R0, _temp
0x2A30	0xF06EC001  	MOVFF       R1, _temp+1
0x2A34	0xF06FC002  	MOVFF       R2, _temp+2
0x2A38	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,584 :: 		AddTask(temp,6);//Speed up after soft start
0x2A3C	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2A40	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2A44	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2A48	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2A4C	0x0E06      	MOVLW       6
0x2A4E	0x0102      	MOVLB       2
0x2A50	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2A52	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,585 :: 		if(CloseSoftStopTime!=0)
0x2A56	0x0101      	MOVLB       1
0x2A58	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x2A5A	0x0A00      	XORLW       0
0x2A5C	0xE02D      	BZ          L_State283
;FirmV_0_7_0.c,586 :: 		{temp=ms500+Door2CloseTime-CloseSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x2A5E	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x2A60	0x241C      	ADDWF       _ms500, 0 
0x2A62	0x6E00      	MOVWF       R0 
0x2A64	0x0E00      	MOVLW       0
0x2A66	0x201D      	ADDWFC      _ms500+1, 0 
0x2A68	0x6E01      	MOVWF       R1 
0x2A6A	0x0E00      	MOVLW       0
0x2A6C	0x201E      	ADDWFC      _ms500+2, 0 
0x2A6E	0x6E02      	MOVWF       R2 
0x2A70	0x0E00      	MOVLW       0
0x2A72	0x201F      	ADDWFC      _ms500+3, 0 
0x2A74	0x6E03      	MOVWF       R3 
0x2A76	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x2A78	0x5E00      	SUBWF       R0, 1 
0x2A7A	0x0E00      	MOVLW       0
0x2A7C	0x5A01      	SUBWFB      R1, 1 
0x2A7E	0x5A02      	SUBWFB      R2, 1 
0x2A80	0x5A03      	SUBWFB      R3, 1 
0x2A82	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2A84	0x2600      	ADDWF       R0, 1 
0x2A86	0x0E00      	MOVLW       0
0x2A88	0x2201      	ADDWFC      R1, 1 
0x2A8A	0x2202      	ADDWFC      R2, 1 
0x2A8C	0x2203      	ADDWFC      R3, 1 
0x2A8E	0xF06DC000  	MOVFF       R0, _temp
0x2A92	0xF06EC001  	MOVFF       R1, _temp+1
0x2A96	0xF06FC002  	MOVFF       R2, _temp+2
0x2A9A	0xF070C003  	MOVFF       R3, _temp+3
0x2A9E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2AA2	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2AA6	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2AAA	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2AAE	0x0E08      	MOVLW       8
0x2AB0	0x0102      	MOVLB       2
0x2AB2	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2AB4	0xF00AECF7  	CALL        _AddTask, 0
L_State283:
;FirmV_0_7_0.c,588 :: 		temp=ms500+Door2CloseTime+delay;
0x2AB8	0x0101      	MOVLB       1
0x2ABA	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x2ABC	0x241C      	ADDWF       _ms500, 0 
0x2ABE	0x6E00      	MOVWF       R0 
0x2AC0	0x0E00      	MOVLW       0
0x2AC2	0x201D      	ADDWFC      _ms500+1, 0 
0x2AC4	0x6E01      	MOVWF       R1 
0x2AC6	0x0E00      	MOVLW       0
0x2AC8	0x201E      	ADDWFC      _ms500+2, 0 
0x2ACA	0x6E02      	MOVWF       R2 
0x2ACC	0x0E00      	MOVLW       0
0x2ACE	0x201F      	ADDWFC      _ms500+3, 0 
0x2AD0	0x6E03      	MOVWF       R3 
0x2AD2	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2AD4	0x2600      	ADDWF       R0, 1 
0x2AD6	0x0E00      	MOVLW       0
0x2AD8	0x2201      	ADDWFC      R1, 1 
0x2ADA	0x2202      	ADDWFC      R2, 1 
0x2ADC	0x2203      	ADDWFC      R3, 1 
0x2ADE	0xF06DC000  	MOVFF       R0, _temp
0x2AE2	0xF06EC001  	MOVFF       R1, _temp+1
0x2AE6	0xF06FC002  	MOVFF       R2, _temp+2
0x2AEA	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,589 :: 		AddTask(temp,4);//Stop motor
0x2AEE	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2AF2	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2AF6	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2AFA	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2AFE	0x0E04      	MOVLW       4
0x2B00	0x0102      	MOVLB       2
0x2B02	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2B04	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,593 :: 		temp=ms500+ActionTimeDiff+delay;
0x2B08	0x0101      	MOVLB       1
0x2B0A	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2B0C	0x241C      	ADDWF       _ms500, 0 
0x2B0E	0x6E00      	MOVWF       R0 
0x2B10	0x0E00      	MOVLW       0
0x2B12	0x201D      	ADDWFC      _ms500+1, 0 
0x2B14	0x6E01      	MOVWF       R1 
0x2B16	0x0E00      	MOVLW       0
0x2B18	0x201E      	ADDWFC      _ms500+2, 0 
0x2B1A	0x6E02      	MOVWF       R2 
0x2B1C	0x0E00      	MOVLW       0
0x2B1E	0x201F      	ADDWFC      _ms500+3, 0 
0x2B20	0x6E03      	MOVWF       R3 
0x2B22	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2B24	0x2600      	ADDWF       R0, 1 
0x2B26	0x0E00      	MOVLW       0
0x2B28	0x2201      	ADDWFC      R1, 1 
0x2B2A	0x2202      	ADDWFC      R2, 1 
0x2B2C	0x2203      	ADDWFC      R3, 1 
0x2B2E	0xF06DC000  	MOVFF       R0, _temp
0x2B32	0xF06EC001  	MOVFF       R1, _temp+1
0x2B36	0xF06FC002  	MOVFF       R2, _temp+2
0x2B3A	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,594 :: 		AddTask(temp,1);
0x2B3E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2B42	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2B46	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2B4A	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2B4E	0x0E01      	MOVLW       1
0x2B50	0x0102      	MOVLB       2
0x2B52	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2B54	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,595 :: 		if(CloseSoftStartTime!=0)
0x2B58	0x0101      	MOVLB       1
0x2B5A	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2B5C	0x0A00      	XORLW       0
0x2B5E	0xE010      	BZ          L_State284
;FirmV_0_7_0.c,596 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x2B60	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x2B64	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2B68	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2B6C	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x2B70	0x0E07      	MOVLW       7
0x2B72	0x0102      	MOVLB       2
0x2B74	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2B76	0xF00AECF7  	CALL        _AddTask, 0
0x2B7A	0x0E01      	MOVLW       1
0x2B7C	0x6E24      	MOVWF       _M1isSlow 
0x2B7E	0xD00E      	BRA         L_State285
L_State284:
0x2B80	0x0102      	MOVLB       2
;FirmV_0_7_0.c,598 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x2B82	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x2B86	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x2B8A	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x2B8E	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x2B92	0x0E05      	MOVLW       5
0x2B94	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2B96	0xF00AECF7  	CALL        _AddTask, 0
0x2B9A	0x6A24      	CLRF        _M1isSlow 
L_State285:
;FirmV_0_7_0.c,599 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+OverloadDelay+delay;
0x2B9C	0x0101      	MOVLB       1
0x2B9E	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2BA0	0x241C      	ADDWF       _ms500, 0 
0x2BA2	0x6E00      	MOVWF       R0 
0x2BA4	0x0E00      	MOVLW       0
0x2BA6	0x201D      	ADDWFC      _ms500+1, 0 
0x2BA8	0x6E01      	MOVWF       R1 
0x2BAA	0x0E00      	MOVLW       0
0x2BAC	0x201E      	ADDWFC      _ms500+2, 0 
0x2BAE	0x6E02      	MOVWF       R2 
0x2BB0	0x0E00      	MOVLW       0
0x2BB2	0x201F      	ADDWFC      _ms500+3, 0 
0x2BB4	0x6E03      	MOVWF       R3 
0x2BB6	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2BB8	0x2600      	ADDWF       R0, 1 
0x2BBA	0x0E00      	MOVLW       0
0x2BBC	0x2201      	ADDWFC      R1, 1 
0x2BBE	0x2202      	ADDWFC      R2, 1 
0x2BC0	0x2203      	ADDWFC      R3, 1 
0x2BC2	0x0E02      	MOVLW       2
0x2BC4	0x2600      	ADDWF       R0, 1 
0x2BC6	0x0E00      	MOVLW       0
0x2BC8	0x2201      	ADDWFC      R1, 1 
0x2BCA	0x2202      	ADDWFC      R2, 1 
0x2BCC	0x2203      	ADDWFC      R3, 1 
0x2BCE	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2BD0	0x2600      	ADDWF       R0, 1 
0x2BD2	0x0E00      	MOVLW       0
0x2BD4	0x2201      	ADDWFC      R1, 1 
0x2BD6	0x2202      	ADDWFC      R2, 1 
0x2BD8	0x2203      	ADDWFC      R3, 1 
0x2BDA	0xF06DC000  	MOVFF       R0, _temp
0x2BDE	0xF06EC001  	MOVFF       R1, _temp+1
0x2BE2	0xF06FC002  	MOVFF       R2, _temp+2
0x2BE6	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,600 :: 		AddTask(temp,10); //overload check
0x2BEA	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2BEE	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2BF2	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2BF6	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2BFA	0x0E0A      	MOVLW       10
0x2BFC	0x0102      	MOVLB       2
0x2BFE	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2C00	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,601 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+delay;
0x2C04	0x0101      	MOVLB       1
0x2C06	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2C08	0x241C      	ADDWF       _ms500, 0 
0x2C0A	0x6E00      	MOVWF       R0 
0x2C0C	0x0E00      	MOVLW       0
0x2C0E	0x201D      	ADDWFC      _ms500+1, 0 
0x2C10	0x6E01      	MOVWF       R1 
0x2C12	0x0E00      	MOVLW       0
0x2C14	0x201E      	ADDWFC      _ms500+2, 0 
0x2C16	0x6E02      	MOVWF       R2 
0x2C18	0x0E00      	MOVLW       0
0x2C1A	0x201F      	ADDWFC      _ms500+3, 0 
0x2C1C	0x6E03      	MOVWF       R3 
0x2C1E	0x5120      	MOVF        _CloseSoftStartTime, 0, 1
0x2C20	0x2600      	ADDWF       R0, 1 
0x2C22	0x0E00      	MOVLW       0
0x2C24	0x2201      	ADDWFC      R1, 1 
0x2C26	0x2202      	ADDWFC      R2, 1 
0x2C28	0x2203      	ADDWFC      R3, 1 
0x2C2A	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2C2C	0x2600      	ADDWF       R0, 1 
0x2C2E	0x0E00      	MOVLW       0
0x2C30	0x2201      	ADDWFC      R1, 1 
0x2C32	0x2202      	ADDWFC      R2, 1 
0x2C34	0x2203      	ADDWFC      R3, 1 
0x2C36	0xF06DC000  	MOVFF       R0, _temp
0x2C3A	0xF06EC001  	MOVFF       R1, _temp+1
0x2C3E	0xF06FC002  	MOVFF       R2, _temp+2
0x2C42	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,602 :: 		AddTask(temp,5);//Speed up after soft start
0x2C46	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2C4A	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2C4E	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2C52	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2C56	0x0E05      	MOVLW       5
0x2C58	0x0102      	MOVLB       2
0x2C5A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2C5C	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,603 :: 		if(CloseSoftStopTime!=0)
0x2C60	0x0101      	MOVLB       1
0x2C62	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x2C64	0x0A00      	XORLW       0
0x2C66	0xE033      	BZ          L_State286
;FirmV_0_7_0.c,604 :: 		{temp=ms500+ActionTimeDiff+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x2C68	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2C6A	0x241C      	ADDWF       _ms500, 0 
0x2C6C	0x6E00      	MOVWF       R0 
0x2C6E	0x0E00      	MOVLW       0
0x2C70	0x201D      	ADDWFC      _ms500+1, 0 
0x2C72	0x6E01      	MOVWF       R1 
0x2C74	0x0E00      	MOVLW       0
0x2C76	0x201E      	ADDWFC      _ms500+2, 0 
0x2C78	0x6E02      	MOVWF       R2 
0x2C7A	0x0E00      	MOVLW       0
0x2C7C	0x201F      	ADDWFC      _ms500+3, 0 
0x2C7E	0x6E03      	MOVWF       R3 
0x2C80	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x2C82	0x2600      	ADDWF       R0, 1 
0x2C84	0x0E00      	MOVLW       0
0x2C86	0x2201      	ADDWFC      R1, 1 
0x2C88	0x2202      	ADDWFC      R2, 1 
0x2C8A	0x2203      	ADDWFC      R3, 1 
0x2C8C	0x512B      	MOVF        _CloseSoftStopTime, 0, 1
0x2C8E	0x5E00      	SUBWF       R0, 1 
0x2C90	0x0E00      	MOVLW       0
0x2C92	0x5A01      	SUBWFB      R1, 1 
0x2C94	0x5A02      	SUBWFB      R2, 1 
0x2C96	0x5A03      	SUBWFB      R3, 1 
0x2C98	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2C9A	0x2600      	ADDWF       R0, 1 
0x2C9C	0x0E00      	MOVLW       0
0x2C9E	0x2201      	ADDWFC      R1, 1 
0x2CA0	0x2202      	ADDWFC      R2, 1 
0x2CA2	0x2203      	ADDWFC      R3, 1 
0x2CA4	0xF06DC000  	MOVFF       R0, _temp
0x2CA8	0xF06EC001  	MOVFF       R1, _temp+1
0x2CAC	0xF06FC002  	MOVFF       R2, _temp+2
0x2CB0	0xF070C003  	MOVFF       R3, _temp+3
0x2CB4	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2CB8	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2CBC	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2CC0	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2CC4	0x0E07      	MOVLW       7
0x2CC6	0x0102      	MOVLB       2
0x2CC8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2CCA	0xF00AECF7  	CALL        _AddTask, 0
L_State286:
;FirmV_0_7_0.c,605 :: 		if(LockForce!=0)
0x2CCE	0x0101      	MOVLB       1
0x2CD0	0x512E      	MOVF        _LockForce, 0, 1
0x2CD2	0x0A00      	XORLW       0
0x2CD4	0xE03E      	BZ          L_State287
;FirmV_0_7_0.c,606 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x2CD6	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x2CD8	0x241C      	ADDWF       _ms500, 0 
0x2CDA	0x6E00      	MOVWF       R0 
0x2CDC	0x0E00      	MOVLW       0
0x2CDE	0x201D      	ADDWFC      _ms500+1, 0 
0x2CE0	0x6E01      	MOVWF       R1 
0x2CE2	0x0E00      	MOVLW       0
0x2CE4	0x201E      	ADDWFC      _ms500+2, 0 
0x2CE6	0x6E02      	MOVWF       R2 
0x2CE8	0x0E00      	MOVLW       0
0x2CEA	0x201F      	ADDWFC      _ms500+3, 0 
0x2CEC	0x6E03      	MOVWF       R3 
0x2CEE	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2CF0	0x2600      	ADDWF       R0, 1 
0x2CF2	0x0E00      	MOVLW       0
0x2CF4	0x2201      	ADDWFC      R1, 1 
0x2CF6	0x2202      	ADDWFC      R2, 1 
0x2CF8	0x2203      	ADDWFC      R3, 1 
0x2CFA	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2CFC	0x2600      	ADDWF       R0, 1 
0x2CFE	0x0E00      	MOVLW       0
0x2D00	0x2201      	ADDWFC      R1, 1 
0x2D02	0x2202      	ADDWFC      R2, 1 
0x2D04	0x2203      	ADDWFC      R3, 1 
0x2D06	0xF06DC000  	MOVFF       R0, _temp
0x2D0A	0xF06EC001  	MOVFF       R1, _temp+1
0x2D0E	0xF06FC002  	MOVFF       R2, _temp+2
0x2D12	0xF070C003  	MOVFF       R3, _temp+3
0x2D16	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2D1A	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2D1E	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2D22	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2D26	0x0E05      	MOVLW       5
0x2D28	0x0102      	MOVLB       2
0x2D2A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2D2C	0xF00AECF7  	CALL        _AddTask, 0
0x2D30	0x0E03      	MOVLW       3
0x2D32	0x246D      	ADDWF       _temp, 0 
0x2D34	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x2D36	0x0E00      	MOVLW       0
0x2D38	0x206E      	ADDWFC      _temp+1, 0 
0x2D3A	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x2D3C	0x0E00      	MOVLW       0
0x2D3E	0x206F      	ADDWFC      _temp+2, 0 
0x2D40	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x2D42	0x0E00      	MOVLW       0
0x2D44	0x2070      	ADDWFC      _temp+3, 0 
0x2D46	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x2D48	0x0E03      	MOVLW       3
0x2D4A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2D4C	0xF00AECF7  	CALL        _AddTask, 0
0x2D50	0xD02E      	BRA         L_State288
L_State287:
;FirmV_0_7_0.c,608 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,3);}
0x2D52	0x0101      	MOVLB       1
0x2D54	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x2D56	0x241C      	ADDWF       _ms500, 0 
0x2D58	0x6E00      	MOVWF       R0 
0x2D5A	0x0E00      	MOVLW       0
0x2D5C	0x201D      	ADDWFC      _ms500+1, 0 
0x2D5E	0x6E01      	MOVWF       R1 
0x2D60	0x0E00      	MOVLW       0
0x2D62	0x201E      	ADDWFC      _ms500+2, 0 
0x2D64	0x6E02      	MOVWF       R2 
0x2D66	0x0E00      	MOVLW       0
0x2D68	0x201F      	ADDWFC      _ms500+3, 0 
0x2D6A	0x6E03      	MOVWF       R3 
0x2D6C	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x2D6E	0x2600      	ADDWF       R0, 1 
0x2D70	0x0E00      	MOVLW       0
0x2D72	0x2201      	ADDWFC      R1, 1 
0x2D74	0x2202      	ADDWFC      R2, 1 
0x2D76	0x2203      	ADDWFC      R3, 1 
0x2D78	0x5180      	MOVF        State2_delay_L0, 0, 1
0x2D7A	0x2600      	ADDWF       R0, 1 
0x2D7C	0x0E00      	MOVLW       0
0x2D7E	0x2201      	ADDWFC      R1, 1 
0x2D80	0x2202      	ADDWFC      R2, 1 
0x2D82	0x2203      	ADDWFC      R3, 1 
0x2D84	0xF06DC000  	MOVFF       R0, _temp
0x2D88	0xF06EC001  	MOVFF       R1, _temp+1
0x2D8C	0xF06FC002  	MOVFF       R2, _temp+2
0x2D90	0xF070C003  	MOVFF       R3, _temp+3
0x2D94	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2D98	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2D9C	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2DA0	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2DA4	0x0E03      	MOVLW       3
0x2DA6	0x0102      	MOVLB       2
0x2DA8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2DAA	0xF00AECF7  	CALL        _AddTask, 0
L_State288:
;FirmV_0_7_0.c,610 :: 		}
L_State280:
;FirmV_0_7_0.c,613 :: 		CloseDone=3;
0x2DAE	0x0E03      	MOVLW       3
0x2DB0	0x6E1B      	MOVWF       _CloseDone 
;FirmV_0_7_0.c,614 :: 		OverloadCheckFlag1=0;
0x2DB2	0x6A26      	CLRF        _OverloadCheckFlag1 
;FirmV_0_7_0.c,615 :: 		OverloadCheckFlag2=0;
0x2DB4	0x6A25      	CLRF        _OverloadCheckFlag2 
;FirmV_0_7_0.c,616 :: 		State=4;
0x2DB6	0x0E04      	MOVLW       4
0x2DB8	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,617 :: 		}
L_State273:
;FirmV_0_7_0.c,619 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x2DBA	0x0101      	MOVLB       1
0x2DBC	0xA103      	BTFSS       _Events+6, 0, 1
0x2DBE	0xD025      	BRA         L_State291
0x2DC0	0x0E00      	MOVLW       0
0x2DC2	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x2DC4	0xE102      	BNZ         L__State2606
0x2DC6	0x0E00      	MOVLW       0
0x2DC8	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State2606:
0x2DCA	0xE01F      	BZ          L_State291
0x2DCC	0x502A      	MOVF        _PassFlag, 0 
0x2DCE	0x0A00      	XORLW       0
0x2DD0	0xE11C      	BNZ         L_State291
L__State2525:
;FirmV_0_7_0.c,620 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S2 Auto Close Deleted");}
0x2DD2	0x0E01      	MOVLW       1
0x2DD4	0x6E2A      	MOVWF       _PassFlag 
0x2DD6	0xF00BEC6F  	CALL        _GetAutocloseTime, 0
0x2DDA	0xF01AC000  	MOVFF       R0, __AC
0x2DDE	0x0E3A      	MOVLW       ?ICS?lstr3_FirmV_0_7_0
0x2DE0	0x6EF6      	MOVWF       4086 
0x2DE2	0x0E5D      	MOVLW       hi_addr(?ICS?lstr3_FirmV_0_7_0)
0x2DE4	0x6EF7      	MOVWF       TBLPTRH 
0x2DE6	0x0E00      	MOVLW       higher_addr(?ICS?lstr3_FirmV_0_7_0)
0x2DE8	0x6EF8      	MOVWF       TBLPTRU 
0x2DEA	0x0E4A      	MOVLW       ?lstr3_FirmV_0_7_0
0x2DEC	0x6EE1      	MOVWF       FSR1L 
0x2DEE	0x0E01      	MOVLW       hi_addr(?lstr3_FirmV_0_7_0)
0x2DF0	0x6EE2      	MOVWF       FSR1H 
0x2DF2	0x0E16      	MOVLW       22
0x2DF4	0x6E00      	MOVWF       R0 
0x2DF6	0x0E01      	MOVLW       1
0x2DF8	0x6E01      	MOVWF       R1 
0x2DFA	0xF005EC75  	CALL        ___CC2DW, 0
0x2DFE	0x0E4A      	MOVLW       ?lstr3_FirmV_0_7_0
0x2E00	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2E02	0x0E01      	MOVLW       hi_addr(?lstr3_FirmV_0_7_0)
0x2E04	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2E06	0xF00AECC5  	CALL        _Logger, 0
L_State291:
;FirmV_0_7_0.c,622 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x2E0A	0x502A      	MOVF        _PassFlag, 0 
0x2E0C	0x0A01      	XORLW       1
0x2E0E	0xA4D8      	BTFSS       STATUS, 2 
0x2E10	0xD0AD      	BRA         L_State294
0x2E12	0x0101      	MOVLB       1
0x2E14	0xB103      	BTFSC       _Events+6, 0, 1
0x2E16	0xD0AA      	BRA         L_State294
0x2E18	0x0E00      	MOVLW       0
0x2E1A	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x2E1C	0xE102      	BNZ         L__State2607
0x2E1E	0x0E00      	MOVLW       0
0x2E20	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State2607:
0x2E22	0xB4D8      	BTFSC       STATUS, 2 
0x2E24	0xD0A3      	BRA         L_State294
L__State2524:
;FirmV_0_7_0.c,623 :: 		if(CloseAfterPass==0)
0x2E26	0x512A      	MOVF        _CloseAfterPass, 0, 1
0x2E28	0x0A00      	XORLW       0
0x2E2A	0xE150      	BNZ         L_State295
;FirmV_0_7_0.c,624 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:");Logger(t);}
0x2E2C	0x501A      	MOVF        __AC, 0 
0x2E2E	0x241C      	ADDWF       _ms500, 0 
0x2E30	0x6E00      	MOVWF       R0 
0x2E32	0x0E00      	MOVLW       0
0x2E34	0x201D      	ADDWFC      _ms500+1, 0 
0x2E36	0x6E01      	MOVWF       R1 
0x2E38	0x0E00      	MOVLW       0
0x2E3A	0x201E      	ADDWFC      _ms500+2, 0 
0x2E3C	0x6E02      	MOVWF       R2 
0x2E3E	0x0E00      	MOVLW       0
0x2E40	0x201F      	ADDWFC      _ms500+3, 0 
0x2E42	0x6E03      	MOVWF       R3 
0x2E44	0xF06DC000  	MOVFF       R0, _temp
0x2E48	0xF06EC001  	MOVFF       R1, _temp+1
0x2E4C	0xF06FC002  	MOVFF       R2, _temp+2
0x2E50	0xF070C003  	MOVFF       R3, _temp+3
0x2E54	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2E58	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2E5C	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2E60	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2E64	0x0E09      	MOVLW       9
0x2E66	0x0102      	MOVLB       2
0x2E68	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2E6A	0xF00AECF7  	CALL        _AddTask, 0
0x2E6E	0x6A2A      	CLRF        _PassFlag 
0x2E70	0xF427C06D  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x2E74	0xF428C06E  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x2E78	0xF429C06F  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x2E7C	0xF42AC070  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x2E80	0x0E62      	MOVLW       _t
0x2E82	0x0104      	MOVLB       4
0x2E84	0x6F2B      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x2E86	0x0E00      	MOVLW       hi_addr(_t)
0x2E88	0x6F2C      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x2E8A	0xF003ECE0  	CALL        _LongWordToStrWithZeros, 0
0x2E8E	0x0E50      	MOVLW       ?ICS?lstr4_FirmV_0_7_0
0x2E90	0x6EF6      	MOVWF       4086 
0x2E92	0x0E5D      	MOVLW       hi_addr(?ICS?lstr4_FirmV_0_7_0)
0x2E94	0x6EF7      	MOVWF       TBLPTRH 
0x2E96	0x0E00      	MOVLW       higher_addr(?ICS?lstr4_FirmV_0_7_0)
0x2E98	0x6EF8      	MOVWF       TBLPTRU 
0x2E9A	0x0E60      	MOVLW       ?lstr4_FirmV_0_7_0
0x2E9C	0x6EE1      	MOVWF       FSR1L 
0x2E9E	0x0E01      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x2EA0	0x6EE2      	MOVWF       FSR1H 
0x2EA2	0x0E10      	MOVLW       16
0x2EA4	0x6E00      	MOVWF       R0 
0x2EA6	0x0E01      	MOVLW       1
0x2EA8	0x6E01      	MOVWF       R1 
0x2EAA	0xF005EC75  	CALL        ___CC2DW, 0
0x2EAE	0x0E60      	MOVLW       ?lstr4_FirmV_0_7_0
0x2EB0	0x0102      	MOVLB       2
0x2EB2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2EB4	0x0E01      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x2EB6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2EB8	0xF00AECC5  	CALL        _Logger, 0
0x2EBC	0x0E62      	MOVLW       _t
0x2EBE	0x0102      	MOVLB       2
0x2EC0	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2EC2	0x0E00      	MOVLW       hi_addr(_t)
0x2EC4	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2EC6	0xF00AECC5  	CALL        _Logger, 0
0x2ECA	0xD050      	BRA         L_State296
L_State295:
;FirmV_0_7_0.c,626 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:");Logger(t);}
0x2ECC	0x0101      	MOVLB       1
0x2ECE	0x512A      	MOVF        _CloseAfterPass, 0, 1
0x2ED0	0x241C      	ADDWF       _ms500, 0 
0x2ED2	0x6E00      	MOVWF       R0 
0x2ED4	0x0E00      	MOVLW       0
0x2ED6	0x201D      	ADDWFC      _ms500+1, 0 
0x2ED8	0x6E01      	MOVWF       R1 
0x2EDA	0x0E00      	MOVLW       0
0x2EDC	0x201E      	ADDWFC      _ms500+2, 0 
0x2EDE	0x6E02      	MOVWF       R2 
0x2EE0	0x0E00      	MOVLW       0
0x2EE2	0x201F      	ADDWFC      _ms500+3, 0 
0x2EE4	0x6E03      	MOVWF       R3 
0x2EE6	0xF06DC000  	MOVFF       R0, _temp
0x2EEA	0xF06EC001  	MOVFF       R1, _temp+1
0x2EEE	0xF06FC002  	MOVFF       R2, _temp+2
0x2EF2	0xF070C003  	MOVFF       R3, _temp+3
0x2EF6	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x2EFA	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x2EFE	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x2F02	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x2F06	0x0E09      	MOVLW       9
0x2F08	0x0102      	MOVLB       2
0x2F0A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x2F0C	0xF00AECF7  	CALL        _AddTask, 0
0x2F10	0x6A2A      	CLRF        _PassFlag 
0x2F12	0xF427C06D  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x2F16	0xF428C06E  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x2F1A	0xF429C06F  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x2F1E	0xF42AC070  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x2F22	0x0E62      	MOVLW       _t
0x2F24	0x0104      	MOVLB       4
0x2F26	0x6F2B      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x2F28	0x0E00      	MOVLW       hi_addr(_t)
0x2F2A	0x6F2C      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x2F2C	0xF003ECE0  	CALL        _LongWordToStrWithZeros, 0
0x2F30	0x0E60      	MOVLW       ?ICS?lstr5_FirmV_0_7_0
0x2F32	0x6EF6      	MOVWF       4086 
0x2F34	0x0E5D      	MOVLW       hi_addr(?ICS?lstr5_FirmV_0_7_0)
0x2F36	0x6EF7      	MOVWF       TBLPTRH 
0x2F38	0x0E00      	MOVLW       higher_addr(?ICS?lstr5_FirmV_0_7_0)
0x2F3A	0x6EF8      	MOVWF       TBLPTRU 
0x2F3C	0x0E70      	MOVLW       ?lstr5_FirmV_0_7_0
0x2F3E	0x6EE1      	MOVWF       FSR1L 
0x2F40	0x0E01      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x2F42	0x6EE2      	MOVWF       FSR1H 
0x2F44	0x0E10      	MOVLW       16
0x2F46	0x6E00      	MOVWF       R0 
0x2F48	0x0E01      	MOVLW       1
0x2F4A	0x6E01      	MOVWF       R1 
0x2F4C	0xF005EC75  	CALL        ___CC2DW, 0
0x2F50	0x0E70      	MOVLW       ?lstr5_FirmV_0_7_0
0x2F52	0x0102      	MOVLB       2
0x2F54	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2F56	0x0E01      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x2F58	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2F5A	0xF00AECC5  	CALL        _Logger, 0
0x2F5E	0x0E62      	MOVLW       _t
0x2F60	0x0102      	MOVLB       2
0x2F62	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2F64	0x0E00      	MOVLW       hi_addr(_t)
0x2F66	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2F68	0xF00AECC5  	CALL        _Logger, 0
L_State296:
L_State294:
;FirmV_0_7_0.c,628 :: 		}
0x2F6C	0x0012      	RETURN      0
; end of _State2
_State8:
;FirmV_0_7_0.c,1037 :: 		void State8()
;FirmV_0_7_0.c,1039 :: 		Flasher=1;
0x2F6E	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,1041 :: 		if(CheckTask(1))
0x2F70	0x0E01      	MOVLW       1
0x2F72	0x0102      	MOVLB       2
0x2F74	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2F76	0xF005ECBE  	CALL        _CheckTask, 0
0x2F7A	0x5200      	MOVF        R0, 1 
0x2F7C	0xE02D      	BZ          L_State8213
;FirmV_0_7_0.c,1042 :: 		{StartMotor(1,_Open);Logger("S8 Motor1Start"); Lock=0;}
0x2F7E	0x0E01      	MOVLW       1
0x2F80	0x0102      	MOVLB       2
0x2F82	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x2F84	0x0E01      	MOVLW       1
0x2F86	0x6F7F      	MOVWF       FARG_StartMotor_Dir, 1
0x2F88	0xF006EC52  	CALL        _StartMotor, 0
0x2F8C	0x0E53      	MOVLW       83
0x2F8E	0x0101      	MOVLB       1
0x2F90	0x6F4A      	MOVWF       ?lstr57_FirmV_0_7_0, 1
0x2F92	0x0E38      	MOVLW       56
0x2F94	0x6F4B      	MOVWF       ?lstr57_FirmV_0_7_0+1, 1
0x2F96	0x0E20      	MOVLW       32
0x2F98	0x6F4C      	MOVWF       ?lstr57_FirmV_0_7_0+2, 1
0x2F9A	0x0E4D      	MOVLW       77
0x2F9C	0x6F4D      	MOVWF       ?lstr57_FirmV_0_7_0+3, 1
0x2F9E	0x0E6F      	MOVLW       111
0x2FA0	0x6F4E      	MOVWF       ?lstr57_FirmV_0_7_0+4, 1
0x2FA2	0x0E74      	MOVLW       116
0x2FA4	0x6F4F      	MOVWF       ?lstr57_FirmV_0_7_0+5, 1
0x2FA6	0x0E6F      	MOVLW       111
0x2FA8	0x6F50      	MOVWF       ?lstr57_FirmV_0_7_0+6, 1
0x2FAA	0x0E72      	MOVLW       114
0x2FAC	0x6F51      	MOVWF       ?lstr57_FirmV_0_7_0+7, 1
0x2FAE	0x0E31      	MOVLW       49
0x2FB0	0x6F52      	MOVWF       ?lstr57_FirmV_0_7_0+8, 1
0x2FB2	0x0E53      	MOVLW       83
0x2FB4	0x6F53      	MOVWF       ?lstr57_FirmV_0_7_0+9, 1
0x2FB6	0x0E74      	MOVLW       116
0x2FB8	0x6F54      	MOVWF       ?lstr57_FirmV_0_7_0+10, 1
0x2FBA	0x0E61      	MOVLW       97
0x2FBC	0x6F55      	MOVWF       ?lstr57_FirmV_0_7_0+11, 1
0x2FBE	0x0E72      	MOVLW       114
0x2FC0	0x6F56      	MOVWF       ?lstr57_FirmV_0_7_0+12, 1
0x2FC2	0x0E74      	MOVLW       116
0x2FC4	0x6F57      	MOVWF       ?lstr57_FirmV_0_7_0+13, 1
0x2FC6	0x6B58      	CLRF        ?lstr57_FirmV_0_7_0+14, 1
0x2FC8	0x0E4A      	MOVLW       ?lstr57_FirmV_0_7_0
0x2FCA	0x0102      	MOVLB       2
0x2FCC	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x2FCE	0x0E01      	MOVLW       hi_addr(?lstr57_FirmV_0_7_0)
0x2FD0	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x2FD2	0xF00AECC5  	CALL        _Logger, 0
0x2FD6	0x9E83      	BCF         PORTD, 7 
L_State8213:
;FirmV_0_7_0.c,1044 :: 		if(CheckTask(2))
0x2FD8	0x0E02      	MOVLW       2
0x2FDA	0x0102      	MOVLB       2
0x2FDC	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x2FDE	0xF005ECBE  	CALL        _CheckTask, 0
0x2FE2	0x5200      	MOVF        R0, 1 
0x2FE4	0xE02D      	BZ          L_State8214
;FirmV_0_7_0.c,1045 :: 		{StartMotor(2,_Open);Logger("S8 Motor2Start"); Lock=0;}
0x2FE6	0x0E02      	MOVLW       2
0x2FE8	0x0102      	MOVLB       2
0x2FEA	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x2FEC	0x0E01      	MOVLW       1
0x2FEE	0x6F7F      	MOVWF       FARG_StartMotor_Dir, 1
0x2FF0	0xF006EC52  	CALL        _StartMotor, 0
0x2FF4	0x0E53      	MOVLW       83
0x2FF6	0x0101      	MOVLB       1
0x2FF8	0x6F59      	MOVWF       ?lstr58_FirmV_0_7_0, 1
0x2FFA	0x0E38      	MOVLW       56
0x2FFC	0x6F5A      	MOVWF       ?lstr58_FirmV_0_7_0+1, 1
0x2FFE	0x0E20      	MOVLW       32
0x3000	0x6F5B      	MOVWF       ?lstr58_FirmV_0_7_0+2, 1
0x3002	0x0E4D      	MOVLW       77
0x3004	0x6F5C      	MOVWF       ?lstr58_FirmV_0_7_0+3, 1
0x3006	0x0E6F      	MOVLW       111
0x3008	0x6F5D      	MOVWF       ?lstr58_FirmV_0_7_0+4, 1
0x300A	0x0E74      	MOVLW       116
0x300C	0x6F5E      	MOVWF       ?lstr58_FirmV_0_7_0+5, 1
0x300E	0x0E6F      	MOVLW       111
0x3010	0x6F5F      	MOVWF       ?lstr58_FirmV_0_7_0+6, 1
0x3012	0x0E72      	MOVLW       114
0x3014	0x6F60      	MOVWF       ?lstr58_FirmV_0_7_0+7, 1
0x3016	0x0E32      	MOVLW       50
0x3018	0x6F61      	MOVWF       ?lstr58_FirmV_0_7_0+8, 1
0x301A	0x0E53      	MOVLW       83
0x301C	0x6F62      	MOVWF       ?lstr58_FirmV_0_7_0+9, 1
0x301E	0x0E74      	MOVLW       116
0x3020	0x6F63      	MOVWF       ?lstr58_FirmV_0_7_0+10, 1
0x3022	0x0E61      	MOVLW       97
0x3024	0x6F64      	MOVWF       ?lstr58_FirmV_0_7_0+11, 1
0x3026	0x0E72      	MOVLW       114
0x3028	0x6F65      	MOVWF       ?lstr58_FirmV_0_7_0+12, 1
0x302A	0x0E74      	MOVLW       116
0x302C	0x6F66      	MOVWF       ?lstr58_FirmV_0_7_0+13, 1
0x302E	0x6B67      	CLRF        ?lstr58_FirmV_0_7_0+14, 1
0x3030	0x0E59      	MOVLW       ?lstr58_FirmV_0_7_0
0x3032	0x0102      	MOVLB       2
0x3034	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3036	0x0E01      	MOVLW       hi_addr(?lstr58_FirmV_0_7_0)
0x3038	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x303A	0xF00AECC5  	CALL        _Logger, 0
0x303E	0x9E83      	BCF         PORTD, 7 
L_State8214:
;FirmV_0_7_0.c,1047 :: 		if(CheckTask(10))
0x3040	0x0E0A      	MOVLW       10
0x3042	0x0102      	MOVLB       2
0x3044	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3046	0xF005ECBE  	CALL        _CheckTask, 0
0x304A	0x5200      	MOVF        R0, 1 
0x304C	0xE01E      	BZ          L_State8215
;FirmV_0_7_0.c,1048 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S8 Overflow Flag1 Set");}
0x304E	0x0E01      	MOVLW       1
0x3050	0x6E26      	MOVWF       _OverloadCheckFlag1 
0x3052	0x0E01      	MOVLW       1
0x3054	0x0102      	MOVLB       2
0x3056	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x3058	0xF005ECDE  	CALL        _OverloadInit, 0
0x305C	0x0E94      	MOVLW       ?ICS?lstr59_FirmV_0_7_0
0x305E	0x6EF6      	MOVWF       4086 
0x3060	0x0E5A      	MOVLW       hi_addr(?ICS?lstr59_FirmV_0_7_0)
0x3062	0x6EF7      	MOVWF       TBLPTRH 
0x3064	0x0E00      	MOVLW       higher_addr(?ICS?lstr59_FirmV_0_7_0)
0x3066	0x6EF8      	MOVWF       TBLPTRU 
0x3068	0x0E68      	MOVLW       ?lstr59_FirmV_0_7_0
0x306A	0x6EE1      	MOVWF       FSR1L 
0x306C	0x0E01      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x306E	0x6EE2      	MOVWF       FSR1H 
0x3070	0x0E16      	MOVLW       22
0x3072	0x6E00      	MOVWF       R0 
0x3074	0x0E01      	MOVLW       1
0x3076	0x6E01      	MOVWF       R1 
0x3078	0xF005EC75  	CALL        ___CC2DW, 0
0x307C	0x0E68      	MOVLW       ?lstr59_FirmV_0_7_0
0x307E	0x0102      	MOVLB       2
0x3080	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3082	0x0E01      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x3084	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3086	0xF00AECC5  	CALL        _Logger, 0
L_State8215:
;FirmV_0_7_0.c,1050 :: 		if(CheckTask(11))
0x308A	0x0E0B      	MOVLW       11
0x308C	0x0102      	MOVLB       2
0x308E	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3090	0xF005ECBE  	CALL        _CheckTask, 0
0x3094	0x5200      	MOVF        R0, 1 
0x3096	0xE01E      	BZ          L_State8216
;FirmV_0_7_0.c,1051 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S8 Overflow Flag2 Set");}
0x3098	0x0E01      	MOVLW       1
0x309A	0x6E25      	MOVWF       _OverloadCheckFlag2 
0x309C	0x0E02      	MOVLW       2
0x309E	0x0102      	MOVLB       2
0x30A0	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x30A2	0xF005ECDE  	CALL        _OverloadInit, 0
0x30A6	0x0EAA      	MOVLW       ?ICS?lstr60_FirmV_0_7_0
0x30A8	0x6EF6      	MOVWF       4086 
0x30AA	0x0E5A      	MOVLW       hi_addr(?ICS?lstr60_FirmV_0_7_0)
0x30AC	0x6EF7      	MOVWF       TBLPTRH 
0x30AE	0x0E00      	MOVLW       higher_addr(?ICS?lstr60_FirmV_0_7_0)
0x30B0	0x6EF8      	MOVWF       TBLPTRU 
0x30B2	0x0E7E      	MOVLW       ?lstr60_FirmV_0_7_0
0x30B4	0x6EE1      	MOVWF       FSR1L 
0x30B6	0x0E01      	MOVLW       hi_addr(?lstr60_FirmV_0_7_0)
0x30B8	0x6EE2      	MOVWF       FSR1H 
0x30BA	0x0E16      	MOVLW       22
0x30BC	0x6E00      	MOVWF       R0 
0x30BE	0x0E01      	MOVLW       1
0x30C0	0x6E01      	MOVWF       R1 
0x30C2	0xF005EC75  	CALL        ___CC2DW, 0
0x30C6	0x0E7E      	MOVLW       ?lstr60_FirmV_0_7_0
0x30C8	0x0102      	MOVLB       2
0x30CA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x30CC	0x0E01      	MOVLW       hi_addr(?lstr60_FirmV_0_7_0)
0x30CE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x30D0	0xF00AECC5  	CALL        _Logger, 0
L_State8216:
;FirmV_0_7_0.c,1053 :: 		if(CheckTask(5))
0x30D4	0x0E05      	MOVLW       5
0x30D6	0x0102      	MOVLB       2
0x30D8	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x30DA	0xF005ECBE  	CALL        _CheckTask, 0
0x30DE	0x5200      	MOVF        R0, 1 
0x30E0	0xE02D      	BZ          L_State8217
;FirmV_0_7_0.c,1054 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S8 Motor1 Fast");}
0x30E2	0x0E01      	MOVLW       1
0x30E4	0x0102      	MOVLB       2
0x30E6	0x6F7E      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x30E8	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x30EC	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x30F0	0x6A24      	CLRF        _M1isSlow 
0x30F2	0x0E53      	MOVLW       83
0x30F4	0x0101      	MOVLB       1
0x30F6	0x6F94      	MOVWF       ?lstr61_FirmV_0_7_0, 1
0x30F8	0x0E38      	MOVLW       56
0x30FA	0x6F95      	MOVWF       ?lstr61_FirmV_0_7_0+1, 1
0x30FC	0x0E20      	MOVLW       32
0x30FE	0x6F96      	MOVWF       ?lstr61_FirmV_0_7_0+2, 1
0x3100	0x0E4D      	MOVLW       77
0x3102	0x6F97      	MOVWF       ?lstr61_FirmV_0_7_0+3, 1
0x3104	0x0E6F      	MOVLW       111
0x3106	0x6F98      	MOVWF       ?lstr61_FirmV_0_7_0+4, 1
0x3108	0x0E74      	MOVLW       116
0x310A	0x6F99      	MOVWF       ?lstr61_FirmV_0_7_0+5, 1
0x310C	0x0E6F      	MOVLW       111
0x310E	0x6F9A      	MOVWF       ?lstr61_FirmV_0_7_0+6, 1
0x3110	0x0E72      	MOVLW       114
0x3112	0x6F9B      	MOVWF       ?lstr61_FirmV_0_7_0+7, 1
0x3114	0x0E31      	MOVLW       49
0x3116	0x6F9C      	MOVWF       ?lstr61_FirmV_0_7_0+8, 1
0x3118	0x0E20      	MOVLW       32
0x311A	0x6F9D      	MOVWF       ?lstr61_FirmV_0_7_0+9, 1
0x311C	0x0E46      	MOVLW       70
0x311E	0x6F9E      	MOVWF       ?lstr61_FirmV_0_7_0+10, 1
0x3120	0x0E61      	MOVLW       97
0x3122	0x6F9F      	MOVWF       ?lstr61_FirmV_0_7_0+11, 1
0x3124	0x0E73      	MOVLW       115
0x3126	0x6FA0      	MOVWF       ?lstr61_FirmV_0_7_0+12, 1
0x3128	0x0E74      	MOVLW       116
0x312A	0x6FA1      	MOVWF       ?lstr61_FirmV_0_7_0+13, 1
0x312C	0x6BA2      	CLRF        ?lstr61_FirmV_0_7_0+14, 1
0x312E	0x0E94      	MOVLW       ?lstr61_FirmV_0_7_0
0x3130	0x0102      	MOVLB       2
0x3132	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3134	0x0E01      	MOVLW       hi_addr(?lstr61_FirmV_0_7_0)
0x3136	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3138	0xF00AECC5  	CALL        _Logger, 0
L_State8217:
;FirmV_0_7_0.c,1056 :: 		if(CheckTask(6))
0x313C	0x0E06      	MOVLW       6
0x313E	0x0102      	MOVLB       2
0x3140	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3142	0xF005ECBE  	CALL        _CheckTask, 0
0x3146	0x5200      	MOVF        R0, 1 
0x3148	0xE02D      	BZ          L_State8218
;FirmV_0_7_0.c,1057 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S8 Motor2 Fast");}
0x314A	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x314E	0x0E01      	MOVLW       1
0x3150	0x0102      	MOVLB       2
0x3152	0x6F7F      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x3154	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x3158	0x6A2B      	CLRF        _M2isSlow 
0x315A	0x0E53      	MOVLW       83
0x315C	0x0101      	MOVLB       1
0x315E	0x6FA3      	MOVWF       ?lstr62_FirmV_0_7_0, 1
0x3160	0x0E38      	MOVLW       56
0x3162	0x6FA4      	MOVWF       ?lstr62_FirmV_0_7_0+1, 1
0x3164	0x0E20      	MOVLW       32
0x3166	0x6FA5      	MOVWF       ?lstr62_FirmV_0_7_0+2, 1
0x3168	0x0E4D      	MOVLW       77
0x316A	0x6FA6      	MOVWF       ?lstr62_FirmV_0_7_0+3, 1
0x316C	0x0E6F      	MOVLW       111
0x316E	0x6FA7      	MOVWF       ?lstr62_FirmV_0_7_0+4, 1
0x3170	0x0E74      	MOVLW       116
0x3172	0x6FA8      	MOVWF       ?lstr62_FirmV_0_7_0+5, 1
0x3174	0x0E6F      	MOVLW       111
0x3176	0x6FA9      	MOVWF       ?lstr62_FirmV_0_7_0+6, 1
0x3178	0x0E72      	MOVLW       114
0x317A	0x6FAA      	MOVWF       ?lstr62_FirmV_0_7_0+7, 1
0x317C	0x0E32      	MOVLW       50
0x317E	0x6FAB      	MOVWF       ?lstr62_FirmV_0_7_0+8, 1
0x3180	0x0E20      	MOVLW       32
0x3182	0x6FAC      	MOVWF       ?lstr62_FirmV_0_7_0+9, 1
0x3184	0x0E46      	MOVLW       70
0x3186	0x6FAD      	MOVWF       ?lstr62_FirmV_0_7_0+10, 1
0x3188	0x0E61      	MOVLW       97
0x318A	0x6FAE      	MOVWF       ?lstr62_FirmV_0_7_0+11, 1
0x318C	0x0E73      	MOVLW       115
0x318E	0x6FAF      	MOVWF       ?lstr62_FirmV_0_7_0+12, 1
0x3190	0x0E74      	MOVLW       116
0x3192	0x6FB0      	MOVWF       ?lstr62_FirmV_0_7_0+13, 1
0x3194	0x6BB1      	CLRF        ?lstr62_FirmV_0_7_0+14, 1
0x3196	0x0EA3      	MOVLW       ?lstr62_FirmV_0_7_0
0x3198	0x0102      	MOVLB       2
0x319A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x319C	0x0E01      	MOVLW       hi_addr(?lstr62_FirmV_0_7_0)
0x319E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x31A0	0xF00AECC5  	CALL        _Logger, 0
L_State8218:
;FirmV_0_7_0.c,1059 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(OpenDone.b0))
0x31A4	0x0E03      	MOVLW       3
0x31A6	0x0102      	MOVLB       2
0x31A8	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x31AA	0xF005ECBE  	CALL        _CheckTask, 0
0x31AE	0x5200      	MOVF        R0, 1 
0x31B0	0xE108      	BNZ         L__State8557
0x31B2	0x5026      	MOVF        _OverloadCheckFlag1, 0 
0x31B4	0x0A01      	XORLW       1
0x31B6	0xE104      	BNZ         L__State8558
0x31B8	0x0101      	MOVLB       1
0x31BA	0xA102      	BTFSS       _Events+5, 0, 1
0x31BC	0xD001      	BRA         L__State8558
0x31BE	0xD001      	BRA         L__State8557
L__State8558:
0x31C0	0xD02D      	BRA         L_State8225
L__State8557:
0x31C2	0xA02C      	BTFSS       _OpenDone, 0 
0x31C4	0xD02B      	BRA         L_State8225
L__State8556:
;FirmV_0_7_0.c,1060 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S8 Motor1 Stop");}
0x31C6	0x902C      	BCF         _OpenDone, 0 
0x31C8	0x0E01      	MOVLW       1
0x31CA	0x0102      	MOVLB       2
0x31CC	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x31CE	0xF00AECB9  	CALL        _StopMotor, 0
0x31D2	0x0E53      	MOVLW       83
0x31D4	0x0101      	MOVLB       1
0x31D6	0x6FB2      	MOVWF       ?lstr63_FirmV_0_7_0, 1
0x31D8	0x0E38      	MOVLW       56
0x31DA	0x6FB3      	MOVWF       ?lstr63_FirmV_0_7_0+1, 1
0x31DC	0x0E20      	MOVLW       32
0x31DE	0x6FB4      	MOVWF       ?lstr63_FirmV_0_7_0+2, 1
0x31E0	0x0E4D      	MOVLW       77
0x31E2	0x6FB5      	MOVWF       ?lstr63_FirmV_0_7_0+3, 1
0x31E4	0x0E6F      	MOVLW       111
0x31E6	0x6FB6      	MOVWF       ?lstr63_FirmV_0_7_0+4, 1
0x31E8	0x0E74      	MOVLW       116
0x31EA	0x6FB7      	MOVWF       ?lstr63_FirmV_0_7_0+5, 1
0x31EC	0x0E6F      	MOVLW       111
0x31EE	0x6FB8      	MOVWF       ?lstr63_FirmV_0_7_0+6, 1
0x31F0	0x0E72      	MOVLW       114
0x31F2	0x6FB9      	MOVWF       ?lstr63_FirmV_0_7_0+7, 1
0x31F4	0x0E31      	MOVLW       49
0x31F6	0x6FBA      	MOVWF       ?lstr63_FirmV_0_7_0+8, 1
0x31F8	0x0E20      	MOVLW       32
0x31FA	0x6FBB      	MOVWF       ?lstr63_FirmV_0_7_0+9, 1
0x31FC	0x0E53      	MOVLW       83
0x31FE	0x6FBC      	MOVWF       ?lstr63_FirmV_0_7_0+10, 1
0x3200	0x0E74      	MOVLW       116
0x3202	0x6FBD      	MOVWF       ?lstr63_FirmV_0_7_0+11, 1
0x3204	0x0E6F      	MOVLW       111
0x3206	0x6FBE      	MOVWF       ?lstr63_FirmV_0_7_0+12, 1
0x3208	0x0E70      	MOVLW       112
0x320A	0x6FBF      	MOVWF       ?lstr63_FirmV_0_7_0+13, 1
0x320C	0x6BC0      	CLRF        ?lstr63_FirmV_0_7_0+14, 1
0x320E	0x0EB2      	MOVLW       ?lstr63_FirmV_0_7_0
0x3210	0x0102      	MOVLB       2
0x3212	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3214	0x0E01      	MOVLW       hi_addr(?lstr63_FirmV_0_7_0)
0x3216	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3218	0xF00AECC5  	CALL        _Logger, 0
L_State8225:
;FirmV_0_7_0.c,1062 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(OpenDone.b1))
0x321C	0x0E04      	MOVLW       4
0x321E	0x0102      	MOVLB       2
0x3220	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3222	0xF005ECBE  	CALL        _CheckTask, 0
0x3226	0x5200      	MOVF        R0, 1 
0x3228	0xE108      	BNZ         L__State8554
0x322A	0x5025      	MOVF        _OverloadCheckFlag2, 0 
0x322C	0x0A01      	XORLW       1
0x322E	0xE104      	BNZ         L__State8555
0x3230	0x0101      	MOVLB       1
0x3232	0xA302      	BTFSS       _Events+5, 1, 1
0x3234	0xD001      	BRA         L__State8555
0x3236	0xD001      	BRA         L__State8554
L__State8555:
0x3238	0xD02D      	BRA         L_State8232
L__State8554:
0x323A	0xA22C      	BTFSS       _OpenDone, 1 
0x323C	0xD02B      	BRA         L_State8232
L__State8553:
;FirmV_0_7_0.c,1063 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S8 Motor2 Stop");}
0x323E	0x922C      	BCF         _OpenDone, 1 
0x3240	0x0E02      	MOVLW       2
0x3242	0x0102      	MOVLB       2
0x3244	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3246	0xF00AECB9  	CALL        _StopMotor, 0
0x324A	0x0E53      	MOVLW       83
0x324C	0x0101      	MOVLB       1
0x324E	0x6FC1      	MOVWF       ?lstr64_FirmV_0_7_0, 1
0x3250	0x0E38      	MOVLW       56
0x3252	0x6FC2      	MOVWF       ?lstr64_FirmV_0_7_0+1, 1
0x3254	0x0E20      	MOVLW       32
0x3256	0x6FC3      	MOVWF       ?lstr64_FirmV_0_7_0+2, 1
0x3258	0x0E4D      	MOVLW       77
0x325A	0x6FC4      	MOVWF       ?lstr64_FirmV_0_7_0+3, 1
0x325C	0x0E6F      	MOVLW       111
0x325E	0x6FC5      	MOVWF       ?lstr64_FirmV_0_7_0+4, 1
0x3260	0x0E74      	MOVLW       116
0x3262	0x6FC6      	MOVWF       ?lstr64_FirmV_0_7_0+5, 1
0x3264	0x0E6F      	MOVLW       111
0x3266	0x6FC7      	MOVWF       ?lstr64_FirmV_0_7_0+6, 1
0x3268	0x0E72      	MOVLW       114
0x326A	0x6FC8      	MOVWF       ?lstr64_FirmV_0_7_0+7, 1
0x326C	0x0E32      	MOVLW       50
0x326E	0x6FC9      	MOVWF       ?lstr64_FirmV_0_7_0+8, 1
0x3270	0x0E20      	MOVLW       32
0x3272	0x6FCA      	MOVWF       ?lstr64_FirmV_0_7_0+9, 1
0x3274	0x0E53      	MOVLW       83
0x3276	0x6FCB      	MOVWF       ?lstr64_FirmV_0_7_0+10, 1
0x3278	0x0E74      	MOVLW       116
0x327A	0x6FCC      	MOVWF       ?lstr64_FirmV_0_7_0+11, 1
0x327C	0x0E6F      	MOVLW       111
0x327E	0x6FCD      	MOVWF       ?lstr64_FirmV_0_7_0+12, 1
0x3280	0x0E70      	MOVLW       112
0x3282	0x6FCE      	MOVWF       ?lstr64_FirmV_0_7_0+13, 1
0x3284	0x6BCF      	CLRF        ?lstr64_FirmV_0_7_0+14, 1
0x3286	0x0EC1      	MOVLW       ?lstr64_FirmV_0_7_0
0x3288	0x0102      	MOVLB       2
0x328A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x328C	0x0E01      	MOVLW       hi_addr(?lstr64_FirmV_0_7_0)
0x328E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3290	0xF00AECC5  	CALL        _Logger, 0
L_State8232:
;FirmV_0_7_0.c,1065 :: 		if(CheckTask(12))
0x3294	0x0E0C      	MOVLW       12
0x3296	0x0102      	MOVLB       2
0x3298	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x329A	0xF005ECBE  	CALL        _CheckTask, 0
0x329E	0x5200      	MOVF        R0, 1 
0x32A0	0xE001      	BZ          L_State8233
;FirmV_0_7_0.c,1066 :: 		{Lock=1;}
0x32A2	0x8E83      	BSF         PORTD, 7 
L_State8233:
;FirmV_0_7_0.c,1068 :: 		if(Door2OpenTime==0)
0x32A4	0x0101      	MOVLB       1
0x32A6	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x32A8	0x0A00      	XORLW       0
0x32AA	0xE101      	BNZ         L_State8234
;FirmV_0_7_0.c,1069 :: 		OpenDone.b1=0;
0x32AC	0x922C      	BCF         _OpenDone, 1 
L_State8234:
;FirmV_0_7_0.c,1071 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x32AE	0xA103      	BTFSS       _Events+6, 0, 1
0x32B0	0xD02A      	BRA         L_State8237
0x32B2	0x532F      	MOVF        _OpenPhEnable, 1, 1
0x32B4	0xE028      	BZ          L_State8237
L__State8552:
;FirmV_0_7_0.c,1072 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S8 Photocell Int");ClearTasks(9);}
0x32B6	0x0E01      	MOVLW       1
0x32B8	0x0102      	MOVLB       2
0x32BA	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x32BC	0xF00AECB9  	CALL        _StopMotor, 0
0x32C0	0x0E02      	MOVLW       2
0x32C2	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x32C4	0xF00AECB9  	CALL        _StopMotor, 0
0x32C8	0x6A26      	CLRF        _OverloadCheckFlag1 
0x32CA	0x6A25      	CLRF        _OverloadCheckFlag2 
0x32CC	0x0E05      	MOVLW       5
0x32CE	0x6E29      	MOVWF       _State 
0x32D0	0x0EFC      	MOVLW       ?ICS?lstr65_FirmV_0_7_0
0x32D2	0x6EF6      	MOVWF       4086 
0x32D4	0x0E5A      	MOVLW       hi_addr(?ICS?lstr65_FirmV_0_7_0)
0x32D6	0x6EF7      	MOVWF       TBLPTRH 
0x32D8	0x0E00      	MOVLW       higher_addr(?ICS?lstr65_FirmV_0_7_0)
0x32DA	0x6EF8      	MOVWF       TBLPTRU 
0x32DC	0x0ED0      	MOVLW       ?lstr65_FirmV_0_7_0
0x32DE	0x6EE1      	MOVWF       FSR1L 
0x32E0	0x0E01      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x32E2	0x6EE2      	MOVWF       FSR1H 
0x32E4	0x0E11      	MOVLW       17
0x32E6	0x6E00      	MOVWF       R0 
0x32E8	0x0E01      	MOVLW       1
0x32EA	0x6E01      	MOVWF       R1 
0x32EC	0xF005EC75  	CALL        ___CC2DW, 0
0x32F0	0x0ED0      	MOVLW       ?lstr65_FirmV_0_7_0
0x32F2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x32F4	0x0E01      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x32F6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x32F8	0xF00AECC5  	CALL        _Logger, 0
0x32FC	0x0E09      	MOVLW       9
0x32FE	0x0102      	MOVLB       2
0x3300	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3302	0xF005ECED  	CALL        _ClearTasks, 0
L_State8237:
;FirmV_0_7_0.c,1074 :: 		if((Events.Remote.b0==1))
0x3306	0x0101      	MOVLB       1
0x3308	0xA101      	BTFSS       _Events+4, 0, 1
0x330A	0xD028      	BRA         L_State8238
;FirmV_0_7_0.c,1075 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Motors Stoped (Remote)");ClearTasks(9);}
0x330C	0x0E01      	MOVLW       1
0x330E	0x0102      	MOVLB       2
0x3310	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3312	0xF00AECB9  	CALL        _StopMotor, 0
0x3316	0x0E02      	MOVLW       2
0x3318	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x331A	0xF00AECB9  	CALL        _StopMotor, 0
0x331E	0x0E05      	MOVLW       5
0x3320	0x6E29      	MOVWF       _State 
0x3322	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3324	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3326	0x0E0D      	MOVLW       ?ICS?lstr66_FirmV_0_7_0
0x3328	0x6EF6      	MOVWF       4086 
0x332A	0x0E5B      	MOVLW       hi_addr(?ICS?lstr66_FirmV_0_7_0)
0x332C	0x6EF7      	MOVWF       TBLPTRH 
0x332E	0x0E00      	MOVLW       higher_addr(?ICS?lstr66_FirmV_0_7_0)
0x3330	0x6EF8      	MOVWF       TBLPTRU 
0x3332	0x0EE1      	MOVLW       ?lstr66_FirmV_0_7_0
0x3334	0x6EE1      	MOVWF       FSR1L 
0x3336	0x0E01      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x3338	0x6EE2      	MOVWF       FSR1H 
0x333A	0x0E1A      	MOVLW       26
0x333C	0x6E00      	MOVWF       R0 
0x333E	0x0E01      	MOVLW       1
0x3340	0x6E01      	MOVWF       R1 
0x3342	0xF005EC75  	CALL        ___CC2DW, 0
0x3346	0x0EE1      	MOVLW       ?lstr66_FirmV_0_7_0
0x3348	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x334A	0x0E01      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x334C	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x334E	0xF00AECC5  	CALL        _Logger, 0
0x3352	0x0E09      	MOVLW       9
0x3354	0x0102      	MOVLB       2
0x3356	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3358	0xF005ECED  	CALL        _ClearTasks, 0
L_State8238:
;FirmV_0_7_0.c,1077 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x335C	0x0101      	MOVLB       1
0x335E	0x5104      	MOVF        _Events+7, 0, 1
0x3360	0x0A01      	XORLW       1
0x3362	0xE12A      	BNZ         L_State8241
0x3364	0x5325      	MOVF        _LimiterEnable, 1, 1
0x3366	0xE028      	BZ          L_State8241
L__State8551:
;FirmV_0_7_0.c,1078 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Limit Switch Stop");ClearTasks(9);}
0x3368	0x0E01      	MOVLW       1
0x336A	0x0102      	MOVLB       2
0x336C	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x336E	0xF00AECB9  	CALL        _StopMotor, 0
0x3372	0x0E02      	MOVLW       2
0x3374	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3376	0xF00AECB9  	CALL        _StopMotor, 0
0x337A	0x0E05      	MOVLW       5
0x337C	0x6E29      	MOVWF       _State 
0x337E	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3380	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3382	0x0E27      	MOVLW       ?ICS?lstr67_FirmV_0_7_0
0x3384	0x6EF6      	MOVWF       4086 
0x3386	0x0E5B      	MOVLW       hi_addr(?ICS?lstr67_FirmV_0_7_0)
0x3388	0x6EF7      	MOVWF       TBLPTRH 
0x338A	0x0E00      	MOVLW       higher_addr(?ICS?lstr67_FirmV_0_7_0)
0x338C	0x6EF8      	MOVWF       TBLPTRU 
0x338E	0x0EFB      	MOVLW       ?lstr67_FirmV_0_7_0
0x3390	0x6EE1      	MOVWF       FSR1L 
0x3392	0x0E01      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x3394	0x6EE2      	MOVWF       FSR1H 
0x3396	0x0E15      	MOVLW       21
0x3398	0x6E00      	MOVWF       R0 
0x339A	0x0E01      	MOVLW       1
0x339C	0x6E01      	MOVWF       R1 
0x339E	0xF005EC75  	CALL        ___CC2DW, 0
0x33A2	0x0EFB      	MOVLW       ?lstr67_FirmV_0_7_0
0x33A4	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x33A6	0x0E01      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x33A8	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x33AA	0xF00AECC5  	CALL        _Logger, 0
0x33AE	0x0E09      	MOVLW       9
0x33B0	0x0102      	MOVLB       2
0x33B2	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x33B4	0xF005ECED  	CALL        _ClearTasks, 0
L_State8241:
;FirmV_0_7_0.c,1080 :: 		if(OpenDone==0)
0x33B8	0x502C      	MOVF        _OpenDone, 0 
0x33BA	0x0A00      	XORLW       0
0x33BC	0xE108      	BNZ         L_State8242
;FirmV_0_7_0.c,1081 :: 		{State=2; PassFlag=0;ClearTasks(9);}
0x33BE	0x0102      	MOVLB       2
0x33C0	0x0E02      	MOVLW       2
0x33C2	0x6E29      	MOVWF       _State 
0x33C4	0x6A2A      	CLRF        _PassFlag 
0x33C6	0x0E09      	MOVLW       9
0x33C8	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x33CA	0xF005ECED  	CALL        _ClearTasks, 0
L_State8242:
;FirmV_0_7_0.c,1083 :: 		if((State==5)||(State==6))
0x33CE	0x5029      	MOVF        _State, 0 
0x33D0	0x0A05      	XORLW       5
0x33D2	0xE004      	BZ          L__State8550
0x33D4	0x5029      	MOVF        _State, 0 
0x33D6	0x0A06      	XORLW       6
0x33D8	0xE001      	BZ          L__State8550
0x33DA	0xD034      	BRA         L_State8245
L__State8550:
0x33DC	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1084 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S8 Autoclose Renewed");}}
0x33DE	0x6B7E      	CLRF        FARG_ClearTasks_except, 1
0x33E0	0xF005ECED  	CALL        _ClearTasks, 0
0x33E4	0x0E00      	MOVLW       0
0x33E6	0x0101      	MOVLB       1
0x33E8	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x33EA	0xE102      	BNZ         L__State8615
0x33EC	0x0E00      	MOVLW       0
0x33EE	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State8615:
0x33F0	0xE029      	BZ          L_State8246
0x33F2	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x33F4	0x241C      	ADDWF       _ms500, 0 
0x33F6	0x0102      	MOVLB       2
0x33F8	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x33FA	0x0101      	MOVLB       1
0x33FC	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x33FE	0x201D      	ADDWFC      _ms500+1, 0 
0x3400	0x0102      	MOVLB       2
0x3402	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3404	0x0E00      	MOVLW       0
0x3406	0x201E      	ADDWFC      _ms500+2, 0 
0x3408	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x340A	0x0E00      	MOVLW       0
0x340C	0x201F      	ADDWFC      _ms500+3, 0 
0x340E	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3410	0x0E09      	MOVLW       9
0x3412	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3414	0xF00AECF7  	CALL        _AddTask, 0
0x3418	0x0E3C      	MOVLW       ?ICS?lstr68_FirmV_0_7_0
0x341A	0x6EF6      	MOVWF       4086 
0x341C	0x0E5B      	MOVLW       hi_addr(?ICS?lstr68_FirmV_0_7_0)
0x341E	0x6EF7      	MOVWF       TBLPTRH 
0x3420	0x0E00      	MOVLW       higher_addr(?ICS?lstr68_FirmV_0_7_0)
0x3422	0x6EF8      	MOVWF       TBLPTRU 
0x3424	0x0E10      	MOVLW       ?lstr68_FirmV_0_7_0
0x3426	0x6EE1      	MOVWF       FSR1L 
0x3428	0x0E02      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x342A	0x6EE2      	MOVWF       FSR1H 
0x342C	0x0E15      	MOVLW       21
0x342E	0x6E00      	MOVWF       R0 
0x3430	0x0E01      	MOVLW       1
0x3432	0x6E01      	MOVWF       R1 
0x3434	0xF005EC75  	CALL        ___CC2DW, 0
0x3438	0x0E10      	MOVLW       ?lstr68_FirmV_0_7_0
0x343A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x343C	0x0E02      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x343E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3440	0xF00AECC5  	CALL        _Logger, 0
L_State8246:
L_State8245:
;FirmV_0_7_0.c,1087 :: 		}
0x3444	0x0012      	RETURN      0
; end of _State8
_State6:
;FirmV_0_7_0.c,878 :: 		void State6()
;FirmV_0_7_0.c,882 :: 		char delay=3;
0x3446	0x0E03      	MOVLW       3
0x3448	0x0101      	MOVLB       1
0x344A	0x6F80      	MOVWF       State6_delay_L0, 1
;FirmV_0_7_0.c,883 :: 		Flasher=0;
0x344C	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,884 :: 		if((Events.Remote.b0==1)||(PhotocellOpenFlag))
0x344E	0xB101      	BTFSC       _Events+4, 0, 1
0x3450	0xD003      	BRA         L__State6541
0x3452	0x5247      	MOVF        _PhotocellOpenFlag, 1 
0x3454	0xE101      	BNZ         L__State6541
0x3456	0xD10F      	BRA         L_State6170
L__State6541:
;FirmV_0_7_0.c,886 :: 		PhotocellOpenFlag=0;
0x3458	0x6A47      	CLRF        _PhotocellOpenFlag 
;FirmV_0_7_0.c,887 :: 		Flasher=1;
0x345A	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,888 :: 		ClearTasks(9);
0x345C	0x0E09      	MOVLW       9
0x345E	0x0102      	MOVLB       2
0x3460	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3462	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,889 :: 		AddTask(ms500+1,12);
0x3466	0x0E01      	MOVLW       1
0x3468	0x241C      	ADDWF       _ms500, 0 
0x346A	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x346C	0x0E00      	MOVLW       0
0x346E	0x201D      	ADDWFC      _ms500+1, 0 
0x3470	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3472	0x0E00      	MOVLW       0
0x3474	0x201E      	ADDWFC      _ms500+2, 0 
0x3476	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3478	0x0E00      	MOVLW       0
0x347A	0x201F      	ADDWFC      _ms500+3, 0 
0x347C	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x347E	0x0E0C      	MOVLW       12
0x3480	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3482	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,890 :: 		temp=ms500+delay;
0x3486	0x0101      	MOVLB       1
0x3488	0x5180      	MOVF        State6_delay_L0, 0, 1
0x348A	0x241C      	ADDWF       _ms500, 0 
0x348C	0x6E00      	MOVWF       R0 
0x348E	0x0E00      	MOVLW       0
0x3490	0x201D      	ADDWFC      _ms500+1, 0 
0x3492	0x6E01      	MOVWF       R1 
0x3494	0x0E00      	MOVLW       0
0x3496	0x201E      	ADDWFC      _ms500+2, 0 
0x3498	0x6E02      	MOVWF       R2 
0x349A	0x0E00      	MOVLW       0
0x349C	0x201F      	ADDWFC      _ms500+3, 0 
0x349E	0x6E03      	MOVWF       R3 
0x34A0	0xF06DC000  	MOVFF       R0, _temp
0x34A4	0xF06EC001  	MOVFF       R1, _temp+1
0x34A8	0xF06FC002  	MOVFF       R2, _temp+2
0x34AC	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,891 :: 		AddTask(temp,1);
0x34B0	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x34B4	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x34B8	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x34BC	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x34C0	0x0E01      	MOVLW       1
0x34C2	0x0102      	MOVLB       2
0x34C4	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x34C6	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,892 :: 		AddTask(temp,5);
0x34CA	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x34CE	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x34D2	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x34D6	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x34DA	0x0E05      	MOVLW       5
0x34DC	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x34DE	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,893 :: 		M1isSlow=0;//speed up
0x34E2	0x6A24      	CLRF        _M1isSlow 
;FirmV_0_7_0.c,894 :: 		temp=ms500+OverloadDelay+delay;
0x34E4	0x0E02      	MOVLW       2
0x34E6	0x241C      	ADDWF       _ms500, 0 
0x34E8	0x6E00      	MOVWF       R0 
0x34EA	0x0E00      	MOVLW       0
0x34EC	0x201D      	ADDWFC      _ms500+1, 0 
0x34EE	0x6E01      	MOVWF       R1 
0x34F0	0x0E00      	MOVLW       0
0x34F2	0x201E      	ADDWFC      _ms500+2, 0 
0x34F4	0x6E02      	MOVWF       R2 
0x34F6	0x0E00      	MOVLW       0
0x34F8	0x201F      	ADDWFC      _ms500+3, 0 
0x34FA	0x6E03      	MOVWF       R3 
0x34FC	0x0101      	MOVLB       1
0x34FE	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3500	0x2600      	ADDWF       R0, 1 
0x3502	0x0E00      	MOVLW       0
0x3504	0x2201      	ADDWFC      R1, 1 
0x3506	0x2202      	ADDWFC      R2, 1 
0x3508	0x2203      	ADDWFC      R3, 1 
0x350A	0xF06DC000  	MOVFF       R0, _temp
0x350E	0xF06EC001  	MOVFF       R1, _temp+1
0x3512	0xF06FC002  	MOVFF       R2, _temp+2
0x3516	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,895 :: 		AddTask(temp,10); //overload check
0x351A	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x351E	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3522	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3526	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x352A	0x0E0A      	MOVLW       10
0x352C	0x0102      	MOVLB       2
0x352E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3530	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,896 :: 		temp=ms500+Door1OpenTime+delay;
0x3534	0x0101      	MOVLB       1
0x3536	0x5117      	MOVF        _Door1OpenTime, 0, 1
0x3538	0x241C      	ADDWF       _ms500, 0 
0x353A	0x6E00      	MOVWF       R0 
0x353C	0x0E00      	MOVLW       0
0x353E	0x201D      	ADDWFC      _ms500+1, 0 
0x3540	0x6E01      	MOVWF       R1 
0x3542	0x0E00      	MOVLW       0
0x3544	0x201E      	ADDWFC      _ms500+2, 0 
0x3546	0x6E02      	MOVWF       R2 
0x3548	0x0E00      	MOVLW       0
0x354A	0x201F      	ADDWFC      _ms500+3, 0 
0x354C	0x6E03      	MOVWF       R3 
0x354E	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3550	0x2600      	ADDWF       R0, 1 
0x3552	0x0E00      	MOVLW       0
0x3554	0x2201      	ADDWFC      R1, 1 
0x3556	0x2202      	ADDWFC      R2, 1 
0x3558	0x2203      	ADDWFC      R3, 1 
0x355A	0xF06DC000  	MOVFF       R0, _temp
0x355E	0xF06EC001  	MOVFF       R1, _temp+1
0x3562	0xF06FC002  	MOVFF       R2, _temp+2
0x3566	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,897 :: 		AddTask(temp,3);//Stop motor
0x356A	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x356E	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x3572	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3576	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x357A	0x0E03      	MOVLW       3
0x357C	0x0102      	MOVLB       2
0x357E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3580	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,898 :: 		if(Door2OpenTime!=0)
0x3584	0x0101      	MOVLB       1
0x3586	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x3588	0x0A00      	XORLW       0
0x358A	0xE06E      	BZ          L_State6171
;FirmV_0_7_0.c,900 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x358C	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x358E	0x241C      	ADDWF       _ms500, 0 
0x3590	0x0102      	MOVLB       2
0x3592	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x3594	0x0E00      	MOVLW       0
0x3596	0x201D      	ADDWFC      _ms500+1, 0 
0x3598	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x359A	0x0E00      	MOVLW       0
0x359C	0x201E      	ADDWFC      _ms500+2, 0 
0x359E	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x35A0	0x0E00      	MOVLW       0
0x35A2	0x201F      	ADDWFC      _ms500+3, 0 
0x35A4	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x35A6	0x0101      	MOVLB       1
0x35A8	0x5180      	MOVF        State6_delay_L0, 0, 1
0x35AA	0x0102      	MOVLB       2
0x35AC	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x35AE	0x0E00      	MOVLW       0
0x35B0	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x35B2	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x35B4	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x35B6	0x0E02      	MOVLW       2
0x35B8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x35BA	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,901 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x35BE	0x0101      	MOVLB       1
0x35C0	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x35C2	0x241C      	ADDWF       _ms500, 0 
0x35C4	0x0102      	MOVLB       2
0x35C6	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x35C8	0x0E00      	MOVLW       0
0x35CA	0x201D      	ADDWFC      _ms500+1, 0 
0x35CC	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x35CE	0x0E00      	MOVLW       0
0x35D0	0x201E      	ADDWFC      _ms500+2, 0 
0x35D2	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x35D4	0x0E00      	MOVLW       0
0x35D6	0x201F      	ADDWFC      _ms500+3, 0 
0x35D8	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x35DA	0x0101      	MOVLB       1
0x35DC	0x5180      	MOVF        State6_delay_L0, 0, 1
0x35DE	0x0102      	MOVLB       2
0x35E0	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x35E2	0x0E00      	MOVLW       0
0x35E4	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x35E6	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x35E8	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x35EA	0x0E06      	MOVLW       6
0x35EC	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x35EE	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,902 :: 		M2isSlow=0;//speed up
0x35F2	0x6A2B      	CLRF        _M2isSlow 
;FirmV_0_7_0.c,903 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x35F4	0x0101      	MOVLB       1
0x35F6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x35F8	0x241C      	ADDWF       _ms500, 0 
0x35FA	0x0102      	MOVLB       2
0x35FC	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x35FE	0x0E00      	MOVLW       0
0x3600	0x201D      	ADDWFC      _ms500+1, 0 
0x3602	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3604	0x0E00      	MOVLW       0
0x3606	0x201E      	ADDWFC      _ms500+2, 0 
0x3608	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x360A	0x0E00      	MOVLW       0
0x360C	0x201F      	ADDWFC      _ms500+3, 0 
0x360E	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3610	0x0E02      	MOVLW       2
0x3612	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3614	0x0E00      	MOVLW       0
0x3616	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3618	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x361A	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x361C	0x0101      	MOVLB       1
0x361E	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3620	0x0102      	MOVLB       2
0x3622	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3624	0x0E00      	MOVLW       0
0x3626	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3628	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x362A	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x362C	0x0E0B      	MOVLW       11
0x362E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3630	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,904 :: 		AddTask(ms500+Door2OpenTime+delay,4);//Stop motor
0x3634	0x0101      	MOVLB       1
0x3636	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x3638	0x241C      	ADDWF       _ms500, 0 
0x363A	0x0102      	MOVLB       2
0x363C	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x363E	0x0E00      	MOVLW       0
0x3640	0x201D      	ADDWFC      _ms500+1, 0 
0x3642	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3644	0x0E00      	MOVLW       0
0x3646	0x201E      	ADDWFC      _ms500+2, 0 
0x3648	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x364A	0x0E00      	MOVLW       0
0x364C	0x201F      	ADDWFC      _ms500+3, 0 
0x364E	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3650	0x0101      	MOVLB       1
0x3652	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3654	0x0102      	MOVLB       2
0x3656	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3658	0x0E00      	MOVLW       0
0x365A	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x365C	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x365E	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x3660	0x0E04      	MOVLW       4
0x3662	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3664	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,905 :: 		}
L_State6171:
;FirmV_0_7_0.c,906 :: 		OpenDone=3;
0x3668	0x0E03      	MOVLW       3
0x366A	0x6E2C      	MOVWF       _OpenDone 
;FirmV_0_7_0.c,907 :: 		OverloadCheckFlag1=0;
0x366C	0x6A26      	CLRF        _OverloadCheckFlag1 
;FirmV_0_7_0.c,908 :: 		OverloadCheckFlag2=0;
0x366E	0x6A25      	CLRF        _OverloadCheckFlag2 
;FirmV_0_7_0.c,909 :: 		PassFlag=0;
0x3670	0x6A2A      	CLRF        _PassFlag 
;FirmV_0_7_0.c,910 :: 		State=8;
0x3672	0x0E08      	MOVLW       8
0x3674	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,911 :: 		}
L_State6170:
0x3676	0x0102      	MOVLB       2
;FirmV_0_7_0.c,914 :: 		if(CheckTask(9)==1)
0x3678	0x0E09      	MOVLW       9
0x367A	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x367C	0xF005ECBE  	CALL        _CheckTask, 0
0x3680	0x5000      	MOVF        R0, 0 
0x3682	0x0A01      	XORLW       1
0x3684	0xA4D8      	BTFSS       STATUS, 2 
0x3686	0xD0FD      	BRA         L_State6172
;FirmV_0_7_0.c,916 :: 		ClearTasks(9);
0x3688	0x0E09      	MOVLW       9
0x368A	0x0102      	MOVLB       2
0x368C	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x368E	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,917 :: 		temp=ms500+delay;
0x3692	0x0101      	MOVLB       1
0x3694	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3696	0x241C      	ADDWF       _ms500, 0 
0x3698	0x6E00      	MOVWF       R0 
0x369A	0x0E00      	MOVLW       0
0x369C	0x201D      	ADDWFC      _ms500+1, 0 
0x369E	0x6E01      	MOVWF       R1 
0x36A0	0x0E00      	MOVLW       0
0x36A2	0x201E      	ADDWFC      _ms500+2, 0 
0x36A4	0x6E02      	MOVWF       R2 
0x36A6	0x0E00      	MOVLW       0
0x36A8	0x201F      	ADDWFC      _ms500+3, 0 
0x36AA	0x6E03      	MOVWF       R3 
0x36AC	0xF06DC000  	MOVFF       R0, _temp
0x36B0	0xF06EC001  	MOVFF       R1, _temp+1
0x36B4	0xF06FC002  	MOVFF       R2, _temp+2
0x36B8	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,918 :: 		AddTask(temp,1);
0x36BC	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x36C0	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x36C4	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x36C8	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x36CC	0x0E01      	MOVLW       1
0x36CE	0x0102      	MOVLB       2
0x36D0	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x36D2	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,919 :: 		AddTask(temp,5);
0x36D6	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x36DA	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x36DE	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x36E2	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x36E6	0x0E05      	MOVLW       5
0x36E8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x36EA	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,920 :: 		M1isSlow=0;//speed up
0x36EE	0x6A24      	CLRF        _M1isSlow 
;FirmV_0_7_0.c,921 :: 		temp=ms500+OverloadDelay+delay;
0x36F0	0x0E02      	MOVLW       2
0x36F2	0x241C      	ADDWF       _ms500, 0 
0x36F4	0x6E00      	MOVWF       R0 
0x36F6	0x0E00      	MOVLW       0
0x36F8	0x201D      	ADDWFC      _ms500+1, 0 
0x36FA	0x6E01      	MOVWF       R1 
0x36FC	0x0E00      	MOVLW       0
0x36FE	0x201E      	ADDWFC      _ms500+2, 0 
0x3700	0x6E02      	MOVWF       R2 
0x3702	0x0E00      	MOVLW       0
0x3704	0x201F      	ADDWFC      _ms500+3, 0 
0x3706	0x6E03      	MOVWF       R3 
0x3708	0x0101      	MOVLB       1
0x370A	0x5180      	MOVF        State6_delay_L0, 0, 1
0x370C	0x2600      	ADDWF       R0, 1 
0x370E	0x0E00      	MOVLW       0
0x3710	0x2201      	ADDWFC      R1, 1 
0x3712	0x2202      	ADDWFC      R2, 1 
0x3714	0x2203      	ADDWFC      R3, 1 
0x3716	0xF06DC000  	MOVFF       R0, _temp
0x371A	0xF06EC001  	MOVFF       R1, _temp+1
0x371E	0xF06FC002  	MOVFF       R2, _temp+2
0x3722	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,922 :: 		AddTask(temp,10); //overload check
0x3726	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x372A	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x372E	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3732	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3736	0x0E0A      	MOVLW       10
0x3738	0x0102      	MOVLB       2
0x373A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x373C	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,923 :: 		temp=ms500+Door1CloseTime+delay;
0x3740	0x0101      	MOVLB       1
0x3742	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x3744	0x241C      	ADDWF       _ms500, 0 
0x3746	0x6E00      	MOVWF       R0 
0x3748	0x0E00      	MOVLW       0
0x374A	0x201D      	ADDWFC      _ms500+1, 0 
0x374C	0x6E01      	MOVWF       R1 
0x374E	0x0E00      	MOVLW       0
0x3750	0x201E      	ADDWFC      _ms500+2, 0 
0x3752	0x6E02      	MOVWF       R2 
0x3754	0x0E00      	MOVLW       0
0x3756	0x201F      	ADDWFC      _ms500+3, 0 
0x3758	0x6E03      	MOVWF       R3 
0x375A	0x5180      	MOVF        State6_delay_L0, 0, 1
0x375C	0x2600      	ADDWF       R0, 1 
0x375E	0x0E00      	MOVLW       0
0x3760	0x2201      	ADDWFC      R1, 1 
0x3762	0x2202      	ADDWFC      R2, 1 
0x3764	0x2203      	ADDWFC      R3, 1 
0x3766	0xF06DC000  	MOVFF       R0, _temp
0x376A	0xF06EC001  	MOVFF       R1, _temp+1
0x376E	0xF06FC002  	MOVFF       R2, _temp+2
0x3772	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,924 :: 		AddTask(temp,3);//Stop motor
0x3776	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x377A	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x377E	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x3782	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3786	0x0E03      	MOVLW       3
0x3788	0x0102      	MOVLB       2
0x378A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x378C	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,926 :: 		if(Door2CloseTime!=0)
0x3790	0x0101      	MOVLB       1
0x3792	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x3794	0x0A00      	XORLW       0
0x3796	0xE06E      	BZ          L_State6173
;FirmV_0_7_0.c,928 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x3798	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x379A	0x241C      	ADDWF       _ms500, 0 
0x379C	0x0102      	MOVLB       2
0x379E	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x37A0	0x0E00      	MOVLW       0
0x37A2	0x201D      	ADDWFC      _ms500+1, 0 
0x37A4	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x37A6	0x0E00      	MOVLW       0
0x37A8	0x201E      	ADDWFC      _ms500+2, 0 
0x37AA	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x37AC	0x0E00      	MOVLW       0
0x37AE	0x201F      	ADDWFC      _ms500+3, 0 
0x37B0	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x37B2	0x0101      	MOVLB       1
0x37B4	0x5180      	MOVF        State6_delay_L0, 0, 1
0x37B6	0x0102      	MOVLB       2
0x37B8	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x37BA	0x0E00      	MOVLW       0
0x37BC	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x37BE	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x37C0	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x37C2	0x0E02      	MOVLW       2
0x37C4	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x37C6	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,929 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x37CA	0x0101      	MOVLB       1
0x37CC	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x37CE	0x241C      	ADDWF       _ms500, 0 
0x37D0	0x0102      	MOVLB       2
0x37D2	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x37D4	0x0E00      	MOVLW       0
0x37D6	0x201D      	ADDWFC      _ms500+1, 0 
0x37D8	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x37DA	0x0E00      	MOVLW       0
0x37DC	0x201E      	ADDWFC      _ms500+2, 0 
0x37DE	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x37E0	0x0E00      	MOVLW       0
0x37E2	0x201F      	ADDWFC      _ms500+3, 0 
0x37E4	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x37E6	0x0101      	MOVLB       1
0x37E8	0x5180      	MOVF        State6_delay_L0, 0, 1
0x37EA	0x0102      	MOVLB       2
0x37EC	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x37EE	0x0E00      	MOVLW       0
0x37F0	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x37F2	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x37F4	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x37F6	0x0E06      	MOVLW       6
0x37F8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x37FA	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,930 :: 		M2isSlow=0;//speed up
0x37FE	0x6A2B      	CLRF        _M2isSlow 
;FirmV_0_7_0.c,931 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x3800	0x0101      	MOVLB       1
0x3802	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x3804	0x241C      	ADDWF       _ms500, 0 
0x3806	0x0102      	MOVLB       2
0x3808	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x380A	0x0E00      	MOVLW       0
0x380C	0x201D      	ADDWFC      _ms500+1, 0 
0x380E	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3810	0x0E00      	MOVLW       0
0x3812	0x201E      	ADDWFC      _ms500+2, 0 
0x3814	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3816	0x0E00      	MOVLW       0
0x3818	0x201F      	ADDWFC      _ms500+3, 0 
0x381A	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x381C	0x0E02      	MOVLW       2
0x381E	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3820	0x0E00      	MOVLW       0
0x3822	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3824	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x3826	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x3828	0x0101      	MOVLB       1
0x382A	0x5180      	MOVF        State6_delay_L0, 0, 1
0x382C	0x0102      	MOVLB       2
0x382E	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3830	0x0E00      	MOVLW       0
0x3832	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3834	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x3836	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x3838	0x0E0B      	MOVLW       11
0x383A	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x383C	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,932 :: 		AddTask(ms500+Door1CloseTime+delay,4);//Stop motor
0x3840	0x0101      	MOVLB       1
0x3842	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x3844	0x241C      	ADDWF       _ms500, 0 
0x3846	0x0102      	MOVLB       2
0x3848	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x384A	0x0E00      	MOVLW       0
0x384C	0x201D      	ADDWFC      _ms500+1, 0 
0x384E	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3850	0x0E00      	MOVLW       0
0x3852	0x201E      	ADDWFC      _ms500+2, 0 
0x3854	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3856	0x0E00      	MOVLW       0
0x3858	0x201F      	ADDWFC      _ms500+3, 0 
0x385A	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x385C	0x0101      	MOVLB       1
0x385E	0x5180      	MOVF        State6_delay_L0, 0, 1
0x3860	0x0102      	MOVLB       2
0x3862	0x277E      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x3864	0x0E00      	MOVLW       0
0x3866	0x237F      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3868	0x2380      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x386A	0x2381      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x386C	0x0E04      	MOVLW       4
0x386E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3870	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,933 :: 		}
L_State6173:
;FirmV_0_7_0.c,934 :: 		CloseDone=3;
0x3874	0x0E03      	MOVLW       3
0x3876	0x6E1B      	MOVWF       _CloseDone 
;FirmV_0_7_0.c,935 :: 		OverloadCheckFlag1=0;
0x3878	0x6A26      	CLRF        _OverloadCheckFlag1 
;FirmV_0_7_0.c,936 :: 		OverloadCheckFlag2=0;
0x387A	0x6A25      	CLRF        _OverloadCheckFlag2 
;FirmV_0_7_0.c,937 :: 		PassFlag=0;
0x387C	0x6A2A      	CLRF        _PassFlag 
;FirmV_0_7_0.c,938 :: 		State=7;
0x387E	0x0E07      	MOVLW       7
0x3880	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,939 :: 		}
L_State6172:
;FirmV_0_7_0.c,941 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x3882	0x0101      	MOVLB       1
0x3884	0xA103      	BTFSS       _Events+6, 0, 1
0x3886	0xD025      	BRA         L_State6176
0x3888	0x0E00      	MOVLW       0
0x388A	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x388C	0xE102      	BNZ         L__State6612
0x388E	0x0E00      	MOVLW       0
0x3890	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State6612:
0x3892	0xE01F      	BZ          L_State6176
0x3894	0x502A      	MOVF        _PassFlag, 0 
0x3896	0x0A00      	XORLW       0
0x3898	0xE11C      	BNZ         L_State6176
L__State6540:
;FirmV_0_7_0.c,942 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S6 Auto Close Deleted");}
0x389A	0x0E01      	MOVLW       1
0x389C	0x6E2A      	MOVWF       _PassFlag 
0x389E	0xF00BEC6F  	CALL        _GetAutocloseTime, 0
0x38A2	0xF01AC000  	MOVFF       R0, __AC
0x38A6	0x0E03      	MOVLW       ?ICS?lstr42_FirmV_0_7_0
0x38A8	0x6EF6      	MOVWF       4086 
0x38AA	0x0E5D      	MOVLW       hi_addr(?ICS?lstr42_FirmV_0_7_0)
0x38AC	0x6EF7      	MOVWF       TBLPTRH 
0x38AE	0x0E00      	MOVLW       higher_addr(?ICS?lstr42_FirmV_0_7_0)
0x38B0	0x6EF8      	MOVWF       TBLPTRU 
0x38B2	0x0E4A      	MOVLW       ?lstr42_FirmV_0_7_0
0x38B4	0x6EE1      	MOVWF       FSR1L 
0x38B6	0x0E01      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x38B8	0x6EE2      	MOVWF       FSR1H 
0x38BA	0x0E16      	MOVLW       22
0x38BC	0x6E00      	MOVWF       R0 
0x38BE	0x0E01      	MOVLW       1
0x38C0	0x6E01      	MOVWF       R1 
0x38C2	0xF005EC75  	CALL        ___CC2DW, 0
0x38C6	0x0E4A      	MOVLW       ?lstr42_FirmV_0_7_0
0x38C8	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x38CA	0x0E01      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x38CC	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x38CE	0xF00AECC5  	CALL        _Logger, 0
L_State6176:
;FirmV_0_7_0.c,944 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x38D2	0x502A      	MOVF        _PassFlag, 0 
0x38D4	0x0A01      	XORLW       1
0x38D6	0xE158      	BNZ         L_State6179
0x38D8	0x0101      	MOVLB       1
0x38DA	0xB103      	BTFSC       _Events+6, 0, 1
0x38DC	0xD055      	BRA         L_State6179
0x38DE	0x0E00      	MOVLW       0
0x38E0	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x38E2	0xE102      	BNZ         L__State6613
0x38E4	0x0E00      	MOVLW       0
0x38E6	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State6613:
0x38E8	0xE04F      	BZ          L_State6179
L__State6539:
;FirmV_0_7_0.c,946 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:");Logger(t);}
0x38EA	0x501A      	MOVF        __AC, 0 
0x38EC	0x241C      	ADDWF       _ms500, 0 
0x38EE	0x6E00      	MOVWF       R0 
0x38F0	0x0E00      	MOVLW       0
0x38F2	0x201D      	ADDWFC      _ms500+1, 0 
0x38F4	0x6E01      	MOVWF       R1 
0x38F6	0x0E00      	MOVLW       0
0x38F8	0x201E      	ADDWFC      _ms500+2, 0 
0x38FA	0x6E02      	MOVWF       R2 
0x38FC	0x0E00      	MOVLW       0
0x38FE	0x201F      	ADDWFC      _ms500+3, 0 
0x3900	0x6E03      	MOVWF       R3 
0x3902	0xF06DC000  	MOVFF       R0, _temp
0x3906	0xF06EC001  	MOVFF       R1, _temp+1
0x390A	0xF06FC002  	MOVFF       R2, _temp+2
0x390E	0xF070C003  	MOVFF       R3, _temp+3
0x3912	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x3916	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x391A	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x391E	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x3922	0x0E09      	MOVLW       9
0x3924	0x0102      	MOVLB       2
0x3926	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3928	0xF00AECF7  	CALL        _AddTask, 0
0x392C	0x6A2A      	CLRF        _PassFlag 
0x392E	0xF427C06D  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x3932	0xF428C06E  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x3936	0xF429C06F  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x393A	0xF42AC070  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x393E	0x0E62      	MOVLW       _t
0x3940	0x0104      	MOVLB       4
0x3942	0x6F2B      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x3944	0x0E00      	MOVLW       hi_addr(_t)
0x3946	0x6F2C      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x3948	0xF003ECE0  	CALL        _LongWordToStrWithZeros, 0
0x394C	0x0E19      	MOVLW       ?ICS?lstr43_FirmV_0_7_0
0x394E	0x6EF6      	MOVWF       4086 
0x3950	0x0E5D      	MOVLW       hi_addr(?ICS?lstr43_FirmV_0_7_0)
0x3952	0x6EF7      	MOVWF       TBLPTRH 
0x3954	0x0E00      	MOVLW       higher_addr(?ICS?lstr43_FirmV_0_7_0)
0x3956	0x6EF8      	MOVWF       TBLPTRU 
0x3958	0x0E60      	MOVLW       ?lstr43_FirmV_0_7_0
0x395A	0x6EE1      	MOVWF       FSR1L 
0x395C	0x0E01      	MOVLW       hi_addr(?lstr43_FirmV_0_7_0)
0x395E	0x6EE2      	MOVWF       FSR1H 
0x3960	0x0E10      	MOVLW       16
0x3962	0x6E00      	MOVWF       R0 
0x3964	0x0E01      	MOVLW       1
0x3966	0x6E01      	MOVWF       R1 
0x3968	0xF005EC75  	CALL        ___CC2DW, 0
0x396C	0x0E60      	MOVLW       ?lstr43_FirmV_0_7_0
0x396E	0x0102      	MOVLB       2
0x3970	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3972	0x0E01      	MOVLW       hi_addr(?lstr43_FirmV_0_7_0)
0x3974	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3976	0xF00AECC5  	CALL        _Logger, 0
0x397A	0x0E62      	MOVLW       _t
0x397C	0x0102      	MOVLB       2
0x397E	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3980	0x0E00      	MOVLW       hi_addr(_t)
0x3982	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3984	0xF00AECC5  	CALL        _Logger, 0
;FirmV_0_7_0.c,948 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:");Logger(t);}
L_State6181:
;FirmV_0_7_0.c,949 :: 		}
L_State6179:
;FirmV_0_7_0.c,951 :: 		}
0x3988	0x0012      	RETURN      0
; end of _State6
_State3:
;FirmV_0_7_0.c,643 :: 		void State3()
;FirmV_0_7_0.c,645 :: 		Flasher=1;
0x398A	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,647 :: 		if(CheckTask(1))
0x398C	0x0E01      	MOVLW       1
0x398E	0x0102      	MOVLB       2
0x3990	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3992	0xF005ECBE  	CALL        _CheckTask, 0
0x3996	0x5200      	MOVF        R0, 1 
0x3998	0xE02D      	BZ          L_State397
;FirmV_0_7_0.c,648 :: 		{StartMotor(1,_Open);Logger("S3 Motor1Start"); Lock=0;}
0x399A	0x0E01      	MOVLW       1
0x399C	0x0102      	MOVLB       2
0x399E	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x39A0	0x0E01      	MOVLW       1
0x39A2	0x6F7F      	MOVWF       FARG_StartMotor_Dir, 1
0x39A4	0xF006EC52  	CALL        _StartMotor, 0
0x39A8	0x0E53      	MOVLW       83
0x39AA	0x0101      	MOVLB       1
0x39AC	0x6F4A      	MOVWF       ?lstr6_FirmV_0_7_0, 1
0x39AE	0x0E33      	MOVLW       51
0x39B0	0x6F4B      	MOVWF       ?lstr6_FirmV_0_7_0+1, 1
0x39B2	0x0E20      	MOVLW       32
0x39B4	0x6F4C      	MOVWF       ?lstr6_FirmV_0_7_0+2, 1
0x39B6	0x0E4D      	MOVLW       77
0x39B8	0x6F4D      	MOVWF       ?lstr6_FirmV_0_7_0+3, 1
0x39BA	0x0E6F      	MOVLW       111
0x39BC	0x6F4E      	MOVWF       ?lstr6_FirmV_0_7_0+4, 1
0x39BE	0x0E74      	MOVLW       116
0x39C0	0x6F4F      	MOVWF       ?lstr6_FirmV_0_7_0+5, 1
0x39C2	0x0E6F      	MOVLW       111
0x39C4	0x6F50      	MOVWF       ?lstr6_FirmV_0_7_0+6, 1
0x39C6	0x0E72      	MOVLW       114
0x39C8	0x6F51      	MOVWF       ?lstr6_FirmV_0_7_0+7, 1
0x39CA	0x0E31      	MOVLW       49
0x39CC	0x6F52      	MOVWF       ?lstr6_FirmV_0_7_0+8, 1
0x39CE	0x0E53      	MOVLW       83
0x39D0	0x6F53      	MOVWF       ?lstr6_FirmV_0_7_0+9, 1
0x39D2	0x0E74      	MOVLW       116
0x39D4	0x6F54      	MOVWF       ?lstr6_FirmV_0_7_0+10, 1
0x39D6	0x0E61      	MOVLW       97
0x39D8	0x6F55      	MOVWF       ?lstr6_FirmV_0_7_0+11, 1
0x39DA	0x0E72      	MOVLW       114
0x39DC	0x6F56      	MOVWF       ?lstr6_FirmV_0_7_0+12, 1
0x39DE	0x0E74      	MOVLW       116
0x39E0	0x6F57      	MOVWF       ?lstr6_FirmV_0_7_0+13, 1
0x39E2	0x6B58      	CLRF        ?lstr6_FirmV_0_7_0+14, 1
0x39E4	0x0E4A      	MOVLW       ?lstr6_FirmV_0_7_0
0x39E6	0x0102      	MOVLB       2
0x39E8	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x39EA	0x0E01      	MOVLW       hi_addr(?lstr6_FirmV_0_7_0)
0x39EC	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x39EE	0xF00AECC5  	CALL        _Logger, 0
0x39F2	0x9E83      	BCF         PORTD, 7 
L_State397:
;FirmV_0_7_0.c,650 :: 		if(CheckTask(2))
0x39F4	0x0E02      	MOVLW       2
0x39F6	0x0102      	MOVLB       2
0x39F8	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x39FA	0xF005ECBE  	CALL        _CheckTask, 0
0x39FE	0x5200      	MOVF        R0, 1 
0x3A00	0xE02D      	BZ          L_State398
;FirmV_0_7_0.c,651 :: 		{StartMotor(2,_Open);Logger("S3 Motor2Start"); Lock=0;}
0x3A02	0x0E02      	MOVLW       2
0x3A04	0x0102      	MOVLB       2
0x3A06	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x3A08	0x0E01      	MOVLW       1
0x3A0A	0x6F7F      	MOVWF       FARG_StartMotor_Dir, 1
0x3A0C	0xF006EC52  	CALL        _StartMotor, 0
0x3A10	0x0E53      	MOVLW       83
0x3A12	0x0101      	MOVLB       1
0x3A14	0x6F59      	MOVWF       ?lstr7_FirmV_0_7_0, 1
0x3A16	0x0E33      	MOVLW       51
0x3A18	0x6F5A      	MOVWF       ?lstr7_FirmV_0_7_0+1, 1
0x3A1A	0x0E20      	MOVLW       32
0x3A1C	0x6F5B      	MOVWF       ?lstr7_FirmV_0_7_0+2, 1
0x3A1E	0x0E4D      	MOVLW       77
0x3A20	0x6F5C      	MOVWF       ?lstr7_FirmV_0_7_0+3, 1
0x3A22	0x0E6F      	MOVLW       111
0x3A24	0x6F5D      	MOVWF       ?lstr7_FirmV_0_7_0+4, 1
0x3A26	0x0E74      	MOVLW       116
0x3A28	0x6F5E      	MOVWF       ?lstr7_FirmV_0_7_0+5, 1
0x3A2A	0x0E6F      	MOVLW       111
0x3A2C	0x6F5F      	MOVWF       ?lstr7_FirmV_0_7_0+6, 1
0x3A2E	0x0E72      	MOVLW       114
0x3A30	0x6F60      	MOVWF       ?lstr7_FirmV_0_7_0+7, 1
0x3A32	0x0E32      	MOVLW       50
0x3A34	0x6F61      	MOVWF       ?lstr7_FirmV_0_7_0+8, 1
0x3A36	0x0E53      	MOVLW       83
0x3A38	0x6F62      	MOVWF       ?lstr7_FirmV_0_7_0+9, 1
0x3A3A	0x0E74      	MOVLW       116
0x3A3C	0x6F63      	MOVWF       ?lstr7_FirmV_0_7_0+10, 1
0x3A3E	0x0E61      	MOVLW       97
0x3A40	0x6F64      	MOVWF       ?lstr7_FirmV_0_7_0+11, 1
0x3A42	0x0E72      	MOVLW       114
0x3A44	0x6F65      	MOVWF       ?lstr7_FirmV_0_7_0+12, 1
0x3A46	0x0E74      	MOVLW       116
0x3A48	0x6F66      	MOVWF       ?lstr7_FirmV_0_7_0+13, 1
0x3A4A	0x6B67      	CLRF        ?lstr7_FirmV_0_7_0+14, 1
0x3A4C	0x0E59      	MOVLW       ?lstr7_FirmV_0_7_0
0x3A4E	0x0102      	MOVLB       2
0x3A50	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3A52	0x0E01      	MOVLW       hi_addr(?lstr7_FirmV_0_7_0)
0x3A54	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3A56	0xF00AECC5  	CALL        _Logger, 0
0x3A5A	0x9E83      	BCF         PORTD, 7 
L_State398:
;FirmV_0_7_0.c,653 :: 		if(CheckTask(5))
0x3A5C	0x0E05      	MOVLW       5
0x3A5E	0x0102      	MOVLB       2
0x3A60	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3A62	0xF005ECBE  	CALL        _CheckTask, 0
0x3A66	0x5200      	MOVF        R0, 1 
0x3A68	0xE02E      	BZ          L_State399
;FirmV_0_7_0.c,654 :: 		{SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;Logger("S3 Motor1 Fast");}
0x3A6A	0x0E01      	MOVLW       1
0x3A6C	0x0102      	MOVLB       2
0x3A6E	0x6F7E      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x3A70	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x3A74	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x3A78	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3A7A	0x6A24      	CLRF        _M1isSlow 
0x3A7C	0x0E53      	MOVLW       83
0x3A7E	0x0101      	MOVLB       1
0x3A80	0x6F68      	MOVWF       ?lstr8_FirmV_0_7_0, 1
0x3A82	0x0E33      	MOVLW       51
0x3A84	0x6F69      	MOVWF       ?lstr8_FirmV_0_7_0+1, 1
0x3A86	0x0E20      	MOVLW       32
0x3A88	0x6F6A      	MOVWF       ?lstr8_FirmV_0_7_0+2, 1
0x3A8A	0x0E4D      	MOVLW       77
0x3A8C	0x6F6B      	MOVWF       ?lstr8_FirmV_0_7_0+3, 1
0x3A8E	0x0E6F      	MOVLW       111
0x3A90	0x6F6C      	MOVWF       ?lstr8_FirmV_0_7_0+4, 1
0x3A92	0x0E74      	MOVLW       116
0x3A94	0x6F6D      	MOVWF       ?lstr8_FirmV_0_7_0+5, 1
0x3A96	0x0E6F      	MOVLW       111
0x3A98	0x6F6E      	MOVWF       ?lstr8_FirmV_0_7_0+6, 1
0x3A9A	0x0E72      	MOVLW       114
0x3A9C	0x6F6F      	MOVWF       ?lstr8_FirmV_0_7_0+7, 1
0x3A9E	0x0E31      	MOVLW       49
0x3AA0	0x6F70      	MOVWF       ?lstr8_FirmV_0_7_0+8, 1
0x3AA2	0x0E20      	MOVLW       32
0x3AA4	0x6F71      	MOVWF       ?lstr8_FirmV_0_7_0+9, 1
0x3AA6	0x0E46      	MOVLW       70
0x3AA8	0x6F72      	MOVWF       ?lstr8_FirmV_0_7_0+10, 1
0x3AAA	0x0E61      	MOVLW       97
0x3AAC	0x6F73      	MOVWF       ?lstr8_FirmV_0_7_0+11, 1
0x3AAE	0x0E73      	MOVLW       115
0x3AB0	0x6F74      	MOVWF       ?lstr8_FirmV_0_7_0+12, 1
0x3AB2	0x0E74      	MOVLW       116
0x3AB4	0x6F75      	MOVWF       ?lstr8_FirmV_0_7_0+13, 1
0x3AB6	0x6B76      	CLRF        ?lstr8_FirmV_0_7_0+14, 1
0x3AB8	0x0E68      	MOVLW       ?lstr8_FirmV_0_7_0
0x3ABA	0x0102      	MOVLB       2
0x3ABC	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3ABE	0x0E01      	MOVLW       hi_addr(?lstr8_FirmV_0_7_0)
0x3AC0	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3AC2	0xF00AECC5  	CALL        _Logger, 0
L_State399:
;FirmV_0_7_0.c,656 :: 		if(CheckTask(7))
0x3AC6	0x0E07      	MOVLW       7
0x3AC8	0x0102      	MOVLB       2
0x3ACA	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3ACC	0xF005ECBE  	CALL        _CheckTask, 0
0x3AD0	0x5200      	MOVF        R0, 1 
0x3AD2	0xE02D      	BZ          L_State3100
;FirmV_0_7_0.c,657 :: 		{SetMotorSpeed(0,Motor2FullSpeed); M1isSlow=1;Logger("S3 Motor1 Slow");}
0x3AD4	0x0102      	MOVLB       2
0x3AD6	0x6B7E      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x3AD8	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x3ADC	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x3AE0	0x0E01      	MOVLW       1
0x3AE2	0x6E24      	MOVWF       _M1isSlow 
0x3AE4	0x0E53      	MOVLW       83
0x3AE6	0x0101      	MOVLB       1
0x3AE8	0x6F77      	MOVWF       ?lstr9_FirmV_0_7_0, 1
0x3AEA	0x0E33      	MOVLW       51
0x3AEC	0x6F78      	MOVWF       ?lstr9_FirmV_0_7_0+1, 1
0x3AEE	0x0E20      	MOVLW       32
0x3AF0	0x6F79      	MOVWF       ?lstr9_FirmV_0_7_0+2, 1
0x3AF2	0x0E4D      	MOVLW       77
0x3AF4	0x6F7A      	MOVWF       ?lstr9_FirmV_0_7_0+3, 1
0x3AF6	0x0E6F      	MOVLW       111
0x3AF8	0x6F7B      	MOVWF       ?lstr9_FirmV_0_7_0+4, 1
0x3AFA	0x0E74      	MOVLW       116
0x3AFC	0x6F7C      	MOVWF       ?lstr9_FirmV_0_7_0+5, 1
0x3AFE	0x0E6F      	MOVLW       111
0x3B00	0x6F7D      	MOVWF       ?lstr9_FirmV_0_7_0+6, 1
0x3B02	0x0E72      	MOVLW       114
0x3B04	0x6F7E      	MOVWF       ?lstr9_FirmV_0_7_0+7, 1
0x3B06	0x0E31      	MOVLW       49
0x3B08	0x6F7F      	MOVWF       ?lstr9_FirmV_0_7_0+8, 1
0x3B0A	0x0E20      	MOVLW       32
0x3B0C	0x6F80      	MOVWF       ?lstr9_FirmV_0_7_0+9, 1
0x3B0E	0x0E53      	MOVLW       83
0x3B10	0x6F81      	MOVWF       ?lstr9_FirmV_0_7_0+10, 1
0x3B12	0x0E6C      	MOVLW       108
0x3B14	0x6F82      	MOVWF       ?lstr9_FirmV_0_7_0+11, 1
0x3B16	0x0E6F      	MOVLW       111
0x3B18	0x6F83      	MOVWF       ?lstr9_FirmV_0_7_0+12, 1
0x3B1A	0x0E77      	MOVLW       119
0x3B1C	0x6F84      	MOVWF       ?lstr9_FirmV_0_7_0+13, 1
0x3B1E	0x6B85      	CLRF        ?lstr9_FirmV_0_7_0+14, 1
0x3B20	0x0E77      	MOVLW       ?lstr9_FirmV_0_7_0
0x3B22	0x0102      	MOVLB       2
0x3B24	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3B26	0x0E01      	MOVLW       hi_addr(?lstr9_FirmV_0_7_0)
0x3B28	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3B2A	0xF00AECC5  	CALL        _Logger, 0
L_State3100:
;FirmV_0_7_0.c,659 :: 		if(CheckTask(6))
0x3B2E	0x0E06      	MOVLW       6
0x3B30	0x0102      	MOVLB       2
0x3B32	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3B34	0xF005ECBE  	CALL        _CheckTask, 0
0x3B38	0x5200      	MOVF        R0, 1 
0x3B3A	0xE02E      	BZ          L_State3101
;FirmV_0_7_0.c,660 :: 		{SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;Logger("S3 Motor2 Fast");}
0x3B3C	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x3B40	0x0E01      	MOVLW       1
0x3B42	0x0102      	MOVLB       2
0x3B44	0x6F7F      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x3B46	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x3B4A	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3B4C	0x6A2B      	CLRF        _M2isSlow 
0x3B4E	0x0E53      	MOVLW       83
0x3B50	0x0101      	MOVLB       1
0x3B52	0x6F86      	MOVWF       ?lstr10_FirmV_0_7_0, 1
0x3B54	0x0E33      	MOVLW       51
0x3B56	0x6F87      	MOVWF       ?lstr10_FirmV_0_7_0+1, 1
0x3B58	0x0E20      	MOVLW       32
0x3B5A	0x6F88      	MOVWF       ?lstr10_FirmV_0_7_0+2, 1
0x3B5C	0x0E4D      	MOVLW       77
0x3B5E	0x6F89      	MOVWF       ?lstr10_FirmV_0_7_0+3, 1
0x3B60	0x0E6F      	MOVLW       111
0x3B62	0x6F8A      	MOVWF       ?lstr10_FirmV_0_7_0+4, 1
0x3B64	0x0E74      	MOVLW       116
0x3B66	0x6F8B      	MOVWF       ?lstr10_FirmV_0_7_0+5, 1
0x3B68	0x0E6F      	MOVLW       111
0x3B6A	0x6F8C      	MOVWF       ?lstr10_FirmV_0_7_0+6, 1
0x3B6C	0x0E72      	MOVLW       114
0x3B6E	0x6F8D      	MOVWF       ?lstr10_FirmV_0_7_0+7, 1
0x3B70	0x0E32      	MOVLW       50
0x3B72	0x6F8E      	MOVWF       ?lstr10_FirmV_0_7_0+8, 1
0x3B74	0x0E20      	MOVLW       32
0x3B76	0x6F8F      	MOVWF       ?lstr10_FirmV_0_7_0+9, 1
0x3B78	0x0E46      	MOVLW       70
0x3B7A	0x6F90      	MOVWF       ?lstr10_FirmV_0_7_0+10, 1
0x3B7C	0x0E61      	MOVLW       97
0x3B7E	0x6F91      	MOVWF       ?lstr10_FirmV_0_7_0+11, 1
0x3B80	0x0E73      	MOVLW       115
0x3B82	0x6F92      	MOVWF       ?lstr10_FirmV_0_7_0+12, 1
0x3B84	0x0E74      	MOVLW       116
0x3B86	0x6F93      	MOVWF       ?lstr10_FirmV_0_7_0+13, 1
0x3B88	0x6B94      	CLRF        ?lstr10_FirmV_0_7_0+14, 1
0x3B8A	0x0E86      	MOVLW       ?lstr10_FirmV_0_7_0
0x3B8C	0x0102      	MOVLB       2
0x3B8E	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3B90	0x0E01      	MOVLW       hi_addr(?lstr10_FirmV_0_7_0)
0x3B92	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3B94	0xF00AECC5  	CALL        _Logger, 0
L_State3101:
;FirmV_0_7_0.c,662 :: 		if(CheckTask(8))
0x3B98	0x0E08      	MOVLW       8
0x3B9A	0x0102      	MOVLB       2
0x3B9C	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3B9E	0xF005ECBE  	CALL        _CheckTask, 0
0x3BA2	0x5200      	MOVF        R0, 1 
0x3BA4	0xE02D      	BZ          L_State3102
;FirmV_0_7_0.c,663 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S3 Motor2 Slow");}
0x3BA6	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x3BAA	0x0102      	MOVLB       2
0x3BAC	0x6B7F      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x3BAE	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x3BB2	0x0E01      	MOVLW       1
0x3BB4	0x6E2B      	MOVWF       _M2isSlow 
0x3BB6	0x0E53      	MOVLW       83
0x3BB8	0x0101      	MOVLB       1
0x3BBA	0x6F95      	MOVWF       ?lstr11_FirmV_0_7_0, 1
0x3BBC	0x0E33      	MOVLW       51
0x3BBE	0x6F96      	MOVWF       ?lstr11_FirmV_0_7_0+1, 1
0x3BC0	0x0E20      	MOVLW       32
0x3BC2	0x6F97      	MOVWF       ?lstr11_FirmV_0_7_0+2, 1
0x3BC4	0x0E4D      	MOVLW       77
0x3BC6	0x6F98      	MOVWF       ?lstr11_FirmV_0_7_0+3, 1
0x3BC8	0x0E6F      	MOVLW       111
0x3BCA	0x6F99      	MOVWF       ?lstr11_FirmV_0_7_0+4, 1
0x3BCC	0x0E74      	MOVLW       116
0x3BCE	0x6F9A      	MOVWF       ?lstr11_FirmV_0_7_0+5, 1
0x3BD0	0x0E6F      	MOVLW       111
0x3BD2	0x6F9B      	MOVWF       ?lstr11_FirmV_0_7_0+6, 1
0x3BD4	0x0E72      	MOVLW       114
0x3BD6	0x6F9C      	MOVWF       ?lstr11_FirmV_0_7_0+7, 1
0x3BD8	0x0E32      	MOVLW       50
0x3BDA	0x6F9D      	MOVWF       ?lstr11_FirmV_0_7_0+8, 1
0x3BDC	0x0E20      	MOVLW       32
0x3BDE	0x6F9E      	MOVWF       ?lstr11_FirmV_0_7_0+9, 1
0x3BE0	0x0E53      	MOVLW       83
0x3BE2	0x6F9F      	MOVWF       ?lstr11_FirmV_0_7_0+10, 1
0x3BE4	0x0E6C      	MOVLW       108
0x3BE6	0x6FA0      	MOVWF       ?lstr11_FirmV_0_7_0+11, 1
0x3BE8	0x0E6F      	MOVLW       111
0x3BEA	0x6FA1      	MOVWF       ?lstr11_FirmV_0_7_0+12, 1
0x3BEC	0x0E77      	MOVLW       119
0x3BEE	0x6FA2      	MOVWF       ?lstr11_FirmV_0_7_0+13, 1
0x3BF0	0x6BA3      	CLRF        ?lstr11_FirmV_0_7_0+14, 1
0x3BF2	0x0E95      	MOVLW       ?lstr11_FirmV_0_7_0
0x3BF4	0x0102      	MOVLB       2
0x3BF6	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3BF8	0x0E01      	MOVLW       hi_addr(?lstr11_FirmV_0_7_0)
0x3BFA	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3BFC	0xF00AECC5  	CALL        _Logger, 0
L_State3102:
;FirmV_0_7_0.c,665 :: 		if(CheckTask(10))
0x3C00	0x0E0A      	MOVLW       10
0x3C02	0x0102      	MOVLB       2
0x3C04	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C06	0xF005ECBE  	CALL        _CheckTask, 0
0x3C0A	0x5200      	MOVF        R0, 1 
0x3C0C	0xE01E      	BZ          L_State3103
;FirmV_0_7_0.c,666 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S3 Overflow Flag1 Set");}
0x3C0E	0x0E01      	MOVLW       1
0x3C10	0x6E26      	MOVWF       _OverloadCheckFlag1 
0x3C12	0x0E01      	MOVLW       1
0x3C14	0x0102      	MOVLB       2
0x3C16	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x3C18	0xF005ECDE  	CALL        _OverloadInit, 0
0x3C1C	0x0E8B      	MOVLW       ?ICS?lstr12_FirmV_0_7_0
0x3C1E	0x6EF6      	MOVWF       4086 
0x3C20	0x0E58      	MOVLW       hi_addr(?ICS?lstr12_FirmV_0_7_0)
0x3C22	0x6EF7      	MOVWF       TBLPTRH 
0x3C24	0x0E00      	MOVLW       higher_addr(?ICS?lstr12_FirmV_0_7_0)
0x3C26	0x6EF8      	MOVWF       TBLPTRU 
0x3C28	0x0EA4      	MOVLW       ?lstr12_FirmV_0_7_0
0x3C2A	0x6EE1      	MOVWF       FSR1L 
0x3C2C	0x0E01      	MOVLW       hi_addr(?lstr12_FirmV_0_7_0)
0x3C2E	0x6EE2      	MOVWF       FSR1H 
0x3C30	0x0E16      	MOVLW       22
0x3C32	0x6E00      	MOVWF       R0 
0x3C34	0x0E01      	MOVLW       1
0x3C36	0x6E01      	MOVWF       R1 
0x3C38	0xF005EC75  	CALL        ___CC2DW, 0
0x3C3C	0x0EA4      	MOVLW       ?lstr12_FirmV_0_7_0
0x3C3E	0x0102      	MOVLB       2
0x3C40	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3C42	0x0E01      	MOVLW       hi_addr(?lstr12_FirmV_0_7_0)
0x3C44	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3C46	0xF00AECC5  	CALL        _Logger, 0
L_State3103:
;FirmV_0_7_0.c,668 :: 		if(CheckTask(11))
0x3C4A	0x0E0B      	MOVLW       11
0x3C4C	0x0102      	MOVLB       2
0x3C4E	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C50	0xF005ECBE  	CALL        _CheckTask, 0
0x3C54	0x5200      	MOVF        R0, 1 
0x3C56	0xE01E      	BZ          L_State3104
;FirmV_0_7_0.c,669 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S3 Overflow Flag2 Set");}
0x3C58	0x0E01      	MOVLW       1
0x3C5A	0x6E25      	MOVWF       _OverloadCheckFlag2 
0x3C5C	0x0E02      	MOVLW       2
0x3C5E	0x0102      	MOVLB       2
0x3C60	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x3C62	0xF005ECDE  	CALL        _OverloadInit, 0
0x3C66	0x0EA1      	MOVLW       ?ICS?lstr13_FirmV_0_7_0
0x3C68	0x6EF6      	MOVWF       4086 
0x3C6A	0x0E58      	MOVLW       hi_addr(?ICS?lstr13_FirmV_0_7_0)
0x3C6C	0x6EF7      	MOVWF       TBLPTRH 
0x3C6E	0x0E00      	MOVLW       higher_addr(?ICS?lstr13_FirmV_0_7_0)
0x3C70	0x6EF8      	MOVWF       TBLPTRU 
0x3C72	0x0EBA      	MOVLW       ?lstr13_FirmV_0_7_0
0x3C74	0x6EE1      	MOVWF       FSR1L 
0x3C76	0x0E01      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x3C78	0x6EE2      	MOVWF       FSR1H 
0x3C7A	0x0E16      	MOVLW       22
0x3C7C	0x6E00      	MOVWF       R0 
0x3C7E	0x0E01      	MOVLW       1
0x3C80	0x6E01      	MOVWF       R1 
0x3C82	0xF005EC75  	CALL        ___CC2DW, 0
0x3C86	0x0EBA      	MOVLW       ?lstr13_FirmV_0_7_0
0x3C88	0x0102      	MOVLB       2
0x3C8A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3C8C	0x0E01      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x3C8E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3C90	0xF00AECC5  	CALL        _Logger, 0
L_State3104:
;FirmV_0_7_0.c,671 :: 		if(CheckTask(3))
0x3C94	0x0E03      	MOVLW       3
0x3C96	0x0102      	MOVLB       2
0x3C98	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C9A	0xF005ECBE  	CALL        _CheckTask, 0
0x3C9E	0x5200      	MOVF        R0, 1 
0x3CA0	0xE02B      	BZ          L_State3105
;FirmV_0_7_0.c,672 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S3 Motor1 Stop");}
0x3CA2	0x902C      	BCF         _OpenDone, 0 
0x3CA4	0x0E01      	MOVLW       1
0x3CA6	0x0102      	MOVLB       2
0x3CA8	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3CAA	0xF00AECB9  	CALL        _StopMotor, 0
0x3CAE	0x0E53      	MOVLW       83
0x3CB0	0x0101      	MOVLB       1
0x3CB2	0x6FD0      	MOVWF       ?lstr14_FirmV_0_7_0, 1
0x3CB4	0x0E33      	MOVLW       51
0x3CB6	0x6FD1      	MOVWF       ?lstr14_FirmV_0_7_0+1, 1
0x3CB8	0x0E20      	MOVLW       32
0x3CBA	0x6FD2      	MOVWF       ?lstr14_FirmV_0_7_0+2, 1
0x3CBC	0x0E4D      	MOVLW       77
0x3CBE	0x6FD3      	MOVWF       ?lstr14_FirmV_0_7_0+3, 1
0x3CC0	0x0E6F      	MOVLW       111
0x3CC2	0x6FD4      	MOVWF       ?lstr14_FirmV_0_7_0+4, 1
0x3CC4	0x0E74      	MOVLW       116
0x3CC6	0x6FD5      	MOVWF       ?lstr14_FirmV_0_7_0+5, 1
0x3CC8	0x0E6F      	MOVLW       111
0x3CCA	0x6FD6      	MOVWF       ?lstr14_FirmV_0_7_0+6, 1
0x3CCC	0x0E72      	MOVLW       114
0x3CCE	0x6FD7      	MOVWF       ?lstr14_FirmV_0_7_0+7, 1
0x3CD0	0x0E31      	MOVLW       49
0x3CD2	0x6FD8      	MOVWF       ?lstr14_FirmV_0_7_0+8, 1
0x3CD4	0x0E20      	MOVLW       32
0x3CD6	0x6FD9      	MOVWF       ?lstr14_FirmV_0_7_0+9, 1
0x3CD8	0x0E53      	MOVLW       83
0x3CDA	0x6FDA      	MOVWF       ?lstr14_FirmV_0_7_0+10, 1
0x3CDC	0x0E74      	MOVLW       116
0x3CDE	0x6FDB      	MOVWF       ?lstr14_FirmV_0_7_0+11, 1
0x3CE0	0x0E6F      	MOVLW       111
0x3CE2	0x6FDC      	MOVWF       ?lstr14_FirmV_0_7_0+12, 1
0x3CE4	0x0E70      	MOVLW       112
0x3CE6	0x6FDD      	MOVWF       ?lstr14_FirmV_0_7_0+13, 1
0x3CE8	0x6BDE      	CLRF        ?lstr14_FirmV_0_7_0+14, 1
0x3CEA	0x0ED0      	MOVLW       ?lstr14_FirmV_0_7_0
0x3CEC	0x0102      	MOVLB       2
0x3CEE	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3CF0	0x0E01      	MOVLW       hi_addr(?lstr14_FirmV_0_7_0)
0x3CF2	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3CF4	0xF00AECC5  	CALL        _Logger, 0
L_State3105:
;FirmV_0_7_0.c,674 :: 		if(CheckTask(4))
0x3CF8	0x0E04      	MOVLW       4
0x3CFA	0x0102      	MOVLB       2
0x3CFC	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3CFE	0xF005ECBE  	CALL        _CheckTask, 0
0x3D02	0x5200      	MOVF        R0, 1 
0x3D04	0xE02B      	BZ          L_State3106
;FirmV_0_7_0.c,675 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S3 Motor2 Stop");}
0x3D06	0x922C      	BCF         _OpenDone, 1 
0x3D08	0x0E02      	MOVLW       2
0x3D0A	0x0102      	MOVLB       2
0x3D0C	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3D0E	0xF00AECB9  	CALL        _StopMotor, 0
0x3D12	0x0E53      	MOVLW       83
0x3D14	0x0101      	MOVLB       1
0x3D16	0x6FDF      	MOVWF       ?lstr15_FirmV_0_7_0, 1
0x3D18	0x0E33      	MOVLW       51
0x3D1A	0x6FE0      	MOVWF       ?lstr15_FirmV_0_7_0+1, 1
0x3D1C	0x0E20      	MOVLW       32
0x3D1E	0x6FE1      	MOVWF       ?lstr15_FirmV_0_7_0+2, 1
0x3D20	0x0E4D      	MOVLW       77
0x3D22	0x6FE2      	MOVWF       ?lstr15_FirmV_0_7_0+3, 1
0x3D24	0x0E6F      	MOVLW       111
0x3D26	0x6FE3      	MOVWF       ?lstr15_FirmV_0_7_0+4, 1
0x3D28	0x0E74      	MOVLW       116
0x3D2A	0x6FE4      	MOVWF       ?lstr15_FirmV_0_7_0+5, 1
0x3D2C	0x0E6F      	MOVLW       111
0x3D2E	0x6FE5      	MOVWF       ?lstr15_FirmV_0_7_0+6, 1
0x3D30	0x0E72      	MOVLW       114
0x3D32	0x6FE6      	MOVWF       ?lstr15_FirmV_0_7_0+7, 1
0x3D34	0x0E32      	MOVLW       50
0x3D36	0x6FE7      	MOVWF       ?lstr15_FirmV_0_7_0+8, 1
0x3D38	0x0E20      	MOVLW       32
0x3D3A	0x6FE8      	MOVWF       ?lstr15_FirmV_0_7_0+9, 1
0x3D3C	0x0E53      	MOVLW       83
0x3D3E	0x6FE9      	MOVWF       ?lstr15_FirmV_0_7_0+10, 1
0x3D40	0x0E74      	MOVLW       116
0x3D42	0x6FEA      	MOVWF       ?lstr15_FirmV_0_7_0+11, 1
0x3D44	0x0E6F      	MOVLW       111
0x3D46	0x6FEB      	MOVWF       ?lstr15_FirmV_0_7_0+12, 1
0x3D48	0x0E70      	MOVLW       112
0x3D4A	0x6FEC      	MOVWF       ?lstr15_FirmV_0_7_0+13, 1
0x3D4C	0x6BED      	CLRF        ?lstr15_FirmV_0_7_0+14, 1
0x3D4E	0x0EDF      	MOVLW       ?lstr15_FirmV_0_7_0
0x3D50	0x0102      	MOVLB       2
0x3D52	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3D54	0x0E01      	MOVLW       hi_addr(?lstr15_FirmV_0_7_0)
0x3D56	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3D58	0xF00AECC5  	CALL        _Logger, 0
L_State3106:
;FirmV_0_7_0.c,677 :: 		if(CheckTask(12))
0x3D5C	0x0E0C      	MOVLW       12
0x3D5E	0x0102      	MOVLB       2
0x3D60	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3D62	0xF005ECBE  	CALL        _CheckTask, 0
0x3D66	0x5200      	MOVF        R0, 1 
0x3D68	0xE001      	BZ          L_State3107
;FirmV_0_7_0.c,678 :: 		{Lock=1;}
0x3D6A	0x8E83      	BSF         PORTD, 7 
L_State3107:
;FirmV_0_7_0.c,680 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x3D6C	0x5026      	MOVF        _OverloadCheckFlag1, 0 
0x3D6E	0x0A01      	XORLW       1
0x3D70	0xE12E      	BNZ         L_State3110
0x3D72	0x0101      	MOVLB       1
0x3D74	0xA102      	BTFSS       _Events+5, 0, 1
0x3D76	0xD02B      	BRA         L_State3110
0x3D78	0x5024      	MOVF        _M1isSlow, 0 
0x3D7A	0x0A00      	XORLW       0
0x3D7C	0xE128      	BNZ         L_State3110
L__State3531:
;FirmV_0_7_0.c,681 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor1 Collision");ClearTasks(9);}
0x3D7E	0x0E01      	MOVLW       1
0x3D80	0x0102      	MOVLB       2
0x3D82	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3D84	0xF00AECB9  	CALL        _StopMotor, 0
0x3D88	0x0E02      	MOVLW       2
0x3D8A	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3D8C	0xF00AECB9  	CALL        _StopMotor, 0
0x3D90	0x0E05      	MOVLW       5
0x3D92	0x6E29      	MOVWF       _State 
0x3D94	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3D96	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3D98	0x0ED5      	MOVLW       ?ICS?lstr16_FirmV_0_7_0
0x3D9A	0x6EF6      	MOVWF       4086 
0x3D9C	0x0E58      	MOVLW       hi_addr(?ICS?lstr16_FirmV_0_7_0)
0x3D9E	0x6EF7      	MOVWF       TBLPTRH 
0x3DA0	0x0E00      	MOVLW       higher_addr(?ICS?lstr16_FirmV_0_7_0)
0x3DA2	0x6EF8      	MOVWF       TBLPTRU 
0x3DA4	0x0EEE      	MOVLW       ?lstr16_FirmV_0_7_0
0x3DA6	0x6EE1      	MOVWF       FSR1L 
0x3DA8	0x0E01      	MOVLW       hi_addr(?lstr16_FirmV_0_7_0)
0x3DAA	0x6EE2      	MOVWF       FSR1H 
0x3DAC	0x0E14      	MOVLW       20
0x3DAE	0x6E00      	MOVWF       R0 
0x3DB0	0x0E01      	MOVLW       1
0x3DB2	0x6E01      	MOVWF       R1 
0x3DB4	0xF005EC75  	CALL        ___CC2DW, 0
0x3DB8	0x0EEE      	MOVLW       ?lstr16_FirmV_0_7_0
0x3DBA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3DBC	0x0E01      	MOVLW       hi_addr(?lstr16_FirmV_0_7_0)
0x3DBE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3DC0	0xF00AECC5  	CALL        _Logger, 0
0x3DC4	0x0E09      	MOVLW       9
0x3DC6	0x0102      	MOVLB       2
0x3DC8	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3DCA	0xF005ECED  	CALL        _ClearTasks, 0
L_State3110:
;FirmV_0_7_0.c,683 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x3DCE	0x5025      	MOVF        _OverloadCheckFlag2, 0 
0x3DD0	0x0A01      	XORLW       1
0x3DD2	0xE12E      	BNZ         L_State3113
0x3DD4	0x0101      	MOVLB       1
0x3DD6	0xA302      	BTFSS       _Events+5, 1, 1
0x3DD8	0xD02B      	BRA         L_State3113
0x3DDA	0x502B      	MOVF        _M2isSlow, 0 
0x3DDC	0x0A00      	XORLW       0
0x3DDE	0xE128      	BNZ         L_State3113
L__State3530:
;FirmV_0_7_0.c,684 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor2 Collision");ClearTasks(9);}
0x3DE0	0x0E01      	MOVLW       1
0x3DE2	0x0102      	MOVLB       2
0x3DE4	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3DE6	0xF00AECB9  	CALL        _StopMotor, 0
0x3DEA	0x0E02      	MOVLW       2
0x3DEC	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3DEE	0xF00AECB9  	CALL        _StopMotor, 0
0x3DF2	0x0E05      	MOVLW       5
0x3DF4	0x6E29      	MOVWF       _State 
0x3DF6	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3DF8	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3DFA	0x0EE9      	MOVLW       ?ICS?lstr17_FirmV_0_7_0
0x3DFC	0x6EF6      	MOVWF       4086 
0x3DFE	0x0E58      	MOVLW       hi_addr(?ICS?lstr17_FirmV_0_7_0)
0x3E00	0x6EF7      	MOVWF       TBLPTRH 
0x3E02	0x0E00      	MOVLW       higher_addr(?ICS?lstr17_FirmV_0_7_0)
0x3E04	0x6EF8      	MOVWF       TBLPTRU 
0x3E06	0x0E02      	MOVLW       ?lstr17_FirmV_0_7_0
0x3E08	0x6EE1      	MOVWF       FSR1L 
0x3E0A	0x0E02      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x3E0C	0x6EE2      	MOVWF       FSR1H 
0x3E0E	0x0E14      	MOVLW       20
0x3E10	0x6E00      	MOVWF       R0 
0x3E12	0x0E01      	MOVLW       1
0x3E14	0x6E01      	MOVWF       R1 
0x3E16	0xF005EC75  	CALL        ___CC2DW, 0
0x3E1A	0x0E02      	MOVLW       ?lstr17_FirmV_0_7_0
0x3E1C	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3E1E	0x0E02      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x3E20	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3E22	0xF00AECC5  	CALL        _Logger, 0
0x3E26	0x0E09      	MOVLW       9
0x3E28	0x0102      	MOVLB       2
0x3E2A	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3E2C	0xF005ECED  	CALL        _ClearTasks, 0
L_State3113:
;FirmV_0_7_0.c,686 :: 		if(Door2OpenTime==0)
0x3E30	0x0101      	MOVLB       1
0x3E32	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x3E34	0x0A00      	XORLW       0
0x3E36	0xE101      	BNZ         L_State3114
;FirmV_0_7_0.c,687 :: 		OpenDone.b1=0;
0x3E38	0x922C      	BCF         _OpenDone, 1 
L_State3114:
;FirmV_0_7_0.c,689 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x3E3A	0xA103      	BTFSS       _Events+6, 0, 1
0x3E3C	0xD02A      	BRA         L_State3117
0x3E3E	0x532F      	MOVF        _OpenPhEnable, 1, 1
0x3E40	0xE028      	BZ          L_State3117
L__State3529:
;FirmV_0_7_0.c,690 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Photocell Int");ClearTasks(9);}
0x3E42	0x0E01      	MOVLW       1
0x3E44	0x0102      	MOVLB       2
0x3E46	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3E48	0xF00AECB9  	CALL        _StopMotor, 0
0x3E4C	0x0E02      	MOVLW       2
0x3E4E	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3E50	0xF00AECB9  	CALL        _StopMotor, 0
0x3E54	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3E56	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3E58	0x0E05      	MOVLW       5
0x3E5A	0x6E29      	MOVWF       _State 
0x3E5C	0x0EFD      	MOVLW       ?ICS?lstr18_FirmV_0_7_0
0x3E5E	0x6EF6      	MOVWF       4086 
0x3E60	0x0E58      	MOVLW       hi_addr(?ICS?lstr18_FirmV_0_7_0)
0x3E62	0x6EF7      	MOVWF       TBLPTRH 
0x3E64	0x0E00      	MOVLW       higher_addr(?ICS?lstr18_FirmV_0_7_0)
0x3E66	0x6EF8      	MOVWF       TBLPTRU 
0x3E68	0x0E16      	MOVLW       ?lstr18_FirmV_0_7_0
0x3E6A	0x6EE1      	MOVWF       FSR1L 
0x3E6C	0x0E02      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x3E6E	0x6EE2      	MOVWF       FSR1H 
0x3E70	0x0E11      	MOVLW       17
0x3E72	0x6E00      	MOVWF       R0 
0x3E74	0x0E01      	MOVLW       1
0x3E76	0x6E01      	MOVWF       R1 
0x3E78	0xF005EC75  	CALL        ___CC2DW, 0
0x3E7C	0x0E16      	MOVLW       ?lstr18_FirmV_0_7_0
0x3E7E	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3E80	0x0E02      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x3E82	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3E84	0xF00AECC5  	CALL        _Logger, 0
0x3E88	0x0E09      	MOVLW       9
0x3E8A	0x0102      	MOVLB       2
0x3E8C	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3E8E	0xF005ECED  	CALL        _ClearTasks, 0
L_State3117:
;FirmV_0_7_0.c,692 :: 		if(Events.Remote.b0==1)
0x3E92	0x0101      	MOVLB       1
0x3E94	0xA101      	BTFSS       _Events+4, 0, 1
0x3E96	0xD028      	BRA         L_State3118
;FirmV_0_7_0.c,693 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Remote Stoped");ClearTasks(9);}
0x3E98	0x0E01      	MOVLW       1
0x3E9A	0x0102      	MOVLB       2
0x3E9C	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3E9E	0xF00AECB9  	CALL        _StopMotor, 0
0x3EA2	0x0E02      	MOVLW       2
0x3EA4	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3EA6	0xF00AECB9  	CALL        _StopMotor, 0
0x3EAA	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3EAC	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3EAE	0x0E05      	MOVLW       5
0x3EB0	0x6E29      	MOVWF       _State 
0x3EB2	0x0E0E      	MOVLW       ?ICS?lstr19_FirmV_0_7_0
0x3EB4	0x6EF6      	MOVWF       4086 
0x3EB6	0x0E59      	MOVLW       hi_addr(?ICS?lstr19_FirmV_0_7_0)
0x3EB8	0x6EF7      	MOVWF       TBLPTRH 
0x3EBA	0x0E00      	MOVLW       higher_addr(?ICS?lstr19_FirmV_0_7_0)
0x3EBC	0x6EF8      	MOVWF       TBLPTRU 
0x3EBE	0x0E27      	MOVLW       ?lstr19_FirmV_0_7_0
0x3EC0	0x6EE1      	MOVWF       FSR1L 
0x3EC2	0x0E02      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x3EC4	0x6EE2      	MOVWF       FSR1H 
0x3EC6	0x0E11      	MOVLW       17
0x3EC8	0x6E00      	MOVWF       R0 
0x3ECA	0x0E01      	MOVLW       1
0x3ECC	0x6E01      	MOVWF       R1 
0x3ECE	0xF005EC75  	CALL        ___CC2DW, 0
0x3ED2	0x0E27      	MOVLW       ?lstr19_FirmV_0_7_0
0x3ED4	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3ED6	0x0E02      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x3ED8	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3EDA	0xF00AECC5  	CALL        _Logger, 0
0x3EDE	0x0E09      	MOVLW       9
0x3EE0	0x0102      	MOVLB       2
0x3EE2	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3EE4	0xF005ECED  	CALL        _ClearTasks, 0
L_State3118:
;FirmV_0_7_0.c,695 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x3EE8	0x0101      	MOVLB       1
0x3EEA	0x5104      	MOVF        _Events+7, 0, 1
0x3EEC	0x0A01      	XORLW       1
0x3EEE	0xE12A      	BNZ         L_State3121
0x3EF0	0x5325      	MOVF        _LimiterEnable, 1, 1
0x3EF2	0xE028      	BZ          L_State3121
L__State3528:
;FirmV_0_7_0.c,696 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Limit Switch Stoped");ClearTasks(9);}
0x3EF4	0x0E01      	MOVLW       1
0x3EF6	0x0102      	MOVLB       2
0x3EF8	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3EFA	0xF00AECB9  	CALL        _StopMotor, 0
0x3EFE	0x0E02      	MOVLW       2
0x3F00	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3F02	0xF00AECB9  	CALL        _StopMotor, 0
0x3F06	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3F08	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3F0A	0x0E05      	MOVLW       5
0x3F0C	0x6E29      	MOVWF       _State 
0x3F0E	0x0E1F      	MOVLW       ?ICS?lstr20_FirmV_0_7_0
0x3F10	0x6EF6      	MOVWF       4086 
0x3F12	0x0E59      	MOVLW       hi_addr(?ICS?lstr20_FirmV_0_7_0)
0x3F14	0x6EF7      	MOVWF       TBLPTRH 
0x3F16	0x0E00      	MOVLW       higher_addr(?ICS?lstr20_FirmV_0_7_0)
0x3F18	0x6EF8      	MOVWF       TBLPTRU 
0x3F1A	0x0E38      	MOVLW       ?lstr20_FirmV_0_7_0
0x3F1C	0x6EE1      	MOVWF       FSR1L 
0x3F1E	0x0E02      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x3F20	0x6EE2      	MOVWF       FSR1H 
0x3F22	0x0E17      	MOVLW       23
0x3F24	0x6E00      	MOVWF       R0 
0x3F26	0x0E01      	MOVLW       1
0x3F28	0x6E01      	MOVWF       R1 
0x3F2A	0xF005EC75  	CALL        ___CC2DW, 0
0x3F2E	0x0E38      	MOVLW       ?lstr20_FirmV_0_7_0
0x3F30	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3F32	0x0E02      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x3F34	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3F36	0xF00AECC5  	CALL        _Logger, 0
0x3F3A	0x0E09      	MOVLW       9
0x3F3C	0x0102      	MOVLB       2
0x3F3E	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3F40	0xF005ECED  	CALL        _ClearTasks, 0
L_State3121:
;FirmV_0_7_0.c,698 :: 		if((Events.Remote.b0==1))
0x3F44	0x0101      	MOVLB       1
0x3F46	0xA101      	BTFSS       _Events+4, 0, 1
0x3F48	0xD028      	BRA         L_State3122
;FirmV_0_7_0.c,699 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S3 Motors Stoped (Remote)");ClearTasks(9);}
0x3F4A	0x0E01      	MOVLW       1
0x3F4C	0x0102      	MOVLB       2
0x3F4E	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3F50	0xF00AECB9  	CALL        _StopMotor, 0
0x3F54	0x0E02      	MOVLW       2
0x3F56	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x3F58	0xF00AECB9  	CALL        _StopMotor, 0
0x3F5C	0x0E05      	MOVLW       5
0x3F5E	0x6E29      	MOVWF       _State 
0x3F60	0x6A26      	CLRF        _OverloadCheckFlag1 
0x3F62	0x6A25      	CLRF        _OverloadCheckFlag2 
0x3F64	0x0E36      	MOVLW       ?ICS?lstr21_FirmV_0_7_0
0x3F66	0x6EF6      	MOVWF       4086 
0x3F68	0x0E59      	MOVLW       hi_addr(?ICS?lstr21_FirmV_0_7_0)
0x3F6A	0x6EF7      	MOVWF       TBLPTRH 
0x3F6C	0x0E00      	MOVLW       higher_addr(?ICS?lstr21_FirmV_0_7_0)
0x3F6E	0x6EF8      	MOVWF       TBLPTRU 
0x3F70	0x0E4F      	MOVLW       ?lstr21_FirmV_0_7_0
0x3F72	0x6EE1      	MOVWF       FSR1L 
0x3F74	0x0E02      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x3F76	0x6EE2      	MOVWF       FSR1H 
0x3F78	0x0E1A      	MOVLW       26
0x3F7A	0x6E00      	MOVWF       R0 
0x3F7C	0x0E01      	MOVLW       1
0x3F7E	0x6E01      	MOVWF       R1 
0x3F80	0xF005EC75  	CALL        ___CC2DW, 0
0x3F84	0x0E4F      	MOVLW       ?lstr21_FirmV_0_7_0
0x3F86	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x3F88	0x0E02      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x3F8A	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x3F8C	0xF00AECC5  	CALL        _Logger, 0
0x3F90	0x0E09      	MOVLW       9
0x3F92	0x0102      	MOVLB       2
0x3F94	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3F96	0xF005ECED  	CALL        _ClearTasks, 0
L_State3122:
;FirmV_0_7_0.c,701 :: 		if(OpenDone==0)
0x3F9A	0x502C      	MOVF        _OpenDone, 0 
0x3F9C	0x0A00      	XORLW       0
0x3F9E	0xE108      	BNZ         L_State3123
;FirmV_0_7_0.c,702 :: 		{State=2; PassFlag=0;ClearTasks(9);}
0x3FA0	0x0102      	MOVLB       2
0x3FA2	0x0E02      	MOVLW       2
0x3FA4	0x6E29      	MOVWF       _State 
0x3FA6	0x6A2A      	CLRF        _PassFlag 
0x3FA8	0x0E09      	MOVLW       9
0x3FAA	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x3FAC	0xF005ECED  	CALL        _ClearTasks, 0
L_State3123:
;FirmV_0_7_0.c,704 :: 		if((State==5)||(State==6))
0x3FB0	0x5029      	MOVF        _State, 0 
0x3FB2	0x0A05      	XORLW       5
0x3FB4	0xE004      	BZ          L__State3527
0x3FB6	0x5029      	MOVF        _State, 0 
0x3FB8	0x0A06      	XORLW       6
0x3FBA	0xE001      	BZ          L__State3527
0x3FBC	0xD034      	BRA         L_State3126
L__State3527:
0x3FBE	0x0102      	MOVLB       2
;FirmV_0_7_0.c,705 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S3 Autoclose Renewed");}}
0x3FC0	0x6B7E      	CLRF        FARG_ClearTasks_except, 1
0x3FC2	0xF005ECED  	CALL        _ClearTasks, 0
0x3FC6	0x0E00      	MOVLW       0
0x3FC8	0x0101      	MOVLB       1
0x3FCA	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x3FCC	0xE102      	BNZ         L__State3608
0x3FCE	0x0E00      	MOVLW       0
0x3FD0	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State3608:
0x3FD2	0xE029      	BZ          L_State3127
0x3FD4	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x3FD6	0x241C      	ADDWF       _ms500, 0 
0x3FD8	0x0102      	MOVLB       2
0x3FDA	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x3FDC	0x0101      	MOVLB       1
0x3FDE	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x3FE0	0x201D      	ADDWFC      _ms500+1, 0 
0x3FE2	0x0102      	MOVLB       2
0x3FE4	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3FE6	0x0E00      	MOVLW       0
0x3FE8	0x201E      	ADDWFC      _ms500+2, 0 
0x3FEA	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3FEC	0x0E00      	MOVLW       0
0x3FEE	0x201F      	ADDWFC      _ms500+3, 0 
0x3FF0	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3FF2	0x0E09      	MOVLW       9
0x3FF4	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x3FF6	0xF00AECF7  	CALL        _AddTask, 0
0x3FFA	0x0E50      	MOVLW       ?ICS?lstr22_FirmV_0_7_0
0x3FFC	0x6EF6      	MOVWF       4086 
0x3FFE	0x0E59      	MOVLW       hi_addr(?ICS?lstr22_FirmV_0_7_0)
0x4000	0x6EF7      	MOVWF       TBLPTRH 
0x4002	0x0E00      	MOVLW       higher_addr(?ICS?lstr22_FirmV_0_7_0)
0x4004	0x6EF8      	MOVWF       TBLPTRU 
0x4006	0x0E69      	MOVLW       ?lstr22_FirmV_0_7_0
0x4008	0x6EE1      	MOVWF       FSR1L 
0x400A	0x0E02      	MOVLW       hi_addr(?lstr22_FirmV_0_7_0)
0x400C	0x6EE2      	MOVWF       FSR1H 
0x400E	0x0E15      	MOVLW       21
0x4010	0x6E00      	MOVWF       R0 
0x4012	0x0E01      	MOVLW       1
0x4014	0x6E01      	MOVWF       R1 
0x4016	0xF005EC75  	CALL        ___CC2DW, 0
0x401A	0x0E69      	MOVLW       ?lstr22_FirmV_0_7_0
0x401C	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x401E	0x0E02      	MOVLW       hi_addr(?lstr22_FirmV_0_7_0)
0x4020	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4022	0xF00AECC5  	CALL        _Logger, 0
L_State3127:
L_State3126:
;FirmV_0_7_0.c,707 :: 		}
0x4026	0x0012      	RETURN      0
; end of _State3
_State4:
;FirmV_0_7_0.c,721 :: 		void State4()
;FirmV_0_7_0.c,723 :: 		Flasher=1;
0x4028	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,725 :: 		bytetostr(Events.Task1,LCDLine1);
0x402A	0xF433C0FE  	MOVFF       _Events+1, FARG_ByteToStr_input
0x402E	0x0E2D      	MOVLW       _LCDLine1
0x4030	0x0104      	MOVLB       4
0x4032	0x6F34      	MOVWF       FARG_ByteToStr_output, 1
0x4034	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4036	0x6F35      	MOVWF       FARG_ByteToStr_output+1, 1
0x4038	0xF000ECED  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,726 :: 		bytetostr(Events.Task2,LCDLine2);
0x403C	0xF433C0FF  	MOVFF       _Events+2, FARG_ByteToStr_input
0x4040	0x0E48      	MOVLW       _LCDLine2
0x4042	0x6F34      	MOVWF       FARG_ByteToStr_output, 1
0x4044	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4046	0x6F35      	MOVWF       FARG_ByteToStr_output+1, 1
0x4048	0xF000ECED  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,727 :: 		LCDUpdateFlag=1;
0x404C	0x0E01      	MOVLW       1
0x404E	0x6E59      	MOVWF       _LCDUpdateFlag 
;FirmV_0_7_0.c,729 :: 		if(CheckTask(1))
0x4050	0x0E01      	MOVLW       1
0x4052	0x0102      	MOVLB       2
0x4054	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4056	0xF005ECBE  	CALL        _CheckTask, 0
0x405A	0x5200      	MOVF        R0, 1 
0x405C	0xE02B      	BZ          L_State4128
;FirmV_0_7_0.c,730 :: 		{StartMotor(1,_Close);Logger("S4 Motor1Start");}
0x405E	0x0E01      	MOVLW       1
0x4060	0x0102      	MOVLB       2
0x4062	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x4064	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x4066	0xF006EC52  	CALL        _StartMotor, 0
0x406A	0x0E53      	MOVLW       83
0x406C	0x0101      	MOVLB       1
0x406E	0x6F4A      	MOVWF       ?lstr23_FirmV_0_7_0, 1
0x4070	0x0E34      	MOVLW       52
0x4072	0x6F4B      	MOVWF       ?lstr23_FirmV_0_7_0+1, 1
0x4074	0x0E20      	MOVLW       32
0x4076	0x6F4C      	MOVWF       ?lstr23_FirmV_0_7_0+2, 1
0x4078	0x0E4D      	MOVLW       77
0x407A	0x6F4D      	MOVWF       ?lstr23_FirmV_0_7_0+3, 1
0x407C	0x0E6F      	MOVLW       111
0x407E	0x6F4E      	MOVWF       ?lstr23_FirmV_0_7_0+4, 1
0x4080	0x0E74      	MOVLW       116
0x4082	0x6F4F      	MOVWF       ?lstr23_FirmV_0_7_0+5, 1
0x4084	0x0E6F      	MOVLW       111
0x4086	0x6F50      	MOVWF       ?lstr23_FirmV_0_7_0+6, 1
0x4088	0x0E72      	MOVLW       114
0x408A	0x6F51      	MOVWF       ?lstr23_FirmV_0_7_0+7, 1
0x408C	0x0E31      	MOVLW       49
0x408E	0x6F52      	MOVWF       ?lstr23_FirmV_0_7_0+8, 1
0x4090	0x0E53      	MOVLW       83
0x4092	0x6F53      	MOVWF       ?lstr23_FirmV_0_7_0+9, 1
0x4094	0x0E74      	MOVLW       116
0x4096	0x6F54      	MOVWF       ?lstr23_FirmV_0_7_0+10, 1
0x4098	0x0E61      	MOVLW       97
0x409A	0x6F55      	MOVWF       ?lstr23_FirmV_0_7_0+11, 1
0x409C	0x0E72      	MOVLW       114
0x409E	0x6F56      	MOVWF       ?lstr23_FirmV_0_7_0+12, 1
0x40A0	0x0E74      	MOVLW       116
0x40A2	0x6F57      	MOVWF       ?lstr23_FirmV_0_7_0+13, 1
0x40A4	0x6B58      	CLRF        ?lstr23_FirmV_0_7_0+14, 1
0x40A6	0x0E4A      	MOVLW       ?lstr23_FirmV_0_7_0
0x40A8	0x0102      	MOVLB       2
0x40AA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x40AC	0x0E01      	MOVLW       hi_addr(?lstr23_FirmV_0_7_0)
0x40AE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x40B0	0xF00AECC5  	CALL        _Logger, 0
L_State4128:
;FirmV_0_7_0.c,732 :: 		if(CheckTask(2))
0x40B4	0x0E02      	MOVLW       2
0x40B6	0x0102      	MOVLB       2
0x40B8	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x40BA	0xF005ECBE  	CALL        _CheckTask, 0
0x40BE	0x5200      	MOVF        R0, 1 
0x40C0	0xE02B      	BZ          L_State4129
;FirmV_0_7_0.c,733 :: 		{StartMotor(2,_Close);Logger("S4 Motor2Start");}
0x40C2	0x0E02      	MOVLW       2
0x40C4	0x0102      	MOVLB       2
0x40C6	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x40C8	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x40CA	0xF006EC52  	CALL        _StartMotor, 0
0x40CE	0x0E53      	MOVLW       83
0x40D0	0x0101      	MOVLB       1
0x40D2	0x6F59      	MOVWF       ?lstr24_FirmV_0_7_0, 1
0x40D4	0x0E34      	MOVLW       52
0x40D6	0x6F5A      	MOVWF       ?lstr24_FirmV_0_7_0+1, 1
0x40D8	0x0E20      	MOVLW       32
0x40DA	0x6F5B      	MOVWF       ?lstr24_FirmV_0_7_0+2, 1
0x40DC	0x0E4D      	MOVLW       77
0x40DE	0x6F5C      	MOVWF       ?lstr24_FirmV_0_7_0+3, 1
0x40E0	0x0E6F      	MOVLW       111
0x40E2	0x6F5D      	MOVWF       ?lstr24_FirmV_0_7_0+4, 1
0x40E4	0x0E74      	MOVLW       116
0x40E6	0x6F5E      	MOVWF       ?lstr24_FirmV_0_7_0+5, 1
0x40E8	0x0E6F      	MOVLW       111
0x40EA	0x6F5F      	MOVWF       ?lstr24_FirmV_0_7_0+6, 1
0x40EC	0x0E72      	MOVLW       114
0x40EE	0x6F60      	MOVWF       ?lstr24_FirmV_0_7_0+7, 1
0x40F0	0x0E32      	MOVLW       50
0x40F2	0x6F61      	MOVWF       ?lstr24_FirmV_0_7_0+8, 1
0x40F4	0x0E53      	MOVLW       83
0x40F6	0x6F62      	MOVWF       ?lstr24_FirmV_0_7_0+9, 1
0x40F8	0x0E74      	MOVLW       116
0x40FA	0x6F63      	MOVWF       ?lstr24_FirmV_0_7_0+10, 1
0x40FC	0x0E61      	MOVLW       97
0x40FE	0x6F64      	MOVWF       ?lstr24_FirmV_0_7_0+11, 1
0x4100	0x0E72      	MOVLW       114
0x4102	0x6F65      	MOVWF       ?lstr24_FirmV_0_7_0+12, 1
0x4104	0x0E74      	MOVLW       116
0x4106	0x6F66      	MOVWF       ?lstr24_FirmV_0_7_0+13, 1
0x4108	0x6B67      	CLRF        ?lstr24_FirmV_0_7_0+14, 1
0x410A	0x0E59      	MOVLW       ?lstr24_FirmV_0_7_0
0x410C	0x0102      	MOVLB       2
0x410E	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4110	0x0E01      	MOVLW       hi_addr(?lstr24_FirmV_0_7_0)
0x4112	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4114	0xF00AECC5  	CALL        _Logger, 0
L_State4129:
;FirmV_0_7_0.c,735 :: 		if(CheckTask(10))
0x4118	0x0E0A      	MOVLW       10
0x411A	0x0102      	MOVLB       2
0x411C	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x411E	0xF005ECBE  	CALL        _CheckTask, 0
0x4122	0x5200      	MOVF        R0, 1 
0x4124	0xE01E      	BZ          L_State4130
;FirmV_0_7_0.c,736 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S4 M1 Overload Check");}
0x4126	0x0E01      	MOVLW       1
0x4128	0x6E26      	MOVWF       _OverloadCheckFlag1 
0x412A	0x0E01      	MOVLW       1
0x412C	0x0102      	MOVLB       2
0x412E	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x4130	0xF005ECDE  	CALL        _OverloadInit, 0
0x4134	0x0E83      	MOVLW       ?ICS?lstr25_FirmV_0_7_0
0x4136	0x6EF6      	MOVWF       4086 
0x4138	0x0E59      	MOVLW       hi_addr(?ICS?lstr25_FirmV_0_7_0)
0x413A	0x6EF7      	MOVWF       TBLPTRH 
0x413C	0x0E00      	MOVLW       higher_addr(?ICS?lstr25_FirmV_0_7_0)
0x413E	0x6EF8      	MOVWF       TBLPTRU 
0x4140	0x0E68      	MOVLW       ?lstr25_FirmV_0_7_0
0x4142	0x6EE1      	MOVWF       FSR1L 
0x4144	0x0E01      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x4146	0x6EE2      	MOVWF       FSR1H 
0x4148	0x0E15      	MOVLW       21
0x414A	0x6E00      	MOVWF       R0 
0x414C	0x0E01      	MOVLW       1
0x414E	0x6E01      	MOVWF       R1 
0x4150	0xF005EC75  	CALL        ___CC2DW, 0
0x4154	0x0E68      	MOVLW       ?lstr25_FirmV_0_7_0
0x4156	0x0102      	MOVLB       2
0x4158	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x415A	0x0E01      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x415C	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x415E	0xF00AECC5  	CALL        _Logger, 0
L_State4130:
;FirmV_0_7_0.c,738 :: 		if(CheckTask(11))
0x4162	0x0E0B      	MOVLW       11
0x4164	0x0102      	MOVLB       2
0x4166	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4168	0xF005ECBE  	CALL        _CheckTask, 0
0x416C	0x5200      	MOVF        R0, 1 
0x416E	0xE01E      	BZ          L_State4131
;FirmV_0_7_0.c,739 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S4 M2 Overload Check");}
0x4170	0x0E01      	MOVLW       1
0x4172	0x6E25      	MOVWF       _OverloadCheckFlag2 
0x4174	0x0E02      	MOVLW       2
0x4176	0x0102      	MOVLB       2
0x4178	0x6F7E      	MOVWF       FARG_OverloadInit_ch, 1
0x417A	0xF005ECDE  	CALL        _OverloadInit, 0
0x417E	0x0E98      	MOVLW       ?ICS?lstr26_FirmV_0_7_0
0x4180	0x6EF6      	MOVWF       4086 
0x4182	0x0E59      	MOVLW       hi_addr(?ICS?lstr26_FirmV_0_7_0)
0x4184	0x6EF7      	MOVWF       TBLPTRH 
0x4186	0x0E00      	MOVLW       higher_addr(?ICS?lstr26_FirmV_0_7_0)
0x4188	0x6EF8      	MOVWF       TBLPTRU 
0x418A	0x0E7D      	MOVLW       ?lstr26_FirmV_0_7_0
0x418C	0x6EE1      	MOVWF       FSR1L 
0x418E	0x0E01      	MOVLW       hi_addr(?lstr26_FirmV_0_7_0)
0x4190	0x6EE2      	MOVWF       FSR1H 
0x4192	0x0E15      	MOVLW       21
0x4194	0x6E00      	MOVWF       R0 
0x4196	0x0E01      	MOVLW       1
0x4198	0x6E01      	MOVWF       R1 
0x419A	0xF005EC75  	CALL        ___CC2DW, 0
0x419E	0x0E7D      	MOVLW       ?lstr26_FirmV_0_7_0
0x41A0	0x0102      	MOVLB       2
0x41A2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x41A4	0x0E01      	MOVLW       hi_addr(?lstr26_FirmV_0_7_0)
0x41A6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x41A8	0xF00AECC5  	CALL        _Logger, 0
L_State4131:
;FirmV_0_7_0.c,741 :: 		if(CheckTask(5))
0x41AC	0x0E05      	MOVLW       5
0x41AE	0x0102      	MOVLB       2
0x41B0	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x41B2	0xF005ECBE  	CALL        _CheckTask, 0
0x41B6	0x5200      	MOVF        R0, 1 
0x41B8	0xE02E      	BZ          L_State4132
;FirmV_0_7_0.c,742 :: 		{SetMotorSpeed(1,Motor2FullSpeed); OverloadCheckFlag1=0; M1isSlow=0;Logger("S4 M1 Speed UP");}
0x41BA	0x0E01      	MOVLW       1
0x41BC	0x0102      	MOVLB       2
0x41BE	0x6F7E      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x41C0	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x41C4	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x41C8	0x6A26      	CLRF        _OverloadCheckFlag1 
0x41CA	0x6A24      	CLRF        _M1isSlow 
0x41CC	0x0E53      	MOVLW       83
0x41CE	0x0101      	MOVLB       1
0x41D0	0x6F92      	MOVWF       ?lstr27_FirmV_0_7_0, 1
0x41D2	0x0E34      	MOVLW       52
0x41D4	0x6F93      	MOVWF       ?lstr27_FirmV_0_7_0+1, 1
0x41D6	0x0E20      	MOVLW       32
0x41D8	0x6F94      	MOVWF       ?lstr27_FirmV_0_7_0+2, 1
0x41DA	0x0E4D      	MOVLW       77
0x41DC	0x6F95      	MOVWF       ?lstr27_FirmV_0_7_0+3, 1
0x41DE	0x0E31      	MOVLW       49
0x41E0	0x6F96      	MOVWF       ?lstr27_FirmV_0_7_0+4, 1
0x41E2	0x0E20      	MOVLW       32
0x41E4	0x6F97      	MOVWF       ?lstr27_FirmV_0_7_0+5, 1
0x41E6	0x0E53      	MOVLW       83
0x41E8	0x6F98      	MOVWF       ?lstr27_FirmV_0_7_0+6, 1
0x41EA	0x0E70      	MOVLW       112
0x41EC	0x6F99      	MOVWF       ?lstr27_FirmV_0_7_0+7, 1
0x41EE	0x0E65      	MOVLW       101
0x41F0	0x6F9A      	MOVWF       ?lstr27_FirmV_0_7_0+8, 1
0x41F2	0x0E65      	MOVLW       101
0x41F4	0x6F9B      	MOVWF       ?lstr27_FirmV_0_7_0+9, 1
0x41F6	0x0E64      	MOVLW       100
0x41F8	0x6F9C      	MOVWF       ?lstr27_FirmV_0_7_0+10, 1
0x41FA	0x0E20      	MOVLW       32
0x41FC	0x6F9D      	MOVWF       ?lstr27_FirmV_0_7_0+11, 1
0x41FE	0x0E55      	MOVLW       85
0x4200	0x6F9E      	MOVWF       ?lstr27_FirmV_0_7_0+12, 1
0x4202	0x0E50      	MOVLW       80
0x4204	0x6F9F      	MOVWF       ?lstr27_FirmV_0_7_0+13, 1
0x4206	0x6BA0      	CLRF        ?lstr27_FirmV_0_7_0+14, 1
0x4208	0x0E92      	MOVLW       ?lstr27_FirmV_0_7_0
0x420A	0x0102      	MOVLB       2
0x420C	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x420E	0x0E01      	MOVLW       hi_addr(?lstr27_FirmV_0_7_0)
0x4210	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4212	0xF00AECC5  	CALL        _Logger, 0
L_State4132:
;FirmV_0_7_0.c,744 :: 		if(CheckTask(7))
0x4216	0x0E07      	MOVLW       7
0x4218	0x0102      	MOVLB       2
0x421A	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x421C	0xF005ECBE  	CALL        _CheckTask, 0
0x4220	0x5200      	MOVF        R0, 1 
0x4222	0xE01F      	BZ          L_State4133
;FirmV_0_7_0.c,745 :: 		{SetMotorSpeed(0,Motor2FullSpeed); OverloadCheckFlag2=0; M1isSlow=1;Logger("S4 M1 Speed Down");}
0x4224	0x0102      	MOVLB       2
0x4226	0x6B7E      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x4228	0xF27FC05F  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x422C	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x4230	0x6A25      	CLRF        _OverloadCheckFlag2 
0x4232	0x0E01      	MOVLW       1
0x4234	0x6E24      	MOVWF       _M1isSlow 
0x4236	0x0EBC      	MOVLW       ?ICS?lstr28_FirmV_0_7_0
0x4238	0x6EF6      	MOVWF       4086 
0x423A	0x0E59      	MOVLW       hi_addr(?ICS?lstr28_FirmV_0_7_0)
0x423C	0x6EF7      	MOVWF       TBLPTRH 
0x423E	0x0E00      	MOVLW       higher_addr(?ICS?lstr28_FirmV_0_7_0)
0x4240	0x6EF8      	MOVWF       TBLPTRU 
0x4242	0x0EA1      	MOVLW       ?lstr28_FirmV_0_7_0
0x4244	0x6EE1      	MOVWF       FSR1L 
0x4246	0x0E01      	MOVLW       hi_addr(?lstr28_FirmV_0_7_0)
0x4248	0x6EE2      	MOVWF       FSR1H 
0x424A	0x0E11      	MOVLW       17
0x424C	0x6E00      	MOVWF       R0 
0x424E	0x0E01      	MOVLW       1
0x4250	0x6E01      	MOVWF       R1 
0x4252	0xF005EC75  	CALL        ___CC2DW, 0
0x4256	0x0EA1      	MOVLW       ?lstr28_FirmV_0_7_0
0x4258	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x425A	0x0E01      	MOVLW       hi_addr(?lstr28_FirmV_0_7_0)
0x425C	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x425E	0xF00AECC5  	CALL        _Logger, 0
L_State4133:
;FirmV_0_7_0.c,747 :: 		if(CheckTask(6))
0x4262	0x0E06      	MOVLW       6
0x4264	0x0102      	MOVLB       2
0x4266	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4268	0xF005ECBE  	CALL        _CheckTask, 0
0x426C	0x5200      	MOVF        R0, 1 
0x426E	0xE02D      	BZ          L_State4134
;FirmV_0_7_0.c,748 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S4 M2 Speed UP");}
0x4270	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x4274	0x0E01      	MOVLW       1
0x4276	0x0102      	MOVLB       2
0x4278	0x6F7F      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x427A	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x427E	0x6A2B      	CLRF        _M2isSlow 
0x4280	0x0E53      	MOVLW       83
0x4282	0x0101      	MOVLB       1
0x4284	0x6FB2      	MOVWF       ?lstr29_FirmV_0_7_0, 1
0x4286	0x0E34      	MOVLW       52
0x4288	0x6FB3      	MOVWF       ?lstr29_FirmV_0_7_0+1, 1
0x428A	0x0E20      	MOVLW       32
0x428C	0x6FB4      	MOVWF       ?lstr29_FirmV_0_7_0+2, 1
0x428E	0x0E4D      	MOVLW       77
0x4290	0x6FB5      	MOVWF       ?lstr29_FirmV_0_7_0+3, 1
0x4292	0x0E32      	MOVLW       50
0x4294	0x6FB6      	MOVWF       ?lstr29_FirmV_0_7_0+4, 1
0x4296	0x0E20      	MOVLW       32
0x4298	0x6FB7      	MOVWF       ?lstr29_FirmV_0_7_0+5, 1
0x429A	0x0E53      	MOVLW       83
0x429C	0x6FB8      	MOVWF       ?lstr29_FirmV_0_7_0+6, 1
0x429E	0x0E70      	MOVLW       112
0x42A0	0x6FB9      	MOVWF       ?lstr29_FirmV_0_7_0+7, 1
0x42A2	0x0E65      	MOVLW       101
0x42A4	0x6FBA      	MOVWF       ?lstr29_FirmV_0_7_0+8, 1
0x42A6	0x0E65      	MOVLW       101
0x42A8	0x6FBB      	MOVWF       ?lstr29_FirmV_0_7_0+9, 1
0x42AA	0x0E64      	MOVLW       100
0x42AC	0x6FBC      	MOVWF       ?lstr29_FirmV_0_7_0+10, 1
0x42AE	0x0E20      	MOVLW       32
0x42B0	0x6FBD      	MOVWF       ?lstr29_FirmV_0_7_0+11, 1
0x42B2	0x0E55      	MOVLW       85
0x42B4	0x6FBE      	MOVWF       ?lstr29_FirmV_0_7_0+12, 1
0x42B6	0x0E50      	MOVLW       80
0x42B8	0x6FBF      	MOVWF       ?lstr29_FirmV_0_7_0+13, 1
0x42BA	0x6BC0      	CLRF        ?lstr29_FirmV_0_7_0+14, 1
0x42BC	0x0EB2      	MOVLW       ?lstr29_FirmV_0_7_0
0x42BE	0x0102      	MOVLB       2
0x42C0	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x42C2	0x0E01      	MOVLW       hi_addr(?lstr29_FirmV_0_7_0)
0x42C4	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x42C6	0xF00AECC5  	CALL        _Logger, 0
L_State4134:
;FirmV_0_7_0.c,750 :: 		if(CheckTask(8))
0x42CA	0x0E08      	MOVLW       8
0x42CC	0x0102      	MOVLB       2
0x42CE	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x42D0	0xF005ECBE  	CALL        _CheckTask, 0
0x42D4	0x5200      	MOVF        R0, 1 
0x42D6	0xE01E      	BZ          L_State4135
;FirmV_0_7_0.c,751 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S4 M2 Speed Down");}
0x42D8	0xF27EC060  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x42DC	0x0102      	MOVLB       2
0x42DE	0x6B7F      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x42E0	0xF00AECA9  	CALL        _SetMotorSpeed, 0
0x42E4	0x0E01      	MOVLW       1
0x42E6	0x6E2B      	MOVWF       _M2isSlow 
0x42E8	0x0EDC      	MOVLW       ?ICS?lstr30_FirmV_0_7_0
0x42EA	0x6EF6      	MOVWF       4086 
0x42EC	0x0E59      	MOVLW       hi_addr(?ICS?lstr30_FirmV_0_7_0)
0x42EE	0x6EF7      	MOVWF       TBLPTRH 
0x42F0	0x0E00      	MOVLW       higher_addr(?ICS?lstr30_FirmV_0_7_0)
0x42F2	0x6EF8      	MOVWF       TBLPTRU 
0x42F4	0x0EC1      	MOVLW       ?lstr30_FirmV_0_7_0
0x42F6	0x6EE1      	MOVWF       FSR1L 
0x42F8	0x0E01      	MOVLW       hi_addr(?lstr30_FirmV_0_7_0)
0x42FA	0x6EE2      	MOVWF       FSR1H 
0x42FC	0x0E11      	MOVLW       17
0x42FE	0x6E00      	MOVWF       R0 
0x4300	0x0E01      	MOVLW       1
0x4302	0x6E01      	MOVWF       R1 
0x4304	0xF005EC75  	CALL        ___CC2DW, 0
0x4308	0x0EC1      	MOVLW       ?lstr30_FirmV_0_7_0
0x430A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x430C	0x0E01      	MOVLW       hi_addr(?lstr30_FirmV_0_7_0)
0x430E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4310	0xF00AECC5  	CALL        _Logger, 0
L_State4135:
;FirmV_0_7_0.c,753 :: 		if(CheckTask(3))
0x4314	0x0E03      	MOVLW       3
0x4316	0x0102      	MOVLB       2
0x4318	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x431A	0xF005ECBE  	CALL        _CheckTask, 0
0x431E	0x5200      	MOVF        R0, 1 
0x4320	0xE027      	BZ          L_State4136
;FirmV_0_7_0.c,754 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S4 M1 Stoped");}
0x4322	0x901B      	BCF         _CloseDone, 0 
0x4324	0x0E01      	MOVLW       1
0x4326	0x0102      	MOVLB       2
0x4328	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x432A	0xF00AECB9  	CALL        _StopMotor, 0
0x432E	0x0E53      	MOVLW       83
0x4330	0x0101      	MOVLB       1
0x4332	0x6FD2      	MOVWF       ?lstr31_FirmV_0_7_0, 1
0x4334	0x0E34      	MOVLW       52
0x4336	0x6FD3      	MOVWF       ?lstr31_FirmV_0_7_0+1, 1
0x4338	0x0E20      	MOVLW       32
0x433A	0x6FD4      	MOVWF       ?lstr31_FirmV_0_7_0+2, 1
0x433C	0x0E4D      	MOVLW       77
0x433E	0x6FD5      	MOVWF       ?lstr31_FirmV_0_7_0+3, 1
0x4340	0x0E31      	MOVLW       49
0x4342	0x6FD6      	MOVWF       ?lstr31_FirmV_0_7_0+4, 1
0x4344	0x0E20      	MOVLW       32
0x4346	0x6FD7      	MOVWF       ?lstr31_FirmV_0_7_0+5, 1
0x4348	0x0E53      	MOVLW       83
0x434A	0x6FD8      	MOVWF       ?lstr31_FirmV_0_7_0+6, 1
0x434C	0x0E74      	MOVLW       116
0x434E	0x6FD9      	MOVWF       ?lstr31_FirmV_0_7_0+7, 1
0x4350	0x0E6F      	MOVLW       111
0x4352	0x6FDA      	MOVWF       ?lstr31_FirmV_0_7_0+8, 1
0x4354	0x0E70      	MOVLW       112
0x4356	0x6FDB      	MOVWF       ?lstr31_FirmV_0_7_0+9, 1
0x4358	0x0E65      	MOVLW       101
0x435A	0x6FDC      	MOVWF       ?lstr31_FirmV_0_7_0+10, 1
0x435C	0x0E64      	MOVLW       100
0x435E	0x6FDD      	MOVWF       ?lstr31_FirmV_0_7_0+11, 1
0x4360	0x6BDE      	CLRF        ?lstr31_FirmV_0_7_0+12, 1
0x4362	0x0ED2      	MOVLW       ?lstr31_FirmV_0_7_0
0x4364	0x0102      	MOVLB       2
0x4366	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4368	0x0E01      	MOVLW       hi_addr(?lstr31_FirmV_0_7_0)
0x436A	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x436C	0xF00AECC5  	CALL        _Logger, 0
L_State4136:
;FirmV_0_7_0.c,756 :: 		if(CheckTask(4))
0x4370	0x0E04      	MOVLW       4
0x4372	0x0102      	MOVLB       2
0x4374	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4376	0xF005ECBE  	CALL        _CheckTask, 0
0x437A	0x5200      	MOVF        R0, 1 
0x437C	0xE027      	BZ          L_State4137
;FirmV_0_7_0.c,757 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S4 M2 Stoped");}
0x437E	0x921B      	BCF         _CloseDone, 1 
0x4380	0x0E02      	MOVLW       2
0x4382	0x0102      	MOVLB       2
0x4384	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4386	0xF00AECB9  	CALL        _StopMotor, 0
0x438A	0x0E53      	MOVLW       83
0x438C	0x0101      	MOVLB       1
0x438E	0x6FDF      	MOVWF       ?lstr32_FirmV_0_7_0, 1
0x4390	0x0E34      	MOVLW       52
0x4392	0x6FE0      	MOVWF       ?lstr32_FirmV_0_7_0+1, 1
0x4394	0x0E20      	MOVLW       32
0x4396	0x6FE1      	MOVWF       ?lstr32_FirmV_0_7_0+2, 1
0x4398	0x0E4D      	MOVLW       77
0x439A	0x6FE2      	MOVWF       ?lstr32_FirmV_0_7_0+3, 1
0x439C	0x0E32      	MOVLW       50
0x439E	0x6FE3      	MOVWF       ?lstr32_FirmV_0_7_0+4, 1
0x43A0	0x0E20      	MOVLW       32
0x43A2	0x6FE4      	MOVWF       ?lstr32_FirmV_0_7_0+5, 1
0x43A4	0x0E53      	MOVLW       83
0x43A6	0x6FE5      	MOVWF       ?lstr32_FirmV_0_7_0+6, 1
0x43A8	0x0E74      	MOVLW       116
0x43AA	0x6FE6      	MOVWF       ?lstr32_FirmV_0_7_0+7, 1
0x43AC	0x0E6F      	MOVLW       111
0x43AE	0x6FE7      	MOVWF       ?lstr32_FirmV_0_7_0+8, 1
0x43B0	0x0E70      	MOVLW       112
0x43B2	0x6FE8      	MOVWF       ?lstr32_FirmV_0_7_0+9, 1
0x43B4	0x0E65      	MOVLW       101
0x43B6	0x6FE9      	MOVWF       ?lstr32_FirmV_0_7_0+10, 1
0x43B8	0x0E64      	MOVLW       100
0x43BA	0x6FEA      	MOVWF       ?lstr32_FirmV_0_7_0+11, 1
0x43BC	0x6BEB      	CLRF        ?lstr32_FirmV_0_7_0+12, 1
0x43BE	0x0EDF      	MOVLW       ?lstr32_FirmV_0_7_0
0x43C0	0x0102      	MOVLB       2
0x43C2	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x43C4	0x0E01      	MOVLW       hi_addr(?lstr32_FirmV_0_7_0)
0x43C6	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x43C8	0xF00AECC5  	CALL        _Logger, 0
L_State4137:
;FirmV_0_7_0.c,759 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x43CC	0x5026      	MOVF        _OverloadCheckFlag1, 0 
0x43CE	0x0A01      	XORLW       1
0x43D0	0xE12E      	BNZ         L_State4140
0x43D2	0x0101      	MOVLB       1
0x43D4	0xA102      	BTFSS       _Events+5, 0, 1
0x43D6	0xD02B      	BRA         L_State4140
0x43D8	0x5024      	MOVF        _M1isSlow, 0 
0x43DA	0x0A00      	XORLW       0
0x43DC	0xE128      	BNZ         L_State4140
L__State4535:
;FirmV_0_7_0.c,760 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M1 Overloaded");ClearTasks(9);}
0x43DE	0x0E01      	MOVLW       1
0x43E0	0x0102      	MOVLB       2
0x43E2	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x43E4	0xF00AECB9  	CALL        _StopMotor, 0
0x43E8	0x0E02      	MOVLW       2
0x43EA	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x43EC	0xF00AECB9  	CALL        _StopMotor, 0
0x43F0	0x0E06      	MOVLW       6
0x43F2	0x6E29      	MOVWF       _State 
0x43F4	0x6A26      	CLRF        _OverloadCheckFlag1 
0x43F6	0x6A25      	CLRF        _OverloadCheckFlag2 
0x43F8	0x0E07      	MOVLW       ?ICS?lstr33_FirmV_0_7_0
0x43FA	0x6EF6      	MOVWF       4086 
0x43FC	0x0E5A      	MOVLW       hi_addr(?ICS?lstr33_FirmV_0_7_0)
0x43FE	0x6EF7      	MOVWF       TBLPTRH 
0x4400	0x0E00      	MOVLW       higher_addr(?ICS?lstr33_FirmV_0_7_0)
0x4402	0x6EF8      	MOVWF       TBLPTRU 
0x4404	0x0EEC      	MOVLW       ?lstr33_FirmV_0_7_0
0x4406	0x6EE1      	MOVWF       FSR1L 
0x4408	0x0E01      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x440A	0x6EE2      	MOVWF       FSR1H 
0x440C	0x0E11      	MOVLW       17
0x440E	0x6E00      	MOVWF       R0 
0x4410	0x0E01      	MOVLW       1
0x4412	0x6E01      	MOVWF       R1 
0x4414	0xF005EC75  	CALL        ___CC2DW, 0
0x4418	0x0EEC      	MOVLW       ?lstr33_FirmV_0_7_0
0x441A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x441C	0x0E01      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x441E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4420	0xF00AECC5  	CALL        _Logger, 0
0x4424	0x0E09      	MOVLW       9
0x4426	0x0102      	MOVLB       2
0x4428	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x442A	0xF005ECED  	CALL        _ClearTasks, 0
L_State4140:
;FirmV_0_7_0.c,762 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x442E	0x5025      	MOVF        _OverloadCheckFlag2, 0 
0x4430	0x0A01      	XORLW       1
0x4432	0xE12E      	BNZ         L_State4143
0x4434	0x0101      	MOVLB       1
0x4436	0xA302      	BTFSS       _Events+5, 1, 1
0x4438	0xD02B      	BRA         L_State4143
0x443A	0x502B      	MOVF        _M2isSlow, 0 
0x443C	0x0A00      	XORLW       0
0x443E	0xE128      	BNZ         L_State4143
L__State4534:
;FirmV_0_7_0.c,763 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M2 Overloaded");ClearTasks(9);}
0x4440	0x0E01      	MOVLW       1
0x4442	0x0102      	MOVLB       2
0x4444	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4446	0xF00AECB9  	CALL        _StopMotor, 0
0x444A	0x0E02      	MOVLW       2
0x444C	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x444E	0xF00AECB9  	CALL        _StopMotor, 0
0x4452	0x0E06      	MOVLW       6
0x4454	0x6E29      	MOVWF       _State 
0x4456	0x6A26      	CLRF        _OverloadCheckFlag1 
0x4458	0x6A25      	CLRF        _OverloadCheckFlag2 
0x445A	0x0E18      	MOVLW       ?ICS?lstr34_FirmV_0_7_0
0x445C	0x6EF6      	MOVWF       4086 
0x445E	0x0E5A      	MOVLW       hi_addr(?ICS?lstr34_FirmV_0_7_0)
0x4460	0x6EF7      	MOVWF       TBLPTRH 
0x4462	0x0E00      	MOVLW       higher_addr(?ICS?lstr34_FirmV_0_7_0)
0x4464	0x6EF8      	MOVWF       TBLPTRU 
0x4466	0x0EFD      	MOVLW       ?lstr34_FirmV_0_7_0
0x4468	0x6EE1      	MOVWF       FSR1L 
0x446A	0x0E01      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x446C	0x6EE2      	MOVWF       FSR1H 
0x446E	0x0E11      	MOVLW       17
0x4470	0x6E00      	MOVWF       R0 
0x4472	0x0E01      	MOVLW       1
0x4474	0x6E01      	MOVWF       R1 
0x4476	0xF005EC75  	CALL        ___CC2DW, 0
0x447A	0x0EFD      	MOVLW       ?lstr34_FirmV_0_7_0
0x447C	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x447E	0x0E01      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x4480	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4482	0xF00AECC5  	CALL        _Logger, 0
0x4486	0x0E09      	MOVLW       9
0x4488	0x0102      	MOVLB       2
0x448A	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x448C	0xF005ECED  	CALL        _ClearTasks, 0
L_State4143:
;FirmV_0_7_0.c,765 :: 		if(Door2OpenTime==0)
0x4490	0x0101      	MOVLB       1
0x4492	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x4494	0x0A00      	XORLW       0
0x4496	0xE101      	BNZ         L_State4144
;FirmV_0_7_0.c,766 :: 		CloseDone.b1=0;
0x4498	0x921B      	BCF         _CloseDone, 1 
L_State4144:
;FirmV_0_7_0.c,768 :: 		if((Events.Photocell.b0==1))
0x449A	0xA103      	BTFSS       _Events+6, 0, 1
0x449C	0xD02A      	BRA         L_State4145
;FirmV_0_7_0.c,769 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S4 Photocell Int");ClearTasks(9);}
0x449E	0x0E01      	MOVLW       1
0x44A0	0x0102      	MOVLB       2
0x44A2	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x44A4	0xF00AECB9  	CALL        _StopMotor, 0
0x44A8	0x0E02      	MOVLW       2
0x44AA	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x44AC	0xF00AECB9  	CALL        _StopMotor, 0
0x44B0	0x6A26      	CLRF        _OverloadCheckFlag1 
0x44B2	0x6A25      	CLRF        _OverloadCheckFlag2 
0x44B4	0x0E06      	MOVLW       6
0x44B6	0x6E29      	MOVWF       _State 
0x44B8	0x0E01      	MOVLW       1
0x44BA	0x6E47      	MOVWF       _PhotocellOpenFlag 
0x44BC	0x0E29      	MOVLW       ?ICS?lstr35_FirmV_0_7_0
0x44BE	0x6EF6      	MOVWF       4086 
0x44C0	0x0E5A      	MOVLW       hi_addr(?ICS?lstr35_FirmV_0_7_0)
0x44C2	0x6EF7      	MOVWF       TBLPTRH 
0x44C4	0x0E00      	MOVLW       higher_addr(?ICS?lstr35_FirmV_0_7_0)
0x44C6	0x6EF8      	MOVWF       TBLPTRU 
0x44C8	0x0E0E      	MOVLW       ?lstr35_FirmV_0_7_0
0x44CA	0x6EE1      	MOVWF       FSR1L 
0x44CC	0x0E02      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x44CE	0x6EE2      	MOVWF       FSR1H 
0x44D0	0x0E11      	MOVLW       17
0x44D2	0x6E00      	MOVWF       R0 
0x44D4	0x0E01      	MOVLW       1
0x44D6	0x6E01      	MOVWF       R1 
0x44D8	0xF005EC75  	CALL        ___CC2DW, 0
0x44DC	0x0E0E      	MOVLW       ?lstr35_FirmV_0_7_0
0x44DE	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x44E0	0x0E02      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x44E2	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x44E4	0xF00AECC5  	CALL        _Logger, 0
0x44E8	0x0E09      	MOVLW       9
0x44EA	0x0102      	MOVLB       2
0x44EC	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x44EE	0xF005ECED  	CALL        _ClearTasks, 0
L_State4145:
;FirmV_0_7_0.c,771 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x44F2	0x0101      	MOVLB       1
0x44F4	0x5104      	MOVF        _Events+7, 0, 1
0x44F6	0x0A01      	XORLW       1
0x44F8	0xE12A      	BNZ         L_State4148
0x44FA	0x5325      	MOVF        _LimiterEnable, 1, 1
0x44FC	0xE028      	BZ          L_State4148
L__State4533:
;FirmV_0_7_0.c,772 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Limit Switch Stop");ClearTasks(9);}
0x44FE	0x0E01      	MOVLW       1
0x4500	0x0102      	MOVLB       2
0x4502	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4504	0xF00AECB9  	CALL        _StopMotor, 0
0x4508	0x0E02      	MOVLW       2
0x450A	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x450C	0xF00AECB9  	CALL        _StopMotor, 0
0x4510	0x0E06      	MOVLW       6
0x4512	0x6E29      	MOVWF       _State 
0x4514	0x6A26      	CLRF        _OverloadCheckFlag1 
0x4516	0x6A25      	CLRF        _OverloadCheckFlag2 
0x4518	0x0E3A      	MOVLW       ?ICS?lstr36_FirmV_0_7_0
0x451A	0x6EF6      	MOVWF       4086 
0x451C	0x0E5A      	MOVLW       hi_addr(?ICS?lstr36_FirmV_0_7_0)
0x451E	0x6EF7      	MOVWF       TBLPTRH 
0x4520	0x0E00      	MOVLW       higher_addr(?ICS?lstr36_FirmV_0_7_0)
0x4522	0x6EF8      	MOVWF       TBLPTRU 
0x4524	0x0E1F      	MOVLW       ?lstr36_FirmV_0_7_0
0x4526	0x6EE1      	MOVWF       FSR1L 
0x4528	0x0E02      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x452A	0x6EE2      	MOVWF       FSR1H 
0x452C	0x0E15      	MOVLW       21
0x452E	0x6E00      	MOVWF       R0 
0x4530	0x0E01      	MOVLW       1
0x4532	0x6E01      	MOVWF       R1 
0x4534	0xF005EC75  	CALL        ___CC2DW, 0
0x4538	0x0E1F      	MOVLW       ?lstr36_FirmV_0_7_0
0x453A	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x453C	0x0E02      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x453E	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4540	0xF00AECC5  	CALL        _Logger, 0
0x4544	0x0E09      	MOVLW       9
0x4546	0x0102      	MOVLB       2
0x4548	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x454A	0xF005ECED  	CALL        _ClearTasks, 0
L_State4148:
;FirmV_0_7_0.c,774 :: 		if((Events.Remote.b0==1))
0x454E	0x0101      	MOVLB       1
0x4550	0xA101      	BTFSS       _Events+4, 0, 1
0x4552	0xD028      	BRA         L_State4149
;FirmV_0_7_0.c,775 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Remote Pressed");ClearTasks(9);}
0x4554	0x0E01      	MOVLW       1
0x4556	0x0102      	MOVLB       2
0x4558	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x455A	0xF00AECB9  	CALL        _StopMotor, 0
0x455E	0x0E02      	MOVLW       2
0x4560	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4562	0xF00AECB9  	CALL        _StopMotor, 0
0x4566	0x0E06      	MOVLW       6
0x4568	0x6E29      	MOVWF       _State 
0x456A	0x6A26      	CLRF        _OverloadCheckFlag1 
0x456C	0x6A25      	CLRF        _OverloadCheckFlag2 
0x456E	0x0E4F      	MOVLW       ?ICS?lstr37_FirmV_0_7_0
0x4570	0x6EF6      	MOVWF       4086 
0x4572	0x0E5A      	MOVLW       hi_addr(?ICS?lstr37_FirmV_0_7_0)
0x4574	0x6EF7      	MOVWF       TBLPTRH 
0x4576	0x0E00      	MOVLW       higher_addr(?ICS?lstr37_FirmV_0_7_0)
0x4578	0x6EF8      	MOVWF       TBLPTRU 
0x457A	0x0E34      	MOVLW       ?lstr37_FirmV_0_7_0
0x457C	0x6EE1      	MOVWF       FSR1L 
0x457E	0x0E02      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x4580	0x6EE2      	MOVWF       FSR1H 
0x4582	0x0E12      	MOVLW       18
0x4584	0x6E00      	MOVWF       R0 
0x4586	0x0E01      	MOVLW       1
0x4588	0x6E01      	MOVWF       R1 
0x458A	0xF005EC75  	CALL        ___CC2DW, 0
0x458E	0x0E34      	MOVLW       ?lstr37_FirmV_0_7_0
0x4590	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4592	0x0E02      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x4594	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4596	0xF00AECC5  	CALL        _Logger, 0
0x459A	0x0E09      	MOVLW       9
0x459C	0x0102      	MOVLB       2
0x459E	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x45A0	0xF005ECED  	CALL        _ClearTasks, 0
L_State4149:
;FirmV_0_7_0.c,777 :: 		if(CloseDone==0)
0x45A4	0x501B      	MOVF        _CloseDone, 0 
0x45A6	0x0A00      	XORLW       0
0x45A8	0xE108      	BNZ         L_State4150
;FirmV_0_7_0.c,778 :: 		{State=1; PassFlag=0;ClearTasks(9);}
0x45AA	0x0102      	MOVLB       2
0x45AC	0x0E01      	MOVLW       1
0x45AE	0x6E29      	MOVWF       _State 
0x45B0	0x6A2A      	CLRF        _PassFlag 
0x45B2	0x0E09      	MOVLW       9
0x45B4	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x45B6	0xF005ECED  	CALL        _ClearTasks, 0
L_State4150:
;FirmV_0_7_0.c,780 :: 		if((State==5)||(State==6))
0x45BA	0x5029      	MOVF        _State, 0 
0x45BC	0x0A05      	XORLW       5
0x45BE	0xE004      	BZ          L__State4532
0x45C0	0x5029      	MOVF        _State, 0 
0x45C2	0x0A06      	XORLW       6
0x45C4	0xE001      	BZ          L__State4532
0x45C6	0xD034      	BRA         L_State4153
L__State4532:
0x45C8	0x0102      	MOVLB       2
;FirmV_0_7_0.c,781 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S4 Autoclose Renewed");}}
0x45CA	0x6B7E      	CLRF        FARG_ClearTasks_except, 1
0x45CC	0xF005ECED  	CALL        _ClearTasks, 0
0x45D0	0x0E00      	MOVLW       0
0x45D2	0x0101      	MOVLB       1
0x45D4	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x45D6	0xE102      	BNZ         L__State4609
0x45D8	0x0E00      	MOVLW       0
0x45DA	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State4609:
0x45DC	0xE029      	BZ          L_State4154
0x45DE	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x45E0	0x241C      	ADDWF       _ms500, 0 
0x45E2	0x0102      	MOVLB       2
0x45E4	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x45E6	0x0101      	MOVLB       1
0x45E8	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x45EA	0x201D      	ADDWFC      _ms500+1, 0 
0x45EC	0x0102      	MOVLB       2
0x45EE	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x45F0	0x0E00      	MOVLW       0
0x45F2	0x201E      	ADDWFC      _ms500+2, 0 
0x45F4	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x45F6	0x0E00      	MOVLW       0
0x45F8	0x201F      	ADDWFC      _ms500+3, 0 
0x45FA	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x45FC	0x0E09      	MOVLW       9
0x45FE	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4600	0xF00AECF7  	CALL        _AddTask, 0
0x4604	0x0E61      	MOVLW       ?ICS?lstr38_FirmV_0_7_0
0x4606	0x6EF6      	MOVWF       4086 
0x4608	0x0E5A      	MOVLW       hi_addr(?ICS?lstr38_FirmV_0_7_0)
0x460A	0x6EF7      	MOVWF       TBLPTRH 
0x460C	0x0E00      	MOVLW       higher_addr(?ICS?lstr38_FirmV_0_7_0)
0x460E	0x6EF8      	MOVWF       TBLPTRU 
0x4610	0x0E46      	MOVLW       ?lstr38_FirmV_0_7_0
0x4612	0x6EE1      	MOVWF       FSR1L 
0x4614	0x0E02      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x4616	0x6EE2      	MOVWF       FSR1H 
0x4618	0x0E15      	MOVLW       21
0x461A	0x6E00      	MOVWF       R0 
0x461C	0x0E01      	MOVLW       1
0x461E	0x6E01      	MOVWF       R1 
0x4620	0xF005EC75  	CALL        ___CC2DW, 0
0x4624	0x0E46      	MOVLW       ?lstr38_FirmV_0_7_0
0x4626	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4628	0x0E02      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x462A	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x462C	0xF00AECC5  	CALL        _Logger, 0
L_State4154:
L_State4153:
;FirmV_0_7_0.c,783 :: 		}
0x4630	0x0012      	RETURN      0
; end of _State4
_State5:
;FirmV_0_7_0.c,798 :: 		void State5()
;FirmV_0_7_0.c,800 :: 		char delay=2;
0x4632	0x0E02      	MOVLW       2
0x4634	0x0101      	MOVLB       1
0x4636	0x6F80      	MOVWF       State5_delay_L0, 1
;FirmV_0_7_0.c,801 :: 		Flasher=0;
0x4638	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,802 :: 		if((Events.Remote.b0==1)||(CheckTask(9)==1))
0x463A	0xB101      	BTFSC       _Events+4, 0, 1
0x463C	0xD009      	BRA         L__State5538
0x463E	0x0E09      	MOVLW       9
0x4640	0x0102      	MOVLB       2
0x4642	0x6F7E      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4644	0xF005ECBE  	CALL        _CheckTask, 0
0x4648	0x5000      	MOVF        R0, 0 
0x464A	0x0A01      	XORLW       1
0x464C	0xE001      	BZ          L__State5538
0x464E	0xD1BF      	BRA         L_State5157
L__State5538:
;FirmV_0_7_0.c,804 :: 		if(Door2CloseTime==0)
0x4650	0x0101      	MOVLB       1
0x4652	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x4654	0x0A00      	XORLW       0
0x4656	0xA4D8      	BTFSS       STATUS, 2 
0x4658	0xD084      	BRA         L_State5158
;FirmV_0_7_0.c,806 :: 		ClearTasks(9);
0x465A	0x0E09      	MOVLW       9
0x465C	0x0102      	MOVLB       2
0x465E	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x4660	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,807 :: 		temp=ms500+delay;
0x4664	0x0101      	MOVLB       1
0x4666	0x5180      	MOVF        State5_delay_L0, 0, 1
0x4668	0x241C      	ADDWF       _ms500, 0 
0x466A	0x6E00      	MOVWF       R0 
0x466C	0x0E00      	MOVLW       0
0x466E	0x201D      	ADDWFC      _ms500+1, 0 
0x4670	0x6E01      	MOVWF       R1 
0x4672	0x0E00      	MOVLW       0
0x4674	0x201E      	ADDWFC      _ms500+2, 0 
0x4676	0x6E02      	MOVWF       R2 
0x4678	0x0E00      	MOVLW       0
0x467A	0x201F      	ADDWFC      _ms500+3, 0 
0x467C	0x6E03      	MOVWF       R3 
0x467E	0xF06DC000  	MOVFF       R0, _temp
0x4682	0xF06EC001  	MOVFF       R1, _temp+1
0x4686	0xF06FC002  	MOVFF       R2, _temp+2
0x468A	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,808 :: 		AddTask(temp,1);
0x468E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4692	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4696	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x469A	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x469E	0x0E01      	MOVLW       1
0x46A0	0x0102      	MOVLB       2
0x46A2	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x46A4	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,809 :: 		AddTask(temp,5);
0x46A8	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x46AC	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x46B0	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x46B4	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x46B8	0x0E05      	MOVLW       5
0x46BA	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x46BC	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,810 :: 		M1isSlow=0;//speed up
0x46C0	0x6A24      	CLRF        _M1isSlow 
;FirmV_0_7_0.c,811 :: 		temp=ms500+OverloadDelay+delay;
0x46C2	0x0E02      	MOVLW       2
0x46C4	0x241C      	ADDWF       _ms500, 0 
0x46C6	0x6E00      	MOVWF       R0 
0x46C8	0x0E00      	MOVLW       0
0x46CA	0x201D      	ADDWFC      _ms500+1, 0 
0x46CC	0x6E01      	MOVWF       R1 
0x46CE	0x0E00      	MOVLW       0
0x46D0	0x201E      	ADDWFC      _ms500+2, 0 
0x46D2	0x6E02      	MOVWF       R2 
0x46D4	0x0E00      	MOVLW       0
0x46D6	0x201F      	ADDWFC      _ms500+3, 0 
0x46D8	0x6E03      	MOVWF       R3 
0x46DA	0x0101      	MOVLB       1
0x46DC	0x5180      	MOVF        State5_delay_L0, 0, 1
0x46DE	0x2600      	ADDWF       R0, 1 
0x46E0	0x0E00      	MOVLW       0
0x46E2	0x2201      	ADDWFC      R1, 1 
0x46E4	0x2202      	ADDWFC      R2, 1 
0x46E6	0x2203      	ADDWFC      R3, 1 
0x46E8	0xF06DC000  	MOVFF       R0, _temp
0x46EC	0xF06EC001  	MOVFF       R1, _temp+1
0x46F0	0xF06FC002  	MOVFF       R2, _temp+2
0x46F4	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,812 :: 		AddTask(temp,10); //overload check
0x46F8	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x46FC	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4700	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4704	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4708	0x0E0A      	MOVLW       10
0x470A	0x0102      	MOVLB       2
0x470C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x470E	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,813 :: 		temp=ms500+Door1CloseTime+delay;
0x4712	0x0101      	MOVLB       1
0x4714	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x4716	0x241C      	ADDWF       _ms500, 0 
0x4718	0x6E00      	MOVWF       R0 
0x471A	0x0E00      	MOVLW       0
0x471C	0x201D      	ADDWFC      _ms500+1, 0 
0x471E	0x6E01      	MOVWF       R1 
0x4720	0x0E00      	MOVLW       0
0x4722	0x201E      	ADDWFC      _ms500+2, 0 
0x4724	0x6E02      	MOVWF       R2 
0x4726	0x0E00      	MOVLW       0
0x4728	0x201F      	ADDWFC      _ms500+3, 0 
0x472A	0x6E03      	MOVWF       R3 
0x472C	0x5180      	MOVF        State5_delay_L0, 0, 1
0x472E	0x2600      	ADDWF       R0, 1 
0x4730	0x0E00      	MOVLW       0
0x4732	0x2201      	ADDWFC      R1, 1 
0x4734	0x2202      	ADDWFC      R2, 1 
0x4736	0x2203      	ADDWFC      R3, 1 
0x4738	0xF06DC000  	MOVFF       R0, _temp
0x473C	0xF06EC001  	MOVFF       R1, _temp+1
0x4740	0xF06FC002  	MOVFF       R2, _temp+2
0x4744	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,814 :: 		AddTask(temp,3);//Stop motor
0x4748	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x474C	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4750	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4754	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4758	0x0E03      	MOVLW       3
0x475A	0x0102      	MOVLB       2
0x475C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x475E	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,815 :: 		}
L_State5158:
;FirmV_0_7_0.c,816 :: 		if(Door2CloseTime!=0)
0x4762	0x0101      	MOVLB       1
0x4764	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x4766	0x0A00      	XORLW       0
0x4768	0xB4D8      	BTFSC       STATUS, 2 
0x476A	0xD12B      	BRA         L_State5159
;FirmV_0_7_0.c,818 :: 		ClearTasks(9);
0x476C	0x0E09      	MOVLW       9
0x476E	0x0102      	MOVLB       2
0x4770	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x4772	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,819 :: 		temp=ms500+delay;
0x4776	0x0101      	MOVLB       1
0x4778	0x5180      	MOVF        State5_delay_L0, 0, 1
0x477A	0x241C      	ADDWF       _ms500, 0 
0x477C	0x6E00      	MOVWF       R0 
0x477E	0x0E00      	MOVLW       0
0x4780	0x201D      	ADDWFC      _ms500+1, 0 
0x4782	0x6E01      	MOVWF       R1 
0x4784	0x0E00      	MOVLW       0
0x4786	0x201E      	ADDWFC      _ms500+2, 0 
0x4788	0x6E02      	MOVWF       R2 
0x478A	0x0E00      	MOVLW       0
0x478C	0x201F      	ADDWFC      _ms500+3, 0 
0x478E	0x6E03      	MOVWF       R3 
0x4790	0xF06DC000  	MOVFF       R0, _temp
0x4794	0xF06EC001  	MOVFF       R1, _temp+1
0x4798	0xF06FC002  	MOVFF       R2, _temp+2
0x479C	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,820 :: 		AddTask(temp,2);
0x47A0	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x47A4	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x47A8	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x47AC	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x47B0	0x0E02      	MOVLW       2
0x47B2	0x0102      	MOVLB       2
0x47B4	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x47B6	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,821 :: 		AddTask(temp,6);
0x47BA	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x47BE	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x47C2	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x47C6	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x47CA	0x0E06      	MOVLW       6
0x47CC	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x47CE	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,822 :: 		M1isSlow=0;//speed up
0x47D2	0x6A24      	CLRF        _M1isSlow 
;FirmV_0_7_0.c,823 :: 		temp=ms500+OverloadDelay+delay;
0x47D4	0x0E02      	MOVLW       2
0x47D6	0x241C      	ADDWF       _ms500, 0 
0x47D8	0x6E00      	MOVWF       R0 
0x47DA	0x0E00      	MOVLW       0
0x47DC	0x201D      	ADDWFC      _ms500+1, 0 
0x47DE	0x6E01      	MOVWF       R1 
0x47E0	0x0E00      	MOVLW       0
0x47E2	0x201E      	ADDWFC      _ms500+2, 0 
0x47E4	0x6E02      	MOVWF       R2 
0x47E6	0x0E00      	MOVLW       0
0x47E8	0x201F      	ADDWFC      _ms500+3, 0 
0x47EA	0x6E03      	MOVWF       R3 
0x47EC	0x0101      	MOVLB       1
0x47EE	0x5180      	MOVF        State5_delay_L0, 0, 1
0x47F0	0x2600      	ADDWF       R0, 1 
0x47F2	0x0E00      	MOVLW       0
0x47F4	0x2201      	ADDWFC      R1, 1 
0x47F6	0x2202      	ADDWFC      R2, 1 
0x47F8	0x2203      	ADDWFC      R3, 1 
0x47FA	0xF06DC000  	MOVFF       R0, _temp
0x47FE	0xF06EC001  	MOVFF       R1, _temp+1
0x4802	0xF06FC002  	MOVFF       R2, _temp+2
0x4806	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,824 :: 		AddTask(temp,11); //overload check
0x480A	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x480E	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4812	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4816	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x481A	0x0E0B      	MOVLW       11
0x481C	0x0102      	MOVLB       2
0x481E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4820	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,825 :: 		temp=ms500+Door1CloseTime+delay;
0x4824	0x0101      	MOVLB       1
0x4826	0x510C      	MOVF        _Door1CloseTime, 0, 1
0x4828	0x241C      	ADDWF       _ms500, 0 
0x482A	0x6E00      	MOVWF       R0 
0x482C	0x0E00      	MOVLW       0
0x482E	0x201D      	ADDWFC      _ms500+1, 0 
0x4830	0x6E01      	MOVWF       R1 
0x4832	0x0E00      	MOVLW       0
0x4834	0x201E      	ADDWFC      _ms500+2, 0 
0x4836	0x6E02      	MOVWF       R2 
0x4838	0x0E00      	MOVLW       0
0x483A	0x201F      	ADDWFC      _ms500+3, 0 
0x483C	0x6E03      	MOVWF       R3 
0x483E	0x5180      	MOVF        State5_delay_L0, 0, 1
0x4840	0x2600      	ADDWF       R0, 1 
0x4842	0x0E00      	MOVLW       0
0x4844	0x2201      	ADDWFC      R1, 1 
0x4846	0x2202      	ADDWFC      R2, 1 
0x4848	0x2203      	ADDWFC      R3, 1 
0x484A	0xF06DC000  	MOVFF       R0, _temp
0x484E	0xF06EC001  	MOVFF       R1, _temp+1
0x4852	0xF06FC002  	MOVFF       R2, _temp+2
0x4856	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,826 :: 		AddTask(temp,4);//Stop motor
0x485A	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x485E	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4862	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4866	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x486A	0x0E04      	MOVLW       4
0x486C	0x0102      	MOVLB       2
0x486E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4870	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,831 :: 		temp=ms500+ActionTimeDiff+delay;
0x4874	0x0101      	MOVLB       1
0x4876	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4878	0x241C      	ADDWF       _ms500, 0 
0x487A	0x6E00      	MOVWF       R0 
0x487C	0x0E00      	MOVLW       0
0x487E	0x201D      	ADDWFC      _ms500+1, 0 
0x4880	0x6E01      	MOVWF       R1 
0x4882	0x0E00      	MOVLW       0
0x4884	0x201E      	ADDWFC      _ms500+2, 0 
0x4886	0x6E02      	MOVWF       R2 
0x4888	0x0E00      	MOVLW       0
0x488A	0x201F      	ADDWFC      _ms500+3, 0 
0x488C	0x6E03      	MOVWF       R3 
0x488E	0x5180      	MOVF        State5_delay_L0, 0, 1
0x4890	0x2600      	ADDWF       R0, 1 
0x4892	0x0E00      	MOVLW       0
0x4894	0x2201      	ADDWFC      R1, 1 
0x4896	0x2202      	ADDWFC      R2, 1 
0x4898	0x2203      	ADDWFC      R3, 1 
0x489A	0xF06DC000  	MOVFF       R0, _temp
0x489E	0xF06EC001  	MOVFF       R1, _temp+1
0x48A2	0xF06FC002  	MOVFF       R2, _temp+2
0x48A6	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,832 :: 		AddTask(temp,1);
0x48AA	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x48AE	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x48B2	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x48B6	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x48BA	0x0E01      	MOVLW       1
0x48BC	0x0102      	MOVLB       2
0x48BE	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x48C0	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,833 :: 		temp=ms500+ActionTimeDiff+delay;
0x48C4	0x0101      	MOVLB       1
0x48C6	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x48C8	0x241C      	ADDWF       _ms500, 0 
0x48CA	0x6E00      	MOVWF       R0 
0x48CC	0x0E00      	MOVLW       0
0x48CE	0x201D      	ADDWFC      _ms500+1, 0 
0x48D0	0x6E01      	MOVWF       R1 
0x48D2	0x0E00      	MOVLW       0
0x48D4	0x201E      	ADDWFC      _ms500+2, 0 
0x48D6	0x6E02      	MOVWF       R2 
0x48D8	0x0E00      	MOVLW       0
0x48DA	0x201F      	ADDWFC      _ms500+3, 0 
0x48DC	0x6E03      	MOVWF       R3 
0x48DE	0x5180      	MOVF        State5_delay_L0, 0, 1
0x48E0	0x2600      	ADDWF       R0, 1 
0x48E2	0x0E00      	MOVLW       0
0x48E4	0x2201      	ADDWFC      R1, 1 
0x48E6	0x2202      	ADDWFC      R2, 1 
0x48E8	0x2203      	ADDWFC      R3, 1 
0x48EA	0xF06DC000  	MOVFF       R0, _temp
0x48EE	0xF06EC001  	MOVFF       R1, _temp+1
0x48F2	0xF06FC002  	MOVFF       R2, _temp+2
0x48F6	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,834 :: 		AddTask(temp,5);
0x48FA	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x48FE	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4902	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4906	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x490A	0x0E05      	MOVLW       5
0x490C	0x0102      	MOVLB       2
0x490E	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4910	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,835 :: 		M2isSlow=0;//speed up
0x4914	0x6A2B      	CLRF        _M2isSlow 
;FirmV_0_7_0.c,836 :: 		temp=ms500+ActionTimeDiff+OverloadDelay+delay;
0x4916	0x0101      	MOVLB       1
0x4918	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x491A	0x241C      	ADDWF       _ms500, 0 
0x491C	0x6E00      	MOVWF       R0 
0x491E	0x0E00      	MOVLW       0
0x4920	0x201D      	ADDWFC      _ms500+1, 0 
0x4922	0x6E01      	MOVWF       R1 
0x4924	0x0E00      	MOVLW       0
0x4926	0x201E      	ADDWFC      _ms500+2, 0 
0x4928	0x6E02      	MOVWF       R2 
0x492A	0x0E00      	MOVLW       0
0x492C	0x201F      	ADDWFC      _ms500+3, 0 
0x492E	0x6E03      	MOVWF       R3 
0x4930	0x0E02      	MOVLW       2
0x4932	0x2600      	ADDWF       R0, 1 
0x4934	0x0E00      	MOVLW       0
0x4936	0x2201      	ADDWFC      R1, 1 
0x4938	0x2202      	ADDWFC      R2, 1 
0x493A	0x2203      	ADDWFC      R3, 1 
0x493C	0x5180      	MOVF        State5_delay_L0, 0, 1
0x493E	0x2600      	ADDWF       R0, 1 
0x4940	0x0E00      	MOVLW       0
0x4942	0x2201      	ADDWFC      R1, 1 
0x4944	0x2202      	ADDWFC      R2, 1 
0x4946	0x2203      	ADDWFC      R3, 1 
0x4948	0xF06DC000  	MOVFF       R0, _temp
0x494C	0xF06EC001  	MOVFF       R1, _temp+1
0x4950	0xF06FC002  	MOVFF       R2, _temp+2
0x4954	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,837 :: 		AddTask(temp,10); //overload check
0x4958	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x495C	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4960	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4964	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4968	0x0E0A      	MOVLW       10
0x496A	0x0102      	MOVLB       2
0x496C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x496E	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,838 :: 		temp=ms500+Door2CloseTime+delay;
0x4972	0x0101      	MOVLB       1
0x4974	0x510B      	MOVF        _Door2CloseTime, 0, 1
0x4976	0x241C      	ADDWF       _ms500, 0 
0x4978	0x6E00      	MOVWF       R0 
0x497A	0x0E00      	MOVLW       0
0x497C	0x201D      	ADDWFC      _ms500+1, 0 
0x497E	0x6E01      	MOVWF       R1 
0x4980	0x0E00      	MOVLW       0
0x4982	0x201E      	ADDWFC      _ms500+2, 0 
0x4984	0x6E02      	MOVWF       R2 
0x4986	0x0E00      	MOVLW       0
0x4988	0x201F      	ADDWFC      _ms500+3, 0 
0x498A	0x6E03      	MOVWF       R3 
0x498C	0x5180      	MOVF        State5_delay_L0, 0, 1
0x498E	0x2600      	ADDWF       R0, 1 
0x4990	0x0E00      	MOVLW       0
0x4992	0x2201      	ADDWFC      R1, 1 
0x4994	0x2202      	ADDWFC      R2, 1 
0x4996	0x2203      	ADDWFC      R3, 1 
0x4998	0xF06DC000  	MOVFF       R0, _temp
0x499C	0xF06EC001  	MOVFF       R1, _temp+1
0x49A0	0xF06FC002  	MOVFF       R2, _temp+2
0x49A4	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,839 :: 		AddTask(temp,3);//Stop motor
0x49A8	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x49AC	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x49B0	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x49B4	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x49B8	0x0E03      	MOVLW       3
0x49BA	0x0102      	MOVLB       2
0x49BC	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x49BE	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,840 :: 		}
L_State5159:
;FirmV_0_7_0.c,841 :: 		CloseDone=3;
0x49C2	0x0E03      	MOVLW       3
0x49C4	0x6E1B      	MOVWF       _CloseDone 
;FirmV_0_7_0.c,842 :: 		OverloadCheckFlag1=0;
0x49C6	0x6A26      	CLRF        _OverloadCheckFlag1 
;FirmV_0_7_0.c,843 :: 		OverloadCheckFlag2=0;
0x49C8	0x6A25      	CLRF        _OverloadCheckFlag2 
;FirmV_0_7_0.c,844 :: 		State=7;
0x49CA	0x0E07      	MOVLW       7
0x49CC	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,845 :: 		}
L_State5157:
;FirmV_0_7_0.c,847 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x49CE	0x0101      	MOVLB       1
0x49D0	0xA103      	BTFSS       _Events+6, 0, 1
0x49D2	0xD025      	BRA         L_State5162
0x49D4	0x0E00      	MOVLW       0
0x49D6	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x49D8	0xE102      	BNZ         L__State5610
0x49DA	0x0E00      	MOVLW       0
0x49DC	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State5610:
0x49DE	0xE01F      	BZ          L_State5162
0x49E0	0x502A      	MOVF        _PassFlag, 0 
0x49E2	0x0A00      	XORLW       0
0x49E4	0xE11C      	BNZ         L_State5162
L__State5537:
;FirmV_0_7_0.c,848 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S5 Auto Close Deleted");}
0x49E6	0x0E01      	MOVLW       1
0x49E8	0x6E2A      	MOVWF       _PassFlag 
0x49EA	0xF00BEC6F  	CALL        _GetAutocloseTime, 0
0x49EE	0xF01AC000  	MOVFF       R0, __AC
0x49F2	0x0ECC      	MOVLW       ?ICS?lstr39_FirmV_0_7_0
0x49F4	0x6EF6      	MOVWF       4086 
0x49F6	0x0E5C      	MOVLW       hi_addr(?ICS?lstr39_FirmV_0_7_0)
0x49F8	0x6EF7      	MOVWF       TBLPTRH 
0x49FA	0x0E00      	MOVLW       higher_addr(?ICS?lstr39_FirmV_0_7_0)
0x49FC	0x6EF8      	MOVWF       TBLPTRU 
0x49FE	0x0E4A      	MOVLW       ?lstr39_FirmV_0_7_0
0x4A00	0x6EE1      	MOVWF       FSR1L 
0x4A02	0x0E01      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x4A04	0x6EE2      	MOVWF       FSR1H 
0x4A06	0x0E16      	MOVLW       22
0x4A08	0x6E00      	MOVWF       R0 
0x4A0A	0x0E01      	MOVLW       1
0x4A0C	0x6E01      	MOVWF       R1 
0x4A0E	0xF005EC75  	CALL        ___CC2DW, 0
0x4A12	0x0E4A      	MOVLW       ?lstr39_FirmV_0_7_0
0x4A14	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4A16	0x0E01      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x4A18	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4A1A	0xF00AECC5  	CALL        _Logger, 0
L_State5162:
;FirmV_0_7_0.c,850 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x4A1E	0x502A      	MOVF        _PassFlag, 0 
0x4A20	0x0A01      	XORLW       1
0x4A22	0xE158      	BNZ         L_State5165
0x4A24	0x0101      	MOVLB       1
0x4A26	0xB103      	BTFSC       _Events+6, 0, 1
0x4A28	0xD055      	BRA         L_State5165
0x4A2A	0x0E00      	MOVLW       0
0x4A2C	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x4A2E	0xE102      	BNZ         L__State5611
0x4A30	0x0E00      	MOVLW       0
0x4A32	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State5611:
0x4A34	0xE04F      	BZ          L_State5165
L__State5536:
;FirmV_0_7_0.c,853 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:");Logger(t);}
0x4A36	0x501A      	MOVF        __AC, 0 
0x4A38	0x241C      	ADDWF       _ms500, 0 
0x4A3A	0x6E00      	MOVWF       R0 
0x4A3C	0x0E00      	MOVLW       0
0x4A3E	0x201D      	ADDWFC      _ms500+1, 0 
0x4A40	0x6E01      	MOVWF       R1 
0x4A42	0x0E00      	MOVLW       0
0x4A44	0x201E      	ADDWFC      _ms500+2, 0 
0x4A46	0x6E02      	MOVWF       R2 
0x4A48	0x0E00      	MOVLW       0
0x4A4A	0x201F      	ADDWFC      _ms500+3, 0 
0x4A4C	0x6E03      	MOVWF       R3 
0x4A4E	0xF06DC000  	MOVFF       R0, _temp
0x4A52	0xF06EC001  	MOVFF       R1, _temp+1
0x4A56	0xF06FC002  	MOVFF       R2, _temp+2
0x4A5A	0xF070C003  	MOVFF       R3, _temp+3
0x4A5E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4A62	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4A66	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4A6A	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4A6E	0x0E09      	MOVLW       9
0x4A70	0x0102      	MOVLB       2
0x4A72	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4A74	0xF00AECF7  	CALL        _AddTask, 0
0x4A78	0x6A2A      	CLRF        _PassFlag 
0x4A7A	0xF427C06D  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x4A7E	0xF428C06E  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x4A82	0xF429C06F  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x4A86	0xF42AC070  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x4A8A	0x0E62      	MOVLW       _t
0x4A8C	0x0104      	MOVLB       4
0x4A8E	0x6F2B      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x4A90	0x0E00      	MOVLW       hi_addr(_t)
0x4A92	0x6F2C      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x4A94	0xF003ECE0  	CALL        _LongWordToStrWithZeros, 0
0x4A98	0x0EE2      	MOVLW       ?ICS?lstr40_FirmV_0_7_0
0x4A9A	0x6EF6      	MOVWF       4086 
0x4A9C	0x0E5C      	MOVLW       hi_addr(?ICS?lstr40_FirmV_0_7_0)
0x4A9E	0x6EF7      	MOVWF       TBLPTRH 
0x4AA0	0x0E00      	MOVLW       higher_addr(?ICS?lstr40_FirmV_0_7_0)
0x4AA2	0x6EF8      	MOVWF       TBLPTRU 
0x4AA4	0x0E60      	MOVLW       ?lstr40_FirmV_0_7_0
0x4AA6	0x6EE1      	MOVWF       FSR1L 
0x4AA8	0x0E01      	MOVLW       hi_addr(?lstr40_FirmV_0_7_0)
0x4AAA	0x6EE2      	MOVWF       FSR1H 
0x4AAC	0x0E10      	MOVLW       16
0x4AAE	0x6E00      	MOVWF       R0 
0x4AB0	0x0E01      	MOVLW       1
0x4AB2	0x6E01      	MOVWF       R1 
0x4AB4	0xF005EC75  	CALL        ___CC2DW, 0
0x4AB8	0x0E60      	MOVLW       ?lstr40_FirmV_0_7_0
0x4ABA	0x0102      	MOVLB       2
0x4ABC	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4ABE	0x0E01      	MOVLW       hi_addr(?lstr40_FirmV_0_7_0)
0x4AC0	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4AC2	0xF00AECC5  	CALL        _Logger, 0
0x4AC6	0x0E62      	MOVLW       _t
0x4AC8	0x0102      	MOVLB       2
0x4ACA	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x4ACC	0x0E00      	MOVLW       hi_addr(_t)
0x4ACE	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x4AD0	0xF00AECC5  	CALL        _Logger, 0
;FirmV_0_7_0.c,855 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:");Logger(t);}
L_State5167:
;FirmV_0_7_0.c,856 :: 		}
L_State5165:
;FirmV_0_7_0.c,858 :: 		}
0x4AD4	0x0012      	RETURN      0
; end of _State5
_State00:
;FirmV_0_7_0.c,443 :: 		void State00()
;FirmV_0_7_0.c,448 :: 		Flasher=1;
0x4AD6	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,449 :: 		StartMotor(1,_Close);
0x4AD8	0x0E01      	MOVLW       1
0x4ADA	0x0102      	MOVLB       2
0x4ADC	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x4ADE	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x4AE0	0xF006EC52  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,450 :: 		StartMotor(2,_Close);
0x4AE4	0x0E02      	MOVLW       2
0x4AE6	0x6F7E      	MOVWF       FARG_StartMotor_Mx, 1
0x4AE8	0x6B7F      	CLRF        FARG_StartMotor_Dir, 1
0x4AEA	0xF006EC52  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,454 :: 		if(Events.Remote.b0==1)
0x4AEE	0x0101      	MOVLB       1
0x4AF0	0xA101      	BTFSS       _Events+4, 0, 1
0x4AF2	0xD00C      	BRA         L_State0059
;FirmV_0_7_0.c,455 :: 		{Flasher=0;StopMotor(1);StopMotor(2);
0x4AF4	0x9482      	BCF         PORTC, 2 
0x4AF6	0x0E01      	MOVLW       1
0x4AF8	0x0102      	MOVLB       2
0x4AFA	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4AFC	0xF00AECB9  	CALL        _StopMotor, 0
0x4B00	0x0E02      	MOVLW       2
0x4B02	0x6F7E      	MOVWF       FARG_StopMotor_Mx, 1
0x4B04	0xF00AECB9  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,456 :: 		State=1;                }
0x4B08	0x0E01      	MOVLW       1
0x4B0A	0x6E29      	MOVWF       _State 
L_State0059:
;FirmV_0_7_0.c,457 :: 		}
0x4B0C	0x0012      	RETURN      0
; end of _State00
_Menu1:
;FirmV_0_7_0.c,1824 :: 		void Menu1()
;FirmV_0_7_0.c,1827 :: 		if((Events.Keys.b0==1))
0x4B0E	0x0100      	MOVLB       0
0x4B10	0xA1FD      	BTFSS       _Events, 0, 1
0x4B12	0xD009      	BRA         L_Menu1378
;FirmV_0_7_0.c,1828 :: 		{if(MenuPointer==0){MenuPointer=18;}else{MenuPointer=MenuPointer-1;}State=100;}
0x4B14	0x5020      	MOVF        _MenuPointer, 0 
0x4B16	0x0A00      	XORLW       0
0x4B18	0xE103      	BNZ         L_Menu1379
0x4B1A	0x0E12      	MOVLW       18
0x4B1C	0x6E20      	MOVWF       _MenuPointer 
0x4B1E	0xD001      	BRA         L_Menu1380
L_Menu1379:
0x4B20	0x0620      	DECF        _MenuPointer, 1 
L_Menu1380:
0x4B22	0x0E64      	MOVLW       100
0x4B24	0x6E29      	MOVWF       _State 
L_Menu1378:
0x4B26	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1830 :: 		if((Events.Keys.b2==1))
0x4B28	0xA5FD      	BTFSS       _Events, 2, 1
0x4B2A	0xD008      	BRA         L_Menu1381
;FirmV_0_7_0.c,1831 :: 		{if(MenuPointer==18){MenuPointer=0;}else{MenuPointer=MenuPointer+1;}State=100;}
0x4B2C	0x5020      	MOVF        _MenuPointer, 0 
0x4B2E	0x0A12      	XORLW       18
0x4B30	0xE102      	BNZ         L_Menu1382
0x4B32	0x6A20      	CLRF        _MenuPointer 
0x4B34	0xD001      	BRA         L_Menu1383
L_Menu1382:
0x4B36	0x2A20      	INCF        _MenuPointer, 1 
L_Menu1383:
0x4B38	0x0E64      	MOVLW       100
0x4B3A	0x6E29      	MOVWF       _State 
L_Menu1381:
0x4B3C	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1833 :: 		if((Events.Keys.b1==1))
0x4B3E	0xA3FD      	BTFSS       _Events, 1, 1
0x4B40	0xD002      	BRA         L_Menu1384
;FirmV_0_7_0.c,1834 :: 		{State=102;}
0x4B42	0x0E66      	MOVLW       102
0x4B44	0x6E29      	MOVWF       _State 
L_Menu1384:
;FirmV_0_7_0.c,1837 :: 		}
0x4B46	0x0012      	RETURN      0
; end of _Menu1
_State1:
;FirmV_0_7_0.c,466 :: 		void State1()
;FirmV_0_7_0.c,468 :: 		char delay=3;
0x4B48	0x0E03      	MOVLW       3
0x4B4A	0x0101      	MOVLB       1
0x4B4C	0x6F4A      	MOVWF       State1_delay_L0, 1
;FirmV_0_7_0.c,471 :: 		Flasher=0;
0x4B4E	0x9482      	BCF         PORTC, 2 
;FirmV_0_7_0.c,473 :: 		if(Events.Keys==2)
0x4B50	0x0100      	MOVLB       0
0x4B52	0x51FD      	MOVF        _Events, 0, 1
0x4B54	0x0A02      	XORLW       2
0x4B56	0xE103      	BNZ         L_State160
;FirmV_0_7_0.c,474 :: 		{State=100;MenuPointer=0;}
0x4B58	0x0E64      	MOVLW       100
0x4B5A	0x6E29      	MOVWF       _State 
0x4B5C	0x6A20      	CLRF        _MenuPointer 
L_State160:
;FirmV_0_7_0.c,476 :: 		if(Events.Remote.b1==1)
0x4B5E	0x0101      	MOVLB       1
0x4B60	0xA301      	BTFSS       _Events+4, 1, 1
0x4B62	0xD002      	BRA         L_State161
;FirmV_0_7_0.c,477 :: 		State=10;
0x4B64	0x0E0A      	MOVLW       10
0x4B66	0x6E29      	MOVWF       _State 
L_State161:
;FirmV_0_7_0.c,480 :: 		if(Events.Remote.b0==1)
0x4B68	0xA101      	BTFSS       _Events+4, 0, 1
0x4B6A	0xD288      	BRA         L_State162
;FirmV_0_7_0.c,483 :: 		ClearTasks(9);
0x4B6C	0x0E09      	MOVLW       9
0x4B6E	0x0102      	MOVLB       2
0x4B70	0x6F7E      	MOVWF       FARG_ClearTasks_except, 1
0x4B72	0xF005ECED  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,484 :: 		Flasher=1;
0x4B76	0x8482      	BSF         PORTC, 2 
;FirmV_0_7_0.c,485 :: 		AddTask(ms500+1,12);
0x4B78	0x0E01      	MOVLW       1
0x4B7A	0x241C      	ADDWF       _ms500, 0 
0x4B7C	0x6F7E      	MOVWF       FARG_AddTask_OccTime, 1
0x4B7E	0x0E00      	MOVLW       0
0x4B80	0x201D      	ADDWFC      _ms500+1, 0 
0x4B82	0x6F7F      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4B84	0x0E00      	MOVLW       0
0x4B86	0x201E      	ADDWFC      _ms500+2, 0 
0x4B88	0x6F80      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4B8A	0x0E00      	MOVLW       0
0x4B8C	0x201F      	ADDWFC      _ms500+3, 0 
0x4B8E	0x6F81      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4B90	0x0E0C      	MOVLW       12
0x4B92	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4B94	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,486 :: 		temp=ms500+delay;
0x4B98	0x0101      	MOVLB       1
0x4B9A	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4B9C	0x241C      	ADDWF       _ms500, 0 
0x4B9E	0x6E00      	MOVWF       R0 
0x4BA0	0x0E00      	MOVLW       0
0x4BA2	0x201D      	ADDWFC      _ms500+1, 0 
0x4BA4	0x6E01      	MOVWF       R1 
0x4BA6	0x0E00      	MOVLW       0
0x4BA8	0x201E      	ADDWFC      _ms500+2, 0 
0x4BAA	0x6E02      	MOVWF       R2 
0x4BAC	0x0E00      	MOVLW       0
0x4BAE	0x201F      	ADDWFC      _ms500+3, 0 
0x4BB0	0x6E03      	MOVWF       R3 
0x4BB2	0xF06DC000  	MOVFF       R0, _temp
0x4BB6	0xF06EC001  	MOVFF       R1, _temp+1
0x4BBA	0xF06FC002  	MOVFF       R2, _temp+2
0x4BBE	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,487 :: 		AddTask(temp,1);
0x4BC2	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4BC6	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4BCA	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4BCE	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4BD2	0x0E01      	MOVLW       1
0x4BD4	0x0102      	MOVLB       2
0x4BD6	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4BD8	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,488 :: 		if(OpenSoftStartTime!=0)
0x4BDC	0x0101      	MOVLB       1
0x4BDE	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4BE0	0x0A00      	XORLW       0
0x4BE2	0xE010      	BZ          L_State163
;FirmV_0_7_0.c,489 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x4BE4	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x4BE8	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x4BEC	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4BF0	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4BF4	0x0E07      	MOVLW       7
0x4BF6	0x0102      	MOVLB       2
0x4BF8	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4BFA	0xF00AECF7  	CALL        _AddTask, 0
0x4BFE	0x0E01      	MOVLW       1
0x4C00	0x6E24      	MOVWF       _M1isSlow 
0x4C02	0xD00E      	BRA         L_State164
L_State163:
0x4C04	0x0102      	MOVLB       2
;FirmV_0_7_0.c,491 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x4C06	0xF27EC06D  	MOVFF       _temp, FARG_AddTask_OccTime
0x4C0A	0xF27FC06E  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x4C0E	0xF280C06F  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4C12	0xF281C070  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4C16	0x0E05      	MOVLW       5
0x4C18	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4C1A	0xF00AECF7  	CALL        _AddTask, 0
0x4C1E	0x6A24      	CLRF        _M1isSlow 
L_State164:
;FirmV_0_7_0.c,492 :: 		temp=ms500+OpenSoftStartTime+OverloadDelay+delay;
0x4C20	0x0101      	MOVLB       1
0x4C22	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4C24	0x241C      	ADDWF       _ms500, 0 
0x4C26	0x6E00      	MOVWF       R0 
0x4C28	0x0E00      	MOVLW       0
0x4C2A	0x201D      	ADDWFC      _ms500+1, 0 
0x4C2C	0x6E01      	MOVWF       R1 
0x4C2E	0x0E00      	MOVLW       0
0x4C30	0x201E      	ADDWFC      _ms500+2, 0 
0x4C32	0x6E02      	MOVWF       R2 
0x4C34	0x0E00      	MOVLW       0
0x4C36	0x201F      	ADDWFC      _ms500+3, 0 
0x4C38	0x6E03      	MOVWF       R3 
0x4C3A	0x0E02      	MOVLW       2
0x4C3C	0x2600      	ADDWF       R0, 1 
0x4C3E	0x0E00      	MOVLW       0
0x4C40	0x2201      	ADDWFC      R1, 1 
0x4C42	0x2202      	ADDWFC      R2, 1 
0x4C44	0x2203      	ADDWFC      R3, 1 
0x4C46	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4C48	0x2600      	ADDWF       R0, 1 
0x4C4A	0x0E00      	MOVLW       0
0x4C4C	0x2201      	ADDWFC      R1, 1 
0x4C4E	0x2202      	ADDWFC      R2, 1 
0x4C50	0x2203      	ADDWFC      R3, 1 
0x4C52	0xF06DC000  	MOVFF       R0, _temp
0x4C56	0xF06EC001  	MOVFF       R1, _temp+1
0x4C5A	0xF06FC002  	MOVFF       R2, _temp+2
0x4C5E	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,493 :: 		AddTask(temp,10); //overload check
0x4C62	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4C66	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4C6A	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4C6E	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4C72	0x0E0A      	MOVLW       10
0x4C74	0x0102      	MOVLB       2
0x4C76	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4C78	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,494 :: 		temp=ms500+OpenSoftStartTime+delay;
0x4C7C	0x0101      	MOVLB       1
0x4C7E	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4C80	0x241C      	ADDWF       _ms500, 0 
0x4C82	0x6E00      	MOVWF       R0 
0x4C84	0x0E00      	MOVLW       0
0x4C86	0x201D      	ADDWFC      _ms500+1, 0 
0x4C88	0x6E01      	MOVWF       R1 
0x4C8A	0x0E00      	MOVLW       0
0x4C8C	0x201E      	ADDWFC      _ms500+2, 0 
0x4C8E	0x6E02      	MOVWF       R2 
0x4C90	0x0E00      	MOVLW       0
0x4C92	0x201F      	ADDWFC      _ms500+3, 0 
0x4C94	0x6E03      	MOVWF       R3 
0x4C96	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4C98	0x2600      	ADDWF       R0, 1 
0x4C9A	0x0E00      	MOVLW       0
0x4C9C	0x2201      	ADDWFC      R1, 1 
0x4C9E	0x2202      	ADDWFC      R2, 1 
0x4CA0	0x2203      	ADDWFC      R3, 1 
0x4CA2	0xF06DC000  	MOVFF       R0, _temp
0x4CA6	0xF06EC001  	MOVFF       R1, _temp+1
0x4CAA	0xF06FC002  	MOVFF       R2, _temp+2
0x4CAE	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,495 :: 		AddTask(temp,5);//Speed up after soft start
0x4CB2	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4CB6	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4CBA	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4CBE	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4CC2	0x0E05      	MOVLW       5
0x4CC4	0x0102      	MOVLB       2
0x4CC6	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4CC8	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,496 :: 		if(OpenSoftStopTime!=0)
0x4CCC	0x0101      	MOVLB       1
0x4CCE	0x510E      	MOVF        _OpenSoftStopTime, 0, 1
0x4CD0	0x0A00      	XORLW       0
0x4CD2	0xE02D      	BZ          L_State165
;FirmV_0_7_0.c,497 :: 		{temp=ms500+Door1OpenTime-OpenSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x4CD4	0x5117      	MOVF        _Door1OpenTime, 0, 1
0x4CD6	0x241C      	ADDWF       _ms500, 0 
0x4CD8	0x6E00      	MOVWF       R0 
0x4CDA	0x0E00      	MOVLW       0
0x4CDC	0x201D      	ADDWFC      _ms500+1, 0 
0x4CDE	0x6E01      	MOVWF       R1 
0x4CE0	0x0E00      	MOVLW       0
0x4CE2	0x201E      	ADDWFC      _ms500+2, 0 
0x4CE4	0x6E02      	MOVWF       R2 
0x4CE6	0x0E00      	MOVLW       0
0x4CE8	0x201F      	ADDWFC      _ms500+3, 0 
0x4CEA	0x6E03      	MOVWF       R3 
0x4CEC	0x510E      	MOVF        _OpenSoftStopTime, 0, 1
0x4CEE	0x5E00      	SUBWF       R0, 1 
0x4CF0	0x0E00      	MOVLW       0
0x4CF2	0x5A01      	SUBWFB      R1, 1 
0x4CF4	0x5A02      	SUBWFB      R2, 1 
0x4CF6	0x5A03      	SUBWFB      R3, 1 
0x4CF8	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4CFA	0x2600      	ADDWF       R0, 1 
0x4CFC	0x0E00      	MOVLW       0
0x4CFE	0x2201      	ADDWFC      R1, 1 
0x4D00	0x2202      	ADDWFC      R2, 1 
0x4D02	0x2203      	ADDWFC      R3, 1 
0x4D04	0xF06DC000  	MOVFF       R0, _temp
0x4D08	0xF06EC001  	MOVFF       R1, _temp+1
0x4D0C	0xF06FC002  	MOVFF       R2, _temp+2
0x4D10	0xF070C003  	MOVFF       R3, _temp+3
0x4D14	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4D18	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4D1C	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4D20	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4D24	0x0E07      	MOVLW       7
0x4D26	0x0102      	MOVLB       2
0x4D28	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4D2A	0xF00AECF7  	CALL        _AddTask, 0
L_State165:
;FirmV_0_7_0.c,498 :: 		temp=ms500+Door1OpenTime+delay;
0x4D2E	0x0101      	MOVLB       1
0x4D30	0x5117      	MOVF        _Door1OpenTime, 0, 1
0x4D32	0x241C      	ADDWF       _ms500, 0 
0x4D34	0x6E00      	MOVWF       R0 
0x4D36	0x0E00      	MOVLW       0
0x4D38	0x201D      	ADDWFC      _ms500+1, 0 
0x4D3A	0x6E01      	MOVWF       R1 
0x4D3C	0x0E00      	MOVLW       0
0x4D3E	0x201E      	ADDWFC      _ms500+2, 0 
0x4D40	0x6E02      	MOVWF       R2 
0x4D42	0x0E00      	MOVLW       0
0x4D44	0x201F      	ADDWFC      _ms500+3, 0 
0x4D46	0x6E03      	MOVWF       R3 
0x4D48	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4D4A	0x2600      	ADDWF       R0, 1 
0x4D4C	0x0E00      	MOVLW       0
0x4D4E	0x2201      	ADDWFC      R1, 1 
0x4D50	0x2202      	ADDWFC      R2, 1 
0x4D52	0x2203      	ADDWFC      R3, 1 
0x4D54	0xF06DC000  	MOVFF       R0, _temp
0x4D58	0xF06EC001  	MOVFF       R1, _temp+1
0x4D5C	0xF06FC002  	MOVFF       R2, _temp+2
0x4D60	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,499 :: 		AddTask(temp,3);//Stop motor
0x4D64	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4D68	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4D6C	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4D70	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4D74	0x0E03      	MOVLW       3
0x4D76	0x0102      	MOVLB       2
0x4D78	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4D7A	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,501 :: 		if(Door2OpenTime!=0)
0x4D7E	0x0101      	MOVLB       1
0x4D80	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x4D82	0x0A00      	XORLW       0
0x4D84	0xB4D8      	BTFSC       STATUS, 2 
0x4D86	0xD145      	BRA         L_State166
;FirmV_0_7_0.c,503 :: 		temp=ms500+ActionTimeDiff+delay;
0x4D88	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4D8A	0x241C      	ADDWF       _ms500, 0 
0x4D8C	0x6E00      	MOVWF       R0 
0x4D8E	0x0E00      	MOVLW       0
0x4D90	0x201D      	ADDWFC      _ms500+1, 0 
0x4D92	0x6E01      	MOVWF       R1 
0x4D94	0x0E00      	MOVLW       0
0x4D96	0x201E      	ADDWFC      _ms500+2, 0 
0x4D98	0x6E02      	MOVWF       R2 
0x4D9A	0x0E00      	MOVLW       0
0x4D9C	0x201F      	ADDWFC      _ms500+3, 0 
0x4D9E	0x6E03      	MOVWF       R3 
0x4DA0	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4DA2	0x2600      	ADDWF       R0, 1 
0x4DA4	0x0E00      	MOVLW       0
0x4DA6	0x2201      	ADDWFC      R1, 1 
0x4DA8	0x2202      	ADDWFC      R2, 1 
0x4DAA	0x2203      	ADDWFC      R3, 1 
0x4DAC	0xF06DC000  	MOVFF       R0, _temp
0x4DB0	0xF06EC001  	MOVFF       R1, _temp+1
0x4DB4	0xF06FC002  	MOVFF       R2, _temp+2
0x4DB8	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,504 :: 		AddTask(temp,2);
0x4DBC	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4DC0	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4DC4	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4DC8	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4DCC	0x0E02      	MOVLW       2
0x4DCE	0x0102      	MOVLB       2
0x4DD0	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4DD2	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,505 :: 		if(OpenSoftStartTime!=0)
0x4DD6	0x0101      	MOVLB       1
0x4DD8	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4DDA	0x0A00      	XORLW       0
0x4DDC	0xE02A      	BZ          L_State167
;FirmV_0_7_0.c,506 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,8); M2isSlow=1;}//speed down
0x4DDE	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4DE0	0x241C      	ADDWF       _ms500, 0 
0x4DE2	0x6E00      	MOVWF       R0 
0x4DE4	0x0E00      	MOVLW       0
0x4DE6	0x201D      	ADDWFC      _ms500+1, 0 
0x4DE8	0x6E01      	MOVWF       R1 
0x4DEA	0x0E00      	MOVLW       0
0x4DEC	0x201E      	ADDWFC      _ms500+2, 0 
0x4DEE	0x6E02      	MOVWF       R2 
0x4DF0	0x0E00      	MOVLW       0
0x4DF2	0x201F      	ADDWFC      _ms500+3, 0 
0x4DF4	0x6E03      	MOVWF       R3 
0x4DF6	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4DF8	0x2600      	ADDWF       R0, 1 
0x4DFA	0x0E00      	MOVLW       0
0x4DFC	0x2201      	ADDWFC      R1, 1 
0x4DFE	0x2202      	ADDWFC      R2, 1 
0x4E00	0x2203      	ADDWFC      R3, 1 
0x4E02	0xF06DC000  	MOVFF       R0, _temp
0x4E06	0xF06EC001  	MOVFF       R1, _temp+1
0x4E0A	0xF06FC002  	MOVFF       R2, _temp+2
0x4E0E	0xF070C003  	MOVFF       R3, _temp+3
0x4E12	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4E16	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4E1A	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4E1E	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4E22	0x0E08      	MOVLW       8
0x4E24	0x0102      	MOVLB       2
0x4E26	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4E28	0xF00AECF7  	CALL        _AddTask, 0
0x4E2C	0x0E01      	MOVLW       1
0x4E2E	0x6E2B      	MOVWF       _M2isSlow 
0x4E30	0xD029      	BRA         L_State168
L_State167:
;FirmV_0_7_0.c,508 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,6); M2isSlow=0;}//speed up
0x4E32	0x0101      	MOVLB       1
0x4E34	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4E36	0x241C      	ADDWF       _ms500, 0 
0x4E38	0x6E00      	MOVWF       R0 
0x4E3A	0x0E00      	MOVLW       0
0x4E3C	0x201D      	ADDWFC      _ms500+1, 0 
0x4E3E	0x6E01      	MOVWF       R1 
0x4E40	0x0E00      	MOVLW       0
0x4E42	0x201E      	ADDWFC      _ms500+2, 0 
0x4E44	0x6E02      	MOVWF       R2 
0x4E46	0x0E00      	MOVLW       0
0x4E48	0x201F      	ADDWFC      _ms500+3, 0 
0x4E4A	0x6E03      	MOVWF       R3 
0x4E4C	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4E4E	0x2600      	ADDWF       R0, 1 
0x4E50	0x0E00      	MOVLW       0
0x4E52	0x2201      	ADDWFC      R1, 1 
0x4E54	0x2202      	ADDWFC      R2, 1 
0x4E56	0x2203      	ADDWFC      R3, 1 
0x4E58	0xF06DC000  	MOVFF       R0, _temp
0x4E5C	0xF06EC001  	MOVFF       R1, _temp+1
0x4E60	0xF06FC002  	MOVFF       R2, _temp+2
0x4E64	0xF070C003  	MOVFF       R3, _temp+3
0x4E68	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4E6C	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4E70	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4E74	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4E78	0x0E06      	MOVLW       6
0x4E7A	0x0102      	MOVLB       2
0x4E7C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4E7E	0xF00AECF7  	CALL        _AddTask, 0
0x4E82	0x6A2B      	CLRF        _M2isSlow 
L_State168:
;FirmV_0_7_0.c,509 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+OverloadDelay+delay;
0x4E84	0x0101      	MOVLB       1
0x4E86	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4E88	0x241C      	ADDWF       _ms500, 0 
0x4E8A	0x6E00      	MOVWF       R0 
0x4E8C	0x0E00      	MOVLW       0
0x4E8E	0x201D      	ADDWFC      _ms500+1, 0 
0x4E90	0x6E01      	MOVWF       R1 
0x4E92	0x0E00      	MOVLW       0
0x4E94	0x201E      	ADDWFC      _ms500+2, 0 
0x4E96	0x6E02      	MOVWF       R2 
0x4E98	0x0E00      	MOVLW       0
0x4E9A	0x201F      	ADDWFC      _ms500+3, 0 
0x4E9C	0x6E03      	MOVWF       R3 
0x4E9E	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4EA0	0x2600      	ADDWF       R0, 1 
0x4EA2	0x0E00      	MOVLW       0
0x4EA4	0x2201      	ADDWFC      R1, 1 
0x4EA6	0x2202      	ADDWFC      R2, 1 
0x4EA8	0x2203      	ADDWFC      R3, 1 
0x4EAA	0x0E02      	MOVLW       2
0x4EAC	0x2600      	ADDWF       R0, 1 
0x4EAE	0x0E00      	MOVLW       0
0x4EB0	0x2201      	ADDWFC      R1, 1 
0x4EB2	0x2202      	ADDWFC      R2, 1 
0x4EB4	0x2203      	ADDWFC      R3, 1 
0x4EB6	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4EB8	0x2600      	ADDWF       R0, 1 
0x4EBA	0x0E00      	MOVLW       0
0x4EBC	0x2201      	ADDWFC      R1, 1 
0x4EBE	0x2202      	ADDWFC      R2, 1 
0x4EC0	0x2203      	ADDWFC      R3, 1 
0x4EC2	0xF06DC000  	MOVFF       R0, _temp
0x4EC6	0xF06EC001  	MOVFF       R1, _temp+1
0x4ECA	0xF06FC002  	MOVFF       R2, _temp+2
0x4ECE	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,510 :: 		AddTask(temp,11); //overload check
0x4ED2	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4ED6	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4EDA	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4EDE	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4EE2	0x0E0B      	MOVLW       11
0x4EE4	0x0102      	MOVLB       2
0x4EE6	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4EE8	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,511 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+delay;
0x4EEC	0x0101      	MOVLB       1
0x4EEE	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4EF0	0x241C      	ADDWF       _ms500, 0 
0x4EF2	0x6E00      	MOVWF       R0 
0x4EF4	0x0E00      	MOVLW       0
0x4EF6	0x201D      	ADDWFC      _ms500+1, 0 
0x4EF8	0x6E01      	MOVWF       R1 
0x4EFA	0x0E00      	MOVLW       0
0x4EFC	0x201E      	ADDWFC      _ms500+2, 0 
0x4EFE	0x6E02      	MOVWF       R2 
0x4F00	0x0E00      	MOVLW       0
0x4F02	0x201F      	ADDWFC      _ms500+3, 0 
0x4F04	0x6E03      	MOVWF       R3 
0x4F06	0x510F      	MOVF        _OpenSoftStartTime, 0, 1
0x4F08	0x2600      	ADDWF       R0, 1 
0x4F0A	0x0E00      	MOVLW       0
0x4F0C	0x2201      	ADDWFC      R1, 1 
0x4F0E	0x2202      	ADDWFC      R2, 1 
0x4F10	0x2203      	ADDWFC      R3, 1 
0x4F12	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4F14	0x2600      	ADDWF       R0, 1 
0x4F16	0x0E00      	MOVLW       0
0x4F18	0x2201      	ADDWFC      R1, 1 
0x4F1A	0x2202      	ADDWFC      R2, 1 
0x4F1C	0x2203      	ADDWFC      R3, 1 
0x4F1E	0xF06DC000  	MOVFF       R0, _temp
0x4F22	0xF06EC001  	MOVFF       R1, _temp+1
0x4F26	0xF06FC002  	MOVFF       R2, _temp+2
0x4F2A	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,512 :: 		AddTask(temp,6);//Speed up after soft start
0x4F2E	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4F32	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4F36	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4F3A	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4F3E	0x0E06      	MOVLW       6
0x4F40	0x0102      	MOVLB       2
0x4F42	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4F44	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,513 :: 		if(OpenSoftStopTime!=0)
0x4F48	0x0101      	MOVLB       1
0x4F4A	0x510E      	MOVF        _OpenSoftStopTime, 0, 1
0x4F4C	0x0A00      	XORLW       0
0x4F4E	0xE033      	BZ          L_State169
;FirmV_0_7_0.c,514 :: 		{temp=ms500+ActionTimeDiff+Door2OpenTime-OpenSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x4F50	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4F52	0x241C      	ADDWF       _ms500, 0 
0x4F54	0x6E00      	MOVWF       R0 
0x4F56	0x0E00      	MOVLW       0
0x4F58	0x201D      	ADDWFC      _ms500+1, 0 
0x4F5A	0x6E01      	MOVWF       R1 
0x4F5C	0x0E00      	MOVLW       0
0x4F5E	0x201E      	ADDWFC      _ms500+2, 0 
0x4F60	0x6E02      	MOVWF       R2 
0x4F62	0x0E00      	MOVLW       0
0x4F64	0x201F      	ADDWFC      _ms500+3, 0 
0x4F66	0x6E03      	MOVWF       R3 
0x4F68	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x4F6A	0x2600      	ADDWF       R0, 1 
0x4F6C	0x0E00      	MOVLW       0
0x4F6E	0x2201      	ADDWFC      R1, 1 
0x4F70	0x2202      	ADDWFC      R2, 1 
0x4F72	0x2203      	ADDWFC      R3, 1 
0x4F74	0x510E      	MOVF        _OpenSoftStopTime, 0, 1
0x4F76	0x5E00      	SUBWF       R0, 1 
0x4F78	0x0E00      	MOVLW       0
0x4F7A	0x5A01      	SUBWFB      R1, 1 
0x4F7C	0x5A02      	SUBWFB      R2, 1 
0x4F7E	0x5A03      	SUBWFB      R3, 1 
0x4F80	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4F82	0x2600      	ADDWF       R0, 1 
0x4F84	0x0E00      	MOVLW       0
0x4F86	0x2201      	ADDWFC      R1, 1 
0x4F88	0x2202      	ADDWFC      R2, 1 
0x4F8A	0x2203      	ADDWFC      R3, 1 
0x4F8C	0xF06DC000  	MOVFF       R0, _temp
0x4F90	0xF06EC001  	MOVFF       R1, _temp+1
0x4F94	0xF06FC002  	MOVFF       R2, _temp+2
0x4F98	0xF070C003  	MOVFF       R3, _temp+3
0x4F9C	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4FA0	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4FA4	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4FA8	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4FAC	0x0E08      	MOVLW       8
0x4FAE	0x0102      	MOVLB       2
0x4FB0	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x4FB2	0xF00AECF7  	CALL        _AddTask, 0
L_State169:
;FirmV_0_7_0.c,515 :: 		temp=ms500+Door2OpenTime+ActionTimeDiff+delay;
0x4FB6	0x0101      	MOVLB       1
0x4FB8	0x510D      	MOVF        _Door2OpenTime, 0, 1
0x4FBA	0x241C      	ADDWF       _ms500, 0 
0x4FBC	0x6E00      	MOVWF       R0 
0x4FBE	0x0E00      	MOVLW       0
0x4FC0	0x201D      	ADDWFC      _ms500+1, 0 
0x4FC2	0x6E01      	MOVWF       R1 
0x4FC4	0x0E00      	MOVLW       0
0x4FC6	0x201E      	ADDWFC      _ms500+2, 0 
0x4FC8	0x6E02      	MOVWF       R2 
0x4FCA	0x0E00      	MOVLW       0
0x4FCC	0x201F      	ADDWFC      _ms500+3, 0 
0x4FCE	0x6E03      	MOVWF       R3 
0x4FD0	0x5110      	MOVF        _ActionTimeDiff, 0, 1
0x4FD2	0x2600      	ADDWF       R0, 1 
0x4FD4	0x0E00      	MOVLW       0
0x4FD6	0x2201      	ADDWFC      R1, 1 
0x4FD8	0x2202      	ADDWFC      R2, 1 
0x4FDA	0x2203      	ADDWFC      R3, 1 
0x4FDC	0x514A      	MOVF        State1_delay_L0, 0, 1
0x4FDE	0x2600      	ADDWF       R0, 1 
0x4FE0	0x0E00      	MOVLW       0
0x4FE2	0x2201      	ADDWFC      R1, 1 
0x4FE4	0x2202      	ADDWFC      R2, 1 
0x4FE6	0x2203      	ADDWFC      R3, 1 
0x4FE8	0xF06DC000  	MOVFF       R0, _temp
0x4FEC	0xF06EC001  	MOVFF       R1, _temp+1
0x4FF0	0xF06FC002  	MOVFF       R2, _temp+2
0x4FF4	0xF070C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,516 :: 		AddTask(temp,4);//Stop motor
0x4FF8	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x4FFC	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5000	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5004	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5008	0x0E04      	MOVLW       4
0x500A	0x0102      	MOVLB       2
0x500C	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x500E	0xF00AECF7  	CALL        _AddTask, 0
;FirmV_0_7_0.c,517 :: 		}
L_State166:
;FirmV_0_7_0.c,519 :: 		if(AutoCloseTime!=0)
0x5012	0x0E00      	MOVLW       0
0x5014	0x0101      	MOVLB       1
0x5016	0x192D      	XORWF       _AutoCloseTime+1, 0, 1
0x5018	0xE102      	BNZ         L__State1605
0x501A	0x0E00      	MOVLW       0
0x501C	0x192C      	XORWF       _AutoCloseTime, 0, 1
L__State1605:
0x501E	0xE027      	BZ          L_State170
;FirmV_0_7_0.c,520 :: 		{temp=ms500+AutoCloseTime+delay;AddTask(ms500+AutoCloseTime+delay,9);}
0x5020	0x512C      	MOVF        _AutoCloseTime, 0, 1
0x5022	0x241C      	ADDWF       _ms500, 0 
0x5024	0x6E00      	MOVWF       R0 
0x5026	0x512D      	MOVF        _AutoCloseTime+1, 0, 1
0x5028	0x201D      	ADDWFC      _ms500+1, 0 
0x502A	0x6E01      	MOVWF       R1 
0x502C	0x0E00      	MOVLW       0
0x502E	0x201E      	ADDWFC      _ms500+2, 0 
0x5030	0x6E02      	MOVWF       R2 
0x5032	0x0E00      	MOVLW       0
0x5034	0x201F      	ADDWFC      _ms500+3, 0 
0x5036	0x6E03      	MOVWF       R3 
0x5038	0x514A      	MOVF        State1_delay_L0, 0, 1
0x503A	0x2600      	ADDWF       R0, 1 
0x503C	0x0E00      	MOVLW       0
0x503E	0x2201      	ADDWFC      R1, 1 
0x5040	0x2202      	ADDWFC      R2, 1 
0x5042	0x2203      	ADDWFC      R3, 1 
0x5044	0xF06DC000  	MOVFF       R0, _temp
0x5048	0xF06EC001  	MOVFF       R1, _temp+1
0x504C	0xF06FC002  	MOVFF       R2, _temp+2
0x5050	0xF070C003  	MOVFF       R3, _temp+3
0x5054	0xF27EC000  	MOVFF       R0, FARG_AddTask_OccTime
0x5058	0xF27FC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x505C	0xF280C002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5060	0xF281C003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5064	0x0E09      	MOVLW       9
0x5066	0x0102      	MOVLB       2
0x5068	0x6F82      	MOVWF       FARG_AddTask_tcode, 1
0x506A	0xF00AECF7  	CALL        _AddTask, 0
L_State170:
;FirmV_0_7_0.c,522 :: 		OpenDone=3;
0x506E	0x0E03      	MOVLW       3
0x5070	0x6E2C      	MOVWF       _OpenDone 
;FirmV_0_7_0.c,523 :: 		OverloadCheckFlag1=0;
0x5072	0x6A26      	CLRF        _OverloadCheckFlag1 
;FirmV_0_7_0.c,524 :: 		OverloadCheckFlag2=0;
0x5074	0x6A25      	CLRF        _OverloadCheckFlag2 
;FirmV_0_7_0.c,525 :: 		State=3;
0x5076	0x0E03      	MOVLW       3
0x5078	0x6E29      	MOVWF       _State 
;FirmV_0_7_0.c,526 :: 		PassFlag=0;
0x507A	0x6A2A      	CLRF        _PassFlag 
;FirmV_0_7_0.c,527 :: 		}
L_State162:
;FirmV_0_7_0.c,528 :: 		}
0x507C	0x0012      	RETURN      0
; end of _State1
_GetOverloadState:
;FirmV_0_7_0.c,1391 :: 		char GetOverloadState()
;FirmV_0_7_0.c,1393 :: 		char res=0;
0x507E	0x0101      	MOVLB       1
0x5080	0x6B4E      	CLRF        GetOverloadState_res_L0, 1
;FirmV_0_7_0.c,1395 :: 		VCapM1=ADC_Read(0);
0x5082	0x0102      	MOVLB       2
0x5084	0x6B7E      	CLRF        FARG_ADC_Read_channel, 1
0x5086	0xF006EC34  	CALL        _ADC_Read, 0
0x508A	0xF14AC000  	MOVFF       R0, GetOverloadState_VCapM1_L0
0x508E	0xF14BC001  	MOVFF       R1, GetOverloadState_VCapM1_L0+1
;FirmV_0_7_0.c,1396 :: 		VCapM2=ADC_Read(1);
0x5092	0x0E01      	MOVLW       1
0x5094	0x0102      	MOVLB       2
0x5096	0x6F7E      	MOVWF       FARG_ADC_Read_channel, 1
0x5098	0xF006EC34  	CALL        _ADC_Read, 0
0x509C	0xF14CC000  	MOVFF       R0, GetOverloadState_VCapM2_L0
0x50A0	0xF14DC001  	MOVFF       R1, GetOverloadState_VCapM2_L0+1
;FirmV_0_7_0.c,1397 :: 		if(Motor1FullSpeed!=0)
0x50A4	0x5060      	MOVF        _Motor1FullSpeed, 0 
0x50A6	0x0A00      	XORLW       0
0x50A8	0xE011      	BZ          L_GetOverloadState307
;FirmV_0_7_0.c,1399 :: 		if(VCapM1<OverloadTreshold)
0x50AA	0x0101      	MOVLB       1
0x50AC	0x5109      	MOVF        _OverloadTreshold+1, 0, 1
0x50AE	0x5D4B      	SUBWF       GetOverloadState_VCapM1_L0+1, 0, 1
0x50B0	0xE102      	BNZ         L__GetOverloadState635
0x50B2	0x5108      	MOVF        _OverloadTreshold, 0, 1
0x50B4	0x5D4A      	SUBWF       GetOverloadState_VCapM1_L0, 0, 1
L__GetOverloadState635:
0x50B6	0xE205      	BC          L_GetOverloadState308
;FirmV_0_7_0.c,1401 :: 		if(OverloadCounter1<255)
0x50B8	0x0EFF      	MOVLW       255
0x50BA	0x5C45      	SUBWF       _OverloadCounter1, 0 
0x50BC	0xE201      	BC          L_GetOverloadState309
;FirmV_0_7_0.c,1402 :: 		OverloadCounter1=OverloadCounter1+1;
0x50BE	0x2A45      	INCF        _OverloadCounter1, 1 
L_GetOverloadState309:
;FirmV_0_7_0.c,1403 :: 		}
0x50C0	0xD004      	BRA         L_GetOverloadState310
L_GetOverloadState308:
;FirmV_0_7_0.c,1406 :: 		if(OverloadCounter1>0)
0x50C2	0x5045      	MOVF        _OverloadCounter1, 0 
0x50C4	0x0800      	SUBLW       0
0x50C6	0xE201      	BC          L_GetOverloadState311
;FirmV_0_7_0.c,1407 :: 		OverloadCounter1=OverloadCounter1-1;
0x50C8	0x0645      	DECF        _OverloadCounter1, 1 
L_GetOverloadState311:
;FirmV_0_7_0.c,1408 :: 		}
L_GetOverloadState310:
;FirmV_0_7_0.c,1409 :: 		}
0x50CA	0xD001      	BRA         L_GetOverloadState312
L_GetOverloadState307:
;FirmV_0_7_0.c,1411 :: 		{OverloadCounter1=0;}
0x50CC	0x6A45      	CLRF        _OverloadCounter1 
L_GetOverloadState312:
0x50CE	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1413 :: 		if (OverloadCounter1>OverloadDuration)
0x50D0	0x5045      	MOVF        _OverloadCounter1, 0 
0x50D2	0x5D07      	SUBWF       _OverloadDuration, 0, 1
0x50D4	0xE201      	BC          L_GetOverloadState313
;FirmV_0_7_0.c,1414 :: 		res.b0=1;
0x50D6	0x814E      	BSF         GetOverloadState_res_L0, 0, 1
L_GetOverloadState313:
;FirmV_0_7_0.c,1419 :: 		if(Motor2FullSpeed!=0)
0x50D8	0x505F      	MOVF        _Motor2FullSpeed, 0 
0x50DA	0x0A00      	XORLW       0
0x50DC	0xE010      	BZ          L_GetOverloadState314
;FirmV_0_7_0.c,1421 :: 		if(VCapM2<OverloadTreshold)
0x50DE	0x5109      	MOVF        _OverloadTreshold+1, 0, 1
0x50E0	0x5D4D      	SUBWF       GetOverloadState_VCapM2_L0+1, 0, 1
0x50E2	0xE102      	BNZ         L__GetOverloadState636
0x50E4	0x5108      	MOVF        _OverloadTreshold, 0, 1
0x50E6	0x5D4C      	SUBWF       GetOverloadState_VCapM2_L0, 0, 1
L__GetOverloadState636:
0x50E8	0xE205      	BC          L_GetOverloadState315
;FirmV_0_7_0.c,1423 :: 		if(OverloadCounter2<255)
0x50EA	0x0EFF      	MOVLW       255
0x50EC	0x5C46      	SUBWF       _OverloadCounter2, 0 
0x50EE	0xE201      	BC          L_GetOverloadState316
;FirmV_0_7_0.c,1424 :: 		OverloadCounter2=OverloadCounter2+1;
0x50F0	0x2A46      	INCF        _OverloadCounter2, 1 
L_GetOverloadState316:
;FirmV_0_7_0.c,1425 :: 		}
0x50F2	0xD004      	BRA         L_GetOverloadState317
L_GetOverloadState315:
;FirmV_0_7_0.c,1428 :: 		if(OverloadCounter2>0)
0x50F4	0x5046      	MOVF        _OverloadCounter2, 0 
0x50F6	0x0800      	SUBLW       0
0x50F8	0xE201      	BC          L_GetOverloadState318
;FirmV_0_7_0.c,1429 :: 		OverloadCounter2=OverloadCounter2-1;
0x50FA	0x0646      	DECF        _OverloadCounter2, 1 
L_GetOverloadState318:
;FirmV_0_7_0.c,1430 :: 		}
L_GetOverloadState317:
;FirmV_0_7_0.c,1431 :: 		}
0x50FC	0xD001      	BRA         L_GetOverloadState319
L_GetOverloadState314:
;FirmV_0_7_0.c,1433 :: 		{OverloadCounter2=0;}
0x50FE	0x6A46      	CLRF        _OverloadCounter2 
L_GetOverloadState319:
0x5100	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1436 :: 		if (OverloadCounter2>OverloadDuration)
0x5102	0x5046      	MOVF        _OverloadCounter2, 0 
0x5104	0x5D07      	SUBWF       _OverloadDuration, 0, 1
0x5106	0xE201      	BC          L_GetOverloadState320
;FirmV_0_7_0.c,1437 :: 		res.b1=1;
0x5108	0x834E      	BSF         GetOverloadState_res_L0, 1, 1
L_GetOverloadState320:
;FirmV_0_7_0.c,1439 :: 		return res;
0x510A	0xF000C14E  	MOVFF       GetOverloadState_res_L0, R0
;FirmV_0_7_0.c,1440 :: 		}
0x510E	0x0012      	RETURN      0
; end of _GetOverloadState
_GetPhotocellState:
;FirmV_0_7_0.c,1453 :: 		char GetPhotocellState()
;FirmV_0_7_0.c,1455 :: 		if(Phcell==0)
0x5110	0xB083      	BTFSC       PORTD, 0 
0x5112	0xD005      	BRA         L_GetPhotocellState321
;FirmV_0_7_0.c,1456 :: 		{if(PhotocellCount<=20)PhotocellCount=PhotocellCount+1;}
0x5114	0x5044      	MOVF        _PhotocellCount, 0 
0x5116	0x0814      	SUBLW       20
0x5118	0xE301      	BNC         L_GetPhotocellState322
0x511A	0x2A44      	INCF        _PhotocellCount, 1 
L_GetPhotocellState322:
0x511C	0xD001      	BRA         L_GetPhotocellState323
L_GetPhotocellState321:
;FirmV_0_7_0.c,1458 :: 		{PhotocellCount=0;}
0x511E	0x6A44      	CLRF        _PhotocellCount 
L_GetPhotocellState323:
;FirmV_0_7_0.c,1459 :: 		if(PhotocellCount>=20)
0x5120	0x0E14      	MOVLW       20
0x5122	0x5C44      	SUBWF       _PhotocellCount, 0 
0x5124	0xE303      	BNC         L_GetPhotocellState324
;FirmV_0_7_0.c,1460 :: 		return 1;
0x5126	0x0E01      	MOVLW       1
0x5128	0x6E00      	MOVWF       R0 
0x512A	0x0012      	RETURN      0
L_GetPhotocellState324:
;FirmV_0_7_0.c,1462 :: 		return 0;
0x512C	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1463 :: 		}
0x512E	0x0012      	RETURN      0
; end of _GetPhotocellState
_LCDUpdater:
;FirmV_0_7_0.c,1096 :: 		void LCDUpdater()
;FirmV_0_7_0.c,1098 :: 		if(LCDUpdateFlag==1)
0x5130	0x5059      	MOVF        _LCDUpdateFlag, 0 
0x5132	0x0A01      	XORLW       1
0x5134	0xE116      	BNZ         L_LCDUpdater247
;FirmV_0_7_0.c,1100 :: 		lcd_out(1,1,LCDLine1);
0x5136	0x0E01      	MOVLW       1
0x5138	0x0101      	MOVLB       1
0x513A	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x513C	0x0E01      	MOVLW       1
0x513E	0x6F4B      	MOVWF       FARG_Lcd_Out_column, 1
0x5140	0x0E2D      	MOVLW       _LCDLine1
0x5142	0x6F4C      	MOVWF       FARG_Lcd_Out_text, 1
0x5144	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x5146	0x6F4D      	MOVWF       FARG_Lcd_Out_text+1, 1
0x5148	0xF00FECF3  	CALL        _Lcd_Out, 0
;FirmV_0_7_0.c,1101 :: 		lcd_out(2,1,LCDLine2);
0x514C	0x0E02      	MOVLW       2
0x514E	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x5150	0x0E01      	MOVLW       1
0x5152	0x6F4B      	MOVWF       FARG_Lcd_Out_column, 1
0x5154	0x0E48      	MOVLW       _LCDLine2
0x5156	0x6F4C      	MOVWF       FARG_Lcd_Out_text, 1
0x5158	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x515A	0x6F4D      	MOVWF       FARG_Lcd_Out_text+1, 1
0x515C	0xF00FECF3  	CALL        _Lcd_Out, 0
;FirmV_0_7_0.c,1102 :: 		LCDUpdateFlag=0;
0x5160	0x6A59      	CLRF        _LCDUpdateFlag 
;FirmV_0_7_0.c,1103 :: 		}
L_LCDUpdater247:
;FirmV_0_7_0.c,1105 :: 		if(LCDFlash)
0x5162	0x5223      	MOVF        _LCDFlash, 1 
0x5164	0xE029      	BZ          L_LCDUpdater248
;FirmV_0_7_0.c,1107 :: 		if(LCDFlashFlag)
0x5166	0x5222      	MOVF        _LCDFlashFlag, 1 
0x5168	0xE01C      	BZ          L_LCDUpdater249
;FirmV_0_7_0.c,1108 :: 		lcd_out(2,1,"               ");
0x516A	0x0101      	MOVLB       1
0x516C	0x0E02      	MOVLW       2
0x516E	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x5170	0x0E01      	MOVLW       1
0x5172	0x6F4B      	MOVWF       FARG_Lcd_Out_column, 1
0x5174	0x0E71      	MOVLW       ?ICS?lstr69_FirmV_0_7_0
0x5176	0x6EF6      	MOVWF       4086 
0x5178	0x0E5D      	MOVLW       hi_addr(?ICS?lstr69_FirmV_0_7_0)
0x517A	0x6EF7      	MOVWF       TBLPTRH 
0x517C	0x0E00      	MOVLW       higher_addr(?ICS?lstr69_FirmV_0_7_0)
0x517E	0x6EF8      	MOVWF       TBLPTRU 
0x5180	0x0E3A      	MOVLW       ?lstr69_FirmV_0_7_0
0x5182	0x6EE1      	MOVWF       FSR1L 
0x5184	0x0E01      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x5186	0x6EE2      	MOVWF       FSR1H 
0x5188	0x0E10      	MOVLW       16
0x518A	0x6E00      	MOVWF       R0 
0x518C	0x0E01      	MOVLW       1
0x518E	0x6E01      	MOVWF       R1 
0x5190	0xF005EC75  	CALL        ___CC2DW, 0
0x5194	0x0E3A      	MOVLW       ?lstr69_FirmV_0_7_0
0x5196	0x6F4C      	MOVWF       FARG_Lcd_Out_text, 1
0x5198	0x0E01      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x519A	0x6F4D      	MOVWF       FARG_Lcd_Out_text+1, 1
0x519C	0xF00FECF3  	CALL        _Lcd_Out, 0
0x51A0	0xD00B      	BRA         L_LCDUpdater250
L_LCDUpdater249:
0x51A2	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1110 :: 		lcd_out(2,1,LCDLine2);
0x51A4	0x0E02      	MOVLW       2
0x51A6	0x6F4A      	MOVWF       FARG_Lcd_Out_row, 1
0x51A8	0x0E01      	MOVLW       1
0x51AA	0x6F4B      	MOVWF       FARG_Lcd_Out_column, 1
0x51AC	0x0E48      	MOVLW       _LCDLine2
0x51AE	0x6F4C      	MOVWF       FARG_Lcd_Out_text, 1
0x51B0	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x51B2	0x6F4D      	MOVWF       FARG_Lcd_Out_text+1, 1
0x51B4	0xF00FECF3  	CALL        _Lcd_Out, 0
L_LCDUpdater250:
;FirmV_0_7_0.c,1111 :: 		}
L_LCDUpdater248:
;FirmV_0_7_0.c,1114 :: 		}
0x51B8	0x0012      	RETURN      0
; end of _LCDUpdater
_Init:
;FirmV_0_7_0.c,1134 :: 		void Init()
;FirmV_0_7_0.c,1136 :: 		char i=0;
0x51BA	0x0101      	MOVLB       1
0x51BC	0x6B3A      	CLRF        Init_i_L0, 1
;FirmV_0_7_0.c,1138 :: 		porta=0;
0x51BE	0x6A80      	CLRF        PORTA 
;FirmV_0_7_0.c,1139 :: 		portb=0;
0x51C0	0x6A81      	CLRF        PORTB 
;FirmV_0_7_0.c,1140 :: 		portc=0;
0x51C2	0x6A82      	CLRF        PORTC 
;FirmV_0_7_0.c,1141 :: 		portd=0;
0x51C4	0x6A83      	CLRF        PORTD 
;FirmV_0_7_0.c,1142 :: 		porte=0;
0x51C6	0x6A84      	CLRF        PORTE 
;FirmV_0_7_0.c,1143 :: 		trisa=0b111111;
0x51C8	0x0E3F      	MOVLW       63
0x51CA	0x6E92      	MOVWF       TRISA 
;FirmV_0_7_0.c,1144 :: 		trisb=0b00000111;
0x51CC	0x0E07      	MOVLW       7
0x51CE	0x6E93      	MOVWF       TRISB 
;FirmV_0_7_0.c,1145 :: 		trisc=0b10000000;
0x51D0	0x0E80      	MOVLW       128
0x51D2	0x6E94      	MOVWF       TRISC 
;FirmV_0_7_0.c,1146 :: 		trisd=0b01111111;
0x51D4	0x0E7F      	MOVLW       127
0x51D6	0x6E95      	MOVWF       TRISD 
;FirmV_0_7_0.c,1147 :: 		trise=0b001;
0x51D8	0x0E01      	MOVLW       1
0x51DA	0x6E96      	MOVWF       TRISE 
;FirmV_0_7_0.c,1148 :: 		adcon1=0b1001;  // an6 and an7 is digital
0x51DC	0x0E09      	MOVLW       9
0x51DE	0x6EC1      	MOVWF       ADCON1 
;FirmV_0_7_0.c,1153 :: 		lcd_init();
0x51E0	0xF010EC33  	CALL        _Lcd_Init, 0
;FirmV_0_7_0.c,1154 :: 		lcd_cmd(_LCD_CURSOR_OFF);
0x51E4	0x0E0C      	MOVLW       12
0x51E6	0x0104      	MOVLB       4
0x51E8	0x6F27      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x51EA	0xF004ECB2  	CALL        _Lcd_Cmd, 0
;FirmV_0_7_0.c,1157 :: 		ms500=0;
0x51EE	0x6A1C      	CLRF        _ms500 
0x51F0	0x6A1D      	CLRF        _ms500+1 
0x51F2	0x6A1E      	CLRF        _ms500+2 
0x51F4	0x6A1F      	CLRF        _ms500+3 
;FirmV_0_7_0.c,1158 :: 		t0con=0b10000101; //enable tmr0 and prescalar
0x51F6	0x0E85      	MOVLW       133
0x51F8	0x6ED5      	MOVWF       T0CON 
;FirmV_0_7_0.c,1159 :: 		intcon.b7=1;   //global int enable
0x51FA	0x8EF2      	BSF         INTCON, 7 
;FirmV_0_7_0.c,1160 :: 		intcon.b5=1;  //tmr0 int enable
0x51FC	0x8AF2      	BSF         INTCON, 5 
;FirmV_0_7_0.c,1161 :: 		intcon.b2=0; //tmr0 flag
0x51FE	0x94F2      	BCF         INTCON, 2 
;FirmV_0_7_0.c,1162 :: 		tmr0h=0xF3;
0x5200	0x0EF3      	MOVLW       243
0x5202	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,1163 :: 		tmr0l=0xCA;
0x5204	0x0ECA      	MOVLW       202
0x5206	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,1166 :: 		INT1IP_bit=1;
0x5208	0x8CF0      	BSF         INT1IP_bit, 6 
;FirmV_0_7_0.c,1167 :: 		INT1E_bit=1;
0x520A	0x86F0      	BSF         INT1E_bit, 3 
;FirmV_0_7_0.c,1168 :: 		INT1F_bit=0;
0x520C	0x90F0      	BCF         INT1F_bit, 0 
;FirmV_0_7_0.c,1169 :: 		INT2IP_bit=1;
0x520E	0x8EF0      	BSF         INT2IP_bit, 7 
;FirmV_0_7_0.c,1170 :: 		INT2E_bit=1;
0x5210	0x88F0      	BSF         INT2E_bit, 4 
;FirmV_0_7_0.c,1171 :: 		INT2F_bit=0;
0x5212	0x92F0      	BCF         INT2F_bit, 1 
;FirmV_0_7_0.c,1172 :: 		INTEDG1_bit=1;
0x5214	0x8AF1      	BSF         INTEDG1_bit, 5 
;FirmV_0_7_0.c,1173 :: 		INTEDG2_bit=1;
0x5216	0x88F1      	BSF         INTEDG2_bit, 4 
;FirmV_0_7_0.c,1176 :: 		INT0F_bit=0;
0x5218	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,1177 :: 		INT0E_bit=0;
0x521A	0x98F2      	BCF         INT0E_bit, 4 
;FirmV_0_7_0.c,1180 :: 		for(i=0;i<20;i++)
0x521C	0x6B3A      	CLRF        Init_i_L0, 1
L_Init251:
0x521E	0x0E14      	MOVLW       20
0x5220	0x5D3A      	SUBWF       Init_i_L0, 0, 1
0x5222	0xE218      	BC          L_Init252
;FirmV_0_7_0.c,1181 :: 		Tasks[i].Expired=1;
0x5224	0xF000C13A  	MOVFF       Init_i_L0, R0
0x5228	0x0E00      	MOVLW       0
0x522A	0x6E01      	MOVWF       R1 
0x522C	0x0E07      	MOVLW       7
0x522E	0x6E04      	MOVWF       R4 
0x5230	0x0E00      	MOVLW       0
0x5232	0x6E05      	MOVWF       R5 
0x5234	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5238	0x0E71      	MOVLW       _Tasks
0x523A	0x2600      	ADDWF       R0, 1 
0x523C	0x0E00      	MOVLW       hi_addr(_Tasks)
0x523E	0x2201      	ADDWFC      R1, 1 
0x5240	0x0E05      	MOVLW       5
0x5242	0x2400      	ADDWF       R0, 0 
0x5244	0x6EE1      	MOVWF       FSR1L 
0x5246	0x0E00      	MOVLW       0
0x5248	0x2001      	ADDWFC      R1, 0 
0x524A	0x6EE2      	MOVWF       FSR1H 
0x524C	0x0E01      	MOVLW       1
0x524E	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,1180 :: 		for(i=0;i<20;i++)
0x5250	0x2B3A      	INCF        Init_i_L0, 1, 1
;FirmV_0_7_0.c,1181 :: 		Tasks[i].Expired=1;
0x5252	0xD7E5      	BRA         L_Init251
L_Init252:
;FirmV_0_7_0.c,1184 :: 		Events.Keys=0;
0x5254	0x0100      	MOVLB       0
0x5256	0x6BFD      	CLRF        _Events, 1
;FirmV_0_7_0.c,1185 :: 		Events.Task1=0;
0x5258	0x6BFE      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,1186 :: 		Events.Task2=0;
0x525A	0x6BFF      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,1187 :: 		Events.Task3=0;
0x525C	0x0101      	MOVLB       1
0x525E	0x6B00      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,1188 :: 		Events.Remote=0;
0x5260	0x6B01      	CLRF        _Events+4, 1
;FirmV_0_7_0.c,1189 :: 		Events.Overload=0;
0x5262	0x6B02      	CLRF        _Events+5, 1
;FirmV_0_7_0.c,1190 :: 		Events.Photocell=0;
0x5264	0x6B03      	CLRF        _Events+6, 1
;FirmV_0_7_0.c,1193 :: 		State=0;
0x5266	0x6A29      	CLRF        _State 
;FirmV_0_7_0.c,1196 :: 		UART1_init(115200);
0x5268	0x0E15      	MOVLW       21
0x526A	0x6EAF      	MOVWF       SPBRG 
0x526C	0x84AC      	BSF         TXSTA, 2, 0
0x526E	0xF010EC9A  	CALL        _UART1_Init, 0
;FirmV_0_7_0.c,1199 :: 		LoadConfigs();
0x5272	0xF00BECDA  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,1201 :: 		}
0x5276	0x0012      	RETURN      0
; end of _Init
_StateManager:
;FirmV_0_7_0.c,384 :: 		void StateManager()
;FirmV_0_7_0.c,390 :: 		switch(State)
0x5278	0xD02C      	BRA         L_StateManager39
;FirmV_0_7_0.c,393 :: 		case 0: State1(); break;
L_StateManager41:
0x527A	0xDC66      	RCALL       _State1
0x527C	0xD05A      	BRA         L_StateManager40
;FirmV_0_7_0.c,395 :: 		case 1: State1(); break;
L_StateManager42:
0x527E	0xDC64      	RCALL       _State1
0x5280	0xD058      	BRA         L_StateManager40
;FirmV_0_7_0.c,397 :: 		case 2: State2(); break;
L_StateManager43:
0x5282	0xF013EC46  	CALL        _State2, 0
0x5286	0xD055      	BRA         L_StateManager40
;FirmV_0_7_0.c,399 :: 		case 3: State3(); break;
L_StateManager44:
0x5288	0xF01CECC5  	CALL        _State3, 0
0x528C	0xD052      	BRA         L_StateManager40
;FirmV_0_7_0.c,401 :: 		case 4: State4(); break;
L_StateManager45:
0x528E	0xF020EC14  	CALL        _State4, 0
0x5292	0xD04F      	BRA         L_StateManager40
;FirmV_0_7_0.c,403 :: 		case 5: State5(); break;
L_StateManager46:
0x5294	0xF023EC19  	CALL        _State5, 0
0x5298	0xD04C      	BRA         L_StateManager40
;FirmV_0_7_0.c,405 :: 		case 6: State6(); break;
L_StateManager47:
0x529A	0xF01AEC23  	CALL        _State6, 0
0x529E	0xD049      	BRA         L_StateManager40
;FirmV_0_7_0.c,407 :: 		case 7: State7(); break;
L_StateManager48:
0x52A0	0xF010ECC7  	CALL        _State7, 0
0x52A4	0xD046      	BRA         L_StateManager40
;FirmV_0_7_0.c,409 :: 		case 8: State8(); break;
L_StateManager49:
0x52A6	0xF017ECB7  	CALL        _State8, 0
0x52AA	0xD043      	BRA         L_StateManager40
;FirmV_0_7_0.c,411 :: 		case 10:State00(); break;
L_StateManager50:
0x52AC	0xDC14      	RCALL       _State00
0x52AE	0xD041      	BRA         L_StateManager40
;FirmV_0_7_0.c,413 :: 		case 100:Menu0(); break;
L_StateManager51:
0x52B0	0xF006EC6A  	CALL        _Menu0, 0
0x52B4	0xD03E      	BRA         L_StateManager40
;FirmV_0_7_0.c,415 :: 		case 101:Menu1(); break;
L_StateManager52:
0x52B6	0xDC2B      	RCALL       _Menu1
0x52B8	0xD03C      	BRA         L_StateManager40
;FirmV_0_7_0.c,417 :: 		case 102:Menu2(); break;
L_StateManager53:
0x52BA	0xF00DEC47  	CALL        _Menu2, 0
0x52BE	0xD039      	BRA         L_StateManager40
;FirmV_0_7_0.c,419 :: 		case 103:Menu3(); break;
L_StateManager54:
0x52C0	0xF010EC96  	CALL        _Menu3, 0
0x52C4	0xD036      	BRA         L_StateManager40
;FirmV_0_7_0.c,421 :: 		case 200:LearnAuto(); break;
L_StateManager55:
0x52C6	0xF000EC03  	CALL        _LearnAuto, 0
0x52CA	0xD033      	BRA         L_StateManager40
;FirmV_0_7_0.c,423 :: 		case 201:LearnManual(); break;
L_StateManager56:
0x52CC	0xF010ECC6  	CALL        _LearnManual, 0
0x52D0	0xD030      	BRA         L_StateManager40
;FirmV_0_7_0.c,425 :: 		}
L_StateManager39:
0x52D2	0x5029      	MOVF        _State, 0 
0x52D4	0x0A00      	XORLW       0
0x52D6	0xE0D1      	BZ          L_StateManager41
0x52D8	0x5029      	MOVF        _State, 0 
0x52DA	0x0A01      	XORLW       1
0x52DC	0xE0D0      	BZ          L_StateManager42
0x52DE	0x5029      	MOVF        _State, 0 
0x52E0	0x0A02      	XORLW       2
0x52E2	0xE0CF      	BZ          L_StateManager43
0x52E4	0x5029      	MOVF        _State, 0 
0x52E6	0x0A03      	XORLW       3
0x52E8	0xE0CF      	BZ          L_StateManager44
0x52EA	0x5029      	MOVF        _State, 0 
0x52EC	0x0A04      	XORLW       4
0x52EE	0xE0CF      	BZ          L_StateManager45
0x52F0	0x5029      	MOVF        _State, 0 
0x52F2	0x0A05      	XORLW       5
0x52F4	0xE0CF      	BZ          L_StateManager46
0x52F6	0x5029      	MOVF        _State, 0 
0x52F8	0x0A06      	XORLW       6
0x52FA	0xE0CF      	BZ          L_StateManager47
0x52FC	0x5029      	MOVF        _State, 0 
0x52FE	0x0A07      	XORLW       7
0x5300	0xE0CF      	BZ          L_StateManager48
0x5302	0x5029      	MOVF        _State, 0 
0x5304	0x0A08      	XORLW       8
0x5306	0xE0CF      	BZ          L_StateManager49
0x5308	0x5029      	MOVF        _State, 0 
0x530A	0x0A0A      	XORLW       10
0x530C	0xE0CF      	BZ          L_StateManager50
0x530E	0x5029      	MOVF        _State, 0 
0x5310	0x0A64      	XORLW       100
0x5312	0xE0CE      	BZ          L_StateManager51
0x5314	0x5029      	MOVF        _State, 0 
0x5316	0x0A65      	XORLW       101
0x5318	0xE0CE      	BZ          L_StateManager52
0x531A	0x5029      	MOVF        _State, 0 
0x531C	0x0A66      	XORLW       102
0x531E	0xE0CD      	BZ          L_StateManager53
0x5320	0x5029      	MOVF        _State, 0 
0x5322	0x0A67      	XORLW       103
0x5324	0xE0CD      	BZ          L_StateManager54
0x5326	0x5029      	MOVF        _State, 0 
0x5328	0x0AC8      	XORLW       200
0x532A	0xE0CD      	BZ          L_StateManager55
0x532C	0x5029      	MOVF        _State, 0 
0x532E	0x0AC9      	XORLW       201
0x5330	0xE0CD      	BZ          L_StateManager56
L_StateManager40:
;FirmV_0_7_0.c,426 :: 		}
0x5332	0x0012      	RETURN      0
; end of _StateManager
_TaskManager:
;FirmV_0_7_0.c,1215 :: 		void TaskManager()
;FirmV_0_7_0.c,1217 :: 		char i=0;
0x5334	0x0101      	MOVLB       1
0x5336	0x6B3A      	CLRF        TaskManager_i_L0, 1
;FirmV_0_7_0.c,1218 :: 		for(i=0;i<20;i++)
0x5338	0x6B3A      	CLRF        TaskManager_i_L0, 1
L_TaskManager254:
0x533A	0x0E14      	MOVLW       20
0x533C	0x5D3A      	SUBWF       TaskManager_i_L0, 0, 1
0x533E	0xE26F      	BC          L_TaskManager255
;FirmV_0_7_0.c,1219 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Time==ms500)&&(Tasks[i].Fired==0))
0x5340	0xF000C13A  	MOVFF       TaskManager_i_L0, R0
0x5344	0x0E00      	MOVLW       0
0x5346	0x6E01      	MOVWF       R1 
0x5348	0x0E07      	MOVLW       7
0x534A	0x6E04      	MOVWF       R4 
0x534C	0x0E00      	MOVLW       0
0x534E	0x6E05      	MOVWF       R5 
0x5350	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5354	0x0E71      	MOVLW       _Tasks
0x5356	0x2600      	ADDWF       R0, 1 
0x5358	0x0E00      	MOVLW       hi_addr(_Tasks)
0x535A	0x2201      	ADDWFC      R1, 1 
0x535C	0x0E05      	MOVLW       5
0x535E	0x2400      	ADDWF       R0, 0 
0x5360	0x6EE9      	MOVWF       FSR0L 
0x5362	0x0E00      	MOVLW       0
0x5364	0x2001      	ADDWFC      R1, 0 
0x5366	0x6EEA      	MOVWF       FSR0H 
0x5368	0x50EE      	MOVF        POSTINC0, 0 
0x536A	0x0A00      	XORLW       0
0x536C	0xE155      	BNZ         L_TaskManager259
0x536E	0xF000C13A  	MOVFF       TaskManager_i_L0, R0
0x5372	0x0E00      	MOVLW       0
0x5374	0x6E01      	MOVWF       R1 
0x5376	0x0E07      	MOVLW       7
0x5378	0x6E04      	MOVWF       R4 
0x537A	0x0E00      	MOVLW       0
0x537C	0x6E05      	MOVWF       R5 
0x537E	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5382	0x0E71      	MOVLW       _Tasks
0x5384	0x2600      	ADDWF       R0, 1 
0x5386	0x0E00      	MOVLW       hi_addr(_Tasks)
0x5388	0x2201      	ADDWFC      R1, 1 
0x538A	0x0E01      	MOVLW       1
0x538C	0x2400      	ADDWF       R0, 0 
0x538E	0x6EE9      	MOVWF       FSR0L 
0x5390	0x0E00      	MOVLW       0
0x5392	0x2001      	ADDWFC      R1, 0 
0x5394	0x6EEA      	MOVWF       FSR0H 
0x5396	0xF001CFEE  	MOVFF       POSTINC0, R1
0x539A	0xF002CFEE  	MOVFF       POSTINC0, R2
0x539E	0xF003CFEE  	MOVFF       POSTINC0, R3
0x53A2	0xF004CFEE  	MOVFF       POSTINC0, R4
0x53A6	0x5004      	MOVF        R4, 0 
0x53A8	0x181F      	XORWF       _ms500+3, 0 
0x53AA	0xE108      	BNZ         L__TaskManager616
0x53AC	0x5003      	MOVF        R3, 0 
0x53AE	0x181E      	XORWF       _ms500+2, 0 
0x53B0	0xE105      	BNZ         L__TaskManager616
0x53B2	0x5002      	MOVF        R2, 0 
0x53B4	0x181D      	XORWF       _ms500+1, 0 
0x53B6	0xE102      	BNZ         L__TaskManager616
0x53B8	0x5001      	MOVF        R1, 0 
0x53BA	0x181C      	XORWF       _ms500, 0 
L__TaskManager616:
0x53BC	0xE12D      	BNZ         L_TaskManager259
0x53BE	0xF000C13A  	MOVFF       TaskManager_i_L0, R0
0x53C2	0x0E00      	MOVLW       0
0x53C4	0x6E01      	MOVWF       R1 
0x53C6	0x0E07      	MOVLW       7
0x53C8	0x6E04      	MOVWF       R4 
0x53CA	0x0E00      	MOVLW       0
0x53CC	0x6E05      	MOVWF       R5 
0x53CE	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x53D2	0x0E71      	MOVLW       _Tasks
0x53D4	0x2600      	ADDWF       R0, 1 
0x53D6	0x0E00      	MOVLW       hi_addr(_Tasks)
0x53D8	0x2201      	ADDWFC      R1, 1 
0x53DA	0x0E06      	MOVLW       6
0x53DC	0x2400      	ADDWF       R0, 0 
0x53DE	0x6EE9      	MOVWF       FSR0L 
0x53E0	0x0E00      	MOVLW       0
0x53E2	0x2001      	ADDWFC      R1, 0 
0x53E4	0x6EEA      	MOVWF       FSR0H 
0x53E6	0x50EE      	MOVF        POSTINC0, 0 
0x53E8	0x0A00      	XORLW       0
0x53EA	0xE116      	BNZ         L_TaskManager259
L__TaskManager559:
;FirmV_0_7_0.c,1220 :: 		Tasks[i].Fired=1;
0x53EC	0xF000C13A  	MOVFF       TaskManager_i_L0, R0
0x53F0	0x0E00      	MOVLW       0
0x53F2	0x6E01      	MOVWF       R1 
0x53F4	0x0E07      	MOVLW       7
0x53F6	0x6E04      	MOVWF       R4 
0x53F8	0x0E00      	MOVLW       0
0x53FA	0x6E05      	MOVWF       R5 
0x53FC	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5400	0x0E71      	MOVLW       _Tasks
0x5402	0x2600      	ADDWF       R0, 1 
0x5404	0x0E00      	MOVLW       hi_addr(_Tasks)
0x5406	0x2201      	ADDWFC      R1, 1 
0x5408	0x0E06      	MOVLW       6
0x540A	0x2400      	ADDWF       R0, 0 
0x540C	0x6EE1      	MOVWF       FSR1L 
0x540E	0x0E00      	MOVLW       0
0x5410	0x2001      	ADDWFC      R1, 0 
0x5412	0x6EE2      	MOVWF       FSR1H 
0x5414	0x0E01      	MOVLW       1
0x5416	0x6EE6      	MOVWF       POSTINC1 
L_TaskManager259:
0x5418	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1218 :: 		for(i=0;i<20;i++)
0x541A	0x2B3A      	INCF        TaskManager_i_L0, 1, 1
;FirmV_0_7_0.c,1220 :: 		Tasks[i].Fired=1;
0x541C	0xD78E      	BRA         L_TaskManager254
L_TaskManager255:
;FirmV_0_7_0.c,1221 :: 		}
0x541E	0x0012      	RETURN      0
; end of _TaskManager
_EventHandler:
;FirmV_0_7_0.c,1255 :: 		void EventHandler()
;FirmV_0_7_0.c,1258 :: 		Events.ExternalKeys=GetExternalKeysState();
0x5420	0xF00DEC3C  	CALL        _GetExternalKeysState, 0
0x5424	0xF105C000  	MOVFF       R0, _Events+8
;FirmV_0_7_0.c,1259 :: 		Events.Limiter=GetLimitSwitchState();
0x5428	0xF00CEC55  	CALL        _GetLimitSwitchState, 0
0x542C	0xF104C000  	MOVFF       R0, _Events+7
;FirmV_0_7_0.c,1260 :: 		Events.Keys=GetKeysState();
0x5430	0xF00CEC5F  	CALL        _GetKeysState, 0
0x5434	0xF0FDC000  	MOVFF       R0, _Events
;FirmV_0_7_0.c,1261 :: 		Events.Remote=GetRemoteState();
0x5438	0xF013EC1F  	CALL        _GetRemoteState, 0
0x543C	0xF101C000  	MOVFF       R0, _Events+4
;FirmV_0_7_0.c,1262 :: 		Events.Overload=GetOverloadState();
0x5440	0xDE1E      	RCALL       _GetOverloadState
0x5442	0xF102C000  	MOVFF       R0, _Events+5
;FirmV_0_7_0.c,1263 :: 		Events.Photocell=GetPhotocellState();
0x5446	0xDE64      	RCALL       _GetPhotocellState
0x5448	0xF103C000  	MOVFF       R0, _Events+6
;FirmV_0_7_0.c,1265 :: 		for(i=0;i<20;i++)
0x544C	0x0101      	MOVLB       1
0x544E	0x6B3A      	CLRF        EventHandler_i_L0, 1
L_EventHandler264:
0x5450	0x0E14      	MOVLW       20
0x5452	0x5D3A      	SUBWF       EventHandler_i_L0, 0, 1
0x5454	0xB0D8      	BTFSC       STATUS, 0 
0x5456	0xD0DF      	BRA         L_EventHandler265
;FirmV_0_7_0.c,1266 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Fired==1))
0x5458	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x545C	0x0E00      	MOVLW       0
0x545E	0x6E01      	MOVWF       R1 
0x5460	0x0E07      	MOVLW       7
0x5462	0x6E04      	MOVWF       R4 
0x5464	0x0E00      	MOVLW       0
0x5466	0x6E05      	MOVWF       R5 
0x5468	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x546C	0x0E71      	MOVLW       _Tasks
0x546E	0x2600      	ADDWF       R0, 1 
0x5470	0x0E00      	MOVLW       hi_addr(_Tasks)
0x5472	0x2201      	ADDWFC      R1, 1 
0x5474	0x0E05      	MOVLW       5
0x5476	0x2400      	ADDWF       R0, 0 
0x5478	0x6EE9      	MOVWF       FSR0L 
0x547A	0x0E00      	MOVLW       0
0x547C	0x2001      	ADDWFC      R1, 0 
0x547E	0x6EEA      	MOVWF       FSR0H 
0x5480	0x50EE      	MOVF        POSTINC0, 0 
0x5482	0x0A00      	XORLW       0
0x5484	0xA4D8      	BTFSS       STATUS, 2 
0x5486	0xD0C4      	BRA         L_EventHandler269
0x5488	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x548C	0x0E00      	MOVLW       0
0x548E	0x6E01      	MOVWF       R1 
0x5490	0x0E07      	MOVLW       7
0x5492	0x6E04      	MOVWF       R4 
0x5494	0x0E00      	MOVLW       0
0x5496	0x6E05      	MOVWF       R5 
0x5498	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x549C	0x0E71      	MOVLW       _Tasks
0x549E	0x2600      	ADDWF       R0, 1 
0x54A0	0x0E00      	MOVLW       hi_addr(_Tasks)
0x54A2	0x2201      	ADDWFC      R1, 1 
0x54A4	0x0E06      	MOVLW       6
0x54A6	0x2400      	ADDWF       R0, 0 
0x54A8	0x6EE9      	MOVWF       FSR0L 
0x54AA	0x0E00      	MOVLW       0
0x54AC	0x2001      	ADDWFC      R1, 0 
0x54AE	0x6EEA      	MOVWF       FSR0H 
0x54B0	0x50EE      	MOVF        POSTINC0, 0 
0x54B2	0x0A01      	XORLW       1
0x54B4	0xA4D8      	BTFSS       STATUS, 2 
0x54B6	0xD0AC      	BRA         L_EventHandler269
L__EventHandler560:
;FirmV_0_7_0.c,1268 :: 		if(Events.Task1==0)
0x54B8	0x0100      	MOVLB       0
0x54BA	0x51FE      	MOVF        _Events+1, 0, 1
0x54BC	0x0A00      	XORLW       0
0x54BE	0xE136      	BNZ         L_EventHandler270
;FirmV_0_7_0.c,1269 :: 		{Events.Task1=Tasks[i].TaskCode; Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x54C0	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x54C4	0x0E00      	MOVLW       0
0x54C6	0x6E01      	MOVWF       R1 
0x54C8	0x0E07      	MOVLW       7
0x54CA	0x6E04      	MOVWF       R4 
0x54CC	0x0E00      	MOVLW       0
0x54CE	0x6E05      	MOVWF       R5 
0x54D0	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x54D4	0x0E71      	MOVLW       _Tasks
0x54D6	0x2400      	ADDWF       R0, 0 
0x54D8	0x6E02      	MOVWF       R2 
0x54DA	0x0E00      	MOVLW       hi_addr(_Tasks)
0x54DC	0x2001      	ADDWFC      R1, 0 
0x54DE	0x6E03      	MOVWF       R3 
0x54E0	0xFFE9C002  	MOVFF       R2, FSR0L
0x54E4	0xFFEAC003  	MOVFF       R3, FSR0H
0x54E8	0xF000CFEE  	MOVFF       POSTINC0, R0
0x54EC	0xF0FEC000  	MOVFF       R0, _Events+1
0x54F0	0x0E05      	MOVLW       5
0x54F2	0x2402      	ADDWF       R2, 0 
0x54F4	0x6EE1      	MOVWF       FSR1L 
0x54F6	0x0E00      	MOVLW       0
0x54F8	0x2003      	ADDWFC      R3, 0 
0x54FA	0x6EE2      	MOVWF       FSR1H 
0x54FC	0x0E01      	MOVLW       1
0x54FE	0x6EE6      	MOVWF       POSTINC1 
0x5500	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x5504	0x0E00      	MOVLW       0
0x5506	0x6E01      	MOVWF       R1 
0x5508	0x0E07      	MOVLW       7
0x550A	0x6E04      	MOVWF       R4 
0x550C	0x0E00      	MOVLW       0
0x550E	0x6E05      	MOVWF       R5 
0x5510	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5514	0x0E71      	MOVLW       _Tasks
0x5516	0x2600      	ADDWF       R0, 1 
0x5518	0x0E00      	MOVLW       hi_addr(_Tasks)
0x551A	0x2201      	ADDWFC      R1, 1 
0x551C	0x0E06      	MOVLW       6
0x551E	0x2400      	ADDWF       R0, 0 
0x5520	0x6EE1      	MOVWF       FSR1L 
0x5522	0x0E00      	MOVLW       0
0x5524	0x2001      	ADDWFC      R1, 0 
0x5526	0x6EE2      	MOVWF       FSR1H 
0x5528	0x6AE6      	CLRF        POSTINC1 
0x552A	0xD072      	BRA         L_EventHandler271
L_EventHandler270:
;FirmV_0_7_0.c,1270 :: 		else if(Events.Task2==0)
0x552C	0x51FF      	MOVF        _Events+2, 0, 1
0x552E	0x0A00      	XORLW       0
0x5530	0xE136      	BNZ         L_EventHandler272
;FirmV_0_7_0.c,1271 :: 		{Events.Task2=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x5532	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x5536	0x0E00      	MOVLW       0
0x5538	0x6E01      	MOVWF       R1 
0x553A	0x0E07      	MOVLW       7
0x553C	0x6E04      	MOVWF       R4 
0x553E	0x0E00      	MOVLW       0
0x5540	0x6E05      	MOVWF       R5 
0x5542	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5546	0x0E71      	MOVLW       _Tasks
0x5548	0x2400      	ADDWF       R0, 0 
0x554A	0x6E02      	MOVWF       R2 
0x554C	0x0E00      	MOVLW       hi_addr(_Tasks)
0x554E	0x2001      	ADDWFC      R1, 0 
0x5550	0x6E03      	MOVWF       R3 
0x5552	0xFFE9C002  	MOVFF       R2, FSR0L
0x5556	0xFFEAC003  	MOVFF       R3, FSR0H
0x555A	0xF000CFEE  	MOVFF       POSTINC0, R0
0x555E	0xF0FFC000  	MOVFF       R0, _Events+2
0x5562	0x0E05      	MOVLW       5
0x5564	0x2402      	ADDWF       R2, 0 
0x5566	0x6EE1      	MOVWF       FSR1L 
0x5568	0x0E00      	MOVLW       0
0x556A	0x2003      	ADDWFC      R3, 0 
0x556C	0x6EE2      	MOVWF       FSR1H 
0x556E	0x0E01      	MOVLW       1
0x5570	0x6EE6      	MOVWF       POSTINC1 
0x5572	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x5576	0x0E00      	MOVLW       0
0x5578	0x6E01      	MOVWF       R1 
0x557A	0x0E07      	MOVLW       7
0x557C	0x6E04      	MOVWF       R4 
0x557E	0x0E00      	MOVLW       0
0x5580	0x6E05      	MOVWF       R5 
0x5582	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x5586	0x0E71      	MOVLW       _Tasks
0x5588	0x2600      	ADDWF       R0, 1 
0x558A	0x0E00      	MOVLW       hi_addr(_Tasks)
0x558C	0x2201      	ADDWFC      R1, 1 
0x558E	0x0E06      	MOVLW       6
0x5590	0x2400      	ADDWF       R0, 0 
0x5592	0x6EE1      	MOVWF       FSR1L 
0x5594	0x0E00      	MOVLW       0
0x5596	0x2001      	ADDWFC      R1, 0 
0x5598	0x6EE2      	MOVWF       FSR1H 
0x559A	0x6AE6      	CLRF        POSTINC1 
0x559C	0xD039      	BRA         L_EventHandler273
L_EventHandler272:
;FirmV_0_7_0.c,1272 :: 		else if(Events.Task3==0)
0x559E	0x0101      	MOVLB       1
0x55A0	0x5100      	MOVF        _Events+3, 0, 1
0x55A2	0x0A00      	XORLW       0
0x55A4	0xE135      	BNZ         L_EventHandler274
;FirmV_0_7_0.c,1273 :: 		{Events.Task3=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x55A6	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x55AA	0x0E00      	MOVLW       0
0x55AC	0x6E01      	MOVWF       R1 
0x55AE	0x0E07      	MOVLW       7
0x55B0	0x6E04      	MOVWF       R4 
0x55B2	0x0E00      	MOVLW       0
0x55B4	0x6E05      	MOVWF       R5 
0x55B6	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x55BA	0x0E71      	MOVLW       _Tasks
0x55BC	0x2400      	ADDWF       R0, 0 
0x55BE	0x6E02      	MOVWF       R2 
0x55C0	0x0E00      	MOVLW       hi_addr(_Tasks)
0x55C2	0x2001      	ADDWFC      R1, 0 
0x55C4	0x6E03      	MOVWF       R3 
0x55C6	0xFFE9C002  	MOVFF       R2, FSR0L
0x55CA	0xFFEAC003  	MOVFF       R3, FSR0H
0x55CE	0xF000CFEE  	MOVFF       POSTINC0, R0
0x55D2	0xF100C000  	MOVFF       R0, _Events+3
0x55D6	0x0E05      	MOVLW       5
0x55D8	0x2402      	ADDWF       R2, 0 
0x55DA	0x6EE1      	MOVWF       FSR1L 
0x55DC	0x0E00      	MOVLW       0
0x55DE	0x2003      	ADDWFC      R3, 0 
0x55E0	0x6EE2      	MOVWF       FSR1H 
0x55E2	0x0E01      	MOVLW       1
0x55E4	0x6EE6      	MOVWF       POSTINC1 
0x55E6	0xF000C13A  	MOVFF       EventHandler_i_L0, R0
0x55EA	0x0E00      	MOVLW       0
0x55EC	0x6E01      	MOVWF       R1 
0x55EE	0x0E07      	MOVLW       7
0x55F0	0x6E04      	MOVWF       R4 
0x55F2	0x0E00      	MOVLW       0
0x55F4	0x6E05      	MOVWF       R5 
0x55F6	0xF003ECB8  	CALL        _Mul_16x16_U, 0
0x55FA	0x0E71      	MOVLW       _Tasks
0x55FC	0x2600      	ADDWF       R0, 1 
0x55FE	0x0E00      	MOVLW       hi_addr(_Tasks)
0x5600	0x2201      	ADDWFC      R1, 1 
0x5602	0x0E06      	MOVLW       6
0x5604	0x2400      	ADDWF       R0, 0 
0x5606	0x6EE1      	MOVWF       FSR1L 
0x5608	0x0E00      	MOVLW       0
0x560A	0x2001      	ADDWFC      R1, 0 
0x560C	0x6EE2      	MOVWF       FSR1H 
0x560E	0x6AE6      	CLRF        POSTINC1 
L_EventHandler274:
L_EventHandler273:
L_EventHandler271:
;FirmV_0_7_0.c,1274 :: 		}
L_EventHandler269:
0x5610	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1265 :: 		for(i=0;i<20;i++)
0x5612	0x2B3A      	INCF        EventHandler_i_L0, 1, 1
;FirmV_0_7_0.c,1274 :: 		}
0x5614	0xD71D      	BRA         L_EventHandler264
L_EventHandler265:
;FirmV_0_7_0.c,1275 :: 		}
0x5616	0x0012      	RETURN      0
; end of _EventHandler
_ResetTaskEvents:
;FirmV_0_7_0.c,286 :: 		void ResetTaskEvents()
;FirmV_0_7_0.c,288 :: 		Events.Task1=0;
0x5618	0x0100      	MOVLB       0
0x561A	0x6BFE      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,289 :: 		Events.Task2=0;
0x561C	0x6BFF      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,290 :: 		Events.Task3=0;
0x561E	0x0101      	MOVLB       1
0x5620	0x6B00      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,291 :: 		}
0x5622	0x0012      	RETURN      0
; end of _ResetTaskEvents
_main:
0x5624	0xF02EECC1  	CALL        23938, 0
;FirmV_0_7_0.c,329 :: 		void main() {
;FirmV_0_7_0.c,331 :: 		PhotocellRel=1;
0x5628	0x8A82      	BSF         PORTC, 5 
;FirmV_0_7_0.c,333 :: 		Init();
0x562A	0xDDC7      	RCALL       _Init
;FirmV_0_7_0.c,335 :: 		Logger("Start ...");
0x562C	0x0E53      	MOVLW       83
0x562E	0x0101      	MOVLB       1
0x5630	0x6F30      	MOVWF       ?lstr2_FirmV_0_7_0, 1
0x5632	0x0E74      	MOVLW       116
0x5634	0x6F31      	MOVWF       ?lstr2_FirmV_0_7_0+1, 1
0x5636	0x0E61      	MOVLW       97
0x5638	0x6F32      	MOVWF       ?lstr2_FirmV_0_7_0+2, 1
0x563A	0x0E72      	MOVLW       114
0x563C	0x6F33      	MOVWF       ?lstr2_FirmV_0_7_0+3, 1
0x563E	0x0E74      	MOVLW       116
0x5640	0x6F34      	MOVWF       ?lstr2_FirmV_0_7_0+4, 1
0x5642	0x0E20      	MOVLW       32
0x5644	0x6F35      	MOVWF       ?lstr2_FirmV_0_7_0+5, 1
0x5646	0x0E2E      	MOVLW       46
0x5648	0x6F36      	MOVWF       ?lstr2_FirmV_0_7_0+6, 1
0x564A	0x0E2E      	MOVLW       46
0x564C	0x6F37      	MOVWF       ?lstr2_FirmV_0_7_0+7, 1
0x564E	0x0E2E      	MOVLW       46
0x5650	0x6F38      	MOVWF       ?lstr2_FirmV_0_7_0+8, 1
0x5652	0x6B39      	CLRF        ?lstr2_FirmV_0_7_0+9, 1
0x5654	0x0E30      	MOVLW       ?lstr2_FirmV_0_7_0
0x5656	0x0102      	MOVLB       2
0x5658	0x6F7E      	MOVWF       FARG_Logger_text, 1
0x565A	0x0E01      	MOVLW       hi_addr(?lstr2_FirmV_0_7_0)
0x565C	0x6F7F      	MOVWF       FARG_Logger_text+1, 1
0x565E	0xF00AECC5  	CALL        _Logger, 0
;FirmV_0_7_0.c,339 :: 		while(1)
L_main34:
;FirmV_0_7_0.c,341 :: 		if(Flag20ms==1)
0x5662	0x5043      	MOVF        _Flag20ms, 0 
0x5664	0x0A01      	XORLW       1
0x5666	0xE106      	BNZ         L_main36
;FirmV_0_7_0.c,343 :: 		if(DebouncingDelay<DebouncingFix)
0x5668	0x0E05      	MOVLW       5
0x566A	0x5C5D      	SUBWF       _DebouncingDelay, 0 
0x566C	0xE201      	BC          L_main37
;FirmV_0_7_0.c,344 :: 		DebouncingDelay=DebouncingDelay+1;
0x566E	0x2A5D      	INCF        _DebouncingDelay, 1 
L_main37:
;FirmV_0_7_0.c,345 :: 		LCDUpdater();
0x5670	0xDD5F      	RCALL       _LCDUpdater
;FirmV_0_7_0.c,346 :: 		Flag20ms=0;
0x5672	0x6A43      	CLRF        _Flag20ms 
;FirmV_0_7_0.c,347 :: 		}
L_main36:
;FirmV_0_7_0.c,349 :: 		if(Flag500ms==1)
0x5674	0x5042      	MOVF        _Flag500ms, 0 
0x5676	0x0A01      	XORLW       1
0x5678	0xE103      	BNZ         L_main38
;FirmV_0_7_0.c,351 :: 		ResetTaskEvents();
0x567A	0xDFCE      	RCALL       _ResetTaskEvents
;FirmV_0_7_0.c,352 :: 		TaskManager();
0x567C	0xDE5B      	RCALL       _TaskManager
;FirmV_0_7_0.c,353 :: 		Flag500ms=0;
0x567E	0x6A42      	CLRF        _Flag500ms 
;FirmV_0_7_0.c,354 :: 		}
L_main38:
;FirmV_0_7_0.c,355 :: 		EventHandler();
0x5680	0xDECF      	RCALL       _EventHandler
;FirmV_0_7_0.c,356 :: 		StateManager();
0x5682	0xDDFA      	RCALL       _StateManager
;FirmV_0_7_0.c,357 :: 		}
0x5684	0xD7EE      	BRA         L_main34
;FirmV_0_7_0.c,359 :: 		}
0x5686	0xD7FF      	BRA         $+0
; end of _main
0x5D82	0xF01AEE10  	LFSR        1, 26
0x5D86	0x0E48      	MOVLW       72
0x5D88	0x6E00      	MOVWF       R0 
0x5D8A	0x0E01      	MOVLW       1
0x5D8C	0x6E01      	MOVWF       R1 
0x5D8E	0x0E84      	MOVLW       132
0x5D90	0x6EF6      	MOVWF       4086 
0x5D92	0x0E5C      	MOVLW       92
0x5D94	0x6EF7      	MOVWF       TBLPTRH 
0x5D96	0x0E00      	MOVLW       0
0x5D98	0x6EF8      	MOVWF       TBLPTRU 
0x5D9A	0xF005EC75  	CALL        2794, 0
0x5D9E	0x0012      	RETURN      0
;FirmV_0_7_0.c,0 :: ?ICS?lstr70_FirmV_0_7_0
0x5688	0x2020 ;?ICS?lstr70_FirmV_0_7_0+0
0x568A	0x2020 ;?ICS?lstr70_FirmV_0_7_0+2
0x568C	0x2020 ;?ICS?lstr70_FirmV_0_7_0+4
0x568E	0x2020 ;?ICS?lstr70_FirmV_0_7_0+6
0x5690	0x2020 ;?ICS?lstr70_FirmV_0_7_0+8
0x5692	0x2020 ;?ICS?lstr70_FirmV_0_7_0+10
0x5694	0x2020 ;?ICS?lstr70_FirmV_0_7_0+12
0x5696	0x2020 ;?ICS?lstr70_FirmV_0_7_0+14
0x5698	0x00 ;?ICS?lstr70_FirmV_0_7_0+16
; end of ?ICS?lstr70_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr71_FirmV_0_7_0
0x5699	0x3030 ;?ICS?lstr71_FirmV_0_7_0+0
0x569B	0x4C20 ;?ICS?lstr71_FirmV_0_7_0+2
0x569D	0x6165 ;?ICS?lstr71_FirmV_0_7_0+4
0x569F	0x6E72 ;?ICS?lstr71_FirmV_0_7_0+6
0x56A1	0x6E69 ;?ICS?lstr71_FirmV_0_7_0+8
0x56A3	0x2067 ;?ICS?lstr71_FirmV_0_7_0+10
0x56A5	0x6F4D ;?ICS?lstr71_FirmV_0_7_0+12
0x56A7	0x6564 ;?ICS?lstr71_FirmV_0_7_0+14
0x56A9	0x00 ;?ICS?lstr71_FirmV_0_7_0+16
; end of ?ICS?lstr71_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr72_FirmV_0_7_0
0x56AA	0x2020 ;?ICS?lstr72_FirmV_0_7_0+0
0x56AC	0x2020 ;?ICS?lstr72_FirmV_0_7_0+2
0x56AE	0x2020 ;?ICS?lstr72_FirmV_0_7_0+4
0x56B0	0x7541 ;?ICS?lstr72_FirmV_0_7_0+6
0x56B2	0x6F74 ;?ICS?lstr72_FirmV_0_7_0+8
0x56B4	0x2020 ;?ICS?lstr72_FirmV_0_7_0+10
0x56B6	0x2020 ;?ICS?lstr72_FirmV_0_7_0+12
0x56B8	0x2020 ;?ICS?lstr72_FirmV_0_7_0+14
0x56BA	0x00 ;?ICS?lstr72_FirmV_0_7_0+16
; end of ?ICS?lstr72_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr73_FirmV_0_7_0
0x56BB	0x2020 ;?ICS?lstr73_FirmV_0_7_0+0
0x56BD	0x2020 ;?ICS?lstr73_FirmV_0_7_0+2
0x56BF	0x4D20 ;?ICS?lstr73_FirmV_0_7_0+4
0x56C1	0x6E61 ;?ICS?lstr73_FirmV_0_7_0+6
0x56C3	0x6175 ;?ICS?lstr73_FirmV_0_7_0+8
0x56C5	0x206C ;?ICS?lstr73_FirmV_0_7_0+10
0x56C7	0x2020 ;?ICS?lstr73_FirmV_0_7_0+12
0x56C9	0x2020 ;?ICS?lstr73_FirmV_0_7_0+14
0x56CB	0x00 ;?ICS?lstr73_FirmV_0_7_0+16
; end of ?ICS?lstr73_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr74_FirmV_0_7_0
0x56CC	0x3130 ;?ICS?lstr74_FirmV_0_7_0+0
0x56CE	0x4420 ;?ICS?lstr74_FirmV_0_7_0+2
0x56D0	0x2031 ;?ICS?lstr74_FirmV_0_7_0+4
0x56D2	0x704F ;?ICS?lstr74_FirmV_0_7_0+6
0x56D4	0x6E65 ;?ICS?lstr74_FirmV_0_7_0+8
0x56D6	0x5420 ;?ICS?lstr74_FirmV_0_7_0+10
0x56D8	0x6D69 ;?ICS?lstr74_FirmV_0_7_0+12
0x56DA	0x2065 ;?ICS?lstr74_FirmV_0_7_0+14
0x56DC	0x00 ;?ICS?lstr74_FirmV_0_7_0+16
; end of ?ICS?lstr74_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr75_FirmV_0_7_0
0x56DD	0x3230 ;?ICS?lstr75_FirmV_0_7_0+0
0x56DF	0x4420 ;?ICS?lstr75_FirmV_0_7_0+2
0x56E1	0x2032 ;?ICS?lstr75_FirmV_0_7_0+4
0x56E3	0x704F ;?ICS?lstr75_FirmV_0_7_0+6
0x56E5	0x6E65 ;?ICS?lstr75_FirmV_0_7_0+8
0x56E7	0x5420 ;?ICS?lstr75_FirmV_0_7_0+10
0x56E9	0x6D69 ;?ICS?lstr75_FirmV_0_7_0+12
0x56EB	0x2065 ;?ICS?lstr75_FirmV_0_7_0+14
0x56ED	0x00 ;?ICS?lstr75_FirmV_0_7_0+16
; end of ?ICS?lstr75_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr76_FirmV_0_7_0
0x56EE	0x3330 ;?ICS?lstr76_FirmV_0_7_0+0
0x56F0	0x4420 ;?ICS?lstr76_FirmV_0_7_0+2
0x56F2	0x2031 ;?ICS?lstr76_FirmV_0_7_0+4
0x56F4	0x6C43 ;?ICS?lstr76_FirmV_0_7_0+6
0x56F6	0x736F ;?ICS?lstr76_FirmV_0_7_0+8
0x56F8	0x2065 ;?ICS?lstr76_FirmV_0_7_0+10
0x56FA	0x6954 ;?ICS?lstr76_FirmV_0_7_0+12
0x56FC	0x656D ;?ICS?lstr76_FirmV_0_7_0+14
0x56FE	0x00 ;?ICS?lstr76_FirmV_0_7_0+16
; end of ?ICS?lstr76_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr77_FirmV_0_7_0
0x56FF	0x3430 ;?ICS?lstr77_FirmV_0_7_0+0
0x5701	0x4420 ;?ICS?lstr77_FirmV_0_7_0+2
0x5703	0x2032 ;?ICS?lstr77_FirmV_0_7_0+4
0x5705	0x6C43 ;?ICS?lstr77_FirmV_0_7_0+6
0x5707	0x736F ;?ICS?lstr77_FirmV_0_7_0+8
0x5709	0x2065 ;?ICS?lstr77_FirmV_0_7_0+10
0x570B	0x6954 ;?ICS?lstr77_FirmV_0_7_0+12
0x570D	0x656D ;?ICS?lstr77_FirmV_0_7_0+14
0x570F	0x00 ;?ICS?lstr77_FirmV_0_7_0+16
; end of ?ICS?lstr77_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr78_FirmV_0_7_0
0x5710	0x3530 ;?ICS?lstr78_FirmV_0_7_0+0
0x5712	0x4F20 ;?ICS?lstr78_FirmV_0_7_0+2
0x5714	0x2070 ;?ICS?lstr78_FirmV_0_7_0+4
0x5716	0x6F53 ;?ICS?lstr78_FirmV_0_7_0+6
0x5718	0x7466 ;?ICS?lstr78_FirmV_0_7_0+8
0x571A	0x5320 ;?ICS?lstr78_FirmV_0_7_0+10
0x571C	0x6174 ;?ICS?lstr78_FirmV_0_7_0+12
0x571E	0x7472 ;?ICS?lstr78_FirmV_0_7_0+14
0x5720	0x00 ;?ICS?lstr78_FirmV_0_7_0+16
; end of ?ICS?lstr78_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr79_FirmV_0_7_0
0x5721	0x3630 ;?ICS?lstr79_FirmV_0_7_0+0
0x5723	0x4F20 ;?ICS?lstr79_FirmV_0_7_0+2
0x5725	0x2070 ;?ICS?lstr79_FirmV_0_7_0+4
0x5727	0x6F53 ;?ICS?lstr79_FirmV_0_7_0+6
0x5729	0x7466 ;?ICS?lstr79_FirmV_0_7_0+8
0x572B	0x5320 ;?ICS?lstr79_FirmV_0_7_0+10
0x572D	0x6F74 ;?ICS?lstr79_FirmV_0_7_0+12
0x572F	0x2070 ;?ICS?lstr79_FirmV_0_7_0+14
0x5731	0x00 ;?ICS?lstr79_FirmV_0_7_0+16
; end of ?ICS?lstr79_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr80_FirmV_0_7_0
0x5732	0x3730 ;?ICS?lstr80_FirmV_0_7_0+0
0x5734	0x4320 ;?ICS?lstr80_FirmV_0_7_0+2
0x5736	0x206C ;?ICS?lstr80_FirmV_0_7_0+4
0x5738	0x6F53 ;?ICS?lstr80_FirmV_0_7_0+6
0x573A	0x7466 ;?ICS?lstr80_FirmV_0_7_0+8
0x573C	0x5320 ;?ICS?lstr80_FirmV_0_7_0+10
0x573E	0x6174 ;?ICS?lstr80_FirmV_0_7_0+12
0x5740	0x7472 ;?ICS?lstr80_FirmV_0_7_0+14
0x5742	0x00 ;?ICS?lstr80_FirmV_0_7_0+16
; end of ?ICS?lstr80_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr81_FirmV_0_7_0
0x5743	0x3830 ;?ICS?lstr81_FirmV_0_7_0+0
0x5745	0x4320 ;?ICS?lstr81_FirmV_0_7_0+2
0x5747	0x206C ;?ICS?lstr81_FirmV_0_7_0+4
0x5749	0x6F53 ;?ICS?lstr81_FirmV_0_7_0+6
0x574B	0x7466 ;?ICS?lstr81_FirmV_0_7_0+8
0x574D	0x5320 ;?ICS?lstr81_FirmV_0_7_0+10
0x574F	0x6F74 ;?ICS?lstr81_FirmV_0_7_0+12
0x5751	0x2070 ;?ICS?lstr81_FirmV_0_7_0+14
0x5753	0x00 ;?ICS?lstr81_FirmV_0_7_0+16
; end of ?ICS?lstr81_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr82_FirmV_0_7_0
0x5754	0x3930 ;?ICS?lstr82_FirmV_0_7_0+0
0x5756	0x5020 ;?ICS?lstr82_FirmV_0_7_0+2
0x5758	0x776F ;?ICS?lstr82_FirmV_0_7_0+4
0x575A	0x7265 ;?ICS?lstr82_FirmV_0_7_0+6
0x575C	0x2020 ;?ICS?lstr82_FirmV_0_7_0+8
0x575E	0x2020 ;?ICS?lstr82_FirmV_0_7_0+10
0x5760	0x2020 ;?ICS?lstr82_FirmV_0_7_0+12
0x5762	0x2020 ;?ICS?lstr82_FirmV_0_7_0+14
0x5764	0x00 ;?ICS?lstr82_FirmV_0_7_0+16
; end of ?ICS?lstr82_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr83_FirmV_0_7_0
0x5765	0x3031 ;?ICS?lstr83_FirmV_0_7_0+0
0x5767	0x4920 ;?ICS?lstr83_FirmV_0_7_0+2
0x5769	0x746E ;?ICS?lstr83_FirmV_0_7_0+4
0x576B	0x7265 ;?ICS?lstr83_FirmV_0_7_0+6
0x576D	0x6176 ;?ICS?lstr83_FirmV_0_7_0+8
0x576F	0x206C ;?ICS?lstr83_FirmV_0_7_0+10
0x5771	0x6954 ;?ICS?lstr83_FirmV_0_7_0+12
0x5773	0x656D ;?ICS?lstr83_FirmV_0_7_0+14
0x5775	0x00 ;?ICS?lstr83_FirmV_0_7_0+16
; end of ?ICS?lstr83_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr84_FirmV_0_7_0
0x5776	0x3131 ;?ICS?lstr84_FirmV_0_7_0+0
0x5778	0x4120 ;?ICS?lstr84_FirmV_0_7_0+2
0x577A	0x7475 ;?ICS?lstr84_FirmV_0_7_0+4
0x577C	0x2D6F ;?ICS?lstr84_FirmV_0_7_0+6
0x577E	0x6C63 ;?ICS?lstr84_FirmV_0_7_0+8
0x5780	0x736F ;?ICS?lstr84_FirmV_0_7_0+10
0x5782	0x2065 ;?ICS?lstr84_FirmV_0_7_0+12
0x5784	0x2054 ;?ICS?lstr84_FirmV_0_7_0+14
0x5786	0x00 ;?ICS?lstr84_FirmV_0_7_0+16
; end of ?ICS?lstr84_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr85_FirmV_0_7_0
0x5787	0x3231 ;?ICS?lstr85_FirmV_0_7_0+0
0x5789	0x4620 ;?ICS?lstr85_FirmV_0_7_0+2
0x578B	0x6361 ;?ICS?lstr85_FirmV_0_7_0+4
0x578D	0x6F74 ;?ICS?lstr85_FirmV_0_7_0+6
0x578F	0x7972 ;?ICS?lstr85_FirmV_0_7_0+8
0x5791	0x5220 ;?ICS?lstr85_FirmV_0_7_0+10
0x5793	0x7365 ;?ICS?lstr85_FirmV_0_7_0+12
0x5795	0x7465 ;?ICS?lstr85_FirmV_0_7_0+14
0x5797	0x00 ;?ICS?lstr85_FirmV_0_7_0+16
; end of ?ICS?lstr85_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr86_FirmV_0_7_0
0x5798	0x3331 ;?ICS?lstr86_FirmV_0_7_0+0
0x579A	0x4F20 ;?ICS?lstr86_FirmV_0_7_0+2
0x579C	0x6570 ;?ICS?lstr86_FirmV_0_7_0+4
0x579E	0x206E ;?ICS?lstr86_FirmV_0_7_0+6
0x57A0	0x6850 ;?ICS?lstr86_FirmV_0_7_0+8
0x57A2	0x746F ;?ICS?lstr86_FirmV_0_7_0+10
0x57A4	0x206F ;?ICS?lstr86_FirmV_0_7_0+12
0x57A6	0x6E45 ;?ICS?lstr86_FirmV_0_7_0+14
0x57A8	0x00 ;?ICS?lstr86_FirmV_0_7_0+16
; end of ?ICS?lstr86_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr87_FirmV_0_7_0
0x57A9	0x6F4E ;?ICS?lstr87_FirmV_0_7_0+0
0x57AB	0x2020 ;?ICS?lstr87_FirmV_0_7_0+2
0x57AD	0x2020 ;?ICS?lstr87_FirmV_0_7_0+4
0x57AF	0x0020 ;?ICS?lstr87_FirmV_0_7_0+6
; end of ?ICS?lstr87_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr88_FirmV_0_7_0
0x57B1	0x6559 ;?ICS?lstr88_FirmV_0_7_0+0
0x57B3	0x2073 ;?ICS?lstr88_FirmV_0_7_0+2
0x57B5	0x2020 ;?ICS?lstr88_FirmV_0_7_0+4
0x57B7	0x2020 ;?ICS?lstr88_FirmV_0_7_0+6
0x57B9	0x00 ;?ICS?lstr88_FirmV_0_7_0+8
; end of ?ICS?lstr88_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr89_FirmV_0_7_0
0x57BA	0x3431 ;?ICS?lstr89_FirmV_0_7_0+0
0x57BC	0x4C20 ;?ICS?lstr89_FirmV_0_7_0+2
0x57BE	0x6D69 ;?ICS?lstr89_FirmV_0_7_0+4
0x57C0	0x7469 ;?ICS?lstr89_FirmV_0_7_0+6
0x57C2	0x4520 ;?ICS?lstr89_FirmV_0_7_0+8
0x57C4	0x616E ;?ICS?lstr89_FirmV_0_7_0+10
0x57C6	0x6C62 ;?ICS?lstr89_FirmV_0_7_0+12
0x57C8	0x2065 ;?ICS?lstr89_FirmV_0_7_0+14
0x57CA	0x00 ;?ICS?lstr89_FirmV_0_7_0+16
; end of ?ICS?lstr89_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr90_FirmV_0_7_0
0x57CB	0x6F4E ;?ICS?lstr90_FirmV_0_7_0+0
0x57CD	0x2020 ;?ICS?lstr90_FirmV_0_7_0+2
0x57CF	0x2020 ;?ICS?lstr90_FirmV_0_7_0+4
0x57D1	0x0020 ;?ICS?lstr90_FirmV_0_7_0+6
; end of ?ICS?lstr90_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr91_FirmV_0_7_0
0x57D3	0x6559 ;?ICS?lstr91_FirmV_0_7_0+0
0x57D5	0x2073 ;?ICS?lstr91_FirmV_0_7_0+2
0x57D7	0x2020 ;?ICS?lstr91_FirmV_0_7_0+4
0x57D9	0x2020 ;?ICS?lstr91_FirmV_0_7_0+6
0x57DB	0x00 ;?ICS?lstr91_FirmV_0_7_0+8
; end of ?ICS?lstr91_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr92_FirmV_0_7_0
0x57DC	0x3531 ;?ICS?lstr92_FirmV_0_7_0+0
0x57DE	0x4C20 ;?ICS?lstr92_FirmV_0_7_0+2
0x57E0	0x636F ;?ICS?lstr92_FirmV_0_7_0+4
0x57E2	0x206B ;?ICS?lstr92_FirmV_0_7_0+6
0x57E4	0x6F46 ;?ICS?lstr92_FirmV_0_7_0+8
0x57E6	0x6372 ;?ICS?lstr92_FirmV_0_7_0+10
0x57E8	0x2065 ;?ICS?lstr92_FirmV_0_7_0+12
0x57EA	0x2020 ;?ICS?lstr92_FirmV_0_7_0+14
0x57EC	0x00 ;?ICS?lstr92_FirmV_0_7_0+16
; end of ?ICS?lstr92_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr93_FirmV_0_7_0
0x57ED	0x6F4E ;?ICS?lstr93_FirmV_0_7_0+0
0x57EF	0x2020 ;?ICS?lstr93_FirmV_0_7_0+2
0x57F1	0x2020 ;?ICS?lstr93_FirmV_0_7_0+4
0x57F3	0x0020 ;?ICS?lstr93_FirmV_0_7_0+6
; end of ?ICS?lstr93_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr94_FirmV_0_7_0
0x57F5	0x6559 ;?ICS?lstr94_FirmV_0_7_0+0
0x57F7	0x2073 ;?ICS?lstr94_FirmV_0_7_0+2
0x57F9	0x2020 ;?ICS?lstr94_FirmV_0_7_0+4
0x57FB	0x2020 ;?ICS?lstr94_FirmV_0_7_0+6
0x57FD	0x00 ;?ICS?lstr94_FirmV_0_7_0+8
; end of ?ICS?lstr94_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr95_FirmV_0_7_0
0x57FE	0x3631 ;?ICS?lstr95_FirmV_0_7_0+0
0x5800	0x4120 ;?ICS?lstr95_FirmV_0_7_0+2
0x5802	0x2D75 ;?ICS?lstr95_FirmV_0_7_0+4
0x5804	0x6C43 ;?ICS?lstr95_FirmV_0_7_0+6
0x5806	0x5020 ;?ICS?lstr95_FirmV_0_7_0+8
0x5808	0x7361 ;?ICS?lstr95_FirmV_0_7_0+10
0x580A	0x2073 ;?ICS?lstr95_FirmV_0_7_0+12
0x580C	0x2020 ;?ICS?lstr95_FirmV_0_7_0+14
0x580E	0x00 ;?ICS?lstr95_FirmV_0_7_0+16
; end of ?ICS?lstr95_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr96_FirmV_0_7_0
0x580F	0x3731 ;?ICS?lstr96_FirmV_0_7_0+0
0x5811	0x5320 ;?ICS?lstr96_FirmV_0_7_0+2
0x5813	0x7661 ;?ICS?lstr96_FirmV_0_7_0+4
0x5815	0x2065 ;?ICS?lstr96_FirmV_0_7_0+6
0x5817	0x6843 ;?ICS?lstr96_FirmV_0_7_0+8
0x5819	0x6E61 ;?ICS?lstr96_FirmV_0_7_0+10
0x581B	0x6567 ;?ICS?lstr96_FirmV_0_7_0+12
0x581D	0x2073 ;?ICS?lstr96_FirmV_0_7_0+14
0x581F	0x00 ;?ICS?lstr96_FirmV_0_7_0+16
; end of ?ICS?lstr96_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr97_FirmV_0_7_0
0x5820	0x3831 ;?ICS?lstr97_FirmV_0_7_0+0
0x5822	0x4420 ;?ICS?lstr97_FirmV_0_7_0+2
0x5824	0x7369 ;?ICS?lstr97_FirmV_0_7_0+4
0x5826	0x6163 ;?ICS?lstr97_FirmV_0_7_0+6
0x5828	0x6472 ;?ICS?lstr97_FirmV_0_7_0+8
0x582A	0x4520 ;?ICS?lstr97_FirmV_0_7_0+10
0x582C	0x6978 ;?ICS?lstr97_FirmV_0_7_0+12
0x582E	0x2074 ;?ICS?lstr97_FirmV_0_7_0+14
0x5830	0x00 ;?ICS?lstr97_FirmV_0_7_0+16
; end of ?ICS?lstr97_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr6_FirmV_0_7_0
0x5831	0x3353 ;?ICS?lstr6_FirmV_0_7_0+0
0x5833	0x4D20 ;?ICS?lstr6_FirmV_0_7_0+2
0x5835	0x746F ;?ICS?lstr6_FirmV_0_7_0+4
0x5837	0x726F ;?ICS?lstr6_FirmV_0_7_0+6
0x5839	0x5331 ;?ICS?lstr6_FirmV_0_7_0+8
0x583B	0x6174 ;?ICS?lstr6_FirmV_0_7_0+10
0x583D	0x7472 ;?ICS?lstr6_FirmV_0_7_0+12
0x583F	0x00 ;?ICS?lstr6_FirmV_0_7_0+14
; end of ?ICS?lstr6_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr7_FirmV_0_7_0
0x5840	0x3353 ;?ICS?lstr7_FirmV_0_7_0+0
0x5842	0x4D20 ;?ICS?lstr7_FirmV_0_7_0+2
0x5844	0x746F ;?ICS?lstr7_FirmV_0_7_0+4
0x5846	0x726F ;?ICS?lstr7_FirmV_0_7_0+6
0x5848	0x5332 ;?ICS?lstr7_FirmV_0_7_0+8
0x584A	0x6174 ;?ICS?lstr7_FirmV_0_7_0+10
0x584C	0x7472 ;?ICS?lstr7_FirmV_0_7_0+12
0x584E	0x00 ;?ICS?lstr7_FirmV_0_7_0+14
; end of ?ICS?lstr7_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr8_FirmV_0_7_0
0x584F	0x3353 ;?ICS?lstr8_FirmV_0_7_0+0
0x5851	0x4D20 ;?ICS?lstr8_FirmV_0_7_0+2
0x5853	0x746F ;?ICS?lstr8_FirmV_0_7_0+4
0x5855	0x726F ;?ICS?lstr8_FirmV_0_7_0+6
0x5857	0x2031 ;?ICS?lstr8_FirmV_0_7_0+8
0x5859	0x6146 ;?ICS?lstr8_FirmV_0_7_0+10
0x585B	0x7473 ;?ICS?lstr8_FirmV_0_7_0+12
0x585D	0x00 ;?ICS?lstr8_FirmV_0_7_0+14
; end of ?ICS?lstr8_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr9_FirmV_0_7_0
0x585E	0x3353 ;?ICS?lstr9_FirmV_0_7_0+0
0x5860	0x4D20 ;?ICS?lstr9_FirmV_0_7_0+2
0x5862	0x746F ;?ICS?lstr9_FirmV_0_7_0+4
0x5864	0x726F ;?ICS?lstr9_FirmV_0_7_0+6
0x5866	0x2031 ;?ICS?lstr9_FirmV_0_7_0+8
0x5868	0x6C53 ;?ICS?lstr9_FirmV_0_7_0+10
0x586A	0x776F ;?ICS?lstr9_FirmV_0_7_0+12
0x586C	0x00 ;?ICS?lstr9_FirmV_0_7_0+14
; end of ?ICS?lstr9_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr10_FirmV_0_7_0
0x586D	0x3353 ;?ICS?lstr10_FirmV_0_7_0+0
0x586F	0x4D20 ;?ICS?lstr10_FirmV_0_7_0+2
0x5871	0x746F ;?ICS?lstr10_FirmV_0_7_0+4
0x5873	0x726F ;?ICS?lstr10_FirmV_0_7_0+6
0x5875	0x2032 ;?ICS?lstr10_FirmV_0_7_0+8
0x5877	0x6146 ;?ICS?lstr10_FirmV_0_7_0+10
0x5879	0x7473 ;?ICS?lstr10_FirmV_0_7_0+12
0x587B	0x00 ;?ICS?lstr10_FirmV_0_7_0+14
; end of ?ICS?lstr10_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr11_FirmV_0_7_0
0x587C	0x3353 ;?ICS?lstr11_FirmV_0_7_0+0
0x587E	0x4D20 ;?ICS?lstr11_FirmV_0_7_0+2
0x5880	0x746F ;?ICS?lstr11_FirmV_0_7_0+4
0x5882	0x726F ;?ICS?lstr11_FirmV_0_7_0+6
0x5884	0x2032 ;?ICS?lstr11_FirmV_0_7_0+8
0x5886	0x6C53 ;?ICS?lstr11_FirmV_0_7_0+10
0x5888	0x776F ;?ICS?lstr11_FirmV_0_7_0+12
0x588A	0x00 ;?ICS?lstr11_FirmV_0_7_0+14
; end of ?ICS?lstr11_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr12_FirmV_0_7_0
0x588B	0x3353 ;?ICS?lstr12_FirmV_0_7_0+0
0x588D	0x4F20 ;?ICS?lstr12_FirmV_0_7_0+2
0x588F	0x6576 ;?ICS?lstr12_FirmV_0_7_0+4
0x5891	0x6672 ;?ICS?lstr12_FirmV_0_7_0+6
0x5893	0x6F6C ;?ICS?lstr12_FirmV_0_7_0+8
0x5895	0x2077 ;?ICS?lstr12_FirmV_0_7_0+10
0x5897	0x6C46 ;?ICS?lstr12_FirmV_0_7_0+12
0x5899	0x6761 ;?ICS?lstr12_FirmV_0_7_0+14
0x589B	0x2031 ;?ICS?lstr12_FirmV_0_7_0+16
0x589D	0x6553 ;?ICS?lstr12_FirmV_0_7_0+18
0x589F	0x0074 ;?ICS?lstr12_FirmV_0_7_0+20
; end of ?ICS?lstr12_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr13_FirmV_0_7_0
0x58A1	0x3353 ;?ICS?lstr13_FirmV_0_7_0+0
0x58A3	0x4F20 ;?ICS?lstr13_FirmV_0_7_0+2
0x58A5	0x6576 ;?ICS?lstr13_FirmV_0_7_0+4
0x58A7	0x6672 ;?ICS?lstr13_FirmV_0_7_0+6
0x58A9	0x6F6C ;?ICS?lstr13_FirmV_0_7_0+8
0x58AB	0x2077 ;?ICS?lstr13_FirmV_0_7_0+10
0x58AD	0x6C46 ;?ICS?lstr13_FirmV_0_7_0+12
0x58AF	0x6761 ;?ICS?lstr13_FirmV_0_7_0+14
0x58B1	0x2032 ;?ICS?lstr13_FirmV_0_7_0+16
0x58B3	0x6553 ;?ICS?lstr13_FirmV_0_7_0+18
0x58B5	0x0074 ;?ICS?lstr13_FirmV_0_7_0+20
; end of ?ICS?lstr13_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr14_FirmV_0_7_0
0x58B7	0x3353 ;?ICS?lstr14_FirmV_0_7_0+0
0x58B9	0x4D20 ;?ICS?lstr14_FirmV_0_7_0+2
0x58BB	0x746F ;?ICS?lstr14_FirmV_0_7_0+4
0x58BD	0x726F ;?ICS?lstr14_FirmV_0_7_0+6
0x58BF	0x2031 ;?ICS?lstr14_FirmV_0_7_0+8
0x58C1	0x7453 ;?ICS?lstr14_FirmV_0_7_0+10
0x58C3	0x706F ;?ICS?lstr14_FirmV_0_7_0+12
0x58C5	0x00 ;?ICS?lstr14_FirmV_0_7_0+14
; end of ?ICS?lstr14_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr15_FirmV_0_7_0
0x58C6	0x3353 ;?ICS?lstr15_FirmV_0_7_0+0
0x58C8	0x4D20 ;?ICS?lstr15_FirmV_0_7_0+2
0x58CA	0x746F ;?ICS?lstr15_FirmV_0_7_0+4
0x58CC	0x726F ;?ICS?lstr15_FirmV_0_7_0+6
0x58CE	0x2032 ;?ICS?lstr15_FirmV_0_7_0+8
0x58D0	0x7453 ;?ICS?lstr15_FirmV_0_7_0+10
0x58D2	0x706F ;?ICS?lstr15_FirmV_0_7_0+12
0x58D4	0x00 ;?ICS?lstr15_FirmV_0_7_0+14
; end of ?ICS?lstr15_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr16_FirmV_0_7_0
0x58D5	0x3353 ;?ICS?lstr16_FirmV_0_7_0+0
0x58D7	0x4D20 ;?ICS?lstr16_FirmV_0_7_0+2
0x58D9	0x746F ;?ICS?lstr16_FirmV_0_7_0+4
0x58DB	0x726F ;?ICS?lstr16_FirmV_0_7_0+6
0x58DD	0x2031 ;?ICS?lstr16_FirmV_0_7_0+8
0x58DF	0x6F43 ;?ICS?lstr16_FirmV_0_7_0+10
0x58E1	0x6C6C ;?ICS?lstr16_FirmV_0_7_0+12
0x58E3	0x7369 ;?ICS?lstr16_FirmV_0_7_0+14
0x58E5	0x6F69 ;?ICS?lstr16_FirmV_0_7_0+16
0x58E7	0x006E ;?ICS?lstr16_FirmV_0_7_0+18
; end of ?ICS?lstr16_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr17_FirmV_0_7_0
0x58E9	0x3353 ;?ICS?lstr17_FirmV_0_7_0+0
0x58EB	0x4D20 ;?ICS?lstr17_FirmV_0_7_0+2
0x58ED	0x746F ;?ICS?lstr17_FirmV_0_7_0+4
0x58EF	0x726F ;?ICS?lstr17_FirmV_0_7_0+6
0x58F1	0x2032 ;?ICS?lstr17_FirmV_0_7_0+8
0x58F3	0x6F43 ;?ICS?lstr17_FirmV_0_7_0+10
0x58F5	0x6C6C ;?ICS?lstr17_FirmV_0_7_0+12
0x58F7	0x7369 ;?ICS?lstr17_FirmV_0_7_0+14
0x58F9	0x6F69 ;?ICS?lstr17_FirmV_0_7_0+16
0x58FB	0x006E ;?ICS?lstr17_FirmV_0_7_0+18
; end of ?ICS?lstr17_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr18_FirmV_0_7_0
0x58FD	0x3353 ;?ICS?lstr18_FirmV_0_7_0+0
0x58FF	0x5020 ;?ICS?lstr18_FirmV_0_7_0+2
0x5901	0x6F68 ;?ICS?lstr18_FirmV_0_7_0+4
0x5903	0x6F74 ;?ICS?lstr18_FirmV_0_7_0+6
0x5905	0x6563 ;?ICS?lstr18_FirmV_0_7_0+8
0x5907	0x6C6C ;?ICS?lstr18_FirmV_0_7_0+10
0x5909	0x4920 ;?ICS?lstr18_FirmV_0_7_0+12
0x590B	0x746E ;?ICS?lstr18_FirmV_0_7_0+14
0x590D	0x00 ;?ICS?lstr18_FirmV_0_7_0+16
; end of ?ICS?lstr18_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr19_FirmV_0_7_0
0x590E	0x3353 ;?ICS?lstr19_FirmV_0_7_0+0
0x5910	0x5220 ;?ICS?lstr19_FirmV_0_7_0+2
0x5912	0x6D65 ;?ICS?lstr19_FirmV_0_7_0+4
0x5914	0x746F ;?ICS?lstr19_FirmV_0_7_0+6
0x5916	0x2065 ;?ICS?lstr19_FirmV_0_7_0+8
0x5918	0x7453 ;?ICS?lstr19_FirmV_0_7_0+10
0x591A	0x706F ;?ICS?lstr19_FirmV_0_7_0+12
0x591C	0x6465 ;?ICS?lstr19_FirmV_0_7_0+14
0x591E	0x00 ;?ICS?lstr19_FirmV_0_7_0+16
; end of ?ICS?lstr19_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr20_FirmV_0_7_0
0x591F	0x3353 ;?ICS?lstr20_FirmV_0_7_0+0
0x5921	0x4C20 ;?ICS?lstr20_FirmV_0_7_0+2
0x5923	0x6D69 ;?ICS?lstr20_FirmV_0_7_0+4
0x5925	0x7469 ;?ICS?lstr20_FirmV_0_7_0+6
0x5927	0x5320 ;?ICS?lstr20_FirmV_0_7_0+8
0x5929	0x6977 ;?ICS?lstr20_FirmV_0_7_0+10
0x592B	0x6374 ;?ICS?lstr20_FirmV_0_7_0+12
0x592D	0x2068 ;?ICS?lstr20_FirmV_0_7_0+14
0x592F	0x7453 ;?ICS?lstr20_FirmV_0_7_0+16
0x5931	0x706F ;?ICS?lstr20_FirmV_0_7_0+18
0x5933	0x6465 ;?ICS?lstr20_FirmV_0_7_0+20
0x5935	0x00 ;?ICS?lstr20_FirmV_0_7_0+22
; end of ?ICS?lstr20_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr21_FirmV_0_7_0
0x5936	0x3353 ;?ICS?lstr21_FirmV_0_7_0+0
0x5938	0x4D20 ;?ICS?lstr21_FirmV_0_7_0+2
0x593A	0x746F ;?ICS?lstr21_FirmV_0_7_0+4
0x593C	0x726F ;?ICS?lstr21_FirmV_0_7_0+6
0x593E	0x2073 ;?ICS?lstr21_FirmV_0_7_0+8
0x5940	0x7453 ;?ICS?lstr21_FirmV_0_7_0+10
0x5942	0x706F ;?ICS?lstr21_FirmV_0_7_0+12
0x5944	0x6465 ;?ICS?lstr21_FirmV_0_7_0+14
0x5946	0x2820 ;?ICS?lstr21_FirmV_0_7_0+16
0x5948	0x6552 ;?ICS?lstr21_FirmV_0_7_0+18
0x594A	0x6F6D ;?ICS?lstr21_FirmV_0_7_0+20
0x594C	0x6574 ;?ICS?lstr21_FirmV_0_7_0+22
0x594E	0x0029 ;?ICS?lstr21_FirmV_0_7_0+24
; end of ?ICS?lstr21_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr22_FirmV_0_7_0
0x5950	0x3353 ;?ICS?lstr22_FirmV_0_7_0+0
0x5952	0x4120 ;?ICS?lstr22_FirmV_0_7_0+2
0x5954	0x7475 ;?ICS?lstr22_FirmV_0_7_0+4
0x5956	0x636F ;?ICS?lstr22_FirmV_0_7_0+6
0x5958	0x6F6C ;?ICS?lstr22_FirmV_0_7_0+8
0x595A	0x6573 ;?ICS?lstr22_FirmV_0_7_0+10
0x595C	0x5220 ;?ICS?lstr22_FirmV_0_7_0+12
0x595E	0x6E65 ;?ICS?lstr22_FirmV_0_7_0+14
0x5960	0x7765 ;?ICS?lstr22_FirmV_0_7_0+16
0x5962	0x6465 ;?ICS?lstr22_FirmV_0_7_0+18
0x5964	0x00 ;?ICS?lstr22_FirmV_0_7_0+20
; end of ?ICS?lstr22_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr23_FirmV_0_7_0
0x5965	0x3453 ;?ICS?lstr23_FirmV_0_7_0+0
0x5967	0x4D20 ;?ICS?lstr23_FirmV_0_7_0+2
0x5969	0x746F ;?ICS?lstr23_FirmV_0_7_0+4
0x596B	0x726F ;?ICS?lstr23_FirmV_0_7_0+6
0x596D	0x5331 ;?ICS?lstr23_FirmV_0_7_0+8
0x596F	0x6174 ;?ICS?lstr23_FirmV_0_7_0+10
0x5971	0x7472 ;?ICS?lstr23_FirmV_0_7_0+12
0x5973	0x00 ;?ICS?lstr23_FirmV_0_7_0+14
; end of ?ICS?lstr23_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr24_FirmV_0_7_0
0x5974	0x3453 ;?ICS?lstr24_FirmV_0_7_0+0
0x5976	0x4D20 ;?ICS?lstr24_FirmV_0_7_0+2
0x5978	0x746F ;?ICS?lstr24_FirmV_0_7_0+4
0x597A	0x726F ;?ICS?lstr24_FirmV_0_7_0+6
0x597C	0x5332 ;?ICS?lstr24_FirmV_0_7_0+8
0x597E	0x6174 ;?ICS?lstr24_FirmV_0_7_0+10
0x5980	0x7472 ;?ICS?lstr24_FirmV_0_7_0+12
0x5982	0x00 ;?ICS?lstr24_FirmV_0_7_0+14
; end of ?ICS?lstr24_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr25_FirmV_0_7_0
0x5983	0x3453 ;?ICS?lstr25_FirmV_0_7_0+0
0x5985	0x4D20 ;?ICS?lstr25_FirmV_0_7_0+2
0x5987	0x2031 ;?ICS?lstr25_FirmV_0_7_0+4
0x5989	0x764F ;?ICS?lstr25_FirmV_0_7_0+6
0x598B	0x7265 ;?ICS?lstr25_FirmV_0_7_0+8
0x598D	0x6F6C ;?ICS?lstr25_FirmV_0_7_0+10
0x598F	0x6461 ;?ICS?lstr25_FirmV_0_7_0+12
0x5991	0x4320 ;?ICS?lstr25_FirmV_0_7_0+14
0x5993	0x6568 ;?ICS?lstr25_FirmV_0_7_0+16
0x5995	0x6B63 ;?ICS?lstr25_FirmV_0_7_0+18
0x5997	0x00 ;?ICS?lstr25_FirmV_0_7_0+20
; end of ?ICS?lstr25_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr26_FirmV_0_7_0
0x5998	0x3453 ;?ICS?lstr26_FirmV_0_7_0+0
0x599A	0x4D20 ;?ICS?lstr26_FirmV_0_7_0+2
0x599C	0x2032 ;?ICS?lstr26_FirmV_0_7_0+4
0x599E	0x764F ;?ICS?lstr26_FirmV_0_7_0+6
0x59A0	0x7265 ;?ICS?lstr26_FirmV_0_7_0+8
0x59A2	0x6F6C ;?ICS?lstr26_FirmV_0_7_0+10
0x59A4	0x6461 ;?ICS?lstr26_FirmV_0_7_0+12
0x59A6	0x4320 ;?ICS?lstr26_FirmV_0_7_0+14
0x59A8	0x6568 ;?ICS?lstr26_FirmV_0_7_0+16
0x59AA	0x6B63 ;?ICS?lstr26_FirmV_0_7_0+18
0x59AC	0x00 ;?ICS?lstr26_FirmV_0_7_0+20
; end of ?ICS?lstr26_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr27_FirmV_0_7_0
0x59AD	0x3453 ;?ICS?lstr27_FirmV_0_7_0+0
0x59AF	0x4D20 ;?ICS?lstr27_FirmV_0_7_0+2
0x59B1	0x2031 ;?ICS?lstr27_FirmV_0_7_0+4
0x59B3	0x7053 ;?ICS?lstr27_FirmV_0_7_0+6
0x59B5	0x6565 ;?ICS?lstr27_FirmV_0_7_0+8
0x59B7	0x2064 ;?ICS?lstr27_FirmV_0_7_0+10
0x59B9	0x5055 ;?ICS?lstr27_FirmV_0_7_0+12
0x59BB	0x00 ;?ICS?lstr27_FirmV_0_7_0+14
; end of ?ICS?lstr27_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr28_FirmV_0_7_0
0x59BC	0x3453 ;?ICS?lstr28_FirmV_0_7_0+0
0x59BE	0x4D20 ;?ICS?lstr28_FirmV_0_7_0+2
0x59C0	0x2031 ;?ICS?lstr28_FirmV_0_7_0+4
0x59C2	0x7053 ;?ICS?lstr28_FirmV_0_7_0+6
0x59C4	0x6565 ;?ICS?lstr28_FirmV_0_7_0+8
0x59C6	0x2064 ;?ICS?lstr28_FirmV_0_7_0+10
0x59C8	0x6F44 ;?ICS?lstr28_FirmV_0_7_0+12
0x59CA	0x6E77 ;?ICS?lstr28_FirmV_0_7_0+14
0x59CC	0x00 ;?ICS?lstr28_FirmV_0_7_0+16
; end of ?ICS?lstr28_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr29_FirmV_0_7_0
0x59CD	0x3453 ;?ICS?lstr29_FirmV_0_7_0+0
0x59CF	0x4D20 ;?ICS?lstr29_FirmV_0_7_0+2
0x59D1	0x2032 ;?ICS?lstr29_FirmV_0_7_0+4
0x59D3	0x7053 ;?ICS?lstr29_FirmV_0_7_0+6
0x59D5	0x6565 ;?ICS?lstr29_FirmV_0_7_0+8
0x59D7	0x2064 ;?ICS?lstr29_FirmV_0_7_0+10
0x59D9	0x5055 ;?ICS?lstr29_FirmV_0_7_0+12
0x59DB	0x00 ;?ICS?lstr29_FirmV_0_7_0+14
; end of ?ICS?lstr29_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr30_FirmV_0_7_0
0x59DC	0x3453 ;?ICS?lstr30_FirmV_0_7_0+0
0x59DE	0x4D20 ;?ICS?lstr30_FirmV_0_7_0+2
0x59E0	0x2032 ;?ICS?lstr30_FirmV_0_7_0+4
0x59E2	0x7053 ;?ICS?lstr30_FirmV_0_7_0+6
0x59E4	0x6565 ;?ICS?lstr30_FirmV_0_7_0+8
0x59E6	0x2064 ;?ICS?lstr30_FirmV_0_7_0+10
0x59E8	0x6F44 ;?ICS?lstr30_FirmV_0_7_0+12
0x59EA	0x6E77 ;?ICS?lstr30_FirmV_0_7_0+14
0x59EC	0x00 ;?ICS?lstr30_FirmV_0_7_0+16
; end of ?ICS?lstr30_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr31_FirmV_0_7_0
0x59ED	0x3453 ;?ICS?lstr31_FirmV_0_7_0+0
0x59EF	0x4D20 ;?ICS?lstr31_FirmV_0_7_0+2
0x59F1	0x2031 ;?ICS?lstr31_FirmV_0_7_0+4
0x59F3	0x7453 ;?ICS?lstr31_FirmV_0_7_0+6
0x59F5	0x706F ;?ICS?lstr31_FirmV_0_7_0+8
0x59F7	0x6465 ;?ICS?lstr31_FirmV_0_7_0+10
0x59F9	0x00 ;?ICS?lstr31_FirmV_0_7_0+12
; end of ?ICS?lstr31_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr32_FirmV_0_7_0
0x59FA	0x3453 ;?ICS?lstr32_FirmV_0_7_0+0
0x59FC	0x4D20 ;?ICS?lstr32_FirmV_0_7_0+2
0x59FE	0x2032 ;?ICS?lstr32_FirmV_0_7_0+4
0x5A00	0x7453 ;?ICS?lstr32_FirmV_0_7_0+6
0x5A02	0x706F ;?ICS?lstr32_FirmV_0_7_0+8
0x5A04	0x6465 ;?ICS?lstr32_FirmV_0_7_0+10
0x5A06	0x00 ;?ICS?lstr32_FirmV_0_7_0+12
; end of ?ICS?lstr32_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr33_FirmV_0_7_0
0x5A07	0x3453 ;?ICS?lstr33_FirmV_0_7_0+0
0x5A09	0x4D20 ;?ICS?lstr33_FirmV_0_7_0+2
0x5A0B	0x2031 ;?ICS?lstr33_FirmV_0_7_0+4
0x5A0D	0x764F ;?ICS?lstr33_FirmV_0_7_0+6
0x5A0F	0x7265 ;?ICS?lstr33_FirmV_0_7_0+8
0x5A11	0x6F6C ;?ICS?lstr33_FirmV_0_7_0+10
0x5A13	0x6461 ;?ICS?lstr33_FirmV_0_7_0+12
0x5A15	0x6465 ;?ICS?lstr33_FirmV_0_7_0+14
0x5A17	0x00 ;?ICS?lstr33_FirmV_0_7_0+16
; end of ?ICS?lstr33_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr34_FirmV_0_7_0
0x5A18	0x3453 ;?ICS?lstr34_FirmV_0_7_0+0
0x5A1A	0x4D20 ;?ICS?lstr34_FirmV_0_7_0+2
0x5A1C	0x2032 ;?ICS?lstr34_FirmV_0_7_0+4
0x5A1E	0x764F ;?ICS?lstr34_FirmV_0_7_0+6
0x5A20	0x7265 ;?ICS?lstr34_FirmV_0_7_0+8
0x5A22	0x6F6C ;?ICS?lstr34_FirmV_0_7_0+10
0x5A24	0x6461 ;?ICS?lstr34_FirmV_0_7_0+12
0x5A26	0x6465 ;?ICS?lstr34_FirmV_0_7_0+14
0x5A28	0x00 ;?ICS?lstr34_FirmV_0_7_0+16
; end of ?ICS?lstr34_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr35_FirmV_0_7_0
0x5A29	0x3453 ;?ICS?lstr35_FirmV_0_7_0+0
0x5A2B	0x5020 ;?ICS?lstr35_FirmV_0_7_0+2
0x5A2D	0x6F68 ;?ICS?lstr35_FirmV_0_7_0+4
0x5A2F	0x6F74 ;?ICS?lstr35_FirmV_0_7_0+6
0x5A31	0x6563 ;?ICS?lstr35_FirmV_0_7_0+8
0x5A33	0x6C6C ;?ICS?lstr35_FirmV_0_7_0+10
0x5A35	0x4920 ;?ICS?lstr35_FirmV_0_7_0+12
0x5A37	0x746E ;?ICS?lstr35_FirmV_0_7_0+14
0x5A39	0x00 ;?ICS?lstr35_FirmV_0_7_0+16
; end of ?ICS?lstr35_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr36_FirmV_0_7_0
0x5A3A	0x3453 ;?ICS?lstr36_FirmV_0_7_0+0
0x5A3C	0x4C20 ;?ICS?lstr36_FirmV_0_7_0+2
0x5A3E	0x6D69 ;?ICS?lstr36_FirmV_0_7_0+4
0x5A40	0x7469 ;?ICS?lstr36_FirmV_0_7_0+6
0x5A42	0x5320 ;?ICS?lstr36_FirmV_0_7_0+8
0x5A44	0x6977 ;?ICS?lstr36_FirmV_0_7_0+10
0x5A46	0x6374 ;?ICS?lstr36_FirmV_0_7_0+12
0x5A48	0x2068 ;?ICS?lstr36_FirmV_0_7_0+14
0x5A4A	0x7453 ;?ICS?lstr36_FirmV_0_7_0+16
0x5A4C	0x706F ;?ICS?lstr36_FirmV_0_7_0+18
0x5A4E	0x00 ;?ICS?lstr36_FirmV_0_7_0+20
; end of ?ICS?lstr36_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr37_FirmV_0_7_0
0x5A4F	0x3453 ;?ICS?lstr37_FirmV_0_7_0+0
0x5A51	0x5220 ;?ICS?lstr37_FirmV_0_7_0+2
0x5A53	0x6D65 ;?ICS?lstr37_FirmV_0_7_0+4
0x5A55	0x746F ;?ICS?lstr37_FirmV_0_7_0+6
0x5A57	0x2065 ;?ICS?lstr37_FirmV_0_7_0+8
0x5A59	0x7250 ;?ICS?lstr37_FirmV_0_7_0+10
0x5A5B	0x7365 ;?ICS?lstr37_FirmV_0_7_0+12
0x5A5D	0x6573 ;?ICS?lstr37_FirmV_0_7_0+14
0x5A5F	0x0064 ;?ICS?lstr37_FirmV_0_7_0+16
; end of ?ICS?lstr37_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr38_FirmV_0_7_0
0x5A61	0x3453 ;?ICS?lstr38_FirmV_0_7_0+0
0x5A63	0x4120 ;?ICS?lstr38_FirmV_0_7_0+2
0x5A65	0x7475 ;?ICS?lstr38_FirmV_0_7_0+4
0x5A67	0x636F ;?ICS?lstr38_FirmV_0_7_0+6
0x5A69	0x6F6C ;?ICS?lstr38_FirmV_0_7_0+8
0x5A6B	0x6573 ;?ICS?lstr38_FirmV_0_7_0+10
0x5A6D	0x5220 ;?ICS?lstr38_FirmV_0_7_0+12
0x5A6F	0x6E65 ;?ICS?lstr38_FirmV_0_7_0+14
0x5A71	0x7765 ;?ICS?lstr38_FirmV_0_7_0+16
0x5A73	0x6465 ;?ICS?lstr38_FirmV_0_7_0+18
0x5A75	0x00 ;?ICS?lstr38_FirmV_0_7_0+20
; end of ?ICS?lstr38_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr57_FirmV_0_7_0
0x5A76	0x3853 ;?ICS?lstr57_FirmV_0_7_0+0
0x5A78	0x4D20 ;?ICS?lstr57_FirmV_0_7_0+2
0x5A7A	0x746F ;?ICS?lstr57_FirmV_0_7_0+4
0x5A7C	0x726F ;?ICS?lstr57_FirmV_0_7_0+6
0x5A7E	0x5331 ;?ICS?lstr57_FirmV_0_7_0+8
0x5A80	0x6174 ;?ICS?lstr57_FirmV_0_7_0+10
0x5A82	0x7472 ;?ICS?lstr57_FirmV_0_7_0+12
0x5A84	0x00 ;?ICS?lstr57_FirmV_0_7_0+14
; end of ?ICS?lstr57_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr58_FirmV_0_7_0
0x5A85	0x3853 ;?ICS?lstr58_FirmV_0_7_0+0
0x5A87	0x4D20 ;?ICS?lstr58_FirmV_0_7_0+2
0x5A89	0x746F ;?ICS?lstr58_FirmV_0_7_0+4
0x5A8B	0x726F ;?ICS?lstr58_FirmV_0_7_0+6
0x5A8D	0x5332 ;?ICS?lstr58_FirmV_0_7_0+8
0x5A8F	0x6174 ;?ICS?lstr58_FirmV_0_7_0+10
0x5A91	0x7472 ;?ICS?lstr58_FirmV_0_7_0+12
0x5A93	0x00 ;?ICS?lstr58_FirmV_0_7_0+14
; end of ?ICS?lstr58_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr59_FirmV_0_7_0
0x5A94	0x3853 ;?ICS?lstr59_FirmV_0_7_0+0
0x5A96	0x4F20 ;?ICS?lstr59_FirmV_0_7_0+2
0x5A98	0x6576 ;?ICS?lstr59_FirmV_0_7_0+4
0x5A9A	0x6672 ;?ICS?lstr59_FirmV_0_7_0+6
0x5A9C	0x6F6C ;?ICS?lstr59_FirmV_0_7_0+8
0x5A9E	0x2077 ;?ICS?lstr59_FirmV_0_7_0+10
0x5AA0	0x6C46 ;?ICS?lstr59_FirmV_0_7_0+12
0x5AA2	0x6761 ;?ICS?lstr59_FirmV_0_7_0+14
0x5AA4	0x2031 ;?ICS?lstr59_FirmV_0_7_0+16
0x5AA6	0x6553 ;?ICS?lstr59_FirmV_0_7_0+18
0x5AA8	0x0074 ;?ICS?lstr59_FirmV_0_7_0+20
; end of ?ICS?lstr59_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr60_FirmV_0_7_0
0x5AAA	0x3853 ;?ICS?lstr60_FirmV_0_7_0+0
0x5AAC	0x4F20 ;?ICS?lstr60_FirmV_0_7_0+2
0x5AAE	0x6576 ;?ICS?lstr60_FirmV_0_7_0+4
0x5AB0	0x6672 ;?ICS?lstr60_FirmV_0_7_0+6
0x5AB2	0x6F6C ;?ICS?lstr60_FirmV_0_7_0+8
0x5AB4	0x2077 ;?ICS?lstr60_FirmV_0_7_0+10
0x5AB6	0x6C46 ;?ICS?lstr60_FirmV_0_7_0+12
0x5AB8	0x6761 ;?ICS?lstr60_FirmV_0_7_0+14
0x5ABA	0x2032 ;?ICS?lstr60_FirmV_0_7_0+16
0x5ABC	0x6553 ;?ICS?lstr60_FirmV_0_7_0+18
0x5ABE	0x0074 ;?ICS?lstr60_FirmV_0_7_0+20
; end of ?ICS?lstr60_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr61_FirmV_0_7_0
0x5AC0	0x3853 ;?ICS?lstr61_FirmV_0_7_0+0
0x5AC2	0x4D20 ;?ICS?lstr61_FirmV_0_7_0+2
0x5AC4	0x746F ;?ICS?lstr61_FirmV_0_7_0+4
0x5AC6	0x726F ;?ICS?lstr61_FirmV_0_7_0+6
0x5AC8	0x2031 ;?ICS?lstr61_FirmV_0_7_0+8
0x5ACA	0x6146 ;?ICS?lstr61_FirmV_0_7_0+10
0x5ACC	0x7473 ;?ICS?lstr61_FirmV_0_7_0+12
0x5ACE	0x00 ;?ICS?lstr61_FirmV_0_7_0+14
; end of ?ICS?lstr61_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr62_FirmV_0_7_0
0x5ACF	0x3853 ;?ICS?lstr62_FirmV_0_7_0+0
0x5AD1	0x4D20 ;?ICS?lstr62_FirmV_0_7_0+2
0x5AD3	0x746F ;?ICS?lstr62_FirmV_0_7_0+4
0x5AD5	0x726F ;?ICS?lstr62_FirmV_0_7_0+6
0x5AD7	0x2032 ;?ICS?lstr62_FirmV_0_7_0+8
0x5AD9	0x6146 ;?ICS?lstr62_FirmV_0_7_0+10
0x5ADB	0x7473 ;?ICS?lstr62_FirmV_0_7_0+12
0x5ADD	0x00 ;?ICS?lstr62_FirmV_0_7_0+14
; end of ?ICS?lstr62_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr63_FirmV_0_7_0
0x5ADE	0x3853 ;?ICS?lstr63_FirmV_0_7_0+0
0x5AE0	0x4D20 ;?ICS?lstr63_FirmV_0_7_0+2
0x5AE2	0x746F ;?ICS?lstr63_FirmV_0_7_0+4
0x5AE4	0x726F ;?ICS?lstr63_FirmV_0_7_0+6
0x5AE6	0x2031 ;?ICS?lstr63_FirmV_0_7_0+8
0x5AE8	0x7453 ;?ICS?lstr63_FirmV_0_7_0+10
0x5AEA	0x706F ;?ICS?lstr63_FirmV_0_7_0+12
0x5AEC	0x00 ;?ICS?lstr63_FirmV_0_7_0+14
; end of ?ICS?lstr63_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr64_FirmV_0_7_0
0x5AED	0x3853 ;?ICS?lstr64_FirmV_0_7_0+0
0x5AEF	0x4D20 ;?ICS?lstr64_FirmV_0_7_0+2
0x5AF1	0x746F ;?ICS?lstr64_FirmV_0_7_0+4
0x5AF3	0x726F ;?ICS?lstr64_FirmV_0_7_0+6
0x5AF5	0x2032 ;?ICS?lstr64_FirmV_0_7_0+8
0x5AF7	0x7453 ;?ICS?lstr64_FirmV_0_7_0+10
0x5AF9	0x706F ;?ICS?lstr64_FirmV_0_7_0+12
0x5AFB	0x00 ;?ICS?lstr64_FirmV_0_7_0+14
; end of ?ICS?lstr64_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr65_FirmV_0_7_0
0x5AFC	0x3853 ;?ICS?lstr65_FirmV_0_7_0+0
0x5AFE	0x5020 ;?ICS?lstr65_FirmV_0_7_0+2
0x5B00	0x6F68 ;?ICS?lstr65_FirmV_0_7_0+4
0x5B02	0x6F74 ;?ICS?lstr65_FirmV_0_7_0+6
0x5B04	0x6563 ;?ICS?lstr65_FirmV_0_7_0+8
0x5B06	0x6C6C ;?ICS?lstr65_FirmV_0_7_0+10
0x5B08	0x4920 ;?ICS?lstr65_FirmV_0_7_0+12
0x5B0A	0x746E ;?ICS?lstr65_FirmV_0_7_0+14
0x5B0C	0x00 ;?ICS?lstr65_FirmV_0_7_0+16
; end of ?ICS?lstr65_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr66_FirmV_0_7_0
0x5B0D	0x3853 ;?ICS?lstr66_FirmV_0_7_0+0
0x5B0F	0x4D20 ;?ICS?lstr66_FirmV_0_7_0+2
0x5B11	0x746F ;?ICS?lstr66_FirmV_0_7_0+4
0x5B13	0x726F ;?ICS?lstr66_FirmV_0_7_0+6
0x5B15	0x2073 ;?ICS?lstr66_FirmV_0_7_0+8
0x5B17	0x7453 ;?ICS?lstr66_FirmV_0_7_0+10
0x5B19	0x706F ;?ICS?lstr66_FirmV_0_7_0+12
0x5B1B	0x6465 ;?ICS?lstr66_FirmV_0_7_0+14
0x5B1D	0x2820 ;?ICS?lstr66_FirmV_0_7_0+16
0x5B1F	0x6552 ;?ICS?lstr66_FirmV_0_7_0+18
0x5B21	0x6F6D ;?ICS?lstr66_FirmV_0_7_0+20
0x5B23	0x6574 ;?ICS?lstr66_FirmV_0_7_0+22
0x5B25	0x0029 ;?ICS?lstr66_FirmV_0_7_0+24
; end of ?ICS?lstr66_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr67_FirmV_0_7_0
0x5B27	0x3853 ;?ICS?lstr67_FirmV_0_7_0+0
0x5B29	0x4C20 ;?ICS?lstr67_FirmV_0_7_0+2
0x5B2B	0x6D69 ;?ICS?lstr67_FirmV_0_7_0+4
0x5B2D	0x7469 ;?ICS?lstr67_FirmV_0_7_0+6
0x5B2F	0x5320 ;?ICS?lstr67_FirmV_0_7_0+8
0x5B31	0x6977 ;?ICS?lstr67_FirmV_0_7_0+10
0x5B33	0x6374 ;?ICS?lstr67_FirmV_0_7_0+12
0x5B35	0x2068 ;?ICS?lstr67_FirmV_0_7_0+14
0x5B37	0x7453 ;?ICS?lstr67_FirmV_0_7_0+16
0x5B39	0x706F ;?ICS?lstr67_FirmV_0_7_0+18
0x5B3B	0x00 ;?ICS?lstr67_FirmV_0_7_0+20
; end of ?ICS?lstr67_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr68_FirmV_0_7_0
0x5B3C	0x3853 ;?ICS?lstr68_FirmV_0_7_0+0
0x5B3E	0x4120 ;?ICS?lstr68_FirmV_0_7_0+2
0x5B40	0x7475 ;?ICS?lstr68_FirmV_0_7_0+4
0x5B42	0x636F ;?ICS?lstr68_FirmV_0_7_0+6
0x5B44	0x6F6C ;?ICS?lstr68_FirmV_0_7_0+8
0x5B46	0x6573 ;?ICS?lstr68_FirmV_0_7_0+10
0x5B48	0x5220 ;?ICS?lstr68_FirmV_0_7_0+12
0x5B4A	0x6E65 ;?ICS?lstr68_FirmV_0_7_0+14
0x5B4C	0x7765 ;?ICS?lstr68_FirmV_0_7_0+16
0x5B4E	0x6465 ;?ICS?lstr68_FirmV_0_7_0+18
0x5B50	0x00 ;?ICS?lstr68_FirmV_0_7_0+20
; end of ?ICS?lstr68_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr45_FirmV_0_7_0
0x5B51	0x3753 ;?ICS?lstr45_FirmV_0_7_0+0
0x5B53	0x4D20 ;?ICS?lstr45_FirmV_0_7_0+2
0x5B55	0x746F ;?ICS?lstr45_FirmV_0_7_0+4
0x5B57	0x726F ;?ICS?lstr45_FirmV_0_7_0+6
0x5B59	0x5331 ;?ICS?lstr45_FirmV_0_7_0+8
0x5B5B	0x6174 ;?ICS?lstr45_FirmV_0_7_0+10
0x5B5D	0x7472 ;?ICS?lstr45_FirmV_0_7_0+12
0x5B5F	0x00 ;?ICS?lstr45_FirmV_0_7_0+14
; end of ?ICS?lstr45_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr46_FirmV_0_7_0
0x5B60	0x3753 ;?ICS?lstr46_FirmV_0_7_0+0
0x5B62	0x4D20 ;?ICS?lstr46_FirmV_0_7_0+2
0x5B64	0x746F ;?ICS?lstr46_FirmV_0_7_0+4
0x5B66	0x726F ;?ICS?lstr46_FirmV_0_7_0+6
0x5B68	0x5332 ;?ICS?lstr46_FirmV_0_7_0+8
0x5B6A	0x6174 ;?ICS?lstr46_FirmV_0_7_0+10
0x5B6C	0x7472 ;?ICS?lstr46_FirmV_0_7_0+12
0x5B6E	0x00 ;?ICS?lstr46_FirmV_0_7_0+14
; end of ?ICS?lstr46_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr47_FirmV_0_7_0
0x5B6F	0x3753 ;?ICS?lstr47_FirmV_0_7_0+0
0x5B71	0x4D20 ;?ICS?lstr47_FirmV_0_7_0+2
0x5B73	0x2031 ;?ICS?lstr47_FirmV_0_7_0+4
0x5B75	0x764F ;?ICS?lstr47_FirmV_0_7_0+6
0x5B77	0x7265 ;?ICS?lstr47_FirmV_0_7_0+8
0x5B79	0x6F6C ;?ICS?lstr47_FirmV_0_7_0+10
0x5B7B	0x6461 ;?ICS?lstr47_FirmV_0_7_0+12
0x5B7D	0x4320 ;?ICS?lstr47_FirmV_0_7_0+14
0x5B7F	0x6568 ;?ICS?lstr47_FirmV_0_7_0+16
0x5B81	0x6B63 ;?ICS?lstr47_FirmV_0_7_0+18
0x5B83	0x00 ;?ICS?lstr47_FirmV_0_7_0+20
; end of ?ICS?lstr47_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr48_FirmV_0_7_0
0x5B84	0x3753 ;?ICS?lstr48_FirmV_0_7_0+0
0x5B86	0x4D20 ;?ICS?lstr48_FirmV_0_7_0+2
0x5B88	0x2032 ;?ICS?lstr48_FirmV_0_7_0+4
0x5B8A	0x764F ;?ICS?lstr48_FirmV_0_7_0+6
0x5B8C	0x7265 ;?ICS?lstr48_FirmV_0_7_0+8
0x5B8E	0x6F6C ;?ICS?lstr48_FirmV_0_7_0+10
0x5B90	0x6461 ;?ICS?lstr48_FirmV_0_7_0+12
0x5B92	0x4320 ;?ICS?lstr48_FirmV_0_7_0+14
0x5B94	0x6568 ;?ICS?lstr48_FirmV_0_7_0+16
0x5B96	0x6B63 ;?ICS?lstr48_FirmV_0_7_0+18
0x5B98	0x00 ;?ICS?lstr48_FirmV_0_7_0+20
; end of ?ICS?lstr48_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr49_FirmV_0_7_0
0x5B99	0x3753 ;?ICS?lstr49_FirmV_0_7_0+0
0x5B9B	0x4D20 ;?ICS?lstr49_FirmV_0_7_0+2
0x5B9D	0x2031 ;?ICS?lstr49_FirmV_0_7_0+4
0x5B9F	0x7053 ;?ICS?lstr49_FirmV_0_7_0+6
0x5BA1	0x6565 ;?ICS?lstr49_FirmV_0_7_0+8
0x5BA3	0x2064 ;?ICS?lstr49_FirmV_0_7_0+10
0x5BA5	0x5055 ;?ICS?lstr49_FirmV_0_7_0+12
0x5BA7	0x00 ;?ICS?lstr49_FirmV_0_7_0+14
; end of ?ICS?lstr49_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr50_FirmV_0_7_0
0x5BA8	0x3753 ;?ICS?lstr50_FirmV_0_7_0+0
0x5BAA	0x4D20 ;?ICS?lstr50_FirmV_0_7_0+2
0x5BAC	0x2032 ;?ICS?lstr50_FirmV_0_7_0+4
0x5BAE	0x7053 ;?ICS?lstr50_FirmV_0_7_0+6
0x5BB0	0x6565 ;?ICS?lstr50_FirmV_0_7_0+8
0x5BB2	0x2064 ;?ICS?lstr50_FirmV_0_7_0+10
0x5BB4	0x5055 ;?ICS?lstr50_FirmV_0_7_0+12
0x5BB6	0x00 ;?ICS?lstr50_FirmV_0_7_0+14
; end of ?ICS?lstr50_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr51_FirmV_0_7_0
0x5BB7	0x3753 ;?ICS?lstr51_FirmV_0_7_0+0
0x5BB9	0x4D20 ;?ICS?lstr51_FirmV_0_7_0+2
0x5BBB	0x2031 ;?ICS?lstr51_FirmV_0_7_0+4
0x5BBD	0x7453 ;?ICS?lstr51_FirmV_0_7_0+6
0x5BBF	0x706F ;?ICS?lstr51_FirmV_0_7_0+8
0x5BC1	0x6465 ;?ICS?lstr51_FirmV_0_7_0+10
0x5BC3	0x00 ;?ICS?lstr51_FirmV_0_7_0+12
; end of ?ICS?lstr51_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr52_FirmV_0_7_0
0x5BC4	0x3753 ;?ICS?lstr52_FirmV_0_7_0+0
0x5BC6	0x4D20 ;?ICS?lstr52_FirmV_0_7_0+2
0x5BC8	0x2032 ;?ICS?lstr52_FirmV_0_7_0+4
0x5BCA	0x7453 ;?ICS?lstr52_FirmV_0_7_0+6
0x5BCC	0x706F ;?ICS?lstr52_FirmV_0_7_0+8
0x5BCE	0x6465 ;?ICS?lstr52_FirmV_0_7_0+10
0x5BD0	0x00 ;?ICS?lstr52_FirmV_0_7_0+12
; end of ?ICS?lstr52_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr53_FirmV_0_7_0
0x5BD1	0x3753 ;?ICS?lstr53_FirmV_0_7_0+0
0x5BD3	0x5020 ;?ICS?lstr53_FirmV_0_7_0+2
0x5BD5	0x6F68 ;?ICS?lstr53_FirmV_0_7_0+4
0x5BD7	0x6F74 ;?ICS?lstr53_FirmV_0_7_0+6
0x5BD9	0x6563 ;?ICS?lstr53_FirmV_0_7_0+8
0x5BDB	0x6C6C ;?ICS?lstr53_FirmV_0_7_0+10
0x5BDD	0x4920 ;?ICS?lstr53_FirmV_0_7_0+12
0x5BDF	0x746E ;?ICS?lstr53_FirmV_0_7_0+14
0x5BE1	0x00 ;?ICS?lstr53_FirmV_0_7_0+16
; end of ?ICS?lstr53_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr54_FirmV_0_7_0
0x5BE2	0x3753 ;?ICS?lstr54_FirmV_0_7_0+0
0x5BE4	0x5220 ;?ICS?lstr54_FirmV_0_7_0+2
0x5BE6	0x6D65 ;?ICS?lstr54_FirmV_0_7_0+4
0x5BE8	0x746F ;?ICS?lstr54_FirmV_0_7_0+6
0x5BEA	0x2065 ;?ICS?lstr54_FirmV_0_7_0+8
0x5BEC	0x7250 ;?ICS?lstr54_FirmV_0_7_0+10
0x5BEE	0x7365 ;?ICS?lstr54_FirmV_0_7_0+12
0x5BF0	0x6573 ;?ICS?lstr54_FirmV_0_7_0+14
0x5BF2	0x0064 ;?ICS?lstr54_FirmV_0_7_0+16
; end of ?ICS?lstr54_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr55_FirmV_0_7_0
0x5BF4	0x3753 ;?ICS?lstr55_FirmV_0_7_0+0
0x5BF6	0x4C20 ;?ICS?lstr55_FirmV_0_7_0+2
0x5BF8	0x6D69 ;?ICS?lstr55_FirmV_0_7_0+4
0x5BFA	0x7469 ;?ICS?lstr55_FirmV_0_7_0+6
0x5BFC	0x5320 ;?ICS?lstr55_FirmV_0_7_0+8
0x5BFE	0x6977 ;?ICS?lstr55_FirmV_0_7_0+10
0x5C00	0x6374 ;?ICS?lstr55_FirmV_0_7_0+12
0x5C02	0x2068 ;?ICS?lstr55_FirmV_0_7_0+14
0x5C04	0x7453 ;?ICS?lstr55_FirmV_0_7_0+16
0x5C06	0x706F ;?ICS?lstr55_FirmV_0_7_0+18
0x5C08	0x00 ;?ICS?lstr55_FirmV_0_7_0+20
; end of ?ICS?lstr55_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr56_FirmV_0_7_0
0x5C09	0x3753 ;?ICS?lstr56_FirmV_0_7_0+0
0x5C0B	0x4120 ;?ICS?lstr56_FirmV_0_7_0+2
0x5C0D	0x7475 ;?ICS?lstr56_FirmV_0_7_0+4
0x5C0F	0x636F ;?ICS?lstr56_FirmV_0_7_0+6
0x5C11	0x6F6C ;?ICS?lstr56_FirmV_0_7_0+8
0x5C13	0x6573 ;?ICS?lstr56_FirmV_0_7_0+10
0x5C15	0x5220 ;?ICS?lstr56_FirmV_0_7_0+12
0x5C17	0x6E65 ;?ICS?lstr56_FirmV_0_7_0+14
0x5C19	0x7765 ;?ICS?lstr56_FirmV_0_7_0+16
0x5C1B	0x6465 ;?ICS?lstr56_FirmV_0_7_0+18
0x5C1D	0x00 ;?ICS?lstr56_FirmV_0_7_0+20
; end of ?ICS?lstr56_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr98_FirmV_0_7_0
0x5C1E	0x2020 ;?ICS?lstr98_FirmV_0_7_0+0
0x5C20	0x2020 ;?ICS?lstr98_FirmV_0_7_0+2
0x5C22	0x2020 ;?ICS?lstr98_FirmV_0_7_0+4
0x5C24	0x2020 ;?ICS?lstr98_FirmV_0_7_0+6
0x5C26	0x2020 ;?ICS?lstr98_FirmV_0_7_0+8
0x5C28	0x2020 ;?ICS?lstr98_FirmV_0_7_0+10
0x5C2A	0x2020 ;?ICS?lstr98_FirmV_0_7_0+12
0x5C2C	0x2020 ;?ICS?lstr98_FirmV_0_7_0+14
0x5C2E	0x00 ;?ICS?lstr98_FirmV_0_7_0+16
; end of ?ICS?lstr98_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr99_FirmV_0_7_0
0x5C2F	0x2020 ;?ICS?lstr99_FirmV_0_7_0+0
0x5C31	0x2020 ;?ICS?lstr99_FirmV_0_7_0+2
0x5C33	0x2020 ;?ICS?lstr99_FirmV_0_7_0+4
0x5C35	0x2020 ;?ICS?lstr99_FirmV_0_7_0+6
0x5C37	0x2020 ;?ICS?lstr99_FirmV_0_7_0+8
0x5C39	0x2020 ;?ICS?lstr99_FirmV_0_7_0+10
0x5C3B	0x2020 ;?ICS?lstr99_FirmV_0_7_0+12
0x5C3D	0x2020 ;?ICS?lstr99_FirmV_0_7_0+14
0x5C3F	0x00 ;?ICS?lstr99_FirmV_0_7_0+16
; end of ?ICS?lstr99_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr100_FirmV_0_7_0
0x5C40	0x2020 ;?ICS?lstr100_FirmV_0_7_0+0
0x5C42	0x2020 ;?ICS?lstr100_FirmV_0_7_0+2
0x5C44	0x2020 ;?ICS?lstr100_FirmV_0_7_0+4
0x5C46	0x2020 ;?ICS?lstr100_FirmV_0_7_0+6
0x5C48	0x2020 ;?ICS?lstr100_FirmV_0_7_0+8
0x5C4A	0x2020 ;?ICS?lstr100_FirmV_0_7_0+10
0x5C4C	0x2020 ;?ICS?lstr100_FirmV_0_7_0+12
0x5C4E	0x2020 ;?ICS?lstr100_FirmV_0_7_0+14
0x5C50	0x00 ;?ICS?lstr100_FirmV_0_7_0+16
; end of ?ICS?lstr100_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr101_FirmV_0_7_0
0x5C51	0x2020 ;?ICS?lstr101_FirmV_0_7_0+0
0x5C53	0x2020 ;?ICS?lstr101_FirmV_0_7_0+2
0x5C55	0x2020 ;?ICS?lstr101_FirmV_0_7_0+4
0x5C57	0x2020 ;?ICS?lstr101_FirmV_0_7_0+6
0x5C59	0x2020 ;?ICS?lstr101_FirmV_0_7_0+8
0x5C5B	0x2020 ;?ICS?lstr101_FirmV_0_7_0+10
0x5C5D	0x2020 ;?ICS?lstr101_FirmV_0_7_0+12
0x5C5F	0x2020 ;?ICS?lstr101_FirmV_0_7_0+14
0x5C61	0x00 ;?ICS?lstr101_FirmV_0_7_0+16
; end of ?ICS?lstr101_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr102_FirmV_0_7_0
0x5C62	0x2020 ;?ICS?lstr102_FirmV_0_7_0+0
0x5C64	0x2020 ;?ICS?lstr102_FirmV_0_7_0+2
0x5C66	0x2020 ;?ICS?lstr102_FirmV_0_7_0+4
0x5C68	0x2020 ;?ICS?lstr102_FirmV_0_7_0+6
0x5C6A	0x2020 ;?ICS?lstr102_FirmV_0_7_0+8
0x5C6C	0x2020 ;?ICS?lstr102_FirmV_0_7_0+10
0x5C6E	0x2020 ;?ICS?lstr102_FirmV_0_7_0+12
0x5C70	0x2020 ;?ICS?lstr102_FirmV_0_7_0+14
0x5C72	0x00 ;?ICS?lstr102_FirmV_0_7_0+16
; end of ?ICS?lstr102_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr103_FirmV_0_7_0
0x5C73	0x2020 ;?ICS?lstr103_FirmV_0_7_0+0
0x5C75	0x2020 ;?ICS?lstr103_FirmV_0_7_0+2
0x5C77	0x2020 ;?ICS?lstr103_FirmV_0_7_0+4
0x5C79	0x2020 ;?ICS?lstr103_FirmV_0_7_0+6
0x5C7B	0x2020 ;?ICS?lstr103_FirmV_0_7_0+8
0x5C7D	0x2020 ;?ICS?lstr103_FirmV_0_7_0+10
0x5C7F	0x2020 ;?ICS?lstr103_FirmV_0_7_0+12
0x5C81	0x2020 ;?ICS?lstr103_FirmV_0_7_0+14
0x5C83	0x00 ;?ICS?lstr103_FirmV_0_7_0+16
; end of ?ICS?lstr103_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS__AC
0x5C84	0x00 ;?ICS__AC+0
; end of ?ICS__AC
;FirmV_0_7_0.c,0 :: ?ICS_CloseDone
0x5C85	0x03 ;?ICS_CloseDone+0
; end of ?ICS_CloseDone
;FirmV_0_7_0.c,0 :: ?ICS_ms500
0x5C86	0x0000 ;?ICS_ms500+0
0x5C88	0x0000 ;?ICS_ms500+2
; end of ?ICS_ms500
;FirmV_0_7_0.c,0 :: ?ICS_MenuPointer
0x5C8A	0x00 ;?ICS_MenuPointer+0
; end of ?ICS_MenuPointer
;FirmV_0_7_0.c,0 :: ?ICS_LearningMode
0x5C8B	0x00 ;?ICS_LearningMode+0
; end of ?ICS_LearningMode
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlashFlag
0x5C8C	0x00 ;?ICS_LCDFlashFlag+0
; end of ?ICS_LCDFlashFlag
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlash
0x5C8D	0x00 ;?ICS_LCDFlash+0
; end of ?ICS_LCDFlash
;FirmV_0_7_0.c,0 :: ?ICS_M1isSlow
0x5C8E	0x00 ;?ICS_M1isSlow+0
; end of ?ICS_M1isSlow
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag2
0x5C8F	0x00 ;?ICS_OverloadCheckFlag2+0
; end of ?ICS_OverloadCheckFlag2
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag1
0x5C90	0x00 ;?ICS_OverloadCheckFlag1+0
; end of ?ICS_OverloadCheckFlag1
;FirmV_0_7_0.c,0 :: ?ICS_Motor1Start
0x5C91	0x00 ;?ICS_Motor1Start+0
; end of ?ICS_Motor1Start
;FirmV_0_7_0.c,0 :: ?ICS_Motor2Start
0x5C92	0x00 ;?ICS_Motor2Start+0
; end of ?ICS_Motor2Start
;FirmV_0_7_0.c,0 :: ?ICS_State
0x5C93	0x00 ;?ICS_State+0
; end of ?ICS_State
;FirmV_0_7_0.c,0 :: ?ICS_PassFlag
0x5C94	0x00 ;?ICS_PassFlag+0
; end of ?ICS_PassFlag
;FirmV_0_7_0.c,0 :: ?ICS_M2isSlow
0x5C95	0x00 ;?ICS_M2isSlow+0
; end of ?ICS_M2isSlow
;FirmV_0_7_0.c,0 :: ?ICS_OpenDone
0x5C96	0x03 ;?ICS_OpenDone+0
; end of ?ICS_OpenDone
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine1
0x5C97	0x2020 ;?ICS_LCDLine1+0
0x5C99	0x2020 ;?ICS_LCDLine1+2
0x5C9B	0x2020 ;?ICS_LCDLine1+4
0x5C9D	0x2020 ;?ICS_LCDLine1+6
0x5C9F	0x2020 ;?ICS_LCDLine1+8
0x5CA1	0x2020 ;?ICS_LCDLine1+10
0x5CA3	0x2020 ;?ICS_LCDLine1+12
0x5CA5	0x2020 ;?ICS_LCDLine1+14
0x5CA7	0x00 ;?ICS_LCDLine1+16
; end of ?ICS_LCDLine1
;FirmV_0_7_0.c,0 :: ?ICS_RemoteBFlag
0x5CA8	0x00 ;?ICS_RemoteBFlag+0
; end of ?ICS_RemoteBFlag
;FirmV_0_7_0.c,0 :: ?ICS_RemoteAFlag
0x5CA9	0x00 ;?ICS_RemoteAFlag+0
; end of ?ICS_RemoteAFlag
;FirmV_0_7_0.c,0 :: ?ICS_ms20A
0x5CAA	0x00 ;?ICS_ms20A+0
; end of ?ICS_ms20A
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse1
0x5CAB	0x00 ;?ICS_RemotePulse1+0
; end of ?ICS_RemotePulse1
;FirmV_0_7_0.c,0 :: ?ICS_Flag500ms
0x5CAC	0x01 ;?ICS_Flag500ms+0
; end of ?ICS_Flag500ms
;FirmV_0_7_0.c,0 :: ?ICS_Flag20ms
0x5CAD	0x01 ;?ICS_Flag20ms+0
; end of ?ICS_Flag20ms
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellCount
0x5CAE	0x00 ;?ICS_PhotocellCount+0
; end of ?ICS_PhotocellCount
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter1
0x5CAF	0x00 ;?ICS_OverloadCounter1+0
; end of ?ICS_OverloadCounter1
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter2
0x5CB0	0x00 ;?ICS_OverloadCounter2+0
; end of ?ICS_OverloadCounter2
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellOpenFlag
0x5CB1	0x00 ;?ICS_PhotocellOpenFlag+0
; end of ?ICS_PhotocellOpenFlag
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine2
0x5CB2	0x2020 ;?ICS_LCDLine2+0
0x5CB4	0x2020 ;?ICS_LCDLine2+2
0x5CB6	0x2020 ;?ICS_LCDLine2+4
0x5CB8	0x2020 ;?ICS_LCDLine2+6
0x5CBA	0x2020 ;?ICS_LCDLine2+8
0x5CBC	0x2020 ;?ICS_LCDLine2+10
0x5CBE	0x2020 ;?ICS_LCDLine2+12
0x5CC0	0x2020 ;?ICS_LCDLine2+14
0x5CC2	0x00 ;?ICS_LCDLine2+16
; end of ?ICS_LCDLine2
;FirmV_0_7_0.c,0 :: ?ICS_LCDUpdateFlag
0x5CC3	0x00 ;?ICS_LCDUpdateFlag+0
; end of ?ICS_LCDUpdateFlag
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse2
0x5CC4	0x00 ;?ICS_RemotePulse2+0
; end of ?ICS_RemotePulse2
;FirmV_0_7_0.c,0 :: ?ICS_msCounter
0x5CC5	0x00 ;?ICS_msCounter+0
; end of ?ICS_msCounter
;FirmV_0_7_0.c,0 :: ?ICS_Pressed
0x5CC6	0x00 ;?ICS_Pressed+0
; end of ?ICS_Pressed
;FirmV_0_7_0.c,0 :: ?ICS_DebouncingDelay
0x5CC7	0x00 ;?ICS_DebouncingDelay+0
; end of ?ICS_DebouncingDelay
;FirmV_0_7_0.c,0 :: ?ICS_ZCCounter
0x5CC8	0x00 ;?ICS_ZCCounter+0
; end of ?ICS_ZCCounter
;FirmV_0_7_0.c,0 :: ?ICS_Motor2FullSpeed
0x5CC9	0x01 ;?ICS_Motor2FullSpeed+0
; end of ?ICS_Motor2FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_Motor1FullSpeed
0x5CCA	0x01 ;?ICS_Motor1FullSpeed+0
; end of ?ICS_Motor1FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_OverloadSens
0x5CCB	0x05 ;?ICS_OverloadSens+0
; end of ?ICS_OverloadSens
;FirmV_0_7_0.c,0 :: ?ICS?lstr39_FirmV_0_7_0
0x5CCC	0x3553 ;?ICS?lstr39_FirmV_0_7_0+0
0x5CCE	0x4120 ;?ICS?lstr39_FirmV_0_7_0+2
0x5CD0	0x7475 ;?ICS?lstr39_FirmV_0_7_0+4
0x5CD2	0x206F ;?ICS?lstr39_FirmV_0_7_0+6
0x5CD4	0x6C43 ;?ICS?lstr39_FirmV_0_7_0+8
0x5CD6	0x736F ;?ICS?lstr39_FirmV_0_7_0+10
0x5CD8	0x2065 ;?ICS?lstr39_FirmV_0_7_0+12
0x5CDA	0x6544 ;?ICS?lstr39_FirmV_0_7_0+14
0x5CDC	0x656C ;?ICS?lstr39_FirmV_0_7_0+16
0x5CDE	0x6574 ;?ICS?lstr39_FirmV_0_7_0+18
0x5CE0	0x0064 ;?ICS?lstr39_FirmV_0_7_0+20
; end of ?ICS?lstr39_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr40_FirmV_0_7_0
0x5CE2	0x3553 ;?ICS?lstr40_FirmV_0_7_0+0
0x5CE4	0x4920 ;?ICS?lstr40_FirmV_0_7_0+2
0x5CE6	0x736E ;?ICS?lstr40_FirmV_0_7_0+4
0x5CE8	0x7265 ;?ICS?lstr40_FirmV_0_7_0+6
0x5CEA	0x2074 ;?ICS?lstr40_FirmV_0_7_0+8
0x5CEC	0x2039 ;?ICS?lstr40_FirmV_0_7_0+10
0x5CEE	0x7461 ;?ICS?lstr40_FirmV_0_7_0+12
0x5CF0	0x003A ;?ICS?lstr40_FirmV_0_7_0+14
; end of ?ICS?lstr40_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr41_FirmV_0_7_0
0x5CF2	0x3553 ;?ICS?lstr41_FirmV_0_7_0+0
0x5CF4	0x4920 ;?ICS?lstr41_FirmV_0_7_0+2
0x5CF6	0x736E ;?ICS?lstr41_FirmV_0_7_0+4
0x5CF8	0x7265 ;?ICS?lstr41_FirmV_0_7_0+6
0x5CFA	0x2074 ;?ICS?lstr41_FirmV_0_7_0+8
0x5CFC	0x2039 ;?ICS?lstr41_FirmV_0_7_0+10
0x5CFE	0x7461 ;?ICS?lstr41_FirmV_0_7_0+12
0x5D00	0x003A ;?ICS?lstr41_FirmV_0_7_0+14
; end of ?ICS?lstr41_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState5_delay_L0
0x5D02	0x02 ;?ICSState5_delay_L0+0
; end of ?ICSState5_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr42_FirmV_0_7_0
0x5D03	0x3653 ;?ICS?lstr42_FirmV_0_7_0+0
0x5D05	0x4120 ;?ICS?lstr42_FirmV_0_7_0+2
0x5D07	0x7475 ;?ICS?lstr42_FirmV_0_7_0+4
0x5D09	0x206F ;?ICS?lstr42_FirmV_0_7_0+6
0x5D0B	0x6C43 ;?ICS?lstr42_FirmV_0_7_0+8
0x5D0D	0x736F ;?ICS?lstr42_FirmV_0_7_0+10
0x5D0F	0x2065 ;?ICS?lstr42_FirmV_0_7_0+12
0x5D11	0x6544 ;?ICS?lstr42_FirmV_0_7_0+14
0x5D13	0x656C ;?ICS?lstr42_FirmV_0_7_0+16
0x5D15	0x6574 ;?ICS?lstr42_FirmV_0_7_0+18
0x5D17	0x0064 ;?ICS?lstr42_FirmV_0_7_0+20
; end of ?ICS?lstr42_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr43_FirmV_0_7_0
0x5D19	0x3653 ;?ICS?lstr43_FirmV_0_7_0+0
0x5D1B	0x4920 ;?ICS?lstr43_FirmV_0_7_0+2
0x5D1D	0x736E ;?ICS?lstr43_FirmV_0_7_0+4
0x5D1F	0x7265 ;?ICS?lstr43_FirmV_0_7_0+6
0x5D21	0x2074 ;?ICS?lstr43_FirmV_0_7_0+8
0x5D23	0x2039 ;?ICS?lstr43_FirmV_0_7_0+10
0x5D25	0x7461 ;?ICS?lstr43_FirmV_0_7_0+12
0x5D27	0x003A ;?ICS?lstr43_FirmV_0_7_0+14
; end of ?ICS?lstr43_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr44_FirmV_0_7_0
0x5D29	0x3653 ;?ICS?lstr44_FirmV_0_7_0+0
0x5D2B	0x4920 ;?ICS?lstr44_FirmV_0_7_0+2
0x5D2D	0x736E ;?ICS?lstr44_FirmV_0_7_0+4
0x5D2F	0x7265 ;?ICS?lstr44_FirmV_0_7_0+6
0x5D31	0x2074 ;?ICS?lstr44_FirmV_0_7_0+8
0x5D33	0x2039 ;?ICS?lstr44_FirmV_0_7_0+10
0x5D35	0x7461 ;?ICS?lstr44_FirmV_0_7_0+12
0x5D37	0x003A ;?ICS?lstr44_FirmV_0_7_0+14
; end of ?ICS?lstr44_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState6_delay_L0
0x5D39	0x03 ;?ICSState6_delay_L0+0
; end of ?ICSState6_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr3_FirmV_0_7_0
0x5D3A	0x3253 ;?ICS?lstr3_FirmV_0_7_0+0
0x5D3C	0x4120 ;?ICS?lstr3_FirmV_0_7_0+2
0x5D3E	0x7475 ;?ICS?lstr3_FirmV_0_7_0+4
0x5D40	0x206F ;?ICS?lstr3_FirmV_0_7_0+6
0x5D42	0x6C43 ;?ICS?lstr3_FirmV_0_7_0+8
0x5D44	0x736F ;?ICS?lstr3_FirmV_0_7_0+10
0x5D46	0x2065 ;?ICS?lstr3_FirmV_0_7_0+12
0x5D48	0x6544 ;?ICS?lstr3_FirmV_0_7_0+14
0x5D4A	0x656C ;?ICS?lstr3_FirmV_0_7_0+16
0x5D4C	0x6574 ;?ICS?lstr3_FirmV_0_7_0+18
0x5D4E	0x0064 ;?ICS?lstr3_FirmV_0_7_0+20
; end of ?ICS?lstr3_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr4_FirmV_0_7_0
0x5D50	0x3253 ;?ICS?lstr4_FirmV_0_7_0+0
0x5D52	0x4920 ;?ICS?lstr4_FirmV_0_7_0+2
0x5D54	0x736E ;?ICS?lstr4_FirmV_0_7_0+4
0x5D56	0x7265 ;?ICS?lstr4_FirmV_0_7_0+6
0x5D58	0x2074 ;?ICS?lstr4_FirmV_0_7_0+8
0x5D5A	0x2039 ;?ICS?lstr4_FirmV_0_7_0+10
0x5D5C	0x7461 ;?ICS?lstr4_FirmV_0_7_0+12
0x5D5E	0x003A ;?ICS?lstr4_FirmV_0_7_0+14
; end of ?ICS?lstr4_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr5_FirmV_0_7_0
0x5D60	0x3253 ;?ICS?lstr5_FirmV_0_7_0+0
0x5D62	0x4920 ;?ICS?lstr5_FirmV_0_7_0+2
0x5D64	0x736E ;?ICS?lstr5_FirmV_0_7_0+4
0x5D66	0x7265 ;?ICS?lstr5_FirmV_0_7_0+6
0x5D68	0x2074 ;?ICS?lstr5_FirmV_0_7_0+8
0x5D6A	0x2039 ;?ICS?lstr5_FirmV_0_7_0+10
0x5D6C	0x7461 ;?ICS?lstr5_FirmV_0_7_0+12
0x5D6E	0x003A ;?ICS?lstr5_FirmV_0_7_0+14
; end of ?ICS?lstr5_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState2_delay_L0
0x5D70	0x02 ;?ICSState2_delay_L0+0
; end of ?ICSState2_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr69_FirmV_0_7_0
0x5D71	0x2020 ;?ICS?lstr69_FirmV_0_7_0+0
0x5D73	0x2020 ;?ICS?lstr69_FirmV_0_7_0+2
0x5D75	0x2020 ;?ICS?lstr69_FirmV_0_7_0+4
0x5D77	0x2020 ;?ICS?lstr69_FirmV_0_7_0+6
0x5D79	0x2020 ;?ICS?lstr69_FirmV_0_7_0+8
0x5D7B	0x2020 ;?ICS?lstr69_FirmV_0_7_0+10
0x5D7D	0x2020 ;?ICS?lstr69_FirmV_0_7_0+12
0x5D7F	0x0020 ;?ICS?lstr69_FirmV_0_7_0+14
; end of ?ICS?lstr69_FirmV_0_7_0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0006       [2]    _LearnAuto
0x0008     [326]    _interrupt
0x014E      [18]    _SPI1_Write
0x0160      [14]    _UART1_Write
0x016E      [54]    _Div_16x16_U
0x01A4      [24]    _____DoIFC
0x01BC      [30]    _Div_8x8_U
0x01DA     [116]    _ByteToStr
0x024E      [80]    _memcpy
0x029E      [10]    _Delay_1us
0x02A8     [748]    _Div_32x32_U
0x0594      [12]    _Delay_50us
0x05A0      [24]    _UART_Write
0x05B8     [222]    _SetOverloadParams
0x0696      [52]    _EEPROM_Write
0x06CA      [20]    _Delay_5500us
0x06DE     [146]    _WordToStr
0x0770      [80]    _Mul_16x16_U
0x07C0     [198]    _LongWordToStrWithZeros
0x0886     [144]    _intValueToStr
0x0916      [52]    _UART_Write_Text
0x094A      [10]    _Delay_22us
0x0954      [16]    _EEPROM_Read
0x0964     [132]    _Lcd_Cmd
0x09E8     [204]    _SaveConfigs
0x0AB4      [54]    _UART1_Write_Text
0x0AEA      [16]    ___CC2DW
0x0AFA     [130]    _charValueToStr
0x0B7C      [64]    _CheckTask
0x0BBC      [30]    _OverloadInit
0x0BDA     [142]    _ClearTasks
0x0C68      [60]    _ADC_Read
0x0CA4      [48]    _StartMotor
0x0CD4    [2102]    _Menu0
0x150A      [72]    _FactorySettings
0x1552      [32]    _SetMotorSpeed
0x1572      [24]    _StopMotor
0x158A     [100]    _Logger
0x15EE     [240]    _AddTask
0x16DE     [214]    _GetAutocloseTime
0x17B4     [230]    _LoadConfigs
0x189A      [16]    _Lcd_Chr_CP
0x18AA      [20]    _GetLimitSwitchState
0x18BE     [442]    _GetKeysState
0x1A78      [22]    _GetExternalKeysState
0x1A8E    [1368]    _Menu2
0x1FE6     [128]    _Lcd_Out
0x2066     [198]    _Lcd_Init
0x212C       [8]    _Menu3
0x2134      [88]    _UART1_Init
0x218C       [2]    _LearnManual
0x218E    [1200]    _State7
0x263E      [78]    _GetRemoteState
0x268C    [2274]    _State2
0x2F6E    [1240]    _State8
0x3446    [1348]    _State6
0x398A    [1694]    _State3
0x4028    [1546]    _State4
0x4632    [1188]    _State5
0x4AD6      [56]    _State00
0x4B0E      [58]    _Menu1
0x4B48    [1334]    _State1
0x507E     [146]    _GetOverloadState
0x5110      [32]    _GetPhotocellState
0x5130     [138]    _LCDUpdater
0x51BA     [190]    _Init
0x5278     [188]    _StateManager
0x5334     [236]    _TaskManager
0x5420     [504]    _EventHandler
0x5618      [12]    _ResetTaskEvents
0x5624     [100]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [1]    __AC
0x001B       [1]    _CloseDone
0x001C       [4]    _ms500
0x0020       [1]    _MenuPointer
0x0021       [1]    _LearningMode
0x0022       [1]    _LCDFlashFlag
0x0023       [1]    _LCDFlash
0x0024       [1]    _M1isSlow
0x0025       [1]    _OverloadCheckFlag2
0x0026       [1]    _OverloadCheckFlag1
0x0027       [1]    _Motor1Start
0x0028       [1]    _Motor2Start
0x0029       [1]    _State
0x002A       [1]    _PassFlag
0x002B       [1]    _M2isSlow
0x002C       [1]    _OpenDone
0x002D      [17]    _LCDLine1
0x003E       [1]    _RemoteBFlag
0x003F       [1]    _RemoteAFlag
0x0040       [1]    _ms20A
0x0041       [1]    _RemotePulse1
0x0042       [1]    _Flag500ms
0x0043       [1]    _Flag20ms
0x0044       [1]    _PhotocellCount
0x0045       [1]    _OverloadCounter1
0x0046       [1]    _OverloadCounter2
0x0047       [1]    _PhotocellOpenFlag
0x0048      [17]    _LCDLine2
0x0059       [1]    _LCDUpdateFlag
0x005A       [1]    _RemotePulse2
0x005B       [1]    _msCounter
0x005C       [1]    _Pressed
0x005D       [1]    _DebouncingDelay
0x005E       [1]    _ZCCounter
0x005F       [1]    _Motor2FullSpeed
0x0060       [1]    _Motor1FullSpeed
0x0061       [1]    _OverloadSens
0x0062      [11]    _t
0x006D       [4]    _temp
0x0071     [140]    _Tasks
0x00FD       [9]    _Events
0x0106       [1]    _ms20B
0x0107       [1]    _OverloadDuration
0x0108       [2]    _OverloadTreshold
0x010A       [0]    __Lib_Lcd_cmd_status
0x010B       [1]    _Door2CloseTime
0x010C       [1]    _Door1CloseTime
0x010D       [1]    _Door2OpenTime
0x010E       [1]    _OpenSoftStopTime
0x010F       [1]    _OpenSoftStartTime
0x0110       [1]    _ActionTimeDiff
0x0111       [1]    GetKeysState_Repeat_L0
0x0112       [1]    GetKeysState_RepeatRate_L0
0x0113       [4]    _UART_Tx_Idle_Ptr
0x0117       [1]    _Door1OpenTime
0x0118       [4]    _UART_Rdy_Ptr
0x011C       [4]    GetKeysState_PressTime_L0
0x0120       [1]    _CloseSoftStartTime
0x0121       [4]    _UART_Rd_Ptr
0x0125       [1]    _LimiterEnable
0x0126       [4]    _UART_Wr_Ptr
0x012A       [1]    _CloseAfterPass
0x012B       [1]    _CloseSoftStopTime
0x012C       [2]    _AutoCloseTime
0x012E       [1]    _LockForce
0x012F       [1]    _OpenPhEnable
0x0130      [10]    ?lstr2_FirmV_0_7_0
0x013A       [1]    TaskManager_i_L0
0x013A       [1]    EventHandler_i_L0
0x013A       [1]    Init_i_L0
0x013A      [16]    ?lstr69_FirmV_0_7_0
0x014A      [15]    ?lstr57_FirmV_0_7_0
0x014A       [1]    FARG_Lcd_Out_row
0x014A      [15]    ?lstr45_FirmV_0_7_0
0x014A      [22]    ?lstr42_FirmV_0_7_0
0x014A      [22]    ?lstr39_FirmV_0_7_0
0x014A       [1]    GetKeysState_fin_L0
0x014A       [1]    GetExternalKeysState_out_L0
0x014A      [15]    ?lstr23_FirmV_0_7_0
0x014A      [15]    ?lstr6_FirmV_0_7_0
0x014A      [22]    ?lstr3_FirmV_0_7_0
0x014A       [2]    GetOverloadState_VCapM1_L0
0x014A       [1]    GetRemoteState_res_L0
0x014A      [17]    ?lstr98_FirmV_0_7_0
0x014A       [1]    State1_delay_L0
0x014B       [2]    GetKeysState_res_L0
0x014B       [1]    FARG_Lcd_Out_column
0x014C       [2]    GetOverloadState_VCapM2_L0
0x014C       [2]    FARG_Lcd_Out_text
0x014D       [1]    GetKeysState_resch_L0
0x014E       [1]    Lcd_Out_i_L0
0x014E       [1]    GetOverloadState_res_L0
0x0159      [15]    ?lstr58_FirmV_0_7_0
0x0159      [15]    ?lstr7_FirmV_0_7_0
0x0159      [15]    ?lstr24_FirmV_0_7_0
0x0159      [15]    ?lstr46_FirmV_0_7_0
0x015B      [17]    ?lstr99_FirmV_0_7_0
0x0160      [16]    ?lstr43_FirmV_0_7_0
0x0160      [16]    ?lstr4_FirmV_0_7_0
0x0160      [16]    ?lstr40_FirmV_0_7_0
0x0168      [22]    ?lstr59_FirmV_0_7_0
0x0168      [15]    ?lstr8_FirmV_0_7_0
0x0168      [21]    ?lstr47_FirmV_0_7_0
0x0168      [21]    ?lstr25_FirmV_0_7_0
0x016C      [17]    ?lstr100_FirmV_0_7_0
0x0170      [16]    ?lstr41_FirmV_0_7_0
0x0170      [16]    ?lstr44_FirmV_0_7_0
0x0170      [16]    ?lstr5_FirmV_0_7_0
0x0177      [15]    ?lstr9_FirmV_0_7_0
0x017D      [21]    ?lstr48_FirmV_0_7_0
0x017D      [17]    ?lstr101_FirmV_0_7_0
0x017D      [21]    ?lstr26_FirmV_0_7_0
0x017E      [22]    ?lstr60_FirmV_0_7_0
0x0180       [1]    State5_delay_L0
0x0180       [1]    State6_delay_L0
0x0180       [1]    State2_delay_L0
0x0186      [15]    ?lstr10_FirmV_0_7_0
0x018E      [17]    ?lstr102_FirmV_0_7_0
0x0192      [15]    ?lstr27_FirmV_0_7_0
0x0192      [15]    ?lstr49_FirmV_0_7_0
0x0194      [15]    ?lstr61_FirmV_0_7_0
0x0195      [15]    ?lstr11_FirmV_0_7_0
0x019F      [17]    ?lstr103_FirmV_0_7_0
0x01A1      [15]    ?lstr50_FirmV_0_7_0
0x01A1      [17]    ?lstr28_FirmV_0_7_0
0x01A3      [15]    ?lstr62_FirmV_0_7_0
0x01A4      [22]    ?lstr12_FirmV_0_7_0
0x01B0      [13]    ?lstr51_FirmV_0_7_0
0x01B2      [15]    ?lstr29_FirmV_0_7_0
0x01B2      [15]    ?lstr63_FirmV_0_7_0
0x01BA      [22]    ?lstr13_FirmV_0_7_0
0x01BD      [13]    ?lstr52_FirmV_0_7_0
0x01C1      [15]    ?lstr64_FirmV_0_7_0
0x01C1      [17]    ?lstr30_FirmV_0_7_0
0x01CA      [17]    ?lstr53_FirmV_0_7_0
0x01D0      [15]    ?lstr14_FirmV_0_7_0
0x01D0      [17]    ?lstr65_FirmV_0_7_0
0x01D2      [13]    ?lstr31_FirmV_0_7_0
0x01DB      [18]    ?lstr54_FirmV_0_7_0
0x01DF      [13]    ?lstr32_FirmV_0_7_0
0x01DF      [15]    ?lstr15_FirmV_0_7_0
0x01E1      [26]    ?lstr66_FirmV_0_7_0
0x01EC      [17]    ?lstr33_FirmV_0_7_0
0x01ED      [21]    ?lstr55_FirmV_0_7_0
0x01EE      [20]    ?lstr16_FirmV_0_7_0
0x01FB      [21]    ?lstr67_FirmV_0_7_0
0x01FD      [17]    ?lstr34_FirmV_0_7_0
0x0202      [20]    ?lstr17_FirmV_0_7_0
0x0202      [21]    ?lstr56_FirmV_0_7_0
0x020E      [17]    ?lstr35_FirmV_0_7_0
0x0210      [21]    ?lstr68_FirmV_0_7_0
0x0216      [17]    ?lstr18_FirmV_0_7_0
0x021F      [21]    ?lstr36_FirmV_0_7_0
0x0227      [17]    ?lstr19_FirmV_0_7_0
0x0234      [18]    ?lstr37_FirmV_0_7_0
0x0238      [23]    ?lstr20_FirmV_0_7_0
0x0246      [21]    ?lstr38_FirmV_0_7_0
0x024F      [26]    ?lstr21_FirmV_0_7_0
0x0269      [21]    ?lstr22_FirmV_0_7_0
0x027E       [1]    GetAutocloseTime_i_L0
0x027E       [1]    FARG_ADC_Read_channel
0x027E       [1]    FARG_ClearTasks_except
0x027E       [1]    FARG_OverloadInit_ch
0x027E       [1]    FARG_Lcd_Chr_CP_out_char
0x027E       [1]    FARG_StartMotor_Mx
0x027E       [1]    FARG_StopMotor_Mx
0x027E       [1]    FARG_SetMotorSpeed_M1FullSpeed
0x027E       [2]    FARG_Logger_text
0x027E       [1]    FARG_CheckTask_TaskCode
0x027E       [4]    FARG_AddTask_OccTime
0x027E      [17]    ?lstr70_FirmV_0_7_0
0x027F       [1]    FARG_SetMotorSpeed_M2FullSpeed
0x027F       [4]    GetAutocloseTime_t_L0
0x027F       [1]    ClearTasks_i_L0
0x027F       [1]    FARG_StartMotor_Dir
0x0280      [11]    Logger_time_L0
0x0282       [1]    FARG_AddTask_tcode
0x0283       [1]    AddTask_i_L0
0x028B       [3]    ?lstr1_FirmV_0_7_0
0x028F      [17]    ?lstr71_FirmV_0_7_0
0x02A0      [17]    ?lstr72_FirmV_0_7_0
0x02B1      [17]    ?lstr73_FirmV_0_7_0
0x02C2      [17]    ?lstr74_FirmV_0_7_0
0x02D3      [17]    ?lstr75_FirmV_0_7_0
0x02E4      [17]    ?lstr76_FirmV_0_7_0
0x02F5      [17]    ?lstr77_FirmV_0_7_0
0x0306      [17]    ?lstr78_FirmV_0_7_0
0x0317      [17]    ?lstr79_FirmV_0_7_0
0x0328      [17]    ?lstr80_FirmV_0_7_0
0x0339      [17]    ?lstr81_FirmV_0_7_0
0x034A      [17]    ?lstr82_FirmV_0_7_0
0x035B      [17]    ?lstr83_FirmV_0_7_0
0x036C      [17]    ?lstr84_FirmV_0_7_0
0x037D      [17]    ?lstr85_FirmV_0_7_0
0x038E      [17]    ?lstr86_FirmV_0_7_0
0x039F       [8]    ?lstr87_FirmV_0_7_0
0x03A7       [9]    ?lstr88_FirmV_0_7_0
0x03B0      [17]    ?lstr89_FirmV_0_7_0
0x03C1       [8]    ?lstr90_FirmV_0_7_0
0x03C9       [9]    ?lstr91_FirmV_0_7_0
0x03D2      [17]    ?lstr92_FirmV_0_7_0
0x03E3       [8]    ?lstr93_FirmV_0_7_0
0x03EB       [9]    ?lstr94_FirmV_0_7_0
0x03F4      [17]    ?lstr95_FirmV_0_7_0
0x0405      [17]    ?lstr96_FirmV_0_7_0
0x0416      [17]    ?lstr97_FirmV_0_7_0
0x0427       [2]    FARG_UART1_Write_Text_uart_text
0x0427       [1]    FARG_EEPROM_Read_address
0x0427       [1]    FARG_Lcd_Cmd_out_char
0x0427       [2]    FARG_UART_Write_Text_uart_text
0x0427       [1]    FARG_charValueToStr_val
0x0427       [2]    FARG_intValueToStr_val
0x0427       [4]    FARG_LongWordToStrWithZeros_input
0x0428       [2]    FARG_charValueToStr_string
0x0429       [1]    UART_Write_Text_data__L0
0x0429       [2]    FARG_intValueToStr_string
0x0429       [1]    UART1_Write_Text_data__L0
0x042A       [1]    UART_Write_Text_counter_L0
0x042A       [1]    UART1_Write_Text_counter_L0
0x042A       [4]    ?lstr104_FirmV_0_7_0
0x042B       [2]    FARG_LongWordToStrWithZeros_output
0x042B       [4]    ?lstr106_FirmV_0_7_0
0x042D       [1]    LongWordToStrWithZeros_len_L0
0x042E       [2]    FLOC__LongWordToStrWithZeros
0x042E       [4]    ?lstr105_FirmV_0_7_0
0x042F       [4]    ?lstr107_FirmV_0_7_0
0x0433       [2]    FARG_memcpy_d1
0x0433       [2]    FARG_WordToStr_input
0x0433       [1]    FARG_ByteToStr_input
0x0433       [1]    FARG_SetOverloadParams_p
0x0433       [1]    FARG_UART_Write__data
0x0433       [1]    FARG_EEPROM_Write_address
0x0434       [2]    FARG_ByteToStr_output
0x0434       [1]    FARG_EEPROM_Write_data_
0x0435       [2]    FARG_memcpy_s1
0x0435       [2]    FARG_WordToStr_output
0x0436       [1]    ByteToStr_DigitPos_L0
0x0437       [2]    FLOC__ByteToStr
0x0437       [2]    FARG_memcpy_n
0x0437       [1]    WordToStr_len_L0
0x0438       [2]    FLOC__WordToStr
0x043A       [1]    FARG_SPI1_Write_data_
0x043A       [1]    FARG_UART1_Write_data_
0x0F80       [0]    RA3_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    AN2_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    AN0_bit
0x0F80       [0]    CLKO_bit
0x0F80       [0]    AN3_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    RA0_bit
0x0F80       [1]    PORTA
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    VREFP_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    VREFM_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    LCD_D7
0x0F81       [0]    RB4_bit
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_D4
0x0F81       [0]    RB3_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    LCD_D5
0x0F81       [0]    INT1_bit
0x0F81       [0]    RB2_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    CCP2A_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    PGD_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC4_bit
0x0F82       [1]    PORTC
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    T1OSO_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    PSP2_bit
0x0F83       [0]    PSP3_bit
0x0F83       [0]    PSP5_bit
0x0F83       [0]    PSP6_bit
0x0F83       [0]    PSP0_bit
0x0F83       [0]    PSP7_bit
0x0F83       [0]    PSP1_bit
0x0F83       [1]    PORTD
0x0F83       [0]    PSP4_bit
0x0F84       [0]    RD_bit
0x0F84       [1]    PORTE
0x0F84       [0]    WR_bit
0x0F84       [0]    RE0_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    AN6_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    CS_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    LCD_RS
0x0F84       [0]    LCD_EN
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA4_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA5_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB6_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC3_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD3_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [0]    LATE0_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE1_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA0_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    CCP2_TRISB_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [1]    TRISB
0x0F94       [0]    CCP2_TRISC_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD7_bit
0x0F96       [1]    TRISE
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    LCD_EN_Direction
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    CCP1IP_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [1]    PIE2
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [1]    IPR2
0x0FA6       [0]    EEPGD_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    WR_EECON1_bit
0x0FA6       [0]    WRERR_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RC8_9_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    NOT_RC8_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    RCD8_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    RC9_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    NOT_TX8_bit
0x0FAC       [0]    BRGH_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    TXD8_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TX8_9_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3INSYNC_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    RD16_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FBA       [0]    DC2B1_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    DCCPX_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBB       [2]    CCPR2
0x0FBB       [1]    CCPR2L
0x0FBC       [1]    CCPR2H
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    ADFM_bit
0x0FC1       [0]    ADCS2_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG1_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_NOT_DONE_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    ADCS0_bit
0x0FC2       [0]    ADCS1_bit
0x0FC2       [0]    CHS2_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    ACKDT_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM1_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    READ_WRITE_bit
0x0FC7       [0]    DATA_ADDRESS_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    I2C_START__bit
0x0FC7       [0]    I2C_STOP__bit
0x0FC7       [0]    I2C_DATA_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    I2C_DAT_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    I2C_READ_bit
0x0FC7       [0]    R_NOT_W_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    BF_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    D_NOT_A_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1INSYNC_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    NOT_IPEN_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    POR_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [1]    WDTCON
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL0_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    OV_bit
0x0FD8       [0]    N_bit
0x0FD8       [0]    C_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    Z_bit
0x0FD8       [0]    DC_bit
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT1IF_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1IP_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    PEIE_GIEL_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    GIE_GIEH_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [1]    INTCON1
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    GIEH_bit
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF9       [1]    PC
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU0_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    SP4_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x5688      [17]    ?ICS?lstr70_FirmV_0_7_0
0x5699      [17]    ?ICS?lstr71_FirmV_0_7_0
0x56AA      [17]    ?ICS?lstr72_FirmV_0_7_0
0x56BB      [17]    ?ICS?lstr73_FirmV_0_7_0
0x56CC      [17]    ?ICS?lstr74_FirmV_0_7_0
0x56DD      [17]    ?ICS?lstr75_FirmV_0_7_0
0x56EE      [17]    ?ICS?lstr76_FirmV_0_7_0
0x56FF      [17]    ?ICS?lstr77_FirmV_0_7_0
0x5710      [17]    ?ICS?lstr78_FirmV_0_7_0
0x5721      [17]    ?ICS?lstr79_FirmV_0_7_0
0x5732      [17]    ?ICS?lstr80_FirmV_0_7_0
0x5743      [17]    ?ICS?lstr81_FirmV_0_7_0
0x5754      [17]    ?ICS?lstr82_FirmV_0_7_0
0x5765      [17]    ?ICS?lstr83_FirmV_0_7_0
0x5776      [17]    ?ICS?lstr84_FirmV_0_7_0
0x5787      [17]    ?ICS?lstr85_FirmV_0_7_0
0x5798      [17]    ?ICS?lstr86_FirmV_0_7_0
0x57A9       [8]    ?ICS?lstr87_FirmV_0_7_0
0x57B1       [9]    ?ICS?lstr88_FirmV_0_7_0
0x57BA      [17]    ?ICS?lstr89_FirmV_0_7_0
0x57CB       [8]    ?ICS?lstr90_FirmV_0_7_0
0x57D3       [9]    ?ICS?lstr91_FirmV_0_7_0
0x57DC      [17]    ?ICS?lstr92_FirmV_0_7_0
0x57ED       [8]    ?ICS?lstr93_FirmV_0_7_0
0x57F5       [9]    ?ICS?lstr94_FirmV_0_7_0
0x57FE      [17]    ?ICS?lstr95_FirmV_0_7_0
0x580F      [17]    ?ICS?lstr96_FirmV_0_7_0
0x5820      [17]    ?ICS?lstr97_FirmV_0_7_0
0x5831      [15]    ?ICS?lstr6_FirmV_0_7_0
0x5840      [15]    ?ICS?lstr7_FirmV_0_7_0
0x584F      [15]    ?ICS?lstr8_FirmV_0_7_0
0x585E      [15]    ?ICS?lstr9_FirmV_0_7_0
0x586D      [15]    ?ICS?lstr10_FirmV_0_7_0
0x587C      [15]    ?ICS?lstr11_FirmV_0_7_0
0x588B      [22]    ?ICS?lstr12_FirmV_0_7_0
0x58A1      [22]    ?ICS?lstr13_FirmV_0_7_0
0x58B7      [15]    ?ICS?lstr14_FirmV_0_7_0
0x58C6      [15]    ?ICS?lstr15_FirmV_0_7_0
0x58D5      [20]    ?ICS?lstr16_FirmV_0_7_0
0x58E9      [20]    ?ICS?lstr17_FirmV_0_7_0
0x58FD      [17]    ?ICS?lstr18_FirmV_0_7_0
0x590E      [17]    ?ICS?lstr19_FirmV_0_7_0
0x591F      [23]    ?ICS?lstr20_FirmV_0_7_0
0x5936      [26]    ?ICS?lstr21_FirmV_0_7_0
0x5950      [21]    ?ICS?lstr22_FirmV_0_7_0
0x5965      [15]    ?ICS?lstr23_FirmV_0_7_0
0x5974      [15]    ?ICS?lstr24_FirmV_0_7_0
0x5983      [21]    ?ICS?lstr25_FirmV_0_7_0
0x5998      [21]    ?ICS?lstr26_FirmV_0_7_0
0x59AD      [15]    ?ICS?lstr27_FirmV_0_7_0
0x59BC      [17]    ?ICS?lstr28_FirmV_0_7_0
0x59CD      [15]    ?ICS?lstr29_FirmV_0_7_0
0x59DC      [17]    ?ICS?lstr30_FirmV_0_7_0
0x59ED      [13]    ?ICS?lstr31_FirmV_0_7_0
0x59FA      [13]    ?ICS?lstr32_FirmV_0_7_0
0x5A07      [17]    ?ICS?lstr33_FirmV_0_7_0
0x5A18      [17]    ?ICS?lstr34_FirmV_0_7_0
0x5A29      [17]    ?ICS?lstr35_FirmV_0_7_0
0x5A3A      [21]    ?ICS?lstr36_FirmV_0_7_0
0x5A4F      [18]    ?ICS?lstr37_FirmV_0_7_0
0x5A61      [21]    ?ICS?lstr38_FirmV_0_7_0
0x5A76      [15]    ?ICS?lstr57_FirmV_0_7_0
0x5A85      [15]    ?ICS?lstr58_FirmV_0_7_0
0x5A94      [22]    ?ICS?lstr59_FirmV_0_7_0
0x5AAA      [22]    ?ICS?lstr60_FirmV_0_7_0
0x5AC0      [15]    ?ICS?lstr61_FirmV_0_7_0
0x5ACF      [15]    ?ICS?lstr62_FirmV_0_7_0
0x5ADE      [15]    ?ICS?lstr63_FirmV_0_7_0
0x5AED      [15]    ?ICS?lstr64_FirmV_0_7_0
0x5AFC      [17]    ?ICS?lstr65_FirmV_0_7_0
0x5B0D      [26]    ?ICS?lstr66_FirmV_0_7_0
0x5B27      [21]    ?ICS?lstr67_FirmV_0_7_0
0x5B3C      [21]    ?ICS?lstr68_FirmV_0_7_0
0x5B51      [15]    ?ICS?lstr45_FirmV_0_7_0
0x5B60      [15]    ?ICS?lstr46_FirmV_0_7_0
0x5B6F      [21]    ?ICS?lstr47_FirmV_0_7_0
0x5B84      [21]    ?ICS?lstr48_FirmV_0_7_0
0x5B99      [15]    ?ICS?lstr49_FirmV_0_7_0
0x5BA8      [15]    ?ICS?lstr50_FirmV_0_7_0
0x5BB7      [13]    ?ICS?lstr51_FirmV_0_7_0
0x5BC4      [13]    ?ICS?lstr52_FirmV_0_7_0
0x5BD1      [17]    ?ICS?lstr53_FirmV_0_7_0
0x5BE2      [18]    ?ICS?lstr54_FirmV_0_7_0
0x5BF4      [21]    ?ICS?lstr55_FirmV_0_7_0
0x5C09      [21]    ?ICS?lstr56_FirmV_0_7_0
0x5C1E      [17]    ?ICS?lstr98_FirmV_0_7_0
0x5C2F      [17]    ?ICS?lstr99_FirmV_0_7_0
0x5C40      [17]    ?ICS?lstr100_FirmV_0_7_0
0x5C51      [17]    ?ICS?lstr101_FirmV_0_7_0
0x5C62      [17]    ?ICS?lstr102_FirmV_0_7_0
0x5C73      [17]    ?ICS?lstr103_FirmV_0_7_0
0x5C84       [1]    ?ICS__AC
0x5C85       [1]    ?ICS_CloseDone
0x5C86       [4]    ?ICS_ms500
0x5C8A       [1]    ?ICS_MenuPointer
0x5C8B       [1]    ?ICS_LearningMode
0x5C8C       [1]    ?ICS_LCDFlashFlag
0x5C8D       [1]    ?ICS_LCDFlash
0x5C8E       [1]    ?ICS_M1isSlow
0x5C8F       [1]    ?ICS_OverloadCheckFlag2
0x5C90       [1]    ?ICS_OverloadCheckFlag1
0x5C91       [1]    ?ICS_Motor1Start
0x5C92       [1]    ?ICS_Motor2Start
0x5C93       [1]    ?ICS_State
0x5C94       [1]    ?ICS_PassFlag
0x5C95       [1]    ?ICS_M2isSlow
0x5C96       [1]    ?ICS_OpenDone
0x5C97      [17]    ?ICS_LCDLine1
0x5CA8       [1]    ?ICS_RemoteBFlag
0x5CA9       [1]    ?ICS_RemoteAFlag
0x5CAA       [1]    ?ICS_ms20A
0x5CAB       [1]    ?ICS_RemotePulse1
0x5CAC       [1]    ?ICS_Flag500ms
0x5CAD       [1]    ?ICS_Flag20ms
0x5CAE       [1]    ?ICS_PhotocellCount
0x5CAF       [1]    ?ICS_OverloadCounter1
0x5CB0       [1]    ?ICS_OverloadCounter2
0x5CB1       [1]    ?ICS_PhotocellOpenFlag
0x5CB2      [17]    ?ICS_LCDLine2
0x5CC3       [1]    ?ICS_LCDUpdateFlag
0x5CC4       [1]    ?ICS_RemotePulse2
0x5CC5       [1]    ?ICS_msCounter
0x5CC6       [1]    ?ICS_Pressed
0x5CC7       [1]    ?ICS_DebouncingDelay
0x5CC8       [1]    ?ICS_ZCCounter
0x5CC9       [1]    ?ICS_Motor2FullSpeed
0x5CCA       [1]    ?ICS_Motor1FullSpeed
0x5CCB       [1]    ?ICS_OverloadSens
0x5CCC      [22]    ?ICS?lstr39_FirmV_0_7_0
0x5CE2      [16]    ?ICS?lstr40_FirmV_0_7_0
0x5CF2      [16]    ?ICS?lstr41_FirmV_0_7_0
0x5D02       [1]    ?ICSState5_delay_L0
0x5D03      [22]    ?ICS?lstr42_FirmV_0_7_0
0x5D19      [16]    ?ICS?lstr43_FirmV_0_7_0
0x5D29      [16]    ?ICS?lstr44_FirmV_0_7_0
0x5D39       [1]    ?ICSState6_delay_L0
0x5D3A      [22]    ?ICS?lstr3_FirmV_0_7_0
0x5D50      [16]    ?ICS?lstr4_FirmV_0_7_0
0x5D60      [16]    ?ICS?lstr5_FirmV_0_7_0
0x5D70       [1]    ?ICSState2_delay_L0
0x5D71      [16]    ?ICS?lstr69_FirmV_0_7_0
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_StateManager39
  L_StateManager40
  L_StateManager41
  L_StateManager42
  L_StateManager43
  L_StateManager44
  L_StateManager45
  L_StateManager46
  L_StateManager47
  L_StateManager48
  L_StateManager49
  L_StateManager50
  L_StateManager51
  L_StateManager52
  L_StateManager53
  L_StateManager54
  L_StateManager55
  L_StateManager56
  L_StateTest57
  L_StateTest58
  L_State0059
  L_State160
  L_State161
  L_State162
  L_State163
  L_State164
  L_State165
  L_State166
  L_State167
  L_State168
  L_State169
  L_State170
  L_State271
  L_State272
  L_State273
  L_State274
  L_State275
  L_State276
  L_State277
  L_State278
  L_State279
  L_State280
  L_State281
  L_State282
  L_State283
  L_State284
  L_State285
  L_State286
  L_State287
  L_State288
  L_State289
  L_State290
  L_State291
  L_State292
  L_State293
  L_State294
  L_State295
  L_State296
  L_State397
  L_State398
  L_State399
  L_State3100
  L_State3101
  L_State3102
  L_State3103
  L_State3104
  L_State3105
  L_State3106
  L_State3107
  L_State3108
  L_State3109
  L_State3110
  L_State3111
  L_State3112
  L_State3113
  L_State3114
  L_State3115
  L_State3116
  L_State3117
  L_State3118
  L_State3119
  L_State3120
  L_State3121
  L_State3122
  L_State3123
  L_State3124
  L_State3125
  L_State3126
  L_State3127
  L_State4128
  L_State4129
  L_State4130
  L_State4131
  L_State4132
  L_State4133
  L_State4134
  L_State4135
  L_State4136
  L_State4137
  L_State4138
  L_State4139
  L_State4140
  L_State4141
  L_State4142
  L_State4143
  L_State4144
  L_State4145
  L_State4146
  L_State4147
  L_State4148
  L_State4149
  L_State4150
  L_State4151
  L_State4152
  L_State4153
  L_State4154
  L_State5155
  L_State5156
  L_State5157
  L_State5158
  L_State5159
  L_State5160
  L_State5161
  L_State5162
  L_State5163
  L_State5164
  L_State5165
  L_State5166
  L_State5167
  L_State6168
  L_State6169
  L_State6170
  L_State6171
  L_State6172
  L_State6173
  L_State6174
  L_State6175
  L_State6176
  L_State6177
  L_State6178
  L_State6179
  L_State6180
  L_State6181
  L_State7182
  L_State7183
  L_State7184
  L_State7185
  L_State7186
  L_State7187
  L_State7188
  L_State7189
  L_State7190
  L_State7191
  L_State7192
  L_State7193
  L_State7194
  L_State7195
  L_State7196
  L_State7197
  L_State7198
  L_State7199
  L_State7200
  L_State7201
  L_State7202
  L_State7203
  L_State7204
  L_State7205
  L_State7206
  L_State7207
  L_State7208
  L_State7209
  L_State7210
  L_State7211
  L_State7212
  L_State8213
  L_State8214
  L_State8215
  L_State8216
  L_State8217
  L_State8218
  L_State8219
  L_State8220
  L_State8221
  L_State8222
  L_State8223
  L_State8224
  L_State8225
  L_State8226
  L_State8227
  L_State8228
  L_State8229
  L_State8230
  L_State8231
  L_State8232
  L_State8233
  L_State8234
  L_State8235
  L_State8236
  L_State8237
  L_State8238
  L_State8239
  L_State8240
  L_State8241
  L_State8242
  L_State8243
  L_State8244
  L_State8245
  L_State8246
  L_LCDUpdater247
  L_LCDUpdater248
  L_LCDUpdater249
  L_LCDUpdater250
  L_Init251
  L_Init252
  L_Init253
  L_TaskManager254
  L_TaskManager255
  L_TaskManager256
  L_TaskManager257
  L_TaskManager258
  L_TaskManager259
  L_AddTask260
  L_AddTask261
  L_AddTask262
  L_AddTask263
  L_EventHandler264
  L_EventHandler265
  L_EventHandler266
  L_EventHandler267
  L_EventHandler268
  L_EventHandler269
  L_EventHandler270
  L_EventHandler271
  L_EventHandler272
  L_EventHandler273
  L_EventHandler274
  L_GetKeysState275
  L_GetKeysState276
  L_GetKeysState277
  L_GetKeysState278
  L_GetKeysState279
  L_GetKeysState280
  L_GetKeysState281
  L_GetKeysState282
  L_GetKeysState283
  L_GetKeysState284
  L_GetKeysState285
  L_GetKeysState286
  L_GetKeysState287
  L_GetKeysState288
  L_GetKeysState289
  L_GetKeysState290
  L_GetKeysState291
  L_GetKeysState292
  L_GetKeysState293
  L_GetKeysState294
  L_GetKeysState295
  L_GetKeysState296
  L_GetKeysState297
  L_GetKeysState298
  L_GetKeysState299
  L_GetKeysState300
  L_GetExternalKeysState301
  L_GetExternalKeysState302
  L_GetLimitSwitchState303
  L_GetLimitSwitchState304
  L_GetLimitSwitchState305
  L_GetLimitSwitchState306
  L_GetOverloadState307
  L_GetOverloadState308
  L_GetOverloadState309
  L_GetOverloadState310
  L_GetOverloadState311
  L_GetOverloadState312
  L_GetOverloadState313
  L_GetOverloadState314
  L_GetOverloadState315
  L_GetOverloadState316
  L_GetOverloadState317
  L_GetOverloadState318
  L_GetOverloadState319
  L_GetOverloadState320
  L_GetPhotocellState321
  L_GetPhotocellState322
  L_GetPhotocellState323
  L_GetPhotocellState324
  L_GetPhotocellState325
  L_SetMotorSpeed326
  L_SetMotorSpeed327
  L_SetMotorSpeed328
  L_SetMotorSpeed329
  L_OverloadInit330
  L_OverloadInit331
  L_StartMotor332
  L_StartMotor333
  L_StopMotor334
  L_StopMotor335
  L_CheckTask336
  L_CheckTask337
  L_CheckTask338
  L_GetAutocloseTime339
  L_GetAutocloseTime340
  L_GetAutocloseTime341
  L_GetAutocloseTime342
  L_GetAutocloseTime343
  L_GetAutocloseTime344
  L_ClearTasks345
  L_ClearTasks346
  L_ClearTasks347
  L_ClearTasks348
  L_ClearTasks349
  L_ClearTasks350
  L_Menu0351
  L_Menu0352
  L_Menu0353
  L_Menu0354
  L_Menu0355
  L_Menu0356
  L_Menu0357
  L_Menu0358
  L_Menu0359
  L_Menu0360
  L_Menu0361
  L_Menu0362
  L_Menu0363
  L_Menu0364
  L_Menu0365
  L_Menu0366
  L_Menu0367
  L_Menu0368
  L_Menu0369
  L_Menu0370
  L_Menu0371
  L_Menu0372
  L_Menu0373
  L_Menu0374
  L_Menu0375
  L_Menu0376
  L_Menu0377
  L_Menu1378
  L_Menu1379
  L_Menu1380
  L_Menu1381
  L_Menu1382
  L_Menu1383
  L_Menu1384
  L_Menu2385
  L_Menu2386
  L_Menu2387
  L_Menu2388
  L_Menu2389
  L_Menu2390
  L_Menu2391
  L_Menu2392
  L_Menu2393
  L_Menu2394
  L_Menu2395
  L_Menu2396
  L_Menu2397
  L_Menu2398
  L_Menu2399
  L_Menu2400
  L_Menu2401
  L_Menu2402
  L_Menu2403
  L_Menu2404
  L_Menu2405
  L_Menu2406
  L_Menu2407
  L_Menu2408
  L_Menu2409
  L_Menu2410
  L_Menu2411
  L_Menu2412
  L_Menu2413
  L_Menu2414
  L_Menu2415
  L_Menu2416
  L_Menu2417
  L_Menu2418
  L_Menu2419
  L_Menu2420
  L_Menu2421
  L_Menu2422
  L_Menu2423
  L_Menu2424
  L_Menu2425
  L_Menu2426
  L_Menu2427
  L_Menu2428
  L_Menu2429
  L_Menu2430
  L_Menu2431
  L_Menu2432
  L_Menu2433
  L_Menu2434
  L_Menu2435
  L_Menu2436
  L_Menu2437
  L_Menu2438
  L_Menu2439
  L_Menu2440
  L_Menu2441
  L_Menu2442
  L_Menu2443
  L_Menu2444
  L_Menu2445
  L_Menu2446
  L_Menu2447
  L_Menu2448
  L_Menu2449
  L_Menu2450
  L_Menu2451
  L_Menu2452
  L_Menu2453
  L_Menu2454
  L_Menu2455
  L_Menu2456
  L_Menu2457
  L_Menu2458
  L_Menu2459
  L_Menu2460
  L_Menu2461
  L_Menu2462
  L_Menu2463
  L_Menu2464
  L_Menu2465
  L_Menu2466
  L_Menu2467
  L_Menu2468
  L_Menu2469
  L_Menu2470
  L_Menu2471
  L_Menu2472
  L_Menu2473
  L_Menu2474
  L_Menu2475
  L_Menu2476
  L_Menu2477
  L_Menu2478
  L_Menu2479
  L_Menu2480
  L_Menu2481
  L_Menu2482
  L_Menu2483
  L_Menu2484
  L_Menu2485
  L_Menu2486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_charValueToStr506
  L_charValueToStr507
  L_intValueToStr508
  L_intValueToStr509
  L_SetOverloadParams510
  L_SetOverloadParams511
  L_SetOverloadParams512
  L_SetOverloadParams513
  L_SetOverloadParams514
  L_SetOverloadParams515
  L_SetOverloadParams516
  L_SetOverloadParams517
  L_SetOverloadParams518
  L_SetOverloadParams519
  L_SetOverloadParams520
  L_SetOverloadParams521
  L__interrupt522
  L__interrupt523
  L__State2524
  L__State2525
  L__State2526
  L__State3527
  L__State3528
  L__State3529
  L__State3530
  L__State3531
  L__State4532
  L__State4533
  L__State4534
  L__State4535
  L__State5536
  L__State5537
  L__State5538
  L__State6539
  L__State6540
  L__State6541
  L__State7542
  L__State7543
  L__State7544
  L__State7545
  L__State7546
  L__State7547
  L__State7548
  L__State7549
  L__State8550
  L__State8551
  L__State8552
  L__State8553
  L__State8554
  L__State8555
  L__State8556
  L__State8557
  L__State8558
  L__TaskManager559
  L__EventHandler560
  L__GetKeysState561
  L__GetKeysState562
  L__GetKeysState563
  L__GetKeysState564
  L__GetKeysState565
  L__GetKeysState566
  L__GetKeysState567
  L__GetLimitSwitchState568
  L__SetMotorSpeed569
  L__GetAutocloseTime570
  L__ClearTasks571
  L__Menu2572
  L__Menu2573
  L__Menu2574
  L__Menu2575
  L__Menu2576
  L__Menu2577
  L__Menu2578
  L__Menu2579
  L__Menu2580
  L__Menu2581
  L__Menu2582
  L__Menu2583
  L__Menu2584
  L__Menu2585
  L__Menu2586
  L__Menu2587
  L__Menu2588
  L__Menu2589
  L__Menu2590
  L__Menu2591
  L__Menu2592
  L__Menu2593
  L__Menu2594
  L__Menu2595
  L__Menu2596
  L__Menu2597
  L__Menu2598
  L__Menu2599
  L__Menu2600
  L__Menu2601
  L__Menu2602
  L__Menu2603
  _interrupt
  L__interrupt604
  _ResetTaskEvents
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1605
  _State2
  L__State2606
  L__State2607
  _State3
  L__State3608
  _State4
  L__State4609
  _State5
  L__State5610
  L__State5611
  _State6
  L__State6612
  L__State6613
  _State7
  L__State7614
  _State8
  L__State8615
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager616
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState617
  L__GetKeysState618
  L__GetKeysState619
  L__GetKeysState620
  L__GetKeysState621
  L__GetKeysState622
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState623
  L__GetRemoteState624
  L__GetRemoteState625
  L__GetRemoteState626
  L__GetRemoteState627
  L__GetRemoteState628
  L__GetRemoteState629
  L__GetRemoteState630
  L__GetRemoteState631
  L__GetRemoteState632
  L__GetRemoteState633
  L__GetRemoteState634
  _GetOverloadState
  L__GetOverloadState635
  L__GetOverloadState636
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor637
  L__StartMotor638
  L__StartMotor639
  L__StartMotor640
  _StopMotor
  _CheckTask
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _Menu1
  _Menu2
  L__Menu2641
  L__Menu2642
  _Menu3
  _LearnAuto
  _LearnManual
  _charValueToStr
  _intValueToStr
  L__intValueToStr643
  _SetOverloadParams
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L__Rtrim142
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L__FloatToStr149
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Delay_1us0
  L_Delay_10us1
  L_Delay_22us2
  L_Delay_50us3
  L_Delay_80us4
  L_Delay_500us5
  L_Delay_5500us6
  L_Delay_1ms7
  L_Delay_5ms8
  L_Delay_8ms9
  L_Delay_100ms10
  L_Delay_10ms11
  L_Delay_1sec12
  L____Boot_Delay4k13
  L____Boot_Delay8k14
  L____Boot_Delay12k15
  L____Boot_Delay16k16
  L____Boot_Delay24k17
  L____Boot_Delay32k18
  L____Boot_Delay48k19
  L____Boot_Delay64k20
  L____Boot_Delay128k21
  L_Delay_Cyc22
  L_Delay_Cyc23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_VDelay_Advanced_ms29
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms30
  L__VDelay_ms31
  L__VDelay_ms32
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms33
  L__VDelay_Advanced_ms34
  L__VDelay_Advanced_ms35
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_end_EEPROM_Read
  _EEPROM_Read
  L_end_EEPROM_Write
  _EEPROM_Write
  L__EEPROM_Write4
  L__EEPROM_Write5
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_StateManager39
  L_StateManager40
  L_StateManager41
  L_StateManager42
  L_StateManager43
  L_StateManager44
  L_StateManager45
  L_StateManager46
  L_StateManager47
  L_StateManager48
  L_StateManager49
  L_StateManager50
  L_StateManager51
  L_StateManager52
  L_StateManager53
  L_StateManager54
  L_StateManager55
  L_StateManager56
  L_StateTest57
  L_StateTest58
  L_State0059
  L_State160
  L_State161
  L_State162
  L_State163
  L_State164
  L_State165
  L_State166
  L_State167
  L_State168
  L_State169
  L_State170
  L_State271
  L_State272
  L_State273
  L_State274
  L_State275
  L_State276
  L_State277
  L_State278
  L_State279
  L_State280
  L_State281
  L_State282
  L_State283
  L_State284
  L_State285
  L_State286
  L_State287
  L_State288
  L_State289
  L_State290
  L_State291
  L_State292
  L_State293
  L_State294
  L_State295
  L_State296
  L_State397
  L_State398
  L_State399
  L_State3100
  L_State3101
  L_State3102
  L_State3103
  L_State3104
  L_State3105
  L_State3106
  L_State3107
  L_State3108
  L_State3109
  L_State3110
  L_State3111
  L_State3112
  L_State3113
  L_State3114
  L_State3115
  L_State3116
  L_State3117
  L_State3118
  L_State3119
  L_State3120
  L_State3121
  L_State3122
  L_State3123
  L_State3124
  L_State3125
  L_State3126
  L_State3127
  L_State4128
  L_State4129
  L_State4130
  L_State4131
  L_State4132
  L_State4133
  L_State4134
  L_State4135
  L_State4136
  L_State4137
  L_State4138
  L_State4139
  L_State4140
  L_State4141
  L_State4142
  L_State4143
  L_State4144
  L_State4145
  L_State4146
  L_State4147
  L_State4148
  L_State4149
  L_State4150
  L_State4151
  L_State4152
  L_State4153
  L_State4154
  L_State5155
  L_State5156
  L_State5157
  L_State5158
  L_State5159
  L_State5160
  L_State5161
  L_State5162
  L_State5163
  L_State5164
  L_State5165
  L_State5166
  L_State5167
  L_State6168
  L_State6169
  L_State6170
  L_State6171
  L_State6172
  L_State6173
  L_State6174
  L_State6175
  L_State6176
  L_State6177
  L_State6178
  L_State6179
  L_State6180
  L_State6181
  L_State7182
  L_State7183
  L_State7184
  L_State7185
  L_State7186
  L_State7187
  L_State7188
  L_State7189
  L_State7190
  L_State7191
  L_State7192
  L_State7193
  L_State7194
  L_State7195
  L_State7196
  L_State7197
  L_State7198
  L_State7199
  L_State7200
  L_State7201
  L_State7202
  L_State7203
  L_State7204
  L_State7205
  L_State7206
  L_State7207
  L_State7208
  L_State7209
  L_State7210
  L_State7211
  L_State7212
  L_State8213
  L_State8214
  L_State8215
  L_State8216
  L_State8217
  L_State8218
  L_State8219
  L_State8220
  L_State8221
  L_State8222
  L_State8223
  L_State8224
  L_State8225
  L_State8226
  L_State8227
  L_State8228
  L_State8229
  L_State8230
  L_State8231
  L_State8232
  L_State8233
  L_State8234
  L_State8235
  L_State8236
  L_State8237
  L_State8238
  L_State8239
  L_State8240
  L_State8241
  L_State8242
  L_State8243
  L_State8244
  L_State8245
  L_State8246
  L_LCDUpdater247
  L_LCDUpdater248
  L_LCDUpdater249
  L_LCDUpdater250
  L_Init251
  L_Init252
  L_Init253
  L_TaskManager254
  L_TaskManager255
  L_TaskManager256
  L_TaskManager257
  L_TaskManager258
  L_TaskManager259
  L_AddTask260
  L_AddTask261
  L_AddTask262
  L_AddTask263
  L_EventHandler264
  L_EventHandler265
  L_EventHandler266
  L_EventHandler267
  L_EventHandler268
  L_EventHandler269
  L_EventHandler270
  L_EventHandler271
  L_EventHandler272
  L_EventHandler273
  L_EventHandler274
  L_GetKeysState275
  L_GetKeysState276
  L_GetKeysState277
  L_GetKeysState278
  L_GetKeysState279
  L_GetKeysState280
  L_GetKeysState281
  L_GetKeysState282
  L_GetKeysState283
  L_GetKeysState284
  L_GetKeysState285
  L_GetKeysState286
  L_GetKeysState287
  L_GetKeysState288
  L_GetKeysState289
  L_GetKeysState290
  L_GetKeysState291
  L_GetKeysState292
  L_GetKeysState293
  L_GetKeysState294
  L_GetKeysState295
  L_GetKeysState296
  L_GetKeysState297
  L_GetKeysState298
  L_GetKeysState299
  L_GetKeysState300
  L_GetExternalKeysState301
  L_GetExternalKeysState302
  L_GetLimitSwitchState303
  L_GetLimitSwitchState304
  L_GetLimitSwitchState305
  L_GetLimitSwitchState306
  L_GetOverloadState307
  L_GetOverloadState308
  L_GetOverloadState309
  L_GetOverloadState310
  L_GetOverloadState311
  L_GetOverloadState312
  L_GetOverloadState313
  L_GetOverloadState314
  L_GetOverloadState315
  L_GetOverloadState316
  L_GetOverloadState317
  L_GetOverloadState318
  L_GetOverloadState319
  L_GetOverloadState320
  L_GetPhotocellState321
  L_GetPhotocellState322
  L_GetPhotocellState323
  L_GetPhotocellState324
  L_GetPhotocellState325
  L_SetMotorSpeed326
  L_SetMotorSpeed327
  L_SetMotorSpeed328
  L_SetMotorSpeed329
  L_OverloadInit330
  L_OverloadInit331
  L_StartMotor332
  L_StartMotor333
  L_StopMotor334
  L_StopMotor335
  L_CheckTask336
  L_CheckTask337
  L_CheckTask338
  L_GetAutocloseTime339
  L_GetAutocloseTime340
  L_GetAutocloseTime341
  L_GetAutocloseTime342
  L_GetAutocloseTime343
  L_GetAutocloseTime344
  L_ClearTasks345
  L_ClearTasks346
  L_ClearTasks347
  L_ClearTasks348
  L_ClearTasks349
  L_ClearTasks350
  L_Menu0351
  L_Menu0352
  L_Menu0353
  L_Menu0354
  L_Menu0355
  L_Menu0356
  L_Menu0357
  L_Menu0358
  L_Menu0359
  L_Menu0360
  L_Menu0361
  L_Menu0362
  L_Menu0363
  L_Menu0364
  L_Menu0365
  L_Menu0366
  L_Menu0367
  L_Menu0368
  L_Menu0369
  L_Menu0370
  L_Menu0371
  L_Menu0372
  L_Menu0373
  L_Menu0374
  L_Menu0375
  L_Menu0376
  L_Menu0377
  L_Menu1378
  L_Menu1379
  L_Menu1380
  L_Menu1381
  L_Menu1382
  L_Menu1383
  L_Menu1384
  L_Menu2385
  L_Menu2386
  L_Menu2387
  L_Menu2388
  L_Menu2389
  L_Menu2390
  L_Menu2391
  L_Menu2392
  L_Menu2393
  L_Menu2394
  L_Menu2395
  L_Menu2396
  L_Menu2397
  L_Menu2398
  L_Menu2399
  L_Menu2400
  L_Menu2401
  L_Menu2402
  L_Menu2403
  L_Menu2404
  L_Menu2405
  L_Menu2406
  L_Menu2407
  L_Menu2408
  L_Menu2409
  L_Menu2410
  L_Menu2411
  L_Menu2412
  L_Menu2413
  L_Menu2414
  L_Menu2415
  L_Menu2416
  L_Menu2417
  L_Menu2418
  L_Menu2419
  L_Menu2420
  L_Menu2421
  L_Menu2422
  L_Menu2423
  L_Menu2424
  L_Menu2425
  L_Menu2426
  L_Menu2427
  L_Menu2428
  L_Menu2429
  L_Menu2430
  L_Menu2431
  L_Menu2432
  L_Menu2433
  L_Menu2434
  L_Menu2435
  L_Menu2436
  L_Menu2437
  L_Menu2438
  L_Menu2439
  L_Menu2440
  L_Menu2441
  L_Menu2442
  L_Menu2443
  L_Menu2444
  L_Menu2445
  L_Menu2446
  L_Menu2447
  L_Menu2448
  L_Menu2449
  L_Menu2450
  L_Menu2451
  L_Menu2452
  L_Menu2453
  L_Menu2454
  L_Menu2455
  L_Menu2456
  L_Menu2457
  L_Menu2458
  L_Menu2459
  L_Menu2460
  L_Menu2461
  L_Menu2462
  L_Menu2463
  L_Menu2464
  L_Menu2465
  L_Menu2466
  L_Menu2467
  L_Menu2468
  L_Menu2469
  L_Menu2470
  L_Menu2471
  L_Menu2472
  L_Menu2473
  L_Menu2474
  L_Menu2475
  L_Menu2476
  L_Menu2477
  L_Menu2478
  L_Menu2479
  L_Menu2480
  L_Menu2481
  L_Menu2482
  L_Menu2483
  L_Menu2484
  L_Menu2485
  L_Menu2486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_charValueToStr506
  L_charValueToStr507
  L_intValueToStr508
  L_intValueToStr509
  L_SetOverloadParams510
  L_SetOverloadParams511
  L_SetOverloadParams512
  L_SetOverloadParams513
  L_SetOverloadParams514
  L_SetOverloadParams515
  L_SetOverloadParams516
  L_SetOverloadParams517
  L_SetOverloadParams518
  L_SetOverloadParams519
  L_SetOverloadParams520
  L_SetOverloadParams521
  L__interrupt522
  L__interrupt523
  L__State2524
  L__State2525
  L__State2526
  L__State3527
  L__State3528
  L__State3529
  L__State3530
  L__State3531
  L__State4532
  L__State4533
  L__State4534
  L__State4535
  L__State5536
  L__State5537
  L__State5538
  L__State6539
  L__State6540
  L__State6541
  L__State7542
  L__State7543
  L__State7544
  L__State7545
  L__State7546
  L__State7547
  L__State7548
  L__State7549
  L__State8550
  L__State8551
  L__State8552
  L__State8553
  L__State8554
  L__State8555
  L__State8556
  L__State8557
  L__State8558
  L__TaskManager559
  L__EventHandler560
  L__GetKeysState561
  L__GetKeysState562
  L__GetKeysState563
  L__GetKeysState564
  L__GetKeysState565
  L__GetKeysState566
  L__GetKeysState567
  L__GetLimitSwitchState568
  L__SetMotorSpeed569
  L__GetAutocloseTime570
  L__ClearTasks571
  L__Menu2572
  L__Menu2573
  L__Menu2574
  L__Menu2575
  L__Menu2576
  L__Menu2577
  L__Menu2578
  L__Menu2579
  L__Menu2580
  L__Menu2581
  L__Menu2582
  L__Menu2583
  L__Menu2584
  L__Menu2585
  L__Menu2586
  L__Menu2587
  L__Menu2588
  L__Menu2589
  L__Menu2590
  L__Menu2591
  L__Menu2592
  L__Menu2593
  L__Menu2594
  L__Menu2595
  L__Menu2596
  L__Menu2597
  L__Menu2598
  L__Menu2599
  L__Menu2600
  L__Menu2601
  L__Menu2602
  L__Menu2603
  _interrupt
  L__interrupt604
  _ResetTaskEvents
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1605
  _State2
  L__State2606
  L__State2607
  _State3
  L__State3608
  _State4
  L__State4609
  _State5
  L__State5610
  L__State5611
  _State6
  L__State6612
  L__State6613
  _State7
  L__State7614
  _State8
  L__State8615
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager616
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState617
  L__GetKeysState618
  L__GetKeysState619
  L__GetKeysState620
  L__GetKeysState621
  L__GetKeysState622
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState623
  L__GetRemoteState624
  L__GetRemoteState625
  L__GetRemoteState626
  L__GetRemoteState627
  L__GetRemoteState628
  L__GetRemoteState629
  L__GetRemoteState630
  L__GetRemoteState631
  L__GetRemoteState632
  L__GetRemoteState633
  L__GetRemoteState634
  _GetOverloadState
  L__GetOverloadState635
  L__GetOverloadState636
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor637
  L__StartMotor638
  L__StartMotor639
  L__StartMotor640
  _StopMotor
  _CheckTask
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _Menu1
  _Menu2
  L__Menu2641
  L__Menu2642
  _Menu3
  _LearnAuto
  _LearnManual
  _charValueToStr
  _intValueToStr
  L__intValueToStr643
  _SetOverloadParams
